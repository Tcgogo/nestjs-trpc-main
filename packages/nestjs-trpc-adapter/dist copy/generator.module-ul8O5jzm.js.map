{"version":3,"file":"generator.module-ul8O5jzm.js","names":["GeneratorModule","options: GeneratorModuleOptions","defaultCompilerOptions: CompilerOptions","ConsoleLogger","MetadataScanner"],"sources":["../lib/generators/generator.module.ts"],"sourcesContent":["import { ConsoleLogger, Inject, Module, type OnModuleInit } from '@nestjs/common';\nimport type { DynamicModule } from '@nestjs/common/interfaces';\nimport { MetadataScanner } from '@nestjs/core';\nimport { type CompilerOptions, ModuleKind, Project, ScriptTarget } from 'ts-morph';\n\nimport { TRPCGenerator } from './trpc.generator';\nimport { RouterGenerator } from './router.generator';\nimport { StaticGenerator } from './static.generator';\nimport { ContextGenerator } from './context.generator';\nimport { MiddlewareGenerator } from './middleware.generator';\nimport { DecoratorGenerator } from './decorator.generator';\nimport { ProcedureGenerator } from './procedure.generator';\nimport {\n  TYPESCRIPT_APP_ROUTER_SOURCE_FILE,\n  TYPESCRIPT_PROJECT,\n} from './generator.constants';\nimport {\n  TRPC_GENERATOR_OPTIONS,\n  TRPC_MODULE_CALLER_FILE_PATH,\n} from '../trpc.constants';\nimport { FactoryModule } from '../factories/factory.module';\nimport { ScannerModule } from '../scanners/scanner.module';\nimport * as path from 'node:path';\nimport type{ GeneratorModuleOptions } from './generator.interface';\n\n@Module({\n  imports: [FactoryModule, ScannerModule],\n  providers: [\n    // NestJS Providers\n    ConsoleLogger,\n    MetadataScanner,\n\n    // Local Providers\n    TRPCGenerator,\n    RouterGenerator,\n    ProcedureGenerator,\n    DecoratorGenerator,\n    MiddlewareGenerator,\n    ContextGenerator,\n    StaticGenerator,\n  ],\n  exports: [TRPCGenerator],\n})\nexport class GeneratorModule implements OnModuleInit {\n  @Inject(TRPCGenerator)\n  private readonly trpcGenerator!: TRPCGenerator;\n\n  @Inject(TRPC_GENERATOR_OPTIONS)\n  private readonly options!: GeneratorModuleOptions;\n\n  static forRoot(options: GeneratorModuleOptions): DynamicModule {\n    const defaultCompilerOptions: CompilerOptions = {\n      target: ScriptTarget.ES2019,\n      module: ModuleKind.CommonJS,\n      emitDecoratorMetadata: true,\n      experimentalDecorators: true,\n      allowJs: true,\n      checkJs: true,\n      esModuleInterop: true,\n    };\n    const project = new Project({ compilerOptions: defaultCompilerOptions });\n\n    const appRouterSourceFile = project.createSourceFile(\n      path.resolve(options.outputDirPath ?? './', 'server.ts'),\n      () => {},\n      { overwrite: true },\n    );\n\n    return {\n      module: GeneratorModule,\n      providers: [\n        {\n          provide: TRPC_MODULE_CALLER_FILE_PATH,\n          useValue: options.rootModuleFilePath,\n        },\n        { provide: TYPESCRIPT_PROJECT, useValue: project },\n        {\n          provide: TYPESCRIPT_APP_ROUTER_SOURCE_FILE,\n          useValue: appRouterSourceFile,\n        },\n        { provide: TRPC_GENERATOR_OPTIONS, useValue: options },\n      ],\n    };\n  }\n\n  async onModuleInit() {\n    await this.trpcGenerator.generateSchemaFile(this.options.schemaFileImports);\n    await this.trpcGenerator.generateHelpersFile(this.options.context);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CO,+CAAMA,kBAAwC;;2CAElC;2CAGA;;CAEjB,OAAO,QAAQC,SAAgD;;EAC7D,MAAMC,yBAA0C;GAC9C,QAAQ,aAAa;GACrB,QAAQ,WAAW;GACnB,uBAAuB;GACvB,wBAAwB;GACxB,SAAS;GACT,SAAS;GACT,iBAAiB;EAClB;EACD,MAAM,UAAU,IAAI,QAAQ,EAAE,iBAAiB,uBAAwB;EAEvE,MAAM,sBAAsB,QAAQ,iBAClC,KAAK,iCAAQ,QAAQ,sFAAiB,MAAM,YAAY,EACxD,WAAM,CAAE,GACR,EAAE,WAAW,KAAM,EACpB;AAED,SAAO;GACL;GACA,WAAW;IACT;KACE,SAAS;KACT,UAAU,QAAQ;IACnB;IACD;KAAE,SAAS;KAAoB,UAAU;IAAS;IAClD;KACE,SAAS;KACT,UAAU;IACX;IACD;KAAE,SAAS;KAAwB,UAAU;IAAS;GACvD;EACF;CACF;CAED,AAAM;2DAAe;AACnB,SAAM,KAAK,cAAc,mBAAmB,KAAK,QAAQ,kBAAkB;AAC3E,SAAM,KAAK,cAAc,oBAAoB,KAAK,QAAQ,QAAQ;EACnE;;AACF;8BA7CE,0BAAO,cAAc;8BAGrB,0BAAO,uBAAuB;mEAtBhC,0BAAO;CACN,SAAS,CAAC,eAAe,aAAc;CACvC,WAAW;EAETC;EACAC;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;CACD;CACD,SAAS,CAAC,aAAc;AACzB,EAAC"}