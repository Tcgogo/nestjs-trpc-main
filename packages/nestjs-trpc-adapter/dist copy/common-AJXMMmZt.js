import { __commonJS, __require, __toESM } from "./chunk-BLXvPPr8.js";
import { require_defineProperty } from "./defineProperty-DOiqJb-o.js";
import { require_asyncToGenerator } from "./asyncToGenerator-CDlr4A8U.js";

//#region ../../node_modules/.pnpm/reflect-metadata@0.2.2/node_modules/reflect-metadata/Reflect.js
var require_Reflect = __commonJS({ "../../node_modules/.pnpm/reflect-metadata@0.2.2/node_modules/reflect-metadata/Reflect.js"() {
	/*! *****************************************************************************
	Copyright (C) Microsoft. All rights reserved.
	Licensed under the Apache License, Version 2.0 (the "License"); you may not use
	this file except in compliance with the License. You may obtain a copy of the
	License at http://www.apache.org/licenses/LICENSE-2.0
	
	THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
	WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
	MERCHANTABLITY OR NON-INFRINGEMENT.
	
	See the Apache Version 2.0 License for specific language governing permissions
	and limitations under the License.
	***************************************************************************** */
	var Reflect$1;
	(function(Reflect$2) {
		(function(factory) {
			var root = typeof globalThis === "object" ? globalThis : typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : sloppyModeThis();
			var exporter = makeExporter(Reflect$2);
			if (typeof root.Reflect !== "undefined") exporter = makeExporter(root.Reflect, exporter);
			factory(exporter, root);
			if (typeof root.Reflect === "undefined") root.Reflect = Reflect$2;
			function makeExporter(target, previous) {
				return function(key, value) {
					Object.defineProperty(target, key, {
						configurable: true,
						writable: true,
						value
					});
					if (previous) previous(key, value);
				};
			}
			function functionThis() {
				try {
					return Function("return this;")();
				} catch (_) {}
			}
			function indirectEvalThis() {
				try {
					return (0, eval)("(function() { return this; })()");
				} catch (_) {}
			}
			function sloppyModeThis() {
				return functionThis() || indirectEvalThis();
			}
		})(function(exporter, root) {
			var hasOwn = Object.prototype.hasOwnProperty;
			var supportsSymbol = typeof Symbol === "function";
			var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
			var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
			var supportsCreate = typeof Object.create === "function";
			var supportsProto = { __proto__: [] } instanceof Array;
			var downLevel = !supportsCreate && !supportsProto;
			var HashMap = {
				create: supportsCreate ? function() {
					return MakeDictionary(Object.create(null));
				} : supportsProto ? function() {
					return MakeDictionary({ __proto__: null });
				} : function() {
					return MakeDictionary({});
				},
				has: downLevel ? function(map$1, key) {
					return hasOwn.call(map$1, key);
				} : function(map$1, key) {
					return key in map$1;
				},
				get: downLevel ? function(map$1, key) {
					return hasOwn.call(map$1, key) ? map$1[key] : void 0;
				} : function(map$1, key) {
					return map$1[key];
				}
			};
			var functionPrototype = Object.getPrototypeOf(Function);
			var _Map = typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
			var _Set = typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
			var _WeakMap = typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
			var registrySymbol = supportsSymbol ? Symbol.for("@reflect-metadata:registry") : void 0;
			var metadataRegistry = GetOrCreateMetadataRegistry();
			var metadataProvider = CreateMetadataProvider(metadataRegistry);
			/**
			* Applies a set of decorators to a property of a target object.
			* @param decorators An array of decorators.
			* @param target The target object.
			* @param propertyKey (Optional) The property key to decorate.
			* @param attributes (Optional) The property descriptor for the target key.
			* @remarks Decorators are applied in reverse order.
			* @example
			*
			*     class Example {
			*         // property declarations are not part of ES6, though they are valid in TypeScript:
			*         // static staticProperty;
			*         // property;
			*
			*         constructor(p) { }
			*         static staticMethod(p) { }
			*         method(p) { }
			*     }
			*
			*     // constructor
			*     Example = Reflect.decorate(decoratorsArray, Example);
			*
			*     // property (on constructor)
			*     Reflect.decorate(decoratorsArray, Example, "staticProperty");
			*
			*     // property (on prototype)
			*     Reflect.decorate(decoratorsArray, Example.prototype, "property");
			*
			*     // method (on constructor)
			*     Object.defineProperty(Example, "staticMethod",
			*         Reflect.decorate(decoratorsArray, Example, "staticMethod",
			*             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
			*
			*     // method (on prototype)
			*     Object.defineProperty(Example.prototype, "method",
			*         Reflect.decorate(decoratorsArray, Example.prototype, "method",
			*             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
			*
			*/
			function decorate(decorators, target, propertyKey, attributes) {
				if (!IsUndefined(propertyKey)) {
					if (!IsArray$1(decorators)) throw new TypeError();
					if (!IsObject$1(target)) throw new TypeError();
					if (!IsObject$1(attributes) && !IsUndefined(attributes) && !IsNull(attributes)) throw new TypeError();
					if (IsNull(attributes)) attributes = void 0;
					propertyKey = ToPropertyKey(propertyKey);
					return DecorateProperty(decorators, target, propertyKey, attributes);
				} else {
					if (!IsArray$1(decorators)) throw new TypeError();
					if (!IsConstructor(target)) throw new TypeError();
					return DecorateConstructor(decorators, target);
				}
			}
			exporter("decorate", decorate);
			/**
			* A default metadata decorator factory that can be used on a class, class member, or parameter.
			* @param metadataKey The key for the metadata entry.
			* @param metadataValue The value for the metadata entry.
			* @returns A decorator function.
			* @remarks
			* If `metadataKey` is already defined for the target and target key, the
			* metadataValue for that key will be overwritten.
			* @example
			*
			*     // constructor
			*     @Reflect.metadata(key, value)
			*     class Example {
			*     }
			*
			*     // property (on constructor, TypeScript only)
			*     class Example {
			*         @Reflect.metadata(key, value)
			*         static staticProperty;
			*     }
			*
			*     // property (on prototype, TypeScript only)
			*     class Example {
			*         @Reflect.metadata(key, value)
			*         property;
			*     }
			*
			*     // method (on constructor)
			*     class Example {
			*         @Reflect.metadata(key, value)
			*         static staticMethod() { }
			*     }
			*
			*     // method (on prototype)
			*     class Example {
			*         @Reflect.metadata(key, value)
			*         method() { }
			*     }
			*
			*/
			function metadata$1(metadataKey, metadataValue) {
				function decorator(target, propertyKey) {
					if (!IsObject$1(target)) throw new TypeError();
					if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) throw new TypeError();
					OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
				}
				return decorator;
			}
			exporter("metadata", metadata$1);
			/**
			* Define a unique metadata entry on the target.
			* @param metadataKey A key used to store and retrieve metadata.
			* @param metadataValue A value that contains attached metadata.
			* @param target The target object on which to define metadata.
			* @param propertyKey (Optional) The property key for the target.
			* @example
			*
			*     class Example {
			*         // property declarations are not part of ES6, though they are valid in TypeScript:
			*         // static staticProperty;
			*         // property;
			*
			*         constructor(p) { }
			*         static staticMethod(p) { }
			*         method(p) { }
			*     }
			*
			*     // constructor
			*     Reflect.defineMetadata("custom:annotation", options, Example);
			*
			*     // property (on constructor)
			*     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
			*
			*     // property (on prototype)
			*     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
			*
			*     // method (on constructor)
			*     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
			*
			*     // method (on prototype)
			*     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
			*
			*     // decorator factory as metadata-producing annotation.
			*     function MyAnnotation(options): Decorator {
			*         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
			*     }
			*
			*/
			function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
				if (!IsObject$1(target)) throw new TypeError();
				if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
				return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
			}
			exporter("defineMetadata", defineMetadata);
			/**
			* Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
			* @param metadataKey A key used to store and retrieve metadata.
			* @param target The target object on which the metadata is defined.
			* @param propertyKey (Optional) The property key for the target.
			* @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
			* @example
			*
			*     class Example {
			*         // property declarations are not part of ES6, though they are valid in TypeScript:
			*         // static staticProperty;
			*         // property;
			*
			*         constructor(p) { }
			*         static staticMethod(p) { }
			*         method(p) { }
			*     }
			*
			*     // constructor
			*     result = Reflect.hasMetadata("custom:annotation", Example);
			*
			*     // property (on constructor)
			*     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
			*
			*     // property (on prototype)
			*     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
			*
			*     // method (on constructor)
			*     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
			*
			*     // method (on prototype)
			*     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
			*
			*/
			function hasMetadata(metadataKey, target, propertyKey) {
				if (!IsObject$1(target)) throw new TypeError();
				if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
				return OrdinaryHasMetadata(metadataKey, target, propertyKey);
			}
			exporter("hasMetadata", hasMetadata);
			/**
			* Gets a value indicating whether the target object has the provided metadata key defined.
			* @param metadataKey A key used to store and retrieve metadata.
			* @param target The target object on which the metadata is defined.
			* @param propertyKey (Optional) The property key for the target.
			* @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
			* @example
			*
			*     class Example {
			*         // property declarations are not part of ES6, though they are valid in TypeScript:
			*         // static staticProperty;
			*         // property;
			*
			*         constructor(p) { }
			*         static staticMethod(p) { }
			*         method(p) { }
			*     }
			*
			*     // constructor
			*     result = Reflect.hasOwnMetadata("custom:annotation", Example);
			*
			*     // property (on constructor)
			*     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
			*
			*     // property (on prototype)
			*     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
			*
			*     // method (on constructor)
			*     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
			*
			*     // method (on prototype)
			*     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
			*
			*/
			function hasOwnMetadata(metadataKey, target, propertyKey) {
				if (!IsObject$1(target)) throw new TypeError();
				if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
				return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
			}
			exporter("hasOwnMetadata", hasOwnMetadata);
			/**
			* Gets the metadata value for the provided metadata key on the target object or its prototype chain.
			* @param metadataKey A key used to store and retrieve metadata.
			* @param target The target object on which the metadata is defined.
			* @param propertyKey (Optional) The property key for the target.
			* @returns The metadata value for the metadata key if found; otherwise, `undefined`.
			* @example
			*
			*     class Example {
			*         // property declarations are not part of ES6, though they are valid in TypeScript:
			*         // static staticProperty;
			*         // property;
			*
			*         constructor(p) { }
			*         static staticMethod(p) { }
			*         method(p) { }
			*     }
			*
			*     // constructor
			*     result = Reflect.getMetadata("custom:annotation", Example);
			*
			*     // property (on constructor)
			*     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
			*
			*     // property (on prototype)
			*     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
			*
			*     // method (on constructor)
			*     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
			*
			*     // method (on prototype)
			*     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
			*
			*/
			function getMetadata(metadataKey, target, propertyKey) {
				if (!IsObject$1(target)) throw new TypeError();
				if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
				return OrdinaryGetMetadata(metadataKey, target, propertyKey);
			}
			exporter("getMetadata", getMetadata);
			/**
			* Gets the metadata value for the provided metadata key on the target object.
			* @param metadataKey A key used to store and retrieve metadata.
			* @param target The target object on which the metadata is defined.
			* @param propertyKey (Optional) The property key for the target.
			* @returns The metadata value for the metadata key if found; otherwise, `undefined`.
			* @example
			*
			*     class Example {
			*         // property declarations are not part of ES6, though they are valid in TypeScript:
			*         // static staticProperty;
			*         // property;
			*
			*         constructor(p) { }
			*         static staticMethod(p) { }
			*         method(p) { }
			*     }
			*
			*     // constructor
			*     result = Reflect.getOwnMetadata("custom:annotation", Example);
			*
			*     // property (on constructor)
			*     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
			*
			*     // property (on prototype)
			*     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
			*
			*     // method (on constructor)
			*     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
			*
			*     // method (on prototype)
			*     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
			*
			*/
			function getOwnMetadata(metadataKey, target, propertyKey) {
				if (!IsObject$1(target)) throw new TypeError();
				if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
				return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
			}
			exporter("getOwnMetadata", getOwnMetadata);
			/**
			* Gets the metadata keys defined on the target object or its prototype chain.
			* @param target The target object on which the metadata is defined.
			* @param propertyKey (Optional) The property key for the target.
			* @returns An array of unique metadata keys.
			* @example
			*
			*     class Example {
			*         // property declarations are not part of ES6, though they are valid in TypeScript:
			*         // static staticProperty;
			*         // property;
			*
			*         constructor(p) { }
			*         static staticMethod(p) { }
			*         method(p) { }
			*     }
			*
			*     // constructor
			*     result = Reflect.getMetadataKeys(Example);
			*
			*     // property (on constructor)
			*     result = Reflect.getMetadataKeys(Example, "staticProperty");
			*
			*     // property (on prototype)
			*     result = Reflect.getMetadataKeys(Example.prototype, "property");
			*
			*     // method (on constructor)
			*     result = Reflect.getMetadataKeys(Example, "staticMethod");
			*
			*     // method (on prototype)
			*     result = Reflect.getMetadataKeys(Example.prototype, "method");
			*
			*/
			function getMetadataKeys(target, propertyKey) {
				if (!IsObject$1(target)) throw new TypeError();
				if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
				return OrdinaryMetadataKeys(target, propertyKey);
			}
			exporter("getMetadataKeys", getMetadataKeys);
			/**
			* Gets the unique metadata keys defined on the target object.
			* @param target The target object on which the metadata is defined.
			* @param propertyKey (Optional) The property key for the target.
			* @returns An array of unique metadata keys.
			* @example
			*
			*     class Example {
			*         // property declarations are not part of ES6, though they are valid in TypeScript:
			*         // static staticProperty;
			*         // property;
			*
			*         constructor(p) { }
			*         static staticMethod(p) { }
			*         method(p) { }
			*     }
			*
			*     // constructor
			*     result = Reflect.getOwnMetadataKeys(Example);
			*
			*     // property (on constructor)
			*     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
			*
			*     // property (on prototype)
			*     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
			*
			*     // method (on constructor)
			*     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
			*
			*     // method (on prototype)
			*     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
			*
			*/
			function getOwnMetadataKeys(target, propertyKey) {
				if (!IsObject$1(target)) throw new TypeError();
				if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
				return OrdinaryOwnMetadataKeys(target, propertyKey);
			}
			exporter("getOwnMetadataKeys", getOwnMetadataKeys);
			/**
			* Deletes the metadata entry from the target object with the provided key.
			* @param metadataKey A key used to store and retrieve metadata.
			* @param target The target object on which the metadata is defined.
			* @param propertyKey (Optional) The property key for the target.
			* @returns `true` if the metadata entry was found and deleted; otherwise, false.
			* @example
			*
			*     class Example {
			*         // property declarations are not part of ES6, though they are valid in TypeScript:
			*         // static staticProperty;
			*         // property;
			*
			*         constructor(p) { }
			*         static staticMethod(p) { }
			*         method(p) { }
			*     }
			*
			*     // constructor
			*     result = Reflect.deleteMetadata("custom:annotation", Example);
			*
			*     // property (on constructor)
			*     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
			*
			*     // property (on prototype)
			*     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
			*
			*     // method (on constructor)
			*     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
			*
			*     // method (on prototype)
			*     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
			*
			*/
			function deleteMetadata(metadataKey, target, propertyKey) {
				if (!IsObject$1(target)) throw new TypeError();
				if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
				if (!IsObject$1(target)) throw new TypeError();
				if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
				var provider = GetMetadataProvider(target, propertyKey, false);
				if (IsUndefined(provider)) return false;
				return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);
			}
			exporter("deleteMetadata", deleteMetadata);
			function DecorateConstructor(decorators, target) {
				for (var i$1 = decorators.length - 1; i$1 >= 0; --i$1) {
					var decorator = decorators[i$1];
					var decorated = decorator(target);
					if (!IsUndefined(decorated) && !IsNull(decorated)) {
						if (!IsConstructor(decorated)) throw new TypeError();
						target = decorated;
					}
				}
				return target;
			}
			function DecorateProperty(decorators, target, propertyKey, descriptor) {
				for (var i$1 = decorators.length - 1; i$1 >= 0; --i$1) {
					var decorator = decorators[i$1];
					var decorated = decorator(target, propertyKey, descriptor);
					if (!IsUndefined(decorated) && !IsNull(decorated)) {
						if (!IsObject$1(decorated)) throw new TypeError();
						descriptor = decorated;
					}
				}
				return descriptor;
			}
			function OrdinaryHasMetadata(MetadataKey, O, P) {
				var hasOwn$1 = OrdinaryHasOwnMetadata(MetadataKey, O, P);
				if (hasOwn$1) return true;
				var parent = OrdinaryGetPrototypeOf(O);
				if (!IsNull(parent)) return OrdinaryHasMetadata(MetadataKey, parent, P);
				return false;
			}
			function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
				var provider = GetMetadataProvider(O, P, false);
				if (IsUndefined(provider)) return false;
				return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));
			}
			function OrdinaryGetMetadata(MetadataKey, O, P) {
				var hasOwn$1 = OrdinaryHasOwnMetadata(MetadataKey, O, P);
				if (hasOwn$1) return OrdinaryGetOwnMetadata(MetadataKey, O, P);
				var parent = OrdinaryGetPrototypeOf(O);
				if (!IsNull(parent)) return OrdinaryGetMetadata(MetadataKey, parent, P);
				return void 0;
			}
			function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
				var provider = GetMetadataProvider(O, P, false);
				if (IsUndefined(provider)) return;
				return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);
			}
			function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
				var provider = GetMetadataProvider(O, P, true);
				provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);
			}
			function OrdinaryMetadataKeys(O, P) {
				var ownKeys$11 = OrdinaryOwnMetadataKeys(O, P);
				var parent = OrdinaryGetPrototypeOf(O);
				if (parent === null) return ownKeys$11;
				var parentKeys = OrdinaryMetadataKeys(parent, P);
				if (parentKeys.length <= 0) return ownKeys$11;
				if (ownKeys$11.length <= 0) return parentKeys;
				var set = new _Set();
				var keys = [];
				for (var _i$1 = 0, ownKeys_1 = ownKeys$11; _i$1 < ownKeys_1.length; _i$1++) {
					var key = ownKeys_1[_i$1];
					var hasKey = set.has(key);
					if (!hasKey) {
						set.add(key);
						keys.push(key);
					}
				}
				for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
					var key = parentKeys_1[_a];
					var hasKey = set.has(key);
					if (!hasKey) {
						set.add(key);
						keys.push(key);
					}
				}
				return keys;
			}
			function OrdinaryOwnMetadataKeys(O, P) {
				var provider = GetMetadataProvider(O, P, false);
				if (!provider) return [];
				return provider.OrdinaryOwnMetadataKeys(O, P);
			}
			function Type$2(x) {
				if (x === null) return 1;
				switch (typeof x) {
					case "undefined": return 0;
					case "boolean": return 2;
					case "string": return 3;
					case "symbol": return 4;
					case "number": return 5;
					case "object": return x === null ? 1 : 6;
					default: return 6;
				}
			}
			function IsUndefined(x) {
				return x === void 0;
			}
			function IsNull(x) {
				return x === null;
			}
			function IsSymbol(x) {
				return typeof x === "symbol";
			}
			function IsObject$1(x) {
				return typeof x === "object" ? x !== null : typeof x === "function";
			}
			function ToPrimitive(input, PreferredType) {
				switch (Type$2(input)) {
					case 0: return input;
					case 1: return input;
					case 2: return input;
					case 3: return input;
					case 4: return input;
					case 5: return input;
				}
				var hint = PreferredType === 3 ? "string" : PreferredType === 5 ? "number" : "default";
				var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
				if (exoticToPrim !== void 0) {
					var result$1 = exoticToPrim.call(input, hint);
					if (IsObject$1(result$1)) throw new TypeError();
					return result$1;
				}
				return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
			}
			function OrdinaryToPrimitive(O, hint) {
				if (hint === "string") {
					var toString_1 = O.toString;
					if (IsCallable(toString_1)) {
						var result$1 = toString_1.call(O);
						if (!IsObject$1(result$1)) return result$1;
					}
					var valueOf = O.valueOf;
					if (IsCallable(valueOf)) {
						var result$1 = valueOf.call(O);
						if (!IsObject$1(result$1)) return result$1;
					}
				} else {
					var valueOf = O.valueOf;
					if (IsCallable(valueOf)) {
						var result$1 = valueOf.call(O);
						if (!IsObject$1(result$1)) return result$1;
					}
					var toString_2 = O.toString;
					if (IsCallable(toString_2)) {
						var result$1 = toString_2.call(O);
						if (!IsObject$1(result$1)) return result$1;
					}
				}
				throw new TypeError();
			}
			function ToBoolean(argument) {
				return !!argument;
			}
			function ToString(argument) {
				return "" + argument;
			}
			function ToPropertyKey(argument) {
				var key = ToPrimitive(argument, 3);
				if (IsSymbol(key)) return key;
				return ToString(key);
			}
			function IsArray$1(argument) {
				return Array.isArray ? Array.isArray(argument) : argument instanceof Object ? argument instanceof Array : Object.prototype.toString.call(argument) === "[object Array]";
			}
			function IsCallable(argument) {
				return typeof argument === "function";
			}
			function IsConstructor(argument) {
				return typeof argument === "function";
			}
			function IsPropertyKey(argument) {
				switch (Type$2(argument)) {
					case 3: return true;
					case 4: return true;
					default: return false;
				}
			}
			function SameValueZero(x, y) {
				return x === y || x !== x && y !== y;
			}
			function GetMethod(V, P) {
				var func = V[P];
				if (func === void 0 || func === null) return void 0;
				if (!IsCallable(func)) throw new TypeError();
				return func;
			}
			function GetIterator(obj) {
				var method = GetMethod(obj, iteratorSymbol);
				if (!IsCallable(method)) throw new TypeError();
				var iterator = method.call(obj);
				if (!IsObject$1(iterator)) throw new TypeError();
				return iterator;
			}
			function IteratorValue(iterResult) {
				return iterResult.value;
			}
			function IteratorStep(iterator) {
				var result$1 = iterator.next();
				return result$1.done ? false : result$1;
			}
			function IteratorClose(iterator) {
				var f = iterator["return"];
				if (f) f.call(iterator);
			}
			function OrdinaryGetPrototypeOf(O) {
				var proto = Object.getPrototypeOf(O);
				if (typeof O !== "function" || O === functionPrototype) return proto;
				if (proto !== functionPrototype) return proto;
				var prototype = O.prototype;
				var prototypeProto = prototype && Object.getPrototypeOf(prototype);
				if (prototypeProto == null || prototypeProto === Object.prototype) return proto;
				var constructor = prototypeProto.constructor;
				if (typeof constructor !== "function") return proto;
				if (constructor === O) return proto;
				return constructor;
			}
			/**
			* Creates a registry used to allow multiple `reflect-metadata` providers.
			*/
			function CreateMetadataRegistry() {
				var fallback;
				if (!IsUndefined(registrySymbol) && typeof root.Reflect !== "undefined" && !(registrySymbol in root.Reflect) && typeof root.Reflect.defineMetadata === "function") fallback = CreateFallbackProvider(root.Reflect);
				var first$1;
				var second;
				var rest;
				var targetProviderMap = new _WeakMap();
				var registry = {
					registerProvider,
					getProvider,
					setProvider
				};
				return registry;
				function registerProvider(provider) {
					if (!Object.isExtensible(registry)) throw new Error("Cannot add provider to a frozen registry.");
					switch (true) {
						case fallback === provider: break;
						case IsUndefined(first$1):
							first$1 = provider;
							break;
						case first$1 === provider: break;
						case IsUndefined(second):
							second = provider;
							break;
						case second === provider: break;
						default:
							if (rest === void 0) rest = new _Set();
							rest.add(provider);
							break;
					}
				}
				function getProviderNoCache(O, P) {
					if (!IsUndefined(first$1)) {
						if (first$1.isProviderFor(O, P)) return first$1;
						if (!IsUndefined(second)) {
							if (second.isProviderFor(O, P)) return first$1;
							if (!IsUndefined(rest)) {
								var iterator = GetIterator(rest);
								while (true) {
									var next = IteratorStep(iterator);
									if (!next) return void 0;
									var provider = IteratorValue(next);
									if (provider.isProviderFor(O, P)) {
										IteratorClose(iterator);
										return provider;
									}
								}
							}
						}
					}
					if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) return fallback;
					return void 0;
				}
				function getProvider(O, P) {
					var providerMap = targetProviderMap.get(O);
					var provider;
					if (!IsUndefined(providerMap)) provider = providerMap.get(P);
					if (!IsUndefined(provider)) return provider;
					provider = getProviderNoCache(O, P);
					if (!IsUndefined(provider)) {
						if (IsUndefined(providerMap)) {
							providerMap = new _Map();
							targetProviderMap.set(O, providerMap);
						}
						providerMap.set(P, provider);
					}
					return provider;
				}
				function hasProvider(provider) {
					if (IsUndefined(provider)) throw new TypeError();
					return first$1 === provider || second === provider || !IsUndefined(rest) && rest.has(provider);
				}
				function setProvider(O, P, provider) {
					if (!hasProvider(provider)) throw new Error("Metadata provider not registered.");
					var existingProvider = getProvider(O, P);
					if (existingProvider !== provider) {
						if (!IsUndefined(existingProvider)) return false;
						var providerMap = targetProviderMap.get(O);
						if (IsUndefined(providerMap)) {
							providerMap = new _Map();
							targetProviderMap.set(O, providerMap);
						}
						providerMap.set(P, provider);
					}
					return true;
				}
			}
			/**
			* Gets or creates the shared registry of metadata providers.
			*/
			function GetOrCreateMetadataRegistry() {
				var metadataRegistry$1;
				if (!IsUndefined(registrySymbol) && IsObject$1(root.Reflect) && Object.isExtensible(root.Reflect)) metadataRegistry$1 = root.Reflect[registrySymbol];
				if (IsUndefined(metadataRegistry$1)) metadataRegistry$1 = CreateMetadataRegistry();
				if (!IsUndefined(registrySymbol) && IsObject$1(root.Reflect) && Object.isExtensible(root.Reflect)) Object.defineProperty(root.Reflect, registrySymbol, {
					enumerable: false,
					configurable: false,
					writable: false,
					value: metadataRegistry$1
				});
				return metadataRegistry$1;
			}
			function CreateMetadataProvider(registry) {
				var metadata$2 = new _WeakMap();
				var provider = {
					isProviderFor: function(O, P) {
						var targetMetadata = metadata$2.get(O);
						if (IsUndefined(targetMetadata)) return false;
						return targetMetadata.has(P);
					},
					OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata$1,
					OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata$1,
					OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata$1,
					OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys$1,
					OrdinaryDeleteMetadata
				};
				metadataRegistry.registerProvider(provider);
				return provider;
				function GetOrCreateMetadataMap(O, P, Create) {
					var targetMetadata = metadata$2.get(O);
					var createdTargetMetadata = false;
					if (IsUndefined(targetMetadata)) {
						if (!Create) return void 0;
						targetMetadata = new _Map();
						metadata$2.set(O, targetMetadata);
						createdTargetMetadata = true;
					}
					var metadataMap = targetMetadata.get(P);
					if (IsUndefined(metadataMap)) {
						if (!Create) return void 0;
						metadataMap = new _Map();
						targetMetadata.set(P, metadataMap);
						if (!registry.setProvider(O, P, provider)) {
							targetMetadata.delete(P);
							if (createdTargetMetadata) metadata$2.delete(O);
							throw new Error("Wrong provider for target.");
						}
					}
					return metadataMap;
				}
				function OrdinaryHasOwnMetadata$1(MetadataKey, O, P) {
					var metadataMap = GetOrCreateMetadataMap(O, P, false);
					if (IsUndefined(metadataMap)) return false;
					return ToBoolean(metadataMap.has(MetadataKey));
				}
				function OrdinaryGetOwnMetadata$1(MetadataKey, O, P) {
					var metadataMap = GetOrCreateMetadataMap(O, P, false);
					if (IsUndefined(metadataMap)) return void 0;
					return metadataMap.get(MetadataKey);
				}
				function OrdinaryDefineOwnMetadata$1(MetadataKey, MetadataValue, O, P) {
					var metadataMap = GetOrCreateMetadataMap(O, P, true);
					metadataMap.set(MetadataKey, MetadataValue);
				}
				function OrdinaryOwnMetadataKeys$1(O, P) {
					var keys = [];
					var metadataMap = GetOrCreateMetadataMap(O, P, false);
					if (IsUndefined(metadataMap)) return keys;
					var keysObj = metadataMap.keys();
					var iterator = GetIterator(keysObj);
					var k = 0;
					while (true) {
						var next = IteratorStep(iterator);
						if (!next) {
							keys.length = k;
							return keys;
						}
						var nextValue = IteratorValue(next);
						try {
							keys[k] = nextValue;
						} catch (e) {
							try {
								IteratorClose(iterator);
							} finally {
								throw e;
							}
						}
						k++;
					}
				}
				function OrdinaryDeleteMetadata(MetadataKey, O, P) {
					var metadataMap = GetOrCreateMetadataMap(O, P, false);
					if (IsUndefined(metadataMap)) return false;
					if (!metadataMap.delete(MetadataKey)) return false;
					if (metadataMap.size === 0) {
						var targetMetadata = metadata$2.get(O);
						if (!IsUndefined(targetMetadata)) {
							targetMetadata.delete(P);
							if (targetMetadata.size === 0) metadata$2.delete(targetMetadata);
						}
					}
					return true;
				}
			}
			function CreateFallbackProvider(reflect) {
				var defineMetadata$1 = reflect.defineMetadata, hasOwnMetadata$1 = reflect.hasOwnMetadata, getOwnMetadata$1 = reflect.getOwnMetadata, getOwnMetadataKeys$1 = reflect.getOwnMetadataKeys, deleteMetadata$1 = reflect.deleteMetadata;
				var metadataOwner = new _WeakMap();
				var provider = {
					isProviderFor: function(O, P) {
						var metadataPropertySet = metadataOwner.get(O);
						if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) return true;
						if (getOwnMetadataKeys$1(O, P).length) {
							if (IsUndefined(metadataPropertySet)) {
								metadataPropertySet = new _Set();
								metadataOwner.set(O, metadataPropertySet);
							}
							metadataPropertySet.add(P);
							return true;
						}
						return false;
					},
					OrdinaryDefineOwnMetadata: defineMetadata$1,
					OrdinaryHasOwnMetadata: hasOwnMetadata$1,
					OrdinaryGetOwnMetadata: getOwnMetadata$1,
					OrdinaryOwnMetadataKeys: getOwnMetadataKeys$1,
					OrdinaryDeleteMetadata: deleteMetadata$1
				};
				return provider;
			}
			/**
			* Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,
			* then this module's metadata provider is assigned to the object.
			*/
			function GetMetadataProvider(O, P, Create) {
				var registeredProvider = metadataRegistry.getProvider(O, P);
				if (!IsUndefined(registeredProvider)) return registeredProvider;
				if (Create) {
					if (metadataRegistry.setProvider(O, P, metadataProvider)) return metadataProvider;
					throw new Error("Illegal state.");
				}
				return void 0;
			}
			function CreateMapPolyfill() {
				var cacheSentinel = {};
				var arraySentinel = [];
				var MapIterator$1 = function() {
					function MapIterator$2(keys, values, selector) {
						this._index = 0;
						this._keys = keys;
						this._values = values;
						this._selector = selector;
					}
					MapIterator$2.prototype["@@iterator"] = function() {
						return this;
					};
					MapIterator$2.prototype[iteratorSymbol] = function() {
						return this;
					};
					MapIterator$2.prototype.next = function() {
						var index = this._index;
						if (index >= 0 && index < this._keys.length) {
							var result$1 = this._selector(this._keys[index], this._values[index]);
							if (index + 1 >= this._keys.length) {
								this._index = -1;
								this._keys = arraySentinel;
								this._values = arraySentinel;
							} else this._index++;
							return {
								value: result$1,
								done: false
							};
						}
						return {
							value: void 0,
							done: true
						};
					};
					MapIterator$2.prototype.throw = function(error) {
						if (this._index >= 0) {
							this._index = -1;
							this._keys = arraySentinel;
							this._values = arraySentinel;
						}
						throw error;
					};
					MapIterator$2.prototype.return = function(value) {
						if (this._index >= 0) {
							this._index = -1;
							this._keys = arraySentinel;
							this._values = arraySentinel;
						}
						return {
							value,
							done: true
						};
					};
					return MapIterator$2;
				}();
				var Map$1 = function() {
					function Map$2() {
						this._keys = [];
						this._values = [];
						this._cacheKey = cacheSentinel;
						this._cacheIndex = -2;
					}
					Object.defineProperty(Map$2.prototype, "size", {
						get: function() {
							return this._keys.length;
						},
						enumerable: true,
						configurable: true
					});
					Map$2.prototype.has = function(key) {
						return this._find(key, false) >= 0;
					};
					Map$2.prototype.get = function(key) {
						var index = this._find(key, false);
						return index >= 0 ? this._values[index] : void 0;
					};
					Map$2.prototype.set = function(key, value) {
						var index = this._find(key, true);
						this._values[index] = value;
						return this;
					};
					Map$2.prototype.delete = function(key) {
						var index = this._find(key, false);
						if (index >= 0) {
							var size = this._keys.length;
							for (var i$1 = index + 1; i$1 < size; i$1++) {
								this._keys[i$1 - 1] = this._keys[i$1];
								this._values[i$1 - 1] = this._values[i$1];
							}
							this._keys.length--;
							this._values.length--;
							if (SameValueZero(key, this._cacheKey)) {
								this._cacheKey = cacheSentinel;
								this._cacheIndex = -2;
							}
							return true;
						}
						return false;
					};
					Map$2.prototype.clear = function() {
						this._keys.length = 0;
						this._values.length = 0;
						this._cacheKey = cacheSentinel;
						this._cacheIndex = -2;
					};
					Map$2.prototype.keys = function() {
						return new MapIterator$1(this._keys, this._values, getKey);
					};
					Map$2.prototype.values = function() {
						return new MapIterator$1(this._keys, this._values, getValue);
					};
					Map$2.prototype.entries = function() {
						return new MapIterator$1(this._keys, this._values, getEntry);
					};
					Map$2.prototype["@@iterator"] = function() {
						return this.entries();
					};
					Map$2.prototype[iteratorSymbol] = function() {
						return this.entries();
					};
					Map$2.prototype._find = function(key, insert) {
						if (!SameValueZero(this._cacheKey, key)) {
							this._cacheIndex = -1;
							for (var i$1 = 0; i$1 < this._keys.length; i$1++) if (SameValueZero(this._keys[i$1], key)) {
								this._cacheIndex = i$1;
								break;
							}
						}
						if (this._cacheIndex < 0 && insert) {
							this._cacheIndex = this._keys.length;
							this._keys.push(key);
							this._values.push(void 0);
						}
						return this._cacheIndex;
					};
					return Map$2;
				}();
				return Map$1;
				function getKey(key, _) {
					return key;
				}
				function getValue(_, value) {
					return value;
				}
				function getEntry(key, value) {
					return [key, value];
				}
			}
			function CreateSetPolyfill() {
				var Set$1 = function() {
					function Set$2() {
						this._map = new _Map();
					}
					Object.defineProperty(Set$2.prototype, "size", {
						get: function() {
							return this._map.size;
						},
						enumerable: true,
						configurable: true
					});
					Set$2.prototype.has = function(value) {
						return this._map.has(value);
					};
					Set$2.prototype.add = function(value) {
						return this._map.set(value, value), this;
					};
					Set$2.prototype.delete = function(value) {
						return this._map.delete(value);
					};
					Set$2.prototype.clear = function() {
						this._map.clear();
					};
					Set$2.prototype.keys = function() {
						return this._map.keys();
					};
					Set$2.prototype.values = function() {
						return this._map.keys();
					};
					Set$2.prototype.entries = function() {
						return this._map.entries();
					};
					Set$2.prototype["@@iterator"] = function() {
						return this.keys();
					};
					Set$2.prototype[iteratorSymbol] = function() {
						return this.keys();
					};
					return Set$2;
				}();
				return Set$1;
			}
			function CreateWeakMapPolyfill() {
				var UUID_SIZE = 16;
				var keys = HashMap.create();
				var rootKey = CreateUniqueKey();
				return function() {
					function WeakMap$1() {
						this._key = CreateUniqueKey();
					}
					WeakMap$1.prototype.has = function(target) {
						var table = GetOrCreateWeakMapTable(target, false);
						return table !== void 0 ? HashMap.has(table, this._key) : false;
					};
					WeakMap$1.prototype.get = function(target) {
						var table = GetOrCreateWeakMapTable(target, false);
						return table !== void 0 ? HashMap.get(table, this._key) : void 0;
					};
					WeakMap$1.prototype.set = function(target, value) {
						var table = GetOrCreateWeakMapTable(target, true);
						table[this._key] = value;
						return this;
					};
					WeakMap$1.prototype.delete = function(target) {
						var table = GetOrCreateWeakMapTable(target, false);
						return table !== void 0 ? delete table[this._key] : false;
					};
					WeakMap$1.prototype.clear = function() {
						this._key = CreateUniqueKey();
					};
					return WeakMap$1;
				}();
				function CreateUniqueKey() {
					var key;
					do
						key = "@@WeakMap@@" + CreateUUID();
					while (HashMap.has(keys, key));
					keys[key] = true;
					return key;
				}
				function GetOrCreateWeakMapTable(target, create) {
					if (!hasOwn.call(target, rootKey)) {
						if (!create) return void 0;
						Object.defineProperty(target, rootKey, { value: HashMap.create() });
					}
					return target[rootKey];
				}
				function FillRandomBytes(buffer$1, size) {
					for (var i$1 = 0; i$1 < size; ++i$1) buffer$1[i$1] = Math.random() * 255 | 0;
					return buffer$1;
				}
				function GenRandomBytes(size) {
					if (typeof Uint8Array === "function") {
						var array = new Uint8Array(size);
						if (typeof crypto !== "undefined") crypto.getRandomValues(array);
						else if (typeof msCrypto !== "undefined") msCrypto.getRandomValues(array);
						else FillRandomBytes(array, size);
						return array;
					}
					return FillRandomBytes(new Array(size), size);
				}
				function CreateUUID() {
					var data = GenRandomBytes(UUID_SIZE);
					data[6] = data[6] & 79 | 64;
					data[8] = data[8] & 191 | 128;
					var result$1 = "";
					for (var offset = 0; offset < UUID_SIZE; ++offset) {
						var byte = data[offset];
						if (offset === 4 || offset === 6 || offset === 8) result$1 += "-";
						if (byte < 16) result$1 += "0";
						result$1 += byte.toString(16).toLowerCase();
					}
					return result$1;
				}
			}
			function MakeDictionary(obj) {
				obj.__ = void 0;
				delete obj.__;
				return obj;
			}
		});
	})(Reflect$1 || (Reflect$1 = {}));
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/bind.decorator.js
var require_bind_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/bind.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Bind = Bind;
	/**
	* Decorator that binds *parameter decorators* to the method that follows.
	*
	* Useful when the language doesn't provide a 'Parameter Decorator' feature
	* (i.e., vanilla JavaScript).
	*
	* @param decorators one or more parameter decorators (e.g., `Req()`)
	*
	* @publicApi
	*/
	function Bind(...decorators) {
		return function(target, key, descriptor) {
			decorators.forEach(function(fn, index) {
				return fn(target, key, index);
			});
			return descriptor;
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/constants.js
var require_constants$2 = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/constants.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ENTRY_PROVIDER_WATERMARK = exports.CATCH_WATERMARK = exports.CONTROLLER_WATERMARK = exports.INJECTABLE_WATERMARK = exports.VERSION_METADATA = exports.SSE_METADATA = exports.RESPONSE_PASSTHROUGH_METADATA = exports.REDIRECT_METADATA = exports.HEADERS_METADATA = exports.MODULE_PATH = exports.HTTP_CODE_METADATA = exports.RENDER_METADATA = exports.ENHANCER_KEY_TO_SUBTYPE_MAP = exports.EXCEPTION_FILTERS_METADATA = exports.INTERCEPTORS_METADATA = exports.GUARDS_METADATA = exports.PIPES_METADATA = exports.FILTER_CATCH_EXCEPTIONS = exports.CUSTOM_ROUTE_ARGS_METADATA = exports.ROUTE_ARGS_METADATA = exports.METHOD_METADATA = exports.SCOPE_OPTIONS_METADATA = exports.OPTIONAL_PROPERTY_DEPS_METADATA = exports.PROPERTY_DEPS_METADATA = exports.OPTIONAL_DEPS_METADATA = exports.SELF_DECLARED_DEPS_METADATA = exports.PARAMTYPES_METADATA = exports.PATH_METADATA = exports.HOST_METADATA = exports.GLOBAL_MODULE_METADATA = exports.MODULE_METADATA = void 0;
	exports.MODULE_METADATA = {
		IMPORTS: "imports",
		PROVIDERS: "providers",
		CONTROLLERS: "controllers",
		EXPORTS: "exports"
	};
	exports.GLOBAL_MODULE_METADATA = "__module:global__";
	exports.HOST_METADATA = "host";
	exports.PATH_METADATA = "path";
	exports.PARAMTYPES_METADATA = "design:paramtypes";
	exports.SELF_DECLARED_DEPS_METADATA = "self:paramtypes";
	exports.OPTIONAL_DEPS_METADATA = "optional:paramtypes";
	exports.PROPERTY_DEPS_METADATA = "self:properties_metadata";
	exports.OPTIONAL_PROPERTY_DEPS_METADATA = "optional:properties_metadata";
	exports.SCOPE_OPTIONS_METADATA = "scope:options";
	exports.METHOD_METADATA = "method";
	exports.ROUTE_ARGS_METADATA = "__routeArguments__";
	exports.CUSTOM_ROUTE_ARGS_METADATA = "__customRouteArgs__";
	exports.FILTER_CATCH_EXCEPTIONS = "__filterCatchExceptions__";
	exports.PIPES_METADATA = "__pipes__";
	exports.GUARDS_METADATA = "__guards__";
	exports.INTERCEPTORS_METADATA = "__interceptors__";
	exports.EXCEPTION_FILTERS_METADATA = "__exceptionFilters__";
	exports.ENHANCER_KEY_TO_SUBTYPE_MAP = {
		[exports.GUARDS_METADATA]: "guard",
		[exports.INTERCEPTORS_METADATA]: "interceptor",
		[exports.PIPES_METADATA]: "pipe",
		[exports.EXCEPTION_FILTERS_METADATA]: "filter"
	};
	exports.RENDER_METADATA = "__renderTemplate__";
	exports.HTTP_CODE_METADATA = "__httpCode__";
	exports.MODULE_PATH = "__module_path__";
	exports.HEADERS_METADATA = "__headers__";
	exports.REDIRECT_METADATA = "__redirect__";
	exports.RESPONSE_PASSTHROUGH_METADATA = "__responsePassthrough__";
	exports.SSE_METADATA = "__sse__";
	exports.VERSION_METADATA = "__version__";
	exports.INJECTABLE_WATERMARK = "__injectable__";
	exports.CONTROLLER_WATERMARK = "__controller__";
	exports.CATCH_WATERMARK = "__catch__";
	exports.ENTRY_PROVIDER_WATERMARK = "__entryProvider__";
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/catch.decorator.js
var require_catch_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/catch.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Catch = Catch;
	const constants_1$22 = require_constants$2();
	/**
	* Decorator that marks a class as a Nest exception filter. An exception filter
	* handles exceptions thrown by or not handled by your application code.
	*
	* The decorated class must implement the `ExceptionFilter` interface.
	*
	* @param exceptions one or more exception *types* specifying
	* the exceptions to be caught and handled by this filter.
	*
	* @see [Exception Filters](https://docs.nestjs.com/exception-filters)
	*
	* @usageNotes
	* Exception filters are applied using the `@UseFilters()` decorator, or (globally)
	* with `app.useGlobalFilters()`.
	*
	* @publicApi
	*/
	function Catch(...exceptions) {
		return function(target) {
			Reflect.defineMetadata(constants_1$22.CATCH_WATERMARK, true, target);
			Reflect.defineMetadata(constants_1$22.FILTER_CATCH_EXCEPTIONS, exceptions, target);
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/shared.utils.js
var require_shared_utils = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/shared.utils.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isSymbol = exports.isEmpty = exports.isNil = exports.isConstructor = exports.isNumber = exports.isString = exports.isFunction = exports.stripEndSlash = exports.normalizePath = exports.addLeadingSlash = exports.isPlainObject = exports.isObject = exports.isUndefined = void 0;
	const isUndefined = function(obj) {
		return typeof obj === "undefined";
	};
	exports.isUndefined = isUndefined;
	const isObject$2 = function(fn) {
		return !(0, exports.isNil)(fn) && typeof fn === "object";
	};
	exports.isObject = isObject$2;
	const isPlainObject = function(fn) {
		if (!(0, exports.isObject)(fn)) return false;
		const proto = Object.getPrototypeOf(fn);
		if (proto === null) return true;
		const ctor = Object.prototype.hasOwnProperty.call(proto, "constructor") && proto.constructor;
		return typeof ctor === "function" && ctor instanceof ctor && Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object);
	};
	exports.isPlainObject = isPlainObject;
	const addLeadingSlash = function(path) {
		return path && typeof path === "string" ? path.charAt(0) !== "/" && path.substring(0, 2) !== "{/" ? "/" + path : path : "";
	};
	exports.addLeadingSlash = addLeadingSlash;
	const normalizePath = function(path) {
		return path ? path.startsWith("/") ? ("/" + path.replace(/\/+$/, "")).replace(/\/+/g, "/") : "/" + path.replace(/\/+$/, "") : "/";
	};
	exports.normalizePath = normalizePath;
	const stripEndSlash = function(path) {
		return path[path.length - 1] === "/" ? path.slice(0, path.length - 1) : path;
	};
	exports.stripEndSlash = stripEndSlash;
	const isFunction$1 = function(val) {
		return typeof val === "function";
	};
	exports.isFunction = isFunction$1;
	const isString$1 = function(val) {
		return typeof val === "string";
	};
	exports.isString = isString$1;
	const isNumber$1 = function(val) {
		return typeof val === "number";
	};
	exports.isNumber = isNumber$1;
	const isConstructor = function(val) {
		return val === "constructor";
	};
	exports.isConstructor = isConstructor;
	const isNil = function(val) {
		return (0, exports.isUndefined)(val) || val === null;
	};
	exports.isNil = isNil;
	const isEmpty$3 = function(array) {
		return !(array && array.length > 0);
	};
	exports.isEmpty = isEmpty$3;
	const isSymbol = function(val) {
		return typeof val === "symbol";
	};
	exports.isSymbol = isSymbol;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/controller.decorator.js
var require_controller_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/controller.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Controller = Controller;
	const constants_1$21 = require_constants$2();
	const shared_utils_1$24 = require_shared_utils();
	/**
	* Decorator that marks a class as a Nest controller that can receive inbound
	* requests and produce responses.
	*
	* An HTTP Controller responds to inbound HTTP Requests and produces HTTP Responses.
	* It defines a class that provides the context for one or more related route
	* handlers that correspond to HTTP request methods and associated routes
	* for example `GET /api/profile`, `POST /users/resume`
	*
	* A Microservice Controller responds to requests as well as events, running over
	* a variety of transports [(read more here)](https://docs.nestjs.com/microservices/basics).
	* It defines a class that provides a context for one or more message or event
	* handlers.
	*
	* @param prefixOrOptions a `route path prefix` or a `ControllerOptions` object.
	* A `route path prefix` is pre-pended to the path specified in any request decorator
	* in the class. `ControllerOptions` is an options configuration object specifying:
	* - `scope` - symbol that determines the lifetime of a Controller instance.
	* [See Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage) for
	* more details.
	* - `prefix` - string that defines a `route path prefix`.  The prefix
	* is pre-pended to the path specified in any request decorator in the class.
	* - `version` - string, array of strings, or Symbol that defines the version
	* of all routes in the class. [See Versioning](https://docs.nestjs.com/techniques/versioning)
	* for more details.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	* @see [Controllers](https://docs.nestjs.com/controllers)
	* @see [Microservices](https://docs.nestjs.com/microservices/basics#request-response)
	* @see [Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage)
	* @see [Versioning](https://docs.nestjs.com/techniques/versioning)
	*
	* @publicApi
	*/
	function Controller(prefixOrOptions) {
		const defaultPath = "/";
		const [path, host, scopeOptions, versionOptions] = (0, shared_utils_1$24.isUndefined)(prefixOrOptions) ? [
			defaultPath,
			void 0,
			void 0,
			void 0
		] : (0, shared_utils_1$24.isString)(prefixOrOptions) || Array.isArray(prefixOrOptions) ? [
			prefixOrOptions,
			void 0,
			void 0,
			void 0
		] : [
			prefixOrOptions.path || defaultPath,
			prefixOrOptions.host,
			{
				scope: prefixOrOptions.scope,
				durable: prefixOrOptions.durable
			},
			Array.isArray(prefixOrOptions.version) ? Array.from(new Set(prefixOrOptions.version)) : prefixOrOptions.version
		];
		return function(target) {
			Reflect.defineMetadata(constants_1$21.CONTROLLER_WATERMARK, true, target);
			Reflect.defineMetadata(constants_1$21.PATH_METADATA, path, target);
			Reflect.defineMetadata(constants_1$21.HOST_METADATA, host, target);
			Reflect.defineMetadata(constants_1$21.SCOPE_OPTIONS_METADATA, scopeOptions, target);
			Reflect.defineMetadata(constants_1$21.VERSION_METADATA, versionOptions, target);
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/dependencies.decorator.js
var require_dependencies_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/dependencies.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Dependencies = void 0;
	exports.flatten = flatten;
	const constants_1$20 = require_constants$2();
	function flatten(arr) {
		const flat = [].concat(...arr);
		return flat.some(Array.isArray) ? flatten(flat) : flat;
	}
	/**
	* Decorator that sets required dependencies (required with a vanilla JavaScript objects)
	*
	* @publicApi
	*/
	const Dependencies = function(...dependencies) {
		const flattenDeps = flatten(dependencies);
		return function(target) {
			Reflect.defineMetadata(constants_1$20.PARAMTYPES_METADATA, flattenDeps, target);
		};
	};
	exports.Dependencies = Dependencies;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/extend-metadata.util.js
var require_extend_metadata_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/extend-metadata.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.extendArrayMetadata = extendArrayMetadata;
	function extendArrayMetadata(key, metadata$1, target) {
		const previousValue = Reflect.getMetadata(key, target) || [];
		const value = [...previousValue, ...metadata$1];
		Reflect.defineMetadata(key, value, target);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/validate-each.util.js
var require_validate_each_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/validate-each.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.InvalidDecoratorItemException = void 0;
	exports.validateEach = validateEach;
	var InvalidDecoratorItemException = class extends Error {
		constructor(decorator, item, context$1) {
			const message = `Invalid ${item} passed to ${decorator}() decorator (${context$1}).`;
			super(message);
			this.msg = message;
		}
		what() {
			return this.msg;
		}
	};
	exports.InvalidDecoratorItemException = InvalidDecoratorItemException;
	function validateEach(context$1, arr, predicate, decorator, item) {
		if (!context$1 || !context$1.name) return true;
		const errors = arr.some(function(str) {
			return !predicate(str);
		});
		if (errors) throw new InvalidDecoratorItemException(decorator, item, context$1.name);
		return true;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/exception-filters.decorator.js
var require_exception_filters_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/exception-filters.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.UseFilters = void 0;
	const constants_1$19 = require_constants$2();
	const extend_metadata_util_1$4 = require_extend_metadata_util();
	const shared_utils_1$23 = require_shared_utils();
	const validate_each_util_1$3 = require_validate_each_util();
	/**
	* Decorator that binds exception filters to the scope of the controller or
	* method, depending on its context.
	*
	* When `@UseFilters` is used at the controller level, the filter will be
	* applied to every handler (method) in the controller.
	*
	* When `@UseFilters` is used at the individual handler level, the filter
	* will apply only to that specific method.
	*
	* @param filters exception filter instance or class, or a list of exception
	* filter instances or classes.
	*
	* @see [Exception filters](https://docs.nestjs.com/exception-filters)
	*
	* @usageNotes
	* Exception filters can also be set up globally for all controllers and routes
	* using `app.useGlobalFilters()`.  [See here for details](https://docs.nestjs.com/exception-filters#binding-filters)
	*
	* @publicApi
	*/
	const UseFilters = function(...filters) {
		return addExceptionFiltersMetadata(...filters);
	};
	exports.UseFilters = UseFilters;
	function addExceptionFiltersMetadata(...filters) {
		return function(target, key, descriptor) {
			const isFilterValid = function(filter$1) {
				return filter$1 && ((0, shared_utils_1$23.isFunction)(filter$1) || (0, shared_utils_1$23.isFunction)(filter$1.catch));
			};
			if (descriptor) {
				(0, validate_each_util_1$3.validateEach)(target.constructor, filters, isFilterValid, "@UseFilters", "filter");
				(0, extend_metadata_util_1$4.extendArrayMetadata)(constants_1$19.EXCEPTION_FILTERS_METADATA, filters, descriptor.value);
				return descriptor;
			}
			(0, validate_each_util_1$3.validateEach)(target, filters, isFilterValid, "@UseFilters", "filter");
			(0, extend_metadata_util_1$4.extendArrayMetadata)(constants_1$19.EXCEPTION_FILTERS_METADATA, filters, target);
			return target;
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/inject.decorator.js
var require_inject_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/inject.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Inject = Inject;
	const constants_1$18 = require_constants$2();
	const shared_utils_1$22 = require_shared_utils();
	/**
	* Decorator that marks a constructor parameter as a target for
	* [Dependency Injection (DI)](https://docs.nestjs.com/providers#dependency-injection).
	*
	* Any injected provider must be visible within the module scope (loosely
	* speaking, the containing module) of the class it is being injected into. This
	* can be done by:
	*
	* - defining the provider in the same module scope
	* - exporting the provider from one module scope and importing that module into the
	*   module scope of the class being injected into
	* - exporting the provider from a module that is marked as global using the
	*   `@Global()` decorator
	*
	* #### Injection tokens
	* Can be *types* (class names), *strings* or *symbols*. This depends on how the
	* provider with which it is associated was defined. Providers defined with the
	* `@Injectable()` decorator use the class name. Custom Providers may use strings
	* or symbols as the injection token.
	*
	* @param token lookup key for the provider to be injected (assigned to the constructor
	* parameter).
	*
	* @see [Providers](https://docs.nestjs.com/providers)
	* @see [Custom Providers](https://docs.nestjs.com/fundamentals/custom-providers)
	* @see [Injection Scopes](https://docs.nestjs.com/fundamentals/injection-scopes)
	*
	* @publicApi
	*/
	function Inject(token) {
		const injectCallHasArguments = arguments.length > 0;
		return function(target, key, index) {
			let type = token || Reflect.getMetadata("design:type", target, key);
			if (!type && !injectCallHasArguments) {
				var _Reflect$getMetadata;
				type = (_Reflect$getMetadata = Reflect.getMetadata(constants_1$18.PARAMTYPES_METADATA, target, key)) === null || _Reflect$getMetadata === void 0 ? void 0 : _Reflect$getMetadata[index];
			}
			if (!(0, shared_utils_1$22.isUndefined)(index)) {
				let dependencies = Reflect.getMetadata(constants_1$18.SELF_DECLARED_DEPS_METADATA, target) || [];
				dependencies = [...dependencies, {
					index,
					param: type
				}];
				Reflect.defineMetadata(constants_1$18.SELF_DECLARED_DEPS_METADATA, dependencies, target);
				return;
			}
			let properties = Reflect.getMetadata(constants_1$18.PROPERTY_DEPS_METADATA, target.constructor) || [];
			properties = [...properties, {
				key,
				type
			}];
			Reflect.defineMetadata(constants_1$18.PROPERTY_DEPS_METADATA, properties, target.constructor);
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/uid@2.0.2/node_modules/uid/dist/index.js
var require_dist = __commonJS({ "../../node_modules/.pnpm/uid@2.0.2/node_modules/uid/dist/index.js"(exports) {
	var IDX = 256, HEX = [], SIZE = 256, BUFFER;
	while (IDX--) HEX[IDX] = (IDX + 256).toString(16).substring(1);
	function uid(len) {
		var i$1 = 0, tmp = len || 11;
		if (!BUFFER || IDX + tmp > SIZE * 2) for (BUFFER = "", IDX = 0; i$1 < SIZE; i$1++) BUFFER += HEX[Math.random() * 256 | 0];
		return BUFFER.substring(IDX, IDX++ + tmp);
	}
	exports.uid = uid;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/injectable.decorator.js
var require_injectable_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/injectable.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Injectable = Injectable;
	exports.mixin = mixin;
	const uid_1$2 = require_dist();
	const constants_1$17 = require_constants$2();
	/**
	* Decorator that marks a class as a [provider](https://docs.nestjs.com/providers).
	* Providers can be injected into other classes via constructor parameter injection
	* using Nest's built-in [Dependency Injection (DI)](https://docs.nestjs.com/providers#dependency-injection)
	* system.
	*
	* When injecting a provider, it must be visible within the module scope (loosely
	* speaking, the containing module) of the class it is being injected into. This
	* can be done by:
	*
	* - defining the provider in the same module scope
	* - exporting the provider from one module scope and importing that module into the
	*   module scope of the class being injected into
	* - exporting the provider from a module that is marked as global using the
	*   `@Global()` decorator
	*
	* Providers can also be defined in a more explicit and imperative form using
	* various [custom provider](https://docs.nestjs.com/fundamentals/custom-providers) techniques that expose
	* more capabilities of the DI system.
	*
	* @param options options specifying scope of injectable
	*
	* @see [Providers](https://docs.nestjs.com/providers)
	* @see [Custom Providers](https://docs.nestjs.com/fundamentals/custom-providers)
	* @see [Injection Scopes](https://docs.nestjs.com/fundamentals/injection-scopes)
	*
	* @publicApi
	*/
	function Injectable(options) {
		return function(target) {
			Reflect.defineMetadata(constants_1$17.INJECTABLE_WATERMARK, true, target);
			Reflect.defineMetadata(constants_1$17.SCOPE_OPTIONS_METADATA, options, target);
		};
	}
	/**
	* @publicApi
	*/
	function mixin(mixinClass) {
		Object.defineProperty(mixinClass, "name", { value: (0, uid_1$2.uid)(21) });
		Injectable()(mixinClass);
		return mixinClass;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/optional.decorator.js
var require_optional_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/optional.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Optional = Optional;
	const constants_1$16 = require_constants$2();
	const shared_utils_1$21 = require_shared_utils();
	/**
	* Parameter decorator for an injected dependency marking the
	* dependency as optional.
	*
	* For example:
	* ```typescript
	* constructor(@Optional() @Inject('HTTP_OPTIONS')private readonly httpClient: T) {}
	* ```
	*
	* @see [Optional providers](https://docs.nestjs.com/providers#optional-providers)
	*
	* @publicApi
	*/
	function Optional() {
		return function(target, key, index) {
			if (!(0, shared_utils_1$21.isUndefined)(index)) {
				const args = Reflect.getMetadata(constants_1$16.OPTIONAL_DEPS_METADATA, target) || [];
				Reflect.defineMetadata(constants_1$16.OPTIONAL_DEPS_METADATA, [...args, index], target);
				return;
			}
			const properties = Reflect.getMetadata(constants_1$16.OPTIONAL_PROPERTY_DEPS_METADATA, target.constructor) || [];
			Reflect.defineMetadata(constants_1$16.OPTIONAL_PROPERTY_DEPS_METADATA, [...properties, key], target.constructor);
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/set-metadata.decorator.js
var require_set_metadata_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/set-metadata.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.SetMetadata = void 0;
	/**
	* Decorator that assigns metadata to the class/function using the
	* specified `key`.
	*
	* Requires two parameters:
	* - `key` - a value defining the key under which the metadata is stored
	* - `value` - metadata to be associated with `key`
	*
	* This metadata can be reflected using the `Reflector` class.
	*
	* Example: `@SetMetadata('roles', ['admin'])`
	*
	* @see [Reflection](https://docs.nestjs.com/fundamentals/execution-context#reflection-and-metadata)
	*
	* @publicApi
	*/
	const SetMetadata = function(metadataKey, metadataValue) {
		const decoratorFactory = function(target, key, descriptor) {
			if (descriptor) {
				Reflect.defineMetadata(metadataKey, metadataValue, descriptor.value);
				return descriptor;
			}
			Reflect.defineMetadata(metadataKey, metadataValue, target);
			return target;
		};
		decoratorFactory.KEY = metadataKey;
		return decoratorFactory;
	};
	exports.SetMetadata = SetMetadata;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/use-guards.decorator.js
var require_use_guards_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/use-guards.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.UseGuards = UseGuards;
	const constants_1$15 = require_constants$2();
	const extend_metadata_util_1$3 = require_extend_metadata_util();
	const shared_utils_1$20 = require_shared_utils();
	const validate_each_util_1$2 = require_validate_each_util();
	/**
	* Decorator that binds guards to the scope of the controller or method,
	* depending on its context.
	*
	* When `@UseGuards` is used at the controller level, the guard will be
	* applied to every handler (method) in the controller.
	*
	* When `@UseGuards` is used at the individual handler level, the guard
	* will apply only to that specific method.
	*
	* @param guards a single guard instance or class, or a list of guard instances
	* or classes.
	*
	* @see [Guards](https://docs.nestjs.com/guards)
	*
	* @usageNotes
	* Guards can also be set up globally for all controllers and routes
	* using `app.useGlobalGuards()`.  [See here for details](https://docs.nestjs.com/guards#binding-guards)
	*
	* @publicApi
	*/
	function UseGuards(...guards) {
		return function(target, key, descriptor) {
			const isGuardValid = function(guard) {
				return guard && ((0, shared_utils_1$20.isFunction)(guard) || (0, shared_utils_1$20.isFunction)(guard.canActivate));
			};
			if (descriptor) {
				(0, validate_each_util_1$2.validateEach)(target.constructor, guards, isGuardValid, "@UseGuards", "guard");
				(0, extend_metadata_util_1$3.extendArrayMetadata)(constants_1$15.GUARDS_METADATA, guards, descriptor.value);
				return descriptor;
			}
			(0, validate_each_util_1$2.validateEach)(target, guards, isGuardValid, "@UseGuards", "guard");
			(0, extend_metadata_util_1$3.extendArrayMetadata)(constants_1$15.GUARDS_METADATA, guards, target);
			return target;
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/use-interceptors.decorator.js
var require_use_interceptors_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/use-interceptors.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.UseInterceptors = UseInterceptors;
	const constants_1$14 = require_constants$2();
	const extend_metadata_util_1$2 = require_extend_metadata_util();
	const shared_utils_1$19 = require_shared_utils();
	const validate_each_util_1$1 = require_validate_each_util();
	/**
	* Decorator that binds interceptors to the scope of the controller or method,
	* depending on its context.
	*
	* When `@UseInterceptors` is used at the controller level, the interceptor will
	* be applied to every handler (method) in the controller.
	*
	* When `@UseInterceptors` is used at the individual handler level, the interceptor
	* will apply only to that specific method.
	*
	* @param interceptors a single interceptor instance or class, or a list of
	* interceptor instances or classes.
	*
	* @see [Interceptors](https://docs.nestjs.com/interceptors)
	*
	* @usageNotes
	* Interceptors can also be set up globally for all controllers and routes
	* using `app.useGlobalInterceptors()`.  [See here for details](https://docs.nestjs.com/interceptors#binding-interceptors)
	*
	* @publicApi
	*/
	function UseInterceptors(...interceptors) {
		return function(target, key, descriptor) {
			const isInterceptorValid = function(interceptor) {
				return interceptor && ((0, shared_utils_1$19.isFunction)(interceptor) || (0, shared_utils_1$19.isFunction)(interceptor.intercept));
			};
			if (descriptor) {
				(0, validate_each_util_1$1.validateEach)(target.constructor, interceptors, isInterceptorValid, "@UseInterceptors", "interceptor");
				(0, extend_metadata_util_1$2.extendArrayMetadata)(constants_1$14.INTERCEPTORS_METADATA, interceptors, descriptor.value);
				return descriptor;
			}
			(0, validate_each_util_1$1.validateEach)(target, interceptors, isInterceptorValid, "@UseInterceptors", "interceptor");
			(0, extend_metadata_util_1$2.extendArrayMetadata)(constants_1$14.INTERCEPTORS_METADATA, interceptors, target);
			return target;
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/use-pipes.decorator.js
var require_use_pipes_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/use-pipes.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.UsePipes = UsePipes;
	const constants_1$13 = require_constants$2();
	const extend_metadata_util_1$1 = require_extend_metadata_util();
	const shared_utils_1$18 = require_shared_utils();
	const validate_each_util_1 = require_validate_each_util();
	/**
	* Decorator that binds pipes to the scope of the controller or method,
	* depending on its context.
	*
	* When `@UsePipes` is used at the controller level, the pipe will be
	* applied to every handler (method) in the controller.
	*
	* When `@UsePipes` is used at the individual handler level, the pipe
	* will apply only to that specific method.
	*
	* @param pipes a single pipe instance or class, or a list of pipe instances or
	* classes.
	*
	* @see [Pipes](https://docs.nestjs.com/pipes)
	*
	* @usageNotes
	* Pipes can also be set up globally for all controllers and routes
	* using `app.useGlobalPipes()`.  [See here for details](https://docs.nestjs.com/pipes#class-validator)
	*
	* @publicApi
	*/
	function UsePipes(...pipes) {
		return function(target, key, descriptor) {
			const isPipeValid = function(pipe$1) {
				return pipe$1 && ((0, shared_utils_1$18.isFunction)(pipe$1) || (0, shared_utils_1$18.isFunction)(pipe$1.transform));
			};
			if (descriptor) {
				(0, extend_metadata_util_1$1.extendArrayMetadata)(constants_1$13.PIPES_METADATA, pipes, descriptor.value);
				return descriptor;
			}
			(0, validate_each_util_1.validateEach)(target, pipes, isPipeValid, "@UsePipes", "pipe");
			(0, extend_metadata_util_1$1.extendArrayMetadata)(constants_1$13.PIPES_METADATA, pipes, target);
			return target;
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/apply-decorators.js
var require_apply_decorators = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/apply-decorators.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.applyDecorators = applyDecorators;
	/**
	* Function that returns a new decorator that applies all decorators provided by param
	*
	* Useful to build new decorators (or a decorator factory) encapsulating multiple decorators related with the same feature
	*
	* @param decorators one or more decorators (e.g., `ApplyGuard(...)`)
	*
	* @publicApi
	*/
	function applyDecorators(...decorators) {
		return function(target, propertyKey, descriptor) {
			for (const decorator of decorators) {
				if (target instanceof Function && !descriptor) {
					decorator(target);
					continue;
				}
				decorator(target, propertyKey, descriptor);
			}
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/version.decorator.js
var require_version_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/version.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Version = Version;
	const constants_1$12 = require_constants$2();
	/**
	* Sets the version of the endpoint to the passed version
	*
	* @publicApi
	*/
	function Version(version$1) {
		if (Array.isArray(version$1)) version$1 = Array.from(new Set(version$1));
		return function(target, key, descriptor) {
			Reflect.defineMetadata(constants_1$12.VERSION_METADATA, version$1, descriptor.value);
			return descriptor;
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/index.js
var require_core$1 = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/core/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$35 = __require("tslib");
	tslib_1$35.__exportStar(require_bind_decorator(), exports);
	tslib_1$35.__exportStar(require_catch_decorator(), exports);
	tslib_1$35.__exportStar(require_controller_decorator(), exports);
	tslib_1$35.__exportStar(require_dependencies_decorator(), exports);
	tslib_1$35.__exportStar(require_exception_filters_decorator(), exports);
	tslib_1$35.__exportStar(require_inject_decorator(), exports);
	tslib_1$35.__exportStar(require_injectable_decorator(), exports);
	tslib_1$35.__exportStar(require_optional_decorator(), exports);
	tslib_1$35.__exportStar(require_set_metadata_decorator(), exports);
	tslib_1$35.__exportStar(require_use_guards_decorator(), exports);
	tslib_1$35.__exportStar(require_use_interceptors_decorator(), exports);
	tslib_1$35.__exportStar(require_use_pipes_decorator(), exports);
	tslib_1$35.__exportStar(require_apply_decorators(), exports);
	tslib_1$35.__exportStar(require_version_decorator(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/modules/global.decorator.js
var require_global_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/modules/global.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Global = Global;
	const constants_1$11 = require_constants$2();
	/**
	* Decorator that makes a module global-scoped.
	*
	* Once imported into any module, a global-scoped module will be visible
	* in all modules. Thereafter, modules that wish to inject a service exported
	* from a global module do not need to import the provider module.
	*
	* @see [Global modules](https://docs.nestjs.com/modules#global-modules)
	*
	* @publicApi
	*/
	function Global() {
		return function(target) {
			Reflect.defineMetadata(constants_1$11.GLOBAL_MODULE_METADATA, true, target);
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/validate-module-keys.util.js
var require_validate_module_keys_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/validate-module-keys.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.INVALID_MODULE_CONFIG_MESSAGE = void 0;
	exports.validateModuleKeys = validateModuleKeys;
	const constants_1$10 = require_constants$2();
	const INVALID_MODULE_CONFIG_MESSAGE = function(text, property) {
		return `Invalid property '${property}' passed into the @Module() decorator.`;
	};
	exports.INVALID_MODULE_CONFIG_MESSAGE = INVALID_MODULE_CONFIG_MESSAGE;
	const metadataKeys = [
		constants_1$10.MODULE_METADATA.IMPORTS,
		constants_1$10.MODULE_METADATA.EXPORTS,
		constants_1$10.MODULE_METADATA.CONTROLLERS,
		constants_1$10.MODULE_METADATA.PROVIDERS
	];
	function validateModuleKeys(keys) {
		const validateKey = function(key) {
			if (metadataKeys.includes(key)) return;
			throw new Error((0, exports.INVALID_MODULE_CONFIG_MESSAGE)`${key}`);
		};
		keys.forEach(validateKey);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/modules/module.decorator.js
var require_module_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/modules/module.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Module = Module;
	const validate_module_keys_util_1 = require_validate_module_keys_util();
	/**
	* Decorator that marks a class as a [module](https://docs.nestjs.com/modules).
	*
	* Modules are used by Nest to organize the application structure into scopes. Controllers
	* and Providers are scoped by the module they are declared in. Modules and their
	* classes (Controllers and Providers) form a graph that determines how Nest
	* performs [Dependency Injection (DI)](https://docs.nestjs.com/providers#dependency-injection).
	*
	* @param metadata module configuration metadata
	*
	* @see [Modules](https://docs.nestjs.com/modules)
	*
	* @publicApi
	*/
	function Module(metadata$1) {
		const propsKeys = Object.keys(metadata$1);
		(0, validate_module_keys_util_1.validateModuleKeys)(propsKeys);
		return function(target) {
			for (const property in metadata$1) if (Object.hasOwnProperty.call(metadata$1, property)) Reflect.defineMetadata(property, metadata$1[property], target);
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/modules/index.js
var require_modules$1 = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/modules/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$34 = __require("tslib");
	tslib_1$34.__exportStar(require_global_decorator(), exports);
	tslib_1$34.__exportStar(require_module_decorator(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/request-method.enum.js
var require_request_method_enum = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/request-method.enum.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.RequestMethod = void 0;
	var RequestMethod;
	(function(RequestMethod$1) {
		RequestMethod$1[RequestMethod$1["GET"] = 0] = "GET";
		RequestMethod$1[RequestMethod$1["POST"] = 1] = "POST";
		RequestMethod$1[RequestMethod$1["PUT"] = 2] = "PUT";
		RequestMethod$1[RequestMethod$1["DELETE"] = 3] = "DELETE";
		RequestMethod$1[RequestMethod$1["PATCH"] = 4] = "PATCH";
		RequestMethod$1[RequestMethod$1["ALL"] = 5] = "ALL";
		RequestMethod$1[RequestMethod$1["OPTIONS"] = 6] = "OPTIONS";
		RequestMethod$1[RequestMethod$1["HEAD"] = 7] = "HEAD";
		RequestMethod$1[RequestMethod$1["SEARCH"] = 8] = "SEARCH";
		RequestMethod$1[RequestMethod$1["PROPFIND"] = 9] = "PROPFIND";
		RequestMethod$1[RequestMethod$1["PROPPATCH"] = 10] = "PROPPATCH";
		RequestMethod$1[RequestMethod$1["MKCOL"] = 11] = "MKCOL";
		RequestMethod$1[RequestMethod$1["COPY"] = 12] = "COPY";
		RequestMethod$1[RequestMethod$1["MOVE"] = 13] = "MOVE";
		RequestMethod$1[RequestMethod$1["LOCK"] = 14] = "LOCK";
		RequestMethod$1[RequestMethod$1["UNLOCK"] = 15] = "UNLOCK";
	})(RequestMethod || (exports.RequestMethod = RequestMethod = {}));
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/request-mapping.decorator.js
var require_request_mapping_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/request-mapping.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Unlock = exports.Lock = exports.Move = exports.Copy = exports.Mkcol = exports.Proppatch = exports.Propfind = exports.Search = exports.All = exports.Head = exports.Options = exports.Patch = exports.Put = exports.Delete = exports.Get = exports.Post = exports.RequestMapping = void 0;
	const constants_1$9 = require_constants$2();
	const request_method_enum_1$1 = require_request_method_enum();
	const defaultMetadata = {
		[constants_1$9.PATH_METADATA]: "/",
		[constants_1$9.METHOD_METADATA]: request_method_enum_1$1.RequestMethod.GET
	};
	const RequestMapping = function(metadata$1 = defaultMetadata) {
		const pathMetadata = metadata$1[constants_1$9.PATH_METADATA];
		const path = pathMetadata && pathMetadata.length ? pathMetadata : "/";
		const requestMethod = metadata$1[constants_1$9.METHOD_METADATA] || request_method_enum_1$1.RequestMethod.GET;
		return function(target, key, descriptor) {
			Reflect.defineMetadata(constants_1$9.PATH_METADATA, path, descriptor.value);
			Reflect.defineMetadata(constants_1$9.METHOD_METADATA, requestMethod, descriptor.value);
			return descriptor;
		};
	};
	exports.RequestMapping = RequestMapping;
	const createMappingDecorator = function(method) {
		return function(path) {
			return (0, exports.RequestMapping)({
				[constants_1$9.PATH_METADATA]: path,
				[constants_1$9.METHOD_METADATA]: method
			});
		};
	};
	/**
	* Route handler (method) Decorator. Routes HTTP POST requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Post = createMappingDecorator(request_method_enum_1$1.RequestMethod.POST);
	/**
	* Route handler (method) Decorator. Routes HTTP GET requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Get = createMappingDecorator(request_method_enum_1$1.RequestMethod.GET);
	/**
	* Route handler (method) Decorator. Routes HTTP DELETE requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Delete = createMappingDecorator(request_method_enum_1$1.RequestMethod.DELETE);
	/**
	* Route handler (method) Decorator. Routes HTTP PUT requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Put = createMappingDecorator(request_method_enum_1$1.RequestMethod.PUT);
	/**
	* Route handler (method) Decorator. Routes HTTP PATCH requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Patch = createMappingDecorator(request_method_enum_1$1.RequestMethod.PATCH);
	/**
	* Route handler (method) Decorator. Routes HTTP OPTIONS requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Options = createMappingDecorator(request_method_enum_1$1.RequestMethod.OPTIONS);
	/**
	* Route handler (method) Decorator. Routes HTTP HEAD requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Head = createMappingDecorator(request_method_enum_1$1.RequestMethod.HEAD);
	/**
	* Route handler (method) Decorator. Routes all HTTP requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.All = createMappingDecorator(request_method_enum_1$1.RequestMethod.ALL);
	/**
	* Route handler (method) Decorator. Routes HTTP SEARCH requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Search = createMappingDecorator(request_method_enum_1$1.RequestMethod.SEARCH);
	/**
	* Route handler (method) Decorator. Routes Webdav PROPFIND requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Propfind = createMappingDecorator(request_method_enum_1$1.RequestMethod.PROPFIND);
	/**
	* Route handler (method) Decorator. Routes Webdav PROPPATCH requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Proppatch = createMappingDecorator(request_method_enum_1$1.RequestMethod.PROPPATCH);
	/**
	* Route handler (method) Decorator. Routes Webdav MKCOL requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Mkcol = createMappingDecorator(request_method_enum_1$1.RequestMethod.MKCOL);
	/**
	* Route handler (method) Decorator. Routes Webdav COPY requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Copy = createMappingDecorator(request_method_enum_1$1.RequestMethod.COPY);
	/**
	* Route handler (method) Decorator. Routes Webdav MOVE requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Move = createMappingDecorator(request_method_enum_1$1.RequestMethod.MOVE);
	/**
	* Route handler (method) Decorator. Routes Webdav LOCK requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Lock = createMappingDecorator(request_method_enum_1$1.RequestMethod.LOCK);
	/**
	* Route handler (method) Decorator. Routes Webdav UNLOCK requests to the specified path.
	*
	* @see [Routing](https://docs.nestjs.com/controllers#routing)
	*
	* @publicApi
	*/
	exports.Unlock = createMappingDecorator(request_method_enum_1$1.RequestMethod.UNLOCK);
} });

//#endregion
//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.76.0/node_modules/@oxc-project/runtime/src/helpers/objectSpread2.js
var require_objectSpread2 = __commonJS({ "../../node_modules/.pnpm/@oxc-project+runtime@0.76.0/node_modules/@oxc-project/runtime/src/helpers/objectSpread2.js"(exports, module) {
	var defineProperty = require_defineProperty();
	function ownKeys$10(e, r) {
		var t = Object.keys(e);
		if (Object.getOwnPropertySymbols) {
			var o = Object.getOwnPropertySymbols(e);
			r && (o = o.filter(function(r$1) {
				return Object.getOwnPropertyDescriptor(e, r$1).enumerable;
			})), t.push.apply(t, o);
		}
		return t;
	}
	function _objectSpread2(e) {
		for (var r = 1; r < arguments.length; r++) {
			var t = null != arguments[r] ? arguments[r] : {};
			r % 2 ? ownKeys$10(Object(t), !0).forEach(function(r$1) {
				defineProperty(e, r$1, t[r$1]);
			}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$10(Object(t)).forEach(function(r$1) {
				Object.defineProperty(e, r$1, Object.getOwnPropertyDescriptor(t, r$1));
			});
		}
		return e;
	}
	module.exports = _objectSpread2, module.exports.__esModule = true, module.exports["default"] = module.exports;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/route-paramtypes.enum.js
var require_route_paramtypes_enum = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/route-paramtypes.enum.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.RouteParamtypes = void 0;
	var RouteParamtypes;
	(function(RouteParamtypes$1) {
		RouteParamtypes$1[RouteParamtypes$1["REQUEST"] = 0] = "REQUEST";
		RouteParamtypes$1[RouteParamtypes$1["RESPONSE"] = 1] = "RESPONSE";
		RouteParamtypes$1[RouteParamtypes$1["NEXT"] = 2] = "NEXT";
		RouteParamtypes$1[RouteParamtypes$1["BODY"] = 3] = "BODY";
		RouteParamtypes$1[RouteParamtypes$1["QUERY"] = 4] = "QUERY";
		RouteParamtypes$1[RouteParamtypes$1["PARAM"] = 5] = "PARAM";
		RouteParamtypes$1[RouteParamtypes$1["HEADERS"] = 6] = "HEADERS";
		RouteParamtypes$1[RouteParamtypes$1["SESSION"] = 7] = "SESSION";
		RouteParamtypes$1[RouteParamtypes$1["FILE"] = 8] = "FILE";
		RouteParamtypes$1[RouteParamtypes$1["FILES"] = 9] = "FILES";
		RouteParamtypes$1[RouteParamtypes$1["HOST"] = 10] = "HOST";
		RouteParamtypes$1[RouteParamtypes$1["IP"] = 11] = "IP";
		RouteParamtypes$1[RouteParamtypes$1["RAW_BODY"] = 12] = "RAW_BODY";
	})(RouteParamtypes || (exports.RouteParamtypes = RouteParamtypes = {}));
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/route-params.decorator.js
var require_route_params_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/route-params.decorator.js"(exports) {
	var import_objectSpread2$8 = __toESM(require_objectSpread2());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Res = exports.Req = exports.Headers = exports.Session = exports.Ip = exports.Next = exports.Response = exports.Request = void 0;
	exports.assignMetadata = assignMetadata;
	exports.UploadedFile = UploadedFile;
	exports.UploadedFiles = UploadedFiles;
	exports.Query = Query;
	exports.Body = Body;
	exports.RawBody = RawBody;
	exports.Param = Param;
	exports.HostParam = HostParam;
	const constants_1$8 = require_constants$2();
	const route_paramtypes_enum_1 = require_route_paramtypes_enum();
	const shared_utils_1$17 = require_shared_utils();
	function assignMetadata(args, paramtype, index, data, ...pipes) {
		return (0, import_objectSpread2$8.default)((0, import_objectSpread2$8.default)({}, args), {}, { [`${paramtype}:${index}`]: {
			index,
			data,
			pipes
		} });
	}
	function createRouteParamDecorator(paramtype) {
		return function(data) {
			return function(target, key, index) {
				const args = Reflect.getMetadata(constants_1$8.ROUTE_ARGS_METADATA, target.constructor, key) || {};
				Reflect.defineMetadata(constants_1$8.ROUTE_ARGS_METADATA, assignMetadata(args, paramtype, index, data), target.constructor, key);
			};
		};
	}
	const createPipesRouteParamDecorator = function(paramtype) {
		return function(data, ...pipes) {
			return function(target, key, index) {
				const args = Reflect.getMetadata(constants_1$8.ROUTE_ARGS_METADATA, target.constructor, key) || {};
				const hasParamData = (0, shared_utils_1$17.isNil)(data) || (0, shared_utils_1$17.isString)(data);
				const paramData = hasParamData ? data : void 0;
				const paramPipes = hasParamData ? pipes : [data, ...pipes];
				Reflect.defineMetadata(constants_1$8.ROUTE_ARGS_METADATA, assignMetadata(args, paramtype, index, paramData, ...paramPipes), target.constructor, key);
			};
		};
	};
	/**
	* Route handler parameter decorator. Extracts the `Request`
	* object from the underlying platform and populates the decorated
	* parameter with the value of `Request`.
	*
	* Example: `logout(@Request() req)`
	*
	* @see [Request object](https://docs.nestjs.com/controllers#request-object)
	*
	* @publicApi
	*/
	exports.Request = createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.REQUEST);
	/**
	* Route handler parameter decorator. Extracts the `Response`
	* object from the underlying platform and populates the decorated
	* parameter with the value of `Response`.
	*
	* Example: `logout(@Response() res)`
	*
	* @publicApi
	*/
	const Response = function(options) {
		return function(target, key, index) {
			if (options === null || options === void 0 ? void 0 : options.passthrough) Reflect.defineMetadata(constants_1$8.RESPONSE_PASSTHROUGH_METADATA, options === null || options === void 0 ? void 0 : options.passthrough, target.constructor, key);
			return createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.RESPONSE)()(target, key, index);
		};
	};
	exports.Response = Response;
	/**
	* Route handler parameter decorator. Extracts reference to the `Next` function
	* from the underlying platform and populates the decorated
	* parameter with the value of `Next`.
	*
	* @publicApi
	*/
	exports.Next = createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.NEXT);
	/**
	* Route handler parameter decorator. Extracts the `Ip` property
	* from the `req` object and populates the decorated
	* parameter with the value of `ip`.
	*
	* @see [Request object](https://docs.nestjs.com/controllers#request-object)
	*
	* @publicApi
	*/
	exports.Ip = createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.IP);
	/**
	* Route handler parameter decorator. Extracts the `Session` object
	* from the underlying platform and populates the decorated
	* parameter with the value of `Session`.
	*
	* @see [Request object](https://docs.nestjs.com/controllers#request-object)
	*
	* @publicApi
	*/
	exports.Session = createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.SESSION);
	/**
	* Route handler parameter decorator. Extracts the `file` object
	* and populates the decorated parameter with the value of `file`.
	* Used in conjunction with
	* [multer middleware](https://github.com/expressjs/multer) for Express-based applications.
	*
	* For example:
	* ```typescript
	* uploadFile(@UploadedFile() file) {
	*   console.log(file);
	* }
	* ```
	* @see [Request object](https://docs.nestjs.com/techniques/file-upload)
	*
	* @publicApi
	*/
	function UploadedFile(fileKey, ...pipes) {
		return createPipesRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.FILE)(fileKey, ...pipes);
	}
	/**
	* Route handler parameter decorator. Extracts the `files` object
	* and populates the decorated parameter with the value of `files`.
	* Used in conjunction with
	* [multer middleware](https://github.com/expressjs/multer) for Express-based applications.
	*
	* For example:
	* ```typescript
	* uploadFile(@UploadedFiles() files) {
	*   console.log(files);
	* }
	* ```
	* @see [Request object](https://docs.nestjs.com/techniques/file-upload)
	*
	* @publicApi
	*/
	function UploadedFiles(...pipes) {
		return createPipesRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.FILES)(void 0, ...pipes);
	}
	/**
	* Route handler parameter decorator. Extracts the `headers`
	* property from the `req` object and populates the decorated
	* parameter with the value of `headers`.
	*
	* For example: `async update(@Headers('Cache-Control') cacheControl: string)`
	*
	* @param property name of single header property to extract.
	*
	* @see [Request object](https://docs.nestjs.com/controllers#request-object)
	*
	* @publicApi
	*/
	exports.Headers = createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.HEADERS);
	/**
	* Route handler parameter decorator. Extracts the `query`
	* property from the `req` object and populates the decorated
	* parameter with the value of `query`. May also apply pipes to the bound
	* query parameter.
	*
	* For example:
	* ```typescript
	* async find(@Query('user') user: string)
	* ```
	*
	* @param property name of single property to extract from the `query` object
	* @param pipes one or more pipes to apply to the bound query parameter
	*
	* @see [Request object](https://docs.nestjs.com/controllers#request-object)
	*
	* @publicApi
	*/
	function Query(property, ...pipes) {
		return createPipesRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.QUERY)(property, ...pipes);
	}
	/**
	* Route handler parameter decorator. Extracts the entire `body` object
	* property, or optionally a named property of the `body` object, from
	* the `req` object and populates the decorated parameter with that value.
	* Also applies pipes to the bound body parameter.
	*
	* For example:
	* ```typescript
	* async create(@Body('role', new ValidationPipe()) role: string)
	* ```
	*
	* @param property name of single property to extract from the `body` object
	* @param pipes one or more pipes - either instances or classes - to apply to
	* the bound body parameter.
	*
	* @see [Request object](https://docs.nestjs.com/controllers#request-object)
	* @see [Working with pipes](https://docs.nestjs.com/custom-decorators#working-with-pipes)
	*
	* @publicApi
	*/
	function Body(property, ...pipes) {
		return createPipesRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.BODY)(property, ...pipes);
	}
	/**
	* Route handler parameter decorator. Extracts the `rawBody` Buffer
	* property from the `req` object and populates the decorated parameter with that value.
	* Also applies pipes to the bound rawBody parameter.
	*
	* For example:
	* ```typescript
	* async create(@RawBody(new ValidationPipe()) rawBody: Buffer)
	* ```
	*
	* @param pipes one or more pipes - either instances or classes - to apply to
	* the bound body parameter.
	*
	* @see [Request object](https://docs.nestjs.com/controllers#request-object)
	* @see [Raw body](https://docs.nestjs.com/faq/raw-body)
	* @see [Working with pipes](https://docs.nestjs.com/custom-decorators#working-with-pipes)
	*
	* @publicApi
	*/
	function RawBody(...pipes) {
		return createPipesRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.RAW_BODY)(void 0, ...pipes);
	}
	/**
	* Route handler parameter decorator. Extracts the `params`
	* property from the `req` object and populates the decorated
	* parameter with the value of `params`. May also apply pipes to the bound
	* parameter.
	*
	* For example, extracting all params:
	* ```typescript
	* findOne(@Param() params: string[])
	* ```
	*
	* For example, extracting a single param:
	* ```typescript
	* findOne(@Param('id') id: string)
	* ```
	* @param property name of single property to extract from the `req` object
	* @param pipes one or more pipes - either instances or classes - to apply to
	* the bound parameter.
	*
	* @see [Request object](https://docs.nestjs.com/controllers#request-object)
	* @see [Working with pipes](https://docs.nestjs.com/custom-decorators#working-with-pipes)
	*
	* @publicApi
	*/
	function Param(property, ...pipes) {
		return createPipesRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.PARAM)(property, ...pipes);
	}
	/**
	* Route handler parameter decorator. Extracts the `hosts`
	* property from the `req` object and populates the decorated
	* parameter with the value of `params`. May also apply pipes to the bound
	* parameter.
	*
	* For example, extracting all params:
	* ```typescript
	* findOne(@HostParam() params: string[])
	* ```
	*
	* For example, extracting a single param:
	* ```typescript
	* findOne(@HostParam('id') id: string)
	* ```
	* @param property name of single property to extract from the `req` object
	*
	* @see [Request object](https://docs.nestjs.com/controllers#request-object)
	*
	* @publicApi
	*/
	function HostParam(property) {
		return createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.HOST)(property);
	}
	exports.Req = exports.Request;
	exports.Res = exports.Response;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/http-code.decorator.js
var require_http_code_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/http-code.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.HttpCode = HttpCode;
	const constants_1$7 = require_constants$2();
	/**
	* Request method Decorator.  Defines the HTTP response status code.  Overrides
	* default status code for the decorated request method.
	*
	* @param statusCode HTTP response code to be returned by route handler.
	*
	* @see [Http Status Codes](https://docs.nestjs.com/controllers#status-code)
	*
	* @publicApi
	*/
	function HttpCode(statusCode) {
		return function(target, key, descriptor) {
			Reflect.defineMetadata(constants_1$7.HTTP_CODE_METADATA, statusCode, descriptor.value);
			return descriptor;
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/assign-custom-metadata.util.js
var require_assign_custom_metadata_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/assign-custom-metadata.util.js"(exports) {
	var import_objectSpread2$7 = __toESM(require_objectSpread2());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.assignCustomParameterMetadata = assignCustomParameterMetadata;
	const constants_1$6 = require_constants$2();
	function assignCustomParameterMetadata(args, paramtype, index, factory, data, ...pipes) {
		return (0, import_objectSpread2$7.default)((0, import_objectSpread2$7.default)({}, args), {}, { [`${paramtype}${constants_1$6.CUSTOM_ROUTE_ARGS_METADATA}:${index}`]: {
			index,
			factory,
			data,
			pipes
		} });
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/create-route-param-metadata.decorator.js
var require_create_route_param_metadata_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/create-route-param-metadata.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.createParamDecorator = createParamDecorator;
	const uid_1$1 = require_dist();
	const constants_1$5 = require_constants$2();
	const assign_custom_metadata_util_1 = require_assign_custom_metadata_util();
	const shared_utils_1$16 = require_shared_utils();
	/**
	* Defines HTTP route param decorator
	*
	* @param factory
	* @param enhancers
	*
	* @publicApi
	*/
	function createParamDecorator(factory, enhancers = []) {
		const paramtype = (0, uid_1$1.uid)(21);
		return function(data, ...pipes) {
			return function(target, key, index) {
				const args = Reflect.getMetadata(constants_1$5.ROUTE_ARGS_METADATA, target.constructor, key) || {};
				const isPipe = function(pipe$1) {
					return pipe$1 && ((0, shared_utils_1$16.isFunction)(pipe$1) && pipe$1.prototype && (0, shared_utils_1$16.isFunction)(pipe$1.prototype.transform) || (0, shared_utils_1$16.isFunction)(pipe$1.transform));
				};
				const hasParamData = (0, shared_utils_1$16.isNil)(data) || !isPipe(data);
				const paramData = hasParamData ? data : void 0;
				const paramPipes = hasParamData ? pipes : [data, ...pipes];
				Reflect.defineMetadata(constants_1$5.ROUTE_ARGS_METADATA, (0, assign_custom_metadata_util_1.assignCustomParameterMetadata)(args, paramtype, index, factory, paramData, ...paramPipes), target.constructor, key);
				enhancers.forEach(function(fn) {
					return fn(target, key, index);
				});
			};
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/render.decorator.js
var require_render_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/render.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Render = Render;
	const constants_1$4 = require_constants$2();
	/**
	* Route handler method Decorator.  Defines a template to be rendered by the controller.
	*
	* For example: `@Render('index')`
	*
	* @param template name of the render engine template file
	*
	* @see [Model-View-Controller](https://docs.nestjs.com/techniques/mvc)
	*
	* @publicApi
	*/
	function Render(template) {
		return function(target, key, descriptor) {
			Reflect.defineMetadata(constants_1$4.RENDER_METADATA, template, descriptor.value);
			return descriptor;
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/header.decorator.js
var require_header_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/header.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Header = Header;
	const constants_1$3 = require_constants$2();
	const extend_metadata_util_1 = require_extend_metadata_util();
	/**
	* Request method Decorator.  Sets a response header.
	*
	* For example:
	* `@Header('Cache-Control', 'none')`
	* `@Header('Cache-Control', () => 'none')`
	*
	* @param name string to be used for header name
	* @param value string to be used for header value
	*
	* @see [Headers](https://docs.nestjs.com/controllers#headers)
	*
	* @publicApi
	*/
	function Header(name, value) {
		return function(target, key, descriptor) {
			(0, extend_metadata_util_1.extendArrayMetadata)(constants_1$3.HEADERS_METADATA, [{
				name,
				value
			}], descriptor.value);
			return descriptor;
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/redirect.decorator.js
var require_redirect_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/redirect.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Redirect = Redirect;
	const constants_1$2 = require_constants$2();
	/**
	* Redirects request to the specified URL.
	*
	* @publicApi
	*/
	function Redirect(url = "", statusCode) {
		return function(target, key, descriptor) {
			Reflect.defineMetadata(constants_1$2.REDIRECT_METADATA, {
				statusCode,
				url
			}, descriptor.value);
			return descriptor;
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/sse.decorator.js
var require_sse_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/sse.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Sse = Sse;
	const constants_1$1 = require_constants$2();
	const request_method_enum_1 = require_request_method_enum();
	/**
	* Declares this route as a Server-Sent-Events endpoint
	*
	* @publicApi
	*/
	function Sse(path) {
		return function(target, key, descriptor) {
			path = path && path.length ? path : "/";
			Reflect.defineMetadata(constants_1$1.PATH_METADATA, path, descriptor.value);
			Reflect.defineMetadata(constants_1$1.METHOD_METADATA, request_method_enum_1.RequestMethod.GET, descriptor.value);
			Reflect.defineMetadata(constants_1$1.SSE_METADATA, true, descriptor.value);
			return descriptor;
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/index.js
var require_http$1 = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/http/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$33 = __require("tslib");
	tslib_1$33.__exportStar(require_request_mapping_decorator(), exports);
	tslib_1$33.__exportStar(require_route_params_decorator(), exports);
	tslib_1$33.__exportStar(require_http_code_decorator(), exports);
	tslib_1$33.__exportStar(require_create_route_param_metadata_decorator(), exports);
	tslib_1$33.__exportStar(require_render_decorator(), exports);
	tslib_1$33.__exportStar(require_header_decorator(), exports);
	tslib_1$33.__exportStar(require_redirect_decorator(), exports);
	tslib_1$33.__exportStar(require_sse_decorator(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/index.js
var require_decorators$3 = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/decorators/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$32 = __require("tslib");
	tslib_1$32.__exportStar(require_core$1(), exports);
	tslib_1$32.__exportStar(require_modules$1(), exports);
	tslib_1$32.__exportStar(require_http$1(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/http-status.enum.js
var require_http_status_enum = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/http-status.enum.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.HttpStatus = void 0;
	/**
	* @publicApi
	*/
	var HttpStatus;
	(function(HttpStatus$1) {
		HttpStatus$1[HttpStatus$1["CONTINUE"] = 100] = "CONTINUE";
		HttpStatus$1[HttpStatus$1["SWITCHING_PROTOCOLS"] = 101] = "SWITCHING_PROTOCOLS";
		HttpStatus$1[HttpStatus$1["PROCESSING"] = 102] = "PROCESSING";
		HttpStatus$1[HttpStatus$1["EARLYHINTS"] = 103] = "EARLYHINTS";
		HttpStatus$1[HttpStatus$1["OK"] = 200] = "OK";
		HttpStatus$1[HttpStatus$1["CREATED"] = 201] = "CREATED";
		HttpStatus$1[HttpStatus$1["ACCEPTED"] = 202] = "ACCEPTED";
		HttpStatus$1[HttpStatus$1["NON_AUTHORITATIVE_INFORMATION"] = 203] = "NON_AUTHORITATIVE_INFORMATION";
		HttpStatus$1[HttpStatus$1["NO_CONTENT"] = 204] = "NO_CONTENT";
		HttpStatus$1[HttpStatus$1["RESET_CONTENT"] = 205] = "RESET_CONTENT";
		HttpStatus$1[HttpStatus$1["PARTIAL_CONTENT"] = 206] = "PARTIAL_CONTENT";
		HttpStatus$1[HttpStatus$1["MULTI_STATUS"] = 207] = "MULTI_STATUS";
		HttpStatus$1[HttpStatus$1["ALREADY_REPORTED"] = 208] = "ALREADY_REPORTED";
		HttpStatus$1[HttpStatus$1["CONTENT_DIFFERENT"] = 210] = "CONTENT_DIFFERENT";
		HttpStatus$1[HttpStatus$1["AMBIGUOUS"] = 300] = "AMBIGUOUS";
		HttpStatus$1[HttpStatus$1["MOVED_PERMANENTLY"] = 301] = "MOVED_PERMANENTLY";
		HttpStatus$1[HttpStatus$1["FOUND"] = 302] = "FOUND";
		HttpStatus$1[HttpStatus$1["SEE_OTHER"] = 303] = "SEE_OTHER";
		HttpStatus$1[HttpStatus$1["NOT_MODIFIED"] = 304] = "NOT_MODIFIED";
		HttpStatus$1[HttpStatus$1["TEMPORARY_REDIRECT"] = 307] = "TEMPORARY_REDIRECT";
		HttpStatus$1[HttpStatus$1["PERMANENT_REDIRECT"] = 308] = "PERMANENT_REDIRECT";
		HttpStatus$1[HttpStatus$1["BAD_REQUEST"] = 400] = "BAD_REQUEST";
		HttpStatus$1[HttpStatus$1["UNAUTHORIZED"] = 401] = "UNAUTHORIZED";
		HttpStatus$1[HttpStatus$1["PAYMENT_REQUIRED"] = 402] = "PAYMENT_REQUIRED";
		HttpStatus$1[HttpStatus$1["FORBIDDEN"] = 403] = "FORBIDDEN";
		HttpStatus$1[HttpStatus$1["NOT_FOUND"] = 404] = "NOT_FOUND";
		HttpStatus$1[HttpStatus$1["METHOD_NOT_ALLOWED"] = 405] = "METHOD_NOT_ALLOWED";
		HttpStatus$1[HttpStatus$1["NOT_ACCEPTABLE"] = 406] = "NOT_ACCEPTABLE";
		HttpStatus$1[HttpStatus$1["PROXY_AUTHENTICATION_REQUIRED"] = 407] = "PROXY_AUTHENTICATION_REQUIRED";
		HttpStatus$1[HttpStatus$1["REQUEST_TIMEOUT"] = 408] = "REQUEST_TIMEOUT";
		HttpStatus$1[HttpStatus$1["CONFLICT"] = 409] = "CONFLICT";
		HttpStatus$1[HttpStatus$1["GONE"] = 410] = "GONE";
		HttpStatus$1[HttpStatus$1["LENGTH_REQUIRED"] = 411] = "LENGTH_REQUIRED";
		HttpStatus$1[HttpStatus$1["PRECONDITION_FAILED"] = 412] = "PRECONDITION_FAILED";
		HttpStatus$1[HttpStatus$1["PAYLOAD_TOO_LARGE"] = 413] = "PAYLOAD_TOO_LARGE";
		HttpStatus$1[HttpStatus$1["URI_TOO_LONG"] = 414] = "URI_TOO_LONG";
		HttpStatus$1[HttpStatus$1["UNSUPPORTED_MEDIA_TYPE"] = 415] = "UNSUPPORTED_MEDIA_TYPE";
		HttpStatus$1[HttpStatus$1["REQUESTED_RANGE_NOT_SATISFIABLE"] = 416] = "REQUESTED_RANGE_NOT_SATISFIABLE";
		HttpStatus$1[HttpStatus$1["EXPECTATION_FAILED"] = 417] = "EXPECTATION_FAILED";
		HttpStatus$1[HttpStatus$1["I_AM_A_TEAPOT"] = 418] = "I_AM_A_TEAPOT";
		HttpStatus$1[HttpStatus$1["MISDIRECTED"] = 421] = "MISDIRECTED";
		HttpStatus$1[HttpStatus$1["UNPROCESSABLE_ENTITY"] = 422] = "UNPROCESSABLE_ENTITY";
		HttpStatus$1[HttpStatus$1["LOCKED"] = 423] = "LOCKED";
		HttpStatus$1[HttpStatus$1["FAILED_DEPENDENCY"] = 424] = "FAILED_DEPENDENCY";
		HttpStatus$1[HttpStatus$1["PRECONDITION_REQUIRED"] = 428] = "PRECONDITION_REQUIRED";
		HttpStatus$1[HttpStatus$1["TOO_MANY_REQUESTS"] = 429] = "TOO_MANY_REQUESTS";
		HttpStatus$1[HttpStatus$1["UNRECOVERABLE_ERROR"] = 456] = "UNRECOVERABLE_ERROR";
		HttpStatus$1[HttpStatus$1["INTERNAL_SERVER_ERROR"] = 500] = "INTERNAL_SERVER_ERROR";
		HttpStatus$1[HttpStatus$1["NOT_IMPLEMENTED"] = 501] = "NOT_IMPLEMENTED";
		HttpStatus$1[HttpStatus$1["BAD_GATEWAY"] = 502] = "BAD_GATEWAY";
		HttpStatus$1[HttpStatus$1["SERVICE_UNAVAILABLE"] = 503] = "SERVICE_UNAVAILABLE";
		HttpStatus$1[HttpStatus$1["GATEWAY_TIMEOUT"] = 504] = "GATEWAY_TIMEOUT";
		HttpStatus$1[HttpStatus$1["HTTP_VERSION_NOT_SUPPORTED"] = 505] = "HTTP_VERSION_NOT_SUPPORTED";
		HttpStatus$1[HttpStatus$1["INSUFFICIENT_STORAGE"] = 507] = "INSUFFICIENT_STORAGE";
		HttpStatus$1[HttpStatus$1["LOOP_DETECTED"] = 508] = "LOOP_DETECTED";
	})(HttpStatus || (exports.HttpStatus = HttpStatus = {}));
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/shutdown-signal.enum.js
var require_shutdown_signal_enum = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/shutdown-signal.enum.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ShutdownSignal = void 0;
	/**
	* System signals which shut down a process
	*/
	var ShutdownSignal;
	(function(ShutdownSignal$1) {
		ShutdownSignal$1["SIGHUP"] = "SIGHUP";
		ShutdownSignal$1["SIGINT"] = "SIGINT";
		ShutdownSignal$1["SIGQUIT"] = "SIGQUIT";
		ShutdownSignal$1["SIGILL"] = "SIGILL";
		ShutdownSignal$1["SIGTRAP"] = "SIGTRAP";
		ShutdownSignal$1["SIGABRT"] = "SIGABRT";
		ShutdownSignal$1["SIGBUS"] = "SIGBUS";
		ShutdownSignal$1["SIGFPE"] = "SIGFPE";
		ShutdownSignal$1["SIGSEGV"] = "SIGSEGV";
		ShutdownSignal$1["SIGUSR2"] = "SIGUSR2";
		ShutdownSignal$1["SIGTERM"] = "SIGTERM";
	})(ShutdownSignal || (exports.ShutdownSignal = ShutdownSignal = {}));
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/version-type.enum.js
var require_version_type_enum = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/version-type.enum.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.VersioningType = void 0;
	/**
	* @publicApi
	*/
	var VersioningType;
	(function(VersioningType$1) {
		VersioningType$1[VersioningType$1["URI"] = 0] = "URI";
		VersioningType$1[VersioningType$1["HEADER"] = 1] = "HEADER";
		VersioningType$1[VersioningType$1["MEDIA_TYPE"] = 2] = "MEDIA_TYPE";
		VersioningType$1[VersioningType$1["CUSTOM"] = 3] = "CUSTOM";
	})(VersioningType || (exports.VersioningType = VersioningType = {}));
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/index.js
var require_enums$1 = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/enums/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$31 = __require("tslib");
	tslib_1$31.__exportStar(require_request_method_enum(), exports);
	tslib_1$31.__exportStar(require_http_status_enum(), exports);
	tslib_1$31.__exportStar(require_shutdown_signal_enum(), exports);
	tslib_1$31.__exportStar(require_version_type_enum(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/intrinsic.exception.js
var require_intrinsic_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/intrinsic.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IntrinsicException = void 0;
	/**
	* Exception that represents an intrinsic error in the application.
	* When thrown, the default exception filter will not log the error message.
	*
	* @publicApi
	*/
	var IntrinsicException = class extends Error {};
	exports.IntrinsicException = IntrinsicException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/http.exception.js
var require_http_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/http.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.HttpException = void 0;
	const shared_utils_1$15 = require_shared_utils();
	const intrinsic_exception_1 = require_intrinsic_exception();
	/**
	* Defines the base Nest HTTP exception, which is handled by the default
	* Exceptions Handler.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var HttpException = class extends intrinsic_exception_1.IntrinsicException {
		/**
		* Instantiate a plain HTTP Exception.
		*
		* @example
		* throw new HttpException('message', HttpStatus.BAD_REQUEST)
		* throw new HttpException('custom message', HttpStatus.BAD_REQUEST, {
		*  cause: new Error('Cause Error'),
		* })
		*
		*
		* @usageNotes
		* The constructor arguments define the response and the HTTP response status code.
		* - The `response` argument (required) defines the JSON response body. alternatively, it can also be
		*  an error object that is used to define an error [cause](https://nodejs.org/en/blog/release/v16.9.0/#error-cause).
		* - The `status` argument (required) defines the HTTP Status Code.
		* - The `options` argument (optional) defines additional error options. Currently, it supports the `cause` attribute,
		*  and can be used as an alternative way to specify the error cause: `const error = new HttpException('description', 400, { cause: new Error() });`
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: the Http Status Code.
		* - `message`: a short description of the HTTP error by default; override this
		* by supplying a string in the `response` parameter.
		*
		* To override the entire JSON response body, pass an object to the `createBody`
		* method. Nest will serialize the object and return it as the JSON response body.
		*
		* The `status` argument is required, and should be a valid HTTP status code.
		* Best practice is to use the `HttpStatus` enum imported from `nestjs/common`.
		*
		* @param response string, object describing the error condition or the error cause.
		* @param status HTTP response status code.
		* @param options An object used to add an error cause.
		*/
		constructor(response, status, options) {
			super();
			this.response = response;
			this.status = status;
			this.options = options;
			this.initMessage();
			this.initName();
			this.initCause();
		}
		/**
		* Configures error chaining support
		*
		* @see https://nodejs.org/en/blog/release/v16.9.0/#error-cause
		* @see https://github.com/microsoft/TypeScript/issues/45167
		*/
		initCause() {
			var _this$options;
			if ((_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.cause) {
				this.cause = this.options.cause;
				return;
			}
		}
		initMessage() {
			if ((0, shared_utils_1$15.isString)(this.response)) this.message = this.response;
			else if ((0, shared_utils_1$15.isObject)(this.response) && (0, shared_utils_1$15.isString)(this.response.message)) this.message = this.response.message;
			else if (this.constructor) {
				var _this$constructor$nam, _this$constructor$nam2;
				this.message = (_this$constructor$nam = (_this$constructor$nam2 = this.constructor.name.match(/[A-Z][a-z]+|[0-9]+/g)) === null || _this$constructor$nam2 === void 0 ? void 0 : _this$constructor$nam2.join(" ")) !== null && _this$constructor$nam !== void 0 ? _this$constructor$nam : "Error";
			}
		}
		initName() {
			this.name = this.constructor.name;
		}
		getResponse() {
			return this.response;
		}
		getStatus() {
			return this.status;
		}
		static createBody(arg0, arg1, statusCode) {
			if (!arg0) return {
				message: arg1,
				statusCode
			};
			if ((0, shared_utils_1$15.isString)(arg0) || Array.isArray(arg0) || (0, shared_utils_1$15.isNumber)(arg0)) return {
				message: arg0,
				error: arg1,
				statusCode
			};
			return arg0;
		}
		static getDescriptionFrom(descriptionOrOptions) {
			return (0, shared_utils_1$15.isString)(descriptionOrOptions) ? descriptionOrOptions : descriptionOrOptions === null || descriptionOrOptions === void 0 ? void 0 : descriptionOrOptions.description;
		}
		static getHttpExceptionOptionsFrom(descriptionOrOptions) {
			return (0, shared_utils_1$15.isString)(descriptionOrOptions) ? {} : descriptionOrOptions;
		}
		/**
		* Utility method used to extract the error description and httpExceptionOptions from the given argument.
		* This is used by inheriting classes to correctly parse both options.
		* @returns the error description and the httpExceptionOptions as an object.
		*/
		static extractDescriptionAndOptionsFrom(descriptionOrOptions) {
			const description = (0, shared_utils_1$15.isString)(descriptionOrOptions) ? descriptionOrOptions : descriptionOrOptions === null || descriptionOrOptions === void 0 ? void 0 : descriptionOrOptions.description;
			const httpExceptionOptions = (0, shared_utils_1$15.isString)(descriptionOrOptions) ? {} : descriptionOrOptions;
			return {
				description,
				httpExceptionOptions
			};
		}
	};
	exports.HttpException = HttpException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/bad-gateway.exception.js
var require_bad_gateway_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/bad-gateway.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.BadGatewayException = void 0;
	const http_status_enum_1$26 = require_http_status_enum();
	const http_exception_1$20 = require_http_exception();
	/**
	* Defines an HTTP exception for *Bad Gateway* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var BadGatewayException = class extends http_exception_1$20.HttpException {
		/**
		* Instantiate a `BadGatewayException` Exception.
		*
		* @example
		* `throw new BadGatewayException()`
		*
		* @usageNotes
		* The HTTP response status code will be 502.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 502.
		* - `message`: the string `'Bad Gateway'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Bad Gateway") {
			const { description, httpExceptionOptions } = http_exception_1$20.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$20.HttpException.createBody(objectOrError, description, http_status_enum_1$26.HttpStatus.BAD_GATEWAY), http_status_enum_1$26.HttpStatus.BAD_GATEWAY, httpExceptionOptions);
		}
	};
	exports.BadGatewayException = BadGatewayException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/bad-request.exception.js
var require_bad_request_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/bad-request.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.BadRequestException = void 0;
	const http_status_enum_1$25 = require_http_status_enum();
	const http_exception_1$19 = require_http_exception();
	/**
	* Defines an HTTP exception for *Bad Request* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var BadRequestException = class extends http_exception_1$19.HttpException {
		/**
		* Instantiate a `BadRequestException` Exception.
		*
		* @example
		* `throw new BadRequestException()`
		*
		* @usageNotes
		* The HTTP response status code will be 400.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 400.
		* - `message`: the string `'Bad Request'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Bad Request") {
			const { description, httpExceptionOptions } = http_exception_1$19.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$19.HttpException.createBody(objectOrError, description, http_status_enum_1$25.HttpStatus.BAD_REQUEST), http_status_enum_1$25.HttpStatus.BAD_REQUEST, httpExceptionOptions);
		}
	};
	exports.BadRequestException = BadRequestException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/conflict.exception.js
var require_conflict_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/conflict.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ConflictException = void 0;
	const http_status_enum_1$24 = require_http_status_enum();
	const http_exception_1$18 = require_http_exception();
	/**
	* Defines an HTTP exception for *Conflict* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var ConflictException = class extends http_exception_1$18.HttpException {
		/**
		* Instantiate a `ConflictException` Exception.
		*
		* @example
		* `throw new ConflictException()`
		*
		* @usageNotes
		* The HTTP response status code will be 409.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 409.
		* - `message`: the string `'Conflict'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Conflict") {
			const { description, httpExceptionOptions } = http_exception_1$18.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$18.HttpException.createBody(objectOrError, description, http_status_enum_1$24.HttpStatus.CONFLICT), http_status_enum_1$24.HttpStatus.CONFLICT, httpExceptionOptions);
		}
	};
	exports.ConflictException = ConflictException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/forbidden.exception.js
var require_forbidden_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/forbidden.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ForbiddenException = void 0;
	const http_status_enum_1$23 = require_http_status_enum();
	const http_exception_1$17 = require_http_exception();
	/**
	* Defines an HTTP exception for *Forbidden* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var ForbiddenException = class extends http_exception_1$17.HttpException {
		/**
		* Instantiate a `ForbiddenException` Exception.
		*
		* @example
		* `throw new ForbiddenException()`
		*
		* @usageNotes
		* The HTTP response status code will be 403.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 403.
		* - `message`: the string `'Forbidden'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Forbidden") {
			const { description, httpExceptionOptions } = http_exception_1$17.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$17.HttpException.createBody(objectOrError, description, http_status_enum_1$23.HttpStatus.FORBIDDEN), http_status_enum_1$23.HttpStatus.FORBIDDEN, httpExceptionOptions);
		}
	};
	exports.ForbiddenException = ForbiddenException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/gateway-timeout.exception.js
var require_gateway_timeout_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/gateway-timeout.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.GatewayTimeoutException = void 0;
	const http_status_enum_1$22 = require_http_status_enum();
	const http_exception_1$16 = require_http_exception();
	/**
	* Defines an HTTP exception for *Gateway Timeout* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var GatewayTimeoutException = class extends http_exception_1$16.HttpException {
		/**
		* Instantiate a `GatewayTimeoutException` Exception.
		*
		* @example
		* `throw new GatewayTimeoutException()`
		*
		* @usageNotes
		* The HTTP response status code will be 504.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 504.
		* - `message`: the string `'Gateway Timeout'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Gateway Timeout") {
			const { description, httpExceptionOptions } = http_exception_1$16.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$16.HttpException.createBody(objectOrError, description, http_status_enum_1$22.HttpStatus.GATEWAY_TIMEOUT), http_status_enum_1$22.HttpStatus.GATEWAY_TIMEOUT, httpExceptionOptions);
		}
	};
	exports.GatewayTimeoutException = GatewayTimeoutException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/gone.exception.js
var require_gone_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/gone.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.GoneException = void 0;
	const http_status_enum_1$21 = require_http_status_enum();
	const http_exception_1$15 = require_http_exception();
	/**
	* Defines an HTTP exception for *Gone* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var GoneException = class extends http_exception_1$15.HttpException {
		/**
		* Instantiate a `GoneException` Exception.
		*
		* @example
		* `throw new GoneException()`
		*
		* @usageNotes
		* The HTTP response status code will be 410.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 410.
		* - `message`: the string `'Gone'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Gone") {
			const { description, httpExceptionOptions } = http_exception_1$15.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$15.HttpException.createBody(objectOrError, description, http_status_enum_1$21.HttpStatus.GONE), http_status_enum_1$21.HttpStatus.GONE, httpExceptionOptions);
		}
	};
	exports.GoneException = GoneException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/http-version-not-supported.exception.js
var require_http_version_not_supported_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/http-version-not-supported.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.HttpVersionNotSupportedException = void 0;
	const http_status_enum_1$20 = require_http_status_enum();
	const http_exception_1$14 = require_http_exception();
	/**
	* Defines an HTTP exception for *Http Version Not Supported* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var HttpVersionNotSupportedException = class extends http_exception_1$14.HttpException {
		/**
		* Instantiate a `HttpVersionNotSupportedException` Exception.
		*
		* @example
		* `throw new HttpVersionNotSupportedException()`
		*
		* @usageNotes
		* The HTTP response status code will be 505.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 505.
		* - `message`: the string `'HTTP Version Not Supported'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "HTTP Version Not Supported") {
			const { description, httpExceptionOptions } = http_exception_1$14.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$14.HttpException.createBody(objectOrError, description, http_status_enum_1$20.HttpStatus.HTTP_VERSION_NOT_SUPPORTED), http_status_enum_1$20.HttpStatus.HTTP_VERSION_NOT_SUPPORTED, httpExceptionOptions);
		}
	};
	exports.HttpVersionNotSupportedException = HttpVersionNotSupportedException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/im-a-teapot.exception.js
var require_im_a_teapot_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/im-a-teapot.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ImATeapotException = void 0;
	const http_status_enum_1$19 = require_http_status_enum();
	const http_exception_1$13 = require_http_exception();
	/**
	* Defines an HTTP exception for *ImATeapotException* type errors.
	*
	* Any attempt to brew coffee with a teapot should result in the error code
	* "418 I'm a teapot". The resulting entity body MAY be short and stout.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var ImATeapotException = class extends http_exception_1$13.HttpException {
		/**
		* Instantiate an `ImATeapotException` Exception.
		*
		* @example
		* `throw new ImATeapotException()`
		*
		* @usageNotes
		* The HTTP response status code will be 418.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 418.
		* - `message`: the string `"I'm a Teapot"` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = `I'm a teapot`) {
			const { description, httpExceptionOptions } = http_exception_1$13.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$13.HttpException.createBody(objectOrError, description, http_status_enum_1$19.HttpStatus.I_AM_A_TEAPOT), http_status_enum_1$19.HttpStatus.I_AM_A_TEAPOT, httpExceptionOptions);
		}
	};
	exports.ImATeapotException = ImATeapotException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/internal-server-error.exception.js
var require_internal_server_error_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/internal-server-error.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.InternalServerErrorException = void 0;
	const http_status_enum_1$18 = require_http_status_enum();
	const http_exception_1$12 = require_http_exception();
	/**
	* Defines an HTTP exception for *Internal Server Error* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var InternalServerErrorException = class extends http_exception_1$12.HttpException {
		/**
		* Instantiate an `InternalServerErrorException` Exception.
		*
		* @example
		* `throw new InternalServerErrorException()`
		*
		* @usageNotes
		* The HTTP response status code will be 500.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 500.
		* - `message`: the string `'Internal Server Error'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Internal Server Error") {
			const { description, httpExceptionOptions } = http_exception_1$12.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$12.HttpException.createBody(objectOrError, description, http_status_enum_1$18.HttpStatus.INTERNAL_SERVER_ERROR), http_status_enum_1$18.HttpStatus.INTERNAL_SERVER_ERROR, httpExceptionOptions);
		}
	};
	exports.InternalServerErrorException = InternalServerErrorException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/method-not-allowed.exception.js
var require_method_not_allowed_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/method-not-allowed.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.MethodNotAllowedException = void 0;
	const http_status_enum_1$17 = require_http_status_enum();
	const http_exception_1$11 = require_http_exception();
	/**
	* Defines an HTTP exception for *Method Not Allowed* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var MethodNotAllowedException = class extends http_exception_1$11.HttpException {
		/**
		* Instantiate a `MethodNotAllowedException` Exception.
		*
		* @example
		* `throw new MethodNotAllowedException()`
		*
		* @usageNotes
		* The HTTP response status code will be 405.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 405.
		* - `message`: the string `'Method Not Allowed'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Method Not Allowed") {
			const { description, httpExceptionOptions } = http_exception_1$11.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$11.HttpException.createBody(objectOrError, description, http_status_enum_1$17.HttpStatus.METHOD_NOT_ALLOWED), http_status_enum_1$17.HttpStatus.METHOD_NOT_ALLOWED, httpExceptionOptions);
		}
	};
	exports.MethodNotAllowedException = MethodNotAllowedException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/misdirected.exception.js
var require_misdirected_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/misdirected.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.MisdirectedException = void 0;
	const http_status_enum_1$16 = require_http_status_enum();
	const http_exception_1$10 = require_http_exception();
	/**
	* Defines an HTTP exception for *Misdirected* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var MisdirectedException = class extends http_exception_1$10.HttpException {
		/**
		* Instantiate a `MisdirectedException` Exception.
		*
		* @example
		* `throw new MisdirectedException()`
		*
		* @usageNotes
		* The HTTP response status code will be 421.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 421.
		* - `message`: the string `'Bad Gateway'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Misdirected") {
			const { description, httpExceptionOptions } = http_exception_1$10.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$10.HttpException.createBody(objectOrError, description, http_status_enum_1$16.HttpStatus.MISDIRECTED), http_status_enum_1$16.HttpStatus.MISDIRECTED, httpExceptionOptions);
		}
	};
	exports.MisdirectedException = MisdirectedException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/not-acceptable.exception.js
var require_not_acceptable_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/not-acceptable.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.NotAcceptableException = void 0;
	const http_status_enum_1$15 = require_http_status_enum();
	const http_exception_1$9 = require_http_exception();
	/**
	* Defines an HTTP exception for *Not Acceptable* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var NotAcceptableException = class extends http_exception_1$9.HttpException {
		/**
		* Instantiate a `NotAcceptableException` Exception.
		*
		* @example
		* `throw new NotAcceptableException()`
		*
		* @usageNotes
		* The HTTP response status code will be 406.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 406.
		* - `error`: the string `'Not Acceptable'` by default; override this by supplying
		* a string in the `error` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Not Acceptable") {
			const { description, httpExceptionOptions } = http_exception_1$9.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$9.HttpException.createBody(objectOrError, description, http_status_enum_1$15.HttpStatus.NOT_ACCEPTABLE), http_status_enum_1$15.HttpStatus.NOT_ACCEPTABLE, httpExceptionOptions);
		}
	};
	exports.NotAcceptableException = NotAcceptableException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/not-found.exception.js
var require_not_found_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/not-found.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.NotFoundException = void 0;
	const http_status_enum_1$14 = require_http_status_enum();
	const http_exception_1$8 = require_http_exception();
	/**
	* Defines an HTTP exception for *Not Found* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var NotFoundException = class extends http_exception_1$8.HttpException {
		/**
		* Instantiate a `NotFoundException` Exception.
		*
		* @example
		* `throw new NotFoundException()`
		*
		* @usageNotes
		* The HTTP response status code will be 404.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 404.
		* - `message`: the string `'Not Found'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Not Found") {
			const { description, httpExceptionOptions } = http_exception_1$8.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$8.HttpException.createBody(objectOrError, description, http_status_enum_1$14.HttpStatus.NOT_FOUND), http_status_enum_1$14.HttpStatus.NOT_FOUND, httpExceptionOptions);
		}
	};
	exports.NotFoundException = NotFoundException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/not-implemented.exception.js
var require_not_implemented_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/not-implemented.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.NotImplementedException = void 0;
	const http_status_enum_1$13 = require_http_status_enum();
	const http_exception_1$7 = require_http_exception();
	/**
	* Defines an HTTP exception for *Not Implemented* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var NotImplementedException = class extends http_exception_1$7.HttpException {
		/**
		* Instantiate a `NotImplementedException` Exception.
		*
		* @example
		* `throw new NotImplementedException()`
		*
		* @usageNotes
		* The HTTP response status code will be 501.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 501.
		* - `message`: the string `'Not Implemented'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		* @param error a short description of the HTTP error.
		*/
		constructor(objectOrError, descriptionOrOptions = "Not Implemented") {
			const { description, httpExceptionOptions } = http_exception_1$7.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$7.HttpException.createBody(objectOrError, description, http_status_enum_1$13.HttpStatus.NOT_IMPLEMENTED), http_status_enum_1$13.HttpStatus.NOT_IMPLEMENTED, httpExceptionOptions);
		}
	};
	exports.NotImplementedException = NotImplementedException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/payload-too-large.exception.js
var require_payload_too_large_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/payload-too-large.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.PayloadTooLargeException = void 0;
	const http_status_enum_1$12 = require_http_status_enum();
	const http_exception_1$6 = require_http_exception();
	/**
	* Defines an HTTP exception for *Payload Too Large* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var PayloadTooLargeException = class extends http_exception_1$6.HttpException {
		/**
		* Instantiate a `PayloadTooLargeException` Exception.
		*
		* @example
		* `throw new PayloadTooLargeException()`
		*
		* @usageNotes
		* The HTTP response status code will be 413.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 413.
		* - `message`: the string `'Payload Too Large'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Payload Too Large") {
			const { description, httpExceptionOptions } = http_exception_1$6.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$6.HttpException.createBody(objectOrError, description, http_status_enum_1$12.HttpStatus.PAYLOAD_TOO_LARGE), http_status_enum_1$12.HttpStatus.PAYLOAD_TOO_LARGE, httpExceptionOptions);
		}
	};
	exports.PayloadTooLargeException = PayloadTooLargeException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/precondition-failed.exception.js
var require_precondition_failed_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/precondition-failed.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.PreconditionFailedException = void 0;
	const http_status_enum_1$11 = require_http_status_enum();
	const http_exception_1$5 = require_http_exception();
	/**
	* Defines an HTTP exception for *Precondition Failed* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var PreconditionFailedException = class extends http_exception_1$5.HttpException {
		/**
		* Instantiate a `PreconditionFailedException` Exception.
		*
		* @example
		* `throw new PreconditionFailedException()`
		*
		* @usageNotes
		* The HTTP response status code will be 412.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 412.
		* - `message`: the string `'Precondition Failed'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Precondition Failed") {
			const { description, httpExceptionOptions } = http_exception_1$5.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$5.HttpException.createBody(objectOrError, description, http_status_enum_1$11.HttpStatus.PRECONDITION_FAILED), http_status_enum_1$11.HttpStatus.PRECONDITION_FAILED, httpExceptionOptions);
		}
	};
	exports.PreconditionFailedException = PreconditionFailedException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/request-timeout.exception.js
var require_request_timeout_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/request-timeout.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.RequestTimeoutException = void 0;
	const http_status_enum_1$10 = require_http_status_enum();
	const http_exception_1$4 = require_http_exception();
	/**
	* Defines an HTTP exception for *Request Timeout* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var RequestTimeoutException = class extends http_exception_1$4.HttpException {
		/**
		* Instantiate a `RequestTimeoutException` Exception.
		*
		* @example
		* `throw new RequestTimeoutException()`
		*
		* @usageNotes
		* The HTTP response status code will be 408.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 408.
		* - `message`: the string `'Request Timeout'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Request Timeout") {
			const { description, httpExceptionOptions } = http_exception_1$4.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$4.HttpException.createBody(objectOrError, description, http_status_enum_1$10.HttpStatus.REQUEST_TIMEOUT), http_status_enum_1$10.HttpStatus.REQUEST_TIMEOUT, httpExceptionOptions);
		}
	};
	exports.RequestTimeoutException = RequestTimeoutException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/service-unavailable.exception.js
var require_service_unavailable_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/service-unavailable.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ServiceUnavailableException = void 0;
	const http_status_enum_1$9 = require_http_status_enum();
	const http_exception_1$3 = require_http_exception();
	/**
	* Defines an HTTP exception for *Service Unavailable* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var ServiceUnavailableException = class extends http_exception_1$3.HttpException {
		/**
		* Instantiate a `ServiceUnavailableException` Exception.
		*
		* @example
		* `throw new ServiceUnavailableException()`
		*
		* @usageNotes
		* The HTTP response status code will be 503.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 503.
		* - `message`: the string `'Service Unavailable'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Service Unavailable") {
			const { description, httpExceptionOptions } = http_exception_1$3.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$3.HttpException.createBody(objectOrError, description, http_status_enum_1$9.HttpStatus.SERVICE_UNAVAILABLE), http_status_enum_1$9.HttpStatus.SERVICE_UNAVAILABLE, httpExceptionOptions);
		}
	};
	exports.ServiceUnavailableException = ServiceUnavailableException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/unauthorized.exception.js
var require_unauthorized_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/unauthorized.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.UnauthorizedException = void 0;
	const http_status_enum_1$8 = require_http_status_enum();
	const http_exception_1$2 = require_http_exception();
	/**
	* Defines an HTTP exception for *Unauthorized* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var UnauthorizedException = class extends http_exception_1$2.HttpException {
		/**
		* Instantiate an `UnauthorizedException` Exception.
		*
		* @example
		* `throw new UnauthorizedException()`
		*
		* @usageNotes
		* The HTTP response status code will be 401.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 401.
		* - `message`: the string `'Unauthorized'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Unauthorized") {
			const { description, httpExceptionOptions } = http_exception_1$2.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$2.HttpException.createBody(objectOrError, description, http_status_enum_1$8.HttpStatus.UNAUTHORIZED), http_status_enum_1$8.HttpStatus.UNAUTHORIZED, httpExceptionOptions);
		}
	};
	exports.UnauthorizedException = UnauthorizedException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/unprocessable-entity.exception.js
var require_unprocessable_entity_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/unprocessable-entity.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.UnprocessableEntityException = void 0;
	const http_status_enum_1$7 = require_http_status_enum();
	const http_exception_1$1 = require_http_exception();
	/**
	* Defines an HTTP exception for *Unprocessable Entity* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var UnprocessableEntityException = class extends http_exception_1$1.HttpException {
		/**
		* Instantiate an `UnprocessableEntityException` Exception.
		*
		* @example
		* `throw new UnprocessableEntityException()`
		*
		* @usageNotes
		* The HTTP response status code will be 422.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 422.
		* - `message`: the string `'Unprocessable Entity'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Unprocessable Entity") {
			const { description, httpExceptionOptions } = http_exception_1$1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1$1.HttpException.createBody(objectOrError, description, http_status_enum_1$7.HttpStatus.UNPROCESSABLE_ENTITY), http_status_enum_1$7.HttpStatus.UNPROCESSABLE_ENTITY, httpExceptionOptions);
		}
	};
	exports.UnprocessableEntityException = UnprocessableEntityException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/unsupported-media-type.exception.js
var require_unsupported_media_type_exception = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/unsupported-media-type.exception.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.UnsupportedMediaTypeException = void 0;
	const http_status_enum_1$6 = require_http_status_enum();
	const http_exception_1 = require_http_exception();
	/**
	* Defines an HTTP exception for *Unsupported Media Type* type errors.
	*
	* @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)
	*
	* @publicApi
	*/
	var UnsupportedMediaTypeException = class extends http_exception_1.HttpException {
		/**
		* Instantiate an `UnsupportedMediaTypeException` Exception.
		*
		* @example
		* `throw new UnsupportedMediaTypeException()`
		*
		* @usageNotes
		* The HTTP response status code will be 415.
		* - The `objectOrError` argument defines the JSON response body or the message string.
		* - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.
		*
		* By default, the JSON response body contains two properties:
		* - `statusCode`: this will be the value 415.
		* - `message`: the string `'Unsupported Media Type'` by default; override this by supplying
		* a string in the `objectOrError` parameter.
		*
		* If the parameter `objectOrError` is a string, the response body will contain an
		* additional property, `error`, with a short description of the HTTP error. To override the
		* entire JSON response body, pass an object instead. Nest will serialize the object
		* and return it as the JSON response body.
		*
		* @param objectOrError string or object describing the error condition.
		* @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause
		*/
		constructor(objectOrError, descriptionOrOptions = "Unsupported Media Type") {
			const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);
			super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1$6.HttpStatus.UNSUPPORTED_MEDIA_TYPE), http_status_enum_1$6.HttpStatus.UNSUPPORTED_MEDIA_TYPE, httpExceptionOptions);
		}
	};
	exports.UnsupportedMediaTypeException = UnsupportedMediaTypeException;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/index.js
var require_exceptions = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/exceptions/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$30 = __require("tslib");
	tslib_1$30.__exportStar(require_bad_gateway_exception(), exports);
	tslib_1$30.__exportStar(require_bad_request_exception(), exports);
	tslib_1$30.__exportStar(require_conflict_exception(), exports);
	tslib_1$30.__exportStar(require_forbidden_exception(), exports);
	tslib_1$30.__exportStar(require_gateway_timeout_exception(), exports);
	tslib_1$30.__exportStar(require_gone_exception(), exports);
	tslib_1$30.__exportStar(require_http_version_not_supported_exception(), exports);
	tslib_1$30.__exportStar(require_http_exception(), exports);
	tslib_1$30.__exportStar(require_im_a_teapot_exception(), exports);
	tslib_1$30.__exportStar(require_internal_server_error_exception(), exports);
	tslib_1$30.__exportStar(require_intrinsic_exception(), exports);
	tslib_1$30.__exportStar(require_method_not_allowed_exception(), exports);
	tslib_1$30.__exportStar(require_misdirected_exception(), exports);
	tslib_1$30.__exportStar(require_not_acceptable_exception(), exports);
	tslib_1$30.__exportStar(require_not_found_exception(), exports);
	tslib_1$30.__exportStar(require_not_implemented_exception(), exports);
	tslib_1$30.__exportStar(require_payload_too_large_exception(), exports);
	tslib_1$30.__exportStar(require_precondition_failed_exception(), exports);
	tslib_1$30.__exportStar(require_request_timeout_exception(), exports);
	tslib_1$30.__exportStar(require_service_unavailable_exception(), exports);
	tslib_1$30.__exportStar(require_unauthorized_exception(), exports);
	tslib_1$30.__exportStar(require_unprocessable_entity_exception(), exports);
	tslib_1$30.__exportStar(require_unsupported_media_type_exception(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/cli-colors.util.js
var require_cli_colors_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/cli-colors.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.yellow = exports.clc = void 0;
	const isColorAllowed = function() {
		return !process.env.NO_COLOR;
	};
	const colorIfAllowed = function(colorFn) {
		return function(text) {
			return isColorAllowed() ? colorFn(text) : text;
		};
	};
	exports.clc = {
		bold: colorIfAllowed(function(text) {
			return `\x1B[1m${text}\x1B[0m`;
		}),
		green: colorIfAllowed(function(text) {
			return `\x1B[32m${text}\x1B[39m`;
		}),
		yellow: colorIfAllowed(function(text) {
			return `\x1B[33m${text}\x1B[39m`;
		}),
		red: colorIfAllowed(function(text) {
			return `\x1B[31m${text}\x1B[39m`;
		}),
		magentaBright: colorIfAllowed(function(text) {
			return `\x1B[95m${text}\x1B[39m`;
		}),
		cyanBright: colorIfAllowed(function(text) {
			return `\x1B[96m${text}\x1B[39m`;
		})
	};
	exports.yellow = colorIfAllowed(function(text) {
		return `\x1B[38;5;3m${text}\x1B[39m`;
	});
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/utils/is-log-level-enabled.util.js
var require_is_log_level_enabled_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/utils/is-log-level-enabled.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isLogLevelEnabled = isLogLevelEnabled;
	const LOG_LEVEL_VALUES = {
		verbose: 0,
		debug: 1,
		log: 2,
		warn: 3,
		error: 4,
		fatal: 5
	};
	/**
	* Checks if target level is enabled.
	* @param targetLevel target level
	* @param logLevels array of enabled log levels
	*/
	function isLogLevelEnabled(targetLevel, logLevels) {
		var _logLevels$map$sort;
		if (!logLevels || Array.isArray(logLevels) && (logLevels === null || logLevels === void 0 ? void 0 : logLevels.length) === 0) return false;
		if (logLevels.includes(targetLevel)) return true;
		const highestLogLevelValue = (_logLevels$map$sort = logLevels.map(function(level) {
			return LOG_LEVEL_VALUES[level];
		}).sort(function(a, b) {
			return b - a;
		})) === null || _logLevels$map$sort === void 0 ? void 0 : _logLevels$map$sort[0];
		const targetLevelValue = LOG_LEVEL_VALUES[targetLevel];
		return targetLevelValue >= highestLogLevelValue;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/console-logger.service.js
var require_console_logger_service = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/console-logger.service.js"(exports) {
	var ConsoleLogger_1;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ConsoleLogger = void 0;
	const tslib_1$29 = __require("tslib");
	const util_1$2 = __require("util");
	const core_1$6 = require_core$1();
	const cli_colors_util_1 = require_cli_colors_util();
	const shared_utils_1$14 = require_shared_utils();
	const is_log_level_enabled_util_1 = require_is_log_level_enabled_util();
	const DEFAULT_DEPTH = 5;
	const DEFAULT_LOG_LEVELS = [
		"log",
		"error",
		"warn",
		"debug",
		"verbose",
		"fatal"
	];
	const dateTimeFormatter$1 = new Intl.DateTimeFormat(void 0, {
		year: "numeric",
		hour: "numeric",
		minute: "numeric",
		second: "numeric",
		day: "2-digit",
		month: "2-digit"
	});
	/**
	* @publicApi
	*/
	let ConsoleLogger = ConsoleLogger_1 = class ConsoleLogger$1 {
		constructor(contextOrOptions, options) {
			var _opts, _opts2, _opts2$logLevels, _opts3, _opts3$colors, _opts$colors, _opts4, _opts4$prefix;
			let [context$1, opts] = (0, shared_utils_1$14.isString)(contextOrOptions) ? [contextOrOptions, options] : options ? [void 0, options] : [contextOrOptions === null || contextOrOptions === void 0 ? void 0 : contextOrOptions.context, contextOrOptions];
			opts = (_opts = opts) !== null && _opts !== void 0 ? _opts : {};
			(_opts2$logLevels = (_opts2 = opts).logLevels) !== null && _opts2$logLevels !== void 0 || (_opts2.logLevels = DEFAULT_LOG_LEVELS);
			(_opts3$colors = (_opts3 = opts).colors) !== null && _opts3$colors !== void 0 || (_opts3.colors = (_opts$colors = opts.colors) !== null && _opts$colors !== void 0 ? _opts$colors : opts.json ? false : true);
			(_opts4$prefix = (_opts4 = opts).prefix) !== null && _opts4$prefix !== void 0 || (_opts4.prefix = "Nest");
			this.options = opts;
			this.inspectOptions = this.getInspectOptions();
			if (context$1) {
				this.context = context$1;
				this.originalContext = context$1;
			}
		}
		log(message, ...optionalParams) {
			if (!this.isLevelEnabled("log")) return;
			const { messages, context: context$1 } = this.getContextAndMessagesToPrint([message, ...optionalParams]);
			this.printMessages(messages, context$1, "log");
		}
		error(message, ...optionalParams) {
			if (!this.isLevelEnabled("error")) return;
			const { messages, context: context$1, stack } = this.getContextAndStackAndMessagesToPrint([message, ...optionalParams]);
			this.printMessages(messages, context$1, "error", "stderr", stack);
			this.printStackTrace(stack);
		}
		warn(message, ...optionalParams) {
			if (!this.isLevelEnabled("warn")) return;
			const { messages, context: context$1 } = this.getContextAndMessagesToPrint([message, ...optionalParams]);
			this.printMessages(messages, context$1, "warn");
		}
		debug(message, ...optionalParams) {
			if (!this.isLevelEnabled("debug")) return;
			const { messages, context: context$1 } = this.getContextAndMessagesToPrint([message, ...optionalParams]);
			this.printMessages(messages, context$1, "debug");
		}
		verbose(message, ...optionalParams) {
			if (!this.isLevelEnabled("verbose")) return;
			const { messages, context: context$1 } = this.getContextAndMessagesToPrint([message, ...optionalParams]);
			this.printMessages(messages, context$1, "verbose");
		}
		fatal(message, ...optionalParams) {
			if (!this.isLevelEnabled("fatal")) return;
			const { messages, context: context$1 } = this.getContextAndMessagesToPrint([message, ...optionalParams]);
			this.printMessages(messages, context$1, "fatal");
		}
		/**
		* Set log levels
		* @param levels log levels
		*/
		setLogLevels(levels) {
			if (!this.options) this.options = {};
			this.options.logLevels = levels;
		}
		/**
		* Set logger context
		* @param context context
		*/
		setContext(context$1) {
			this.context = context$1;
		}
		/**
		* Resets the logger context to the value that was passed in the constructor.
		*/
		resetContext() {
			this.context = this.originalContext;
		}
		isLevelEnabled(level) {
			var _this$options;
			const logLevels = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.logLevels;
			return (0, is_log_level_enabled_util_1.isLogLevelEnabled)(level, logLevels);
		}
		getTimestamp() {
			return dateTimeFormatter$1.format(Date.now());
		}
		printMessages(messages, context$1 = "", logLevel = "log", writeStreamType, errorStack) {
			var _this = this;
			messages.forEach(function(message) {
				if (_this.options.json) {
					_this.printAsJson(message, {
						context: context$1,
						logLevel,
						writeStreamType,
						errorStack
					});
					return;
				}
				const pidMessage = _this.formatPid(process.pid);
				const contextMessage = _this.formatContext(context$1);
				const timestampDiff = _this.updateAndGetTimestampDiff();
				const formattedLogLevel = logLevel.toUpperCase().padStart(7, " ");
				const formattedMessage = _this.formatMessage(logLevel, message, pidMessage, formattedLogLevel, contextMessage, timestampDiff);
				process[writeStreamType !== null && writeStreamType !== void 0 ? writeStreamType : "stdout"].write(formattedMessage);
			});
		}
		printAsJson(message, options) {
			var _options$writeStreamT;
			const logObject = {
				level: options.logLevel,
				pid: process.pid,
				timestamp: Date.now(),
				message
			};
			if (options.context) logObject.context = options.context;
			if (options.errorStack) logObject.stack = options.errorStack;
			const formattedMessage = !this.options.colors && this.inspectOptions.compact === true ? JSON.stringify(logObject, this.stringifyReplacer) : (0, util_1$2.inspect)(logObject, this.inspectOptions);
			process[(_options$writeStreamT = options.writeStreamType) !== null && _options$writeStreamT !== void 0 ? _options$writeStreamT : "stdout"].write(`${formattedMessage}\n`);
		}
		formatPid(pid) {
			return `[${this.options.prefix}] ${pid}  - `;
		}
		formatContext(context$1) {
			if (!context$1) return "";
			context$1 = `[${context$1}] `;
			return this.options.colors ? (0, cli_colors_util_1.yellow)(context$1) : context$1;
		}
		formatMessage(logLevel, message, pidMessage, formattedLogLevel, contextMessage, timestampDiff) {
			const output = this.stringifyMessage(message, logLevel);
			pidMessage = this.colorize(pidMessage, logLevel);
			formattedLogLevel = this.colorize(formattedLogLevel, logLevel);
			return `${pidMessage}${this.getTimestamp()} ${formattedLogLevel} ${contextMessage}${output}${timestampDiff}\n`;
		}
		stringifyMessage(message, logLevel) {
			if ((0, shared_utils_1$14.isFunction)(message)) {
				const messageAsStr = Function.prototype.toString.call(message);
				const isClass = messageAsStr.startsWith("class ");
				if (isClass) return this.stringifyMessage(message.name, logLevel);
				return this.stringifyMessage(message(), logLevel);
			}
			if (typeof message === "string") return this.colorize(message, logLevel);
			const outputText = (0, util_1$2.inspect)(message, this.inspectOptions);
			if ((0, shared_utils_1$14.isPlainObject)(message)) return `Object(${Object.keys(message).length}) ${outputText}`;
			if (Array.isArray(message)) return `Array(${message.length}) ${outputText}`;
			return outputText;
		}
		colorize(message, logLevel) {
			if (!this.options.colors || this.options.json) return message;
			const color = this.getColorByLogLevel(logLevel);
			return color(message);
		}
		printStackTrace(stack) {
			if (!stack || this.options.json) return;
			process.stderr.write(`${stack}\n`);
		}
		updateAndGetTimestampDiff() {
			var _this$options2;
			const includeTimestamp = ConsoleLogger_1.lastTimestampAt && ((_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2.timestamp);
			const result$1 = includeTimestamp ? this.formatTimestampDiff(Date.now() - ConsoleLogger_1.lastTimestampAt) : "";
			ConsoleLogger_1.lastTimestampAt = Date.now();
			return result$1;
		}
		formatTimestampDiff(timestampDiff) {
			const formattedDiff = ` +${timestampDiff}ms`;
			return this.options.colors ? (0, cli_colors_util_1.yellow)(formattedDiff) : formattedDiff;
		}
		getInspectOptions() {
			var _this$options$depth, _this$options$compact;
			let breakLength = this.options.breakLength;
			if (typeof breakLength === "undefined") breakLength = this.options.colors ? this.options.compact ? Infinity : void 0 : this.options.compact === false ? void 0 : Infinity;
			const inspectOptions = {
				depth: (_this$options$depth = this.options.depth) !== null && _this$options$depth !== void 0 ? _this$options$depth : DEFAULT_DEPTH,
				sorted: this.options.sorted,
				showHidden: this.options.showHidden,
				compact: (_this$options$compact = this.options.compact) !== null && _this$options$compact !== void 0 ? _this$options$compact : this.options.json ? true : false,
				colors: this.options.colors,
				breakLength
			};
			if (this.options.maxArrayLength) inspectOptions.maxArrayLength = this.options.maxArrayLength;
			if (this.options.maxStringLength) inspectOptions.maxStringLength = this.options.maxStringLength;
			return inspectOptions;
		}
		stringifyReplacer(key, value) {
			if (typeof value === "bigint") return value.toString();
			if (typeof value === "symbol") return value.toString();
			if (value instanceof Map || value instanceof Set || value instanceof Error) return `${(0, util_1$2.inspect)(value, this.inspectOptions)}`;
			return value;
		}
		getContextAndMessagesToPrint(args) {
			if ((args === null || args === void 0 ? void 0 : args.length) <= 1) return {
				messages: args,
				context: this.context
			};
			const lastElement = args[args.length - 1];
			const isContext = (0, shared_utils_1$14.isString)(lastElement);
			if (!isContext) return {
				messages: args,
				context: this.context
			};
			return {
				context: lastElement,
				messages: args.slice(0, args.length - 1)
			};
		}
		getContextAndStackAndMessagesToPrint(args) {
			if (args.length === 2) return this.isStackFormat(args[1]) ? {
				messages: [args[0]],
				stack: args[1],
				context: this.context
			} : {
				messages: [args[0]],
				context: args[1]
			};
			const { messages, context: context$1 } = this.getContextAndMessagesToPrint(args);
			if ((messages === null || messages === void 0 ? void 0 : messages.length) <= 1) return {
				messages,
				context: context$1
			};
			const lastElement = messages[messages.length - 1];
			const isStack = (0, shared_utils_1$14.isString)(lastElement);
			if (!isStack && !(0, shared_utils_1$14.isUndefined)(lastElement)) return {
				messages,
				context: context$1
			};
			return {
				stack: lastElement,
				messages: messages.slice(0, messages.length - 1),
				context: context$1
			};
		}
		isStackFormat(stack) {
			if (!(0, shared_utils_1$14.isString)(stack) && !(0, shared_utils_1$14.isUndefined)(stack)) return false;
			return new RegExp("^(.)+\\n\\s+at .+:\\d+:\\d+", "").test(stack);
		}
		getColorByLogLevel(level) {
			switch (level) {
				case "debug": return cli_colors_util_1.clc.magentaBright;
				case "warn": return cli_colors_util_1.clc.yellow;
				case "error": return cli_colors_util_1.clc.red;
				case "verbose": return cli_colors_util_1.clc.cyanBright;
				case "fatal": return cli_colors_util_1.clc.bold;
				default: return cli_colors_util_1.clc.green;
			}
		}
	};
	exports.ConsoleLogger = ConsoleLogger;
	exports.ConsoleLogger = ConsoleLogger = ConsoleLogger_1 = tslib_1$29.__decorate([
		(0, core_1$6.Injectable)(),
		tslib_1$29.__param(0, (0, core_1$6.Optional)()),
		tslib_1$29.__param(1, (0, core_1$6.Optional)()),
		tslib_1$29.__metadata("design:paramtypes", [Object, Object])
	], ConsoleLogger);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/utils/is-log-level.util.js
var require_is_log_level_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/utils/is-log-level.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isLogLevel = isLogLevel;
	const logger_service_1$3 = require_logger_service();
	/**
	* @publicApi
	*/
	function isLogLevel(maybeLogLevel) {
		return logger_service_1$3.LOG_LEVELS.includes(maybeLogLevel);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/utils/filter-log-levels.util.js
var require_filter_log_levels_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/utils/filter-log-levels.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.filterLogLevels = filterLogLevels;
	const logger_service_1$2 = require_logger_service();
	const is_log_level_util_1 = require_is_log_level_util();
	/**
	* @publicApi
	*/
	function filterLogLevels(parseableString = "") {
		const sanitizedSring = parseableString.replaceAll(" ", "").toLowerCase();
		if (sanitizedSring[0] === ">") {
			const orEqual = sanitizedSring[1] === "=";
			const logLevelIndex = logger_service_1$2.LOG_LEVELS.indexOf(sanitizedSring.substring(orEqual ? 2 : 1));
			if (logLevelIndex === -1) throw new Error(`parse error (unknown log level): ${sanitizedSring}`);
			return logger_service_1$2.LOG_LEVELS.slice(orEqual ? logLevelIndex : logLevelIndex + 1);
		} else if (sanitizedSring.includes(",")) return sanitizedSring.split(",").filter(is_log_level_util_1.isLogLevel);
		return (0, is_log_level_util_1.isLogLevel)(sanitizedSring) ? [sanitizedSring] : logger_service_1$2.LOG_LEVELS;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/utils/index.js
var require_utils$5 = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/utils/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$28 = __require("tslib");
	tslib_1$28.__exportStar(require_filter_log_levels_util(), exports);
	tslib_1$28.__exportStar(require_is_log_level_enabled_util(), exports);
	tslib_1$28.__exportStar(require_is_log_level_util(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/logger.service.js
var require_logger_service = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/logger.service.js"(exports) {
	var Logger_1;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Logger = exports.LOG_LEVELS = void 0;
	const tslib_1$27 = __require("tslib");
	const core_1$5 = require_core$1();
	const shared_utils_1$13 = require_shared_utils();
	const console_logger_service_1 = require_console_logger_service();
	const utils_1$6 = require_utils$5();
	exports.LOG_LEVELS = [
		"verbose",
		"debug",
		"log",
		"warn",
		"error",
		"fatal"
	];
	const DEFAULT_LOGGER = new console_logger_service_1.ConsoleLogger();
	const dateTimeFormatter = new Intl.DateTimeFormat(void 0, {
		year: "numeric",
		hour: "numeric",
		minute: "numeric",
		second: "numeric",
		day: "2-digit",
		month: "2-digit"
	});
	/**
	* @publicApi
	*/
	let Logger = Logger_1 = class Logger$1 {
		constructor(context$1, options = {}) {
			this.context = context$1;
			this.options = options;
		}
		get localInstance() {
			if (Logger_1.staticInstanceRef === DEFAULT_LOGGER) return this.registerLocalInstanceRef();
			else if (Logger_1.staticInstanceRef instanceof Logger_1) {
				const prototype = Object.getPrototypeOf(Logger_1.staticInstanceRef);
				if (prototype.constructor === Logger_1) return this.registerLocalInstanceRef();
			}
			return Logger_1.staticInstanceRef;
		}
		error(message, ...optionalParams) {
			var _this$localInstance;
			optionalParams = this.context ? (optionalParams.length ? optionalParams : [void 0]).concat(this.context) : optionalParams;
			(_this$localInstance = this.localInstance) === null || _this$localInstance === void 0 || _this$localInstance.error(message, ...optionalParams);
		}
		log(message, ...optionalParams) {
			var _this$localInstance2;
			optionalParams = this.context ? optionalParams.concat(this.context) : optionalParams;
			(_this$localInstance2 = this.localInstance) === null || _this$localInstance2 === void 0 || _this$localInstance2.log(message, ...optionalParams);
		}
		warn(message, ...optionalParams) {
			var _this$localInstance3;
			optionalParams = this.context ? optionalParams.concat(this.context) : optionalParams;
			(_this$localInstance3 = this.localInstance) === null || _this$localInstance3 === void 0 || _this$localInstance3.warn(message, ...optionalParams);
		}
		debug(message, ...optionalParams) {
			var _this$localInstance4, _this$localInstance4$;
			optionalParams = this.context ? optionalParams.concat(this.context) : optionalParams;
			(_this$localInstance4 = this.localInstance) === null || _this$localInstance4 === void 0 || (_this$localInstance4$ = _this$localInstance4.debug) === null || _this$localInstance4$ === void 0 || _this$localInstance4$.call(_this$localInstance4, message, ...optionalParams);
		}
		verbose(message, ...optionalParams) {
			var _this$localInstance5, _this$localInstance5$;
			optionalParams = this.context ? optionalParams.concat(this.context) : optionalParams;
			(_this$localInstance5 = this.localInstance) === null || _this$localInstance5 === void 0 || (_this$localInstance5$ = _this$localInstance5.verbose) === null || _this$localInstance5$ === void 0 || _this$localInstance5$.call(_this$localInstance5, message, ...optionalParams);
		}
		fatal(message, ...optionalParams) {
			var _this$localInstance6, _this$localInstance6$;
			optionalParams = this.context ? optionalParams.concat(this.context) : optionalParams;
			(_this$localInstance6 = this.localInstance) === null || _this$localInstance6 === void 0 || (_this$localInstance6$ = _this$localInstance6.fatal) === null || _this$localInstance6$ === void 0 || _this$localInstance6$.call(_this$localInstance6, message, ...optionalParams);
		}
		static error(message, ...optionalParams) {
			var _this$staticInstanceR;
			(_this$staticInstanceR = this.staticInstanceRef) === null || _this$staticInstanceR === void 0 || _this$staticInstanceR.error(message, ...optionalParams);
		}
		static log(message, ...optionalParams) {
			var _this$staticInstanceR2;
			(_this$staticInstanceR2 = this.staticInstanceRef) === null || _this$staticInstanceR2 === void 0 || _this$staticInstanceR2.log(message, ...optionalParams);
		}
		static warn(message, ...optionalParams) {
			var _this$staticInstanceR3;
			(_this$staticInstanceR3 = this.staticInstanceRef) === null || _this$staticInstanceR3 === void 0 || _this$staticInstanceR3.warn(message, ...optionalParams);
		}
		static debug(message, ...optionalParams) {
			var _this$staticInstanceR4, _this$staticInstanceR5;
			(_this$staticInstanceR4 = this.staticInstanceRef) === null || _this$staticInstanceR4 === void 0 || (_this$staticInstanceR5 = _this$staticInstanceR4.debug) === null || _this$staticInstanceR5 === void 0 || _this$staticInstanceR5.call(_this$staticInstanceR4, message, ...optionalParams);
		}
		static verbose(message, ...optionalParams) {
			var _this$staticInstanceR6, _this$staticInstanceR7;
			(_this$staticInstanceR6 = this.staticInstanceRef) === null || _this$staticInstanceR6 === void 0 || (_this$staticInstanceR7 = _this$staticInstanceR6.verbose) === null || _this$staticInstanceR7 === void 0 || _this$staticInstanceR7.call(_this$staticInstanceR6, message, ...optionalParams);
		}
		static fatal(message, ...optionalParams) {
			var _this$staticInstanceR8, _this$staticInstanceR9;
			(_this$staticInstanceR8 = this.staticInstanceRef) === null || _this$staticInstanceR8 === void 0 || (_this$staticInstanceR9 = _this$staticInstanceR8.fatal) === null || _this$staticInstanceR9 === void 0 || _this$staticInstanceR9.call(_this$staticInstanceR8, message, ...optionalParams);
		}
		/**
		* Print buffered logs and detach buffer.
		*/
		static flush() {
			this.isBufferAttached = false;
			this.logBuffer.forEach(function(item) {
				return item.methodRef(...item.arguments);
			});
			this.logBuffer = [];
		}
		/**
		* Attach buffer.
		* Turns on initialization logs buffering.
		*/
		static attachBuffer() {
			this.isBufferAttached = true;
		}
		/**
		* Detach buffer.
		* Turns off initialization logs buffering.
		*/
		static detachBuffer() {
			this.isBufferAttached = false;
		}
		static getTimestamp() {
			return dateTimeFormatter.format(Date.now());
		}
		static overrideLogger(logger$1) {
			if (Array.isArray(logger$1)) {
				var _this$staticInstanceR10, _this$staticInstanceR11;
				Logger_1.logLevels = logger$1;
				return (_this$staticInstanceR10 = this.staticInstanceRef) === null || _this$staticInstanceR10 === void 0 || (_this$staticInstanceR11 = _this$staticInstanceR10.setLogLevels) === null || _this$staticInstanceR11 === void 0 ? void 0 : _this$staticInstanceR11.call(_this$staticInstanceR10, logger$1);
			}
			if ((0, shared_utils_1$13.isObject)(logger$1)) {
				if (logger$1 instanceof Logger_1 && logger$1.constructor !== Logger_1) {
					var _this$staticInstanceR12;
					const errorMessage = `Using the "extends Logger" instruction is not allowed in Nest v9. Please, use "extends ConsoleLogger" instead.`;
					(_this$staticInstanceR12 = this.staticInstanceRef) === null || _this$staticInstanceR12 === void 0 || _this$staticInstanceR12.error(errorMessage);
					throw new Error(errorMessage);
				}
				this.staticInstanceRef = logger$1;
			} else this.staticInstanceRef = void 0;
		}
		static isLevelEnabled(level) {
			const logLevels = Logger_1.logLevels;
			return (0, utils_1$6.isLogLevelEnabled)(level, logLevels);
		}
		registerLocalInstanceRef() {
			var _this$options;
			if (this.localInstanceRef) return this.localInstanceRef;
			this.localInstanceRef = new console_logger_service_1.ConsoleLogger(this.context, {
				timestamp: (_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.timestamp,
				logLevels: Logger_1.logLevels
			});
			return this.localInstanceRef;
		}
	};
	exports.Logger = Logger;
	Logger.logBuffer = new Array();
	Logger.staticInstanceRef = DEFAULT_LOGGER;
	Logger.WrapBuffer = function(target, propertyKey, descriptor) {
		const originalFn = descriptor.value;
		descriptor.value = function(...args) {
			if (Logger_1.isBufferAttached) {
				Logger_1.logBuffer.push({
					methodRef: originalFn.bind(this),
					arguments: args
				});
				return;
			}
			return originalFn.call(this, ...args);
		};
	};
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger.prototype, "error", null);
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger.prototype, "log", null);
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger.prototype, "warn", null);
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger.prototype, "debug", null);
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger.prototype, "verbose", null);
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger.prototype, "fatal", null);
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger, "error", null);
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger, "log", null);
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger, "warn", null);
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger, "debug", null);
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger, "verbose", null);
	tslib_1$27.__decorate([
		Logger.WrapBuffer,
		tslib_1$27.__metadata("design:type", Function),
		tslib_1$27.__metadata("design:paramtypes", [Object, Object]),
		tslib_1$27.__metadata("design:returntype", void 0)
	], Logger, "fatal", null);
	exports.Logger = Logger = Logger_1 = tslib_1$27.__decorate([
		(0, core_1$5.Injectable)(),
		tslib_1$27.__param(0, (0, core_1$5.Optional)()),
		tslib_1$27.__param(1, (0, core_1$5.Optional)()),
		tslib_1$27.__metadata("design:paramtypes", [String, Object])
	], Logger);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/index.js
var require_services = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/services/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$26 = __require("tslib");
	tslib_1$26.__exportStar(require_console_logger_service(), exports);
	tslib_1$26.__exportStar(require_logger_service(), exports);
	tslib_1$26.__exportStar(require_filter_log_levels_util(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/file-stream/streamable-file.js
var require_streamable_file = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/file-stream/streamable-file.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.StreamableFile = void 0;
	const stream_1 = __require("stream");
	const util_1$1 = __require("util");
	const enums_1$5 = require_enums$1();
	const services_1 = require_services();
	const shared_utils_1$12 = require_shared_utils();
	/**
	* @see [Streaming files](https://docs.nestjs.com/techniques/streaming-files)
	*
	* @publicApi
	*/
	var StreamableFile = class {
		constructor(bufferOrReadStream, options = {}) {
			var _this = this;
			this.options = options;
			this.logger = new services_1.Logger("StreamableFile");
			this.handleError = function(err, res) {
				if (res.destroyed) return;
				if (res.headersSent) {
					res.end();
					return;
				}
				res.statusCode = enums_1$5.HttpStatus.BAD_REQUEST;
				res.send(err.message);
			};
			this.logError = function(err) {
				_this.logger.error(err);
			};
			if (util_1$1.types.isUint8Array(bufferOrReadStream)) {
				var _this$options, _this$options$length;
				this.stream = new stream_1.Readable();
				this.stream.push(bufferOrReadStream);
				this.stream.push(null);
				(_this$options$length = (_this$options = this.options).length) !== null && _this$options$length !== void 0 || (_this$options.length = bufferOrReadStream.length);
			} else if (bufferOrReadStream.pipe && (0, shared_utils_1$12.isFunction)(bufferOrReadStream.pipe)) this.stream = bufferOrReadStream;
		}
		getStream() {
			return this.stream;
		}
		getHeaders() {
			const { type = "application/octet-stream", disposition = void 0, length: length$1 = void 0 } = this.options;
			return {
				type,
				disposition,
				length: length$1
			};
		}
		get errorHandler() {
			return this.handleError;
		}
		setErrorHandler(handler) {
			this.handleError = handler;
			return this;
		}
		get errorLogger() {
			return this.logError;
		}
		setErrorLogger(handler) {
			this.logError = handler;
			return this;
		}
	};
	exports.StreamableFile = StreamableFile;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/file-stream/index.js
var require_file_stream = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/file-stream/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$25 = __require("tslib");
	tslib_1$25.__exportStar(require_streamable_file(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/abstract.interface.js
var require_abstract_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/abstract.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/controllers/controller-metadata.interface.js
var require_controller_metadata_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/controllers/controller-metadata.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/controllers/controller.interface.js
var require_controller_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/controllers/controller.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/exceptions/exception-filter.interface.js
var require_exception_filter_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/exceptions/exception-filter.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/exceptions/rpc-exception-filter.interface.js
var require_rpc_exception_filter_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/exceptions/rpc-exception-filter.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/exceptions/ws-exception-filter.interface.js
var require_ws_exception_filter_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/exceptions/ws-exception-filter.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/external/validation-error.interface.js
var require_validation_error_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/external/validation-error.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/arguments-host.interface.js
var require_arguments_host_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/arguments-host.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/can-activate.interface.js
var require_can_activate_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/can-activate.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/custom-route-param-factory.interface.js
var require_custom_route_param_factory_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/custom-route-param-factory.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/execution-context.interface.js
var require_execution_context_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/execution-context.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/nest-interceptor.interface.js
var require_nest_interceptor_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/nest-interceptor.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/paramtype.interface.js
var require_paramtype_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/paramtype.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/pipe-transform.interface.js
var require_pipe_transform_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/features/pipe-transform.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/global-prefix-options.interface.js
var require_global_prefix_options_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/global-prefix-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/before-application-shutdown.interface.js
var require_before_application_shutdown_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/before-application-shutdown.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/on-application-bootstrap.interface.js
var require_on_application_bootstrap_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/on-application-bootstrap.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/on-application-shutdown.interface.js
var require_on_application_shutdown_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/on-application-shutdown.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/on-destroy.interface.js
var require_on_destroy_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/on-destroy.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/on-init.interface.js
var require_on_init_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/on-init.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/index.js
var require_hooks = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/hooks/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$24 = __require("tslib");
	tslib_1$24.__exportStar(require_before_application_shutdown_interface(), exports);
	tslib_1$24.__exportStar(require_on_application_bootstrap_interface(), exports);
	tslib_1$24.__exportStar(require_on_application_shutdown_interface(), exports);
	tslib_1$24.__exportStar(require_on_destroy_interface(), exports);
	tslib_1$24.__exportStar(require_on_init_interface(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/http-exception-body.interface.js
var require_http_exception_body_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/http-exception-body.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/http-redirect-response.interface.js
var require_http_redirect_response_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/http-redirect-response.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/http-server.interface.js
var require_http_server_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/http-server.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/message-event.interface.js
var require_message_event_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/message-event.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/raw-body-request.interface.js
var require_raw_body_request_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/raw-body-request.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/index.js
var require_http = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/http/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$23 = __require("tslib");
	tslib_1$23.__exportStar(require_http_exception_body_interface(), exports);
	tslib_1$23.__exportStar(require_http_redirect_response_interface(), exports);
	tslib_1$23.__exportStar(require_http_server_interface(), exports);
	tslib_1$23.__exportStar(require_message_event_interface(), exports);
	tslib_1$23.__exportStar(require_raw_body_request_interface(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/injectable.interface.js
var require_injectable_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/injectable.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/microservices/nest-hybrid-application-options.interface.js
var require_nest_hybrid_application_options_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/microservices/nest-hybrid-application-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/middleware/middleware-config-proxy.interface.js
var require_middleware_config_proxy_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/middleware/middleware-config-proxy.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/middleware/middleware-configuration.interface.js
var require_middleware_configuration_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/middleware/middleware-configuration.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/middleware/middleware-consumer.interface.js
var require_middleware_consumer_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/middleware/middleware-consumer.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/middleware/nest-middleware.interface.js
var require_nest_middleware_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/middleware/nest-middleware.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/middleware/index.js
var require_middleware = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/middleware/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$22 = __require("tslib");
	tslib_1$22.__exportStar(require_middleware_config_proxy_interface(), exports);
	tslib_1$22.__exportStar(require_middleware_configuration_interface(), exports);
	tslib_1$22.__exportStar(require_middleware_consumer_interface(), exports);
	tslib_1$22.__exportStar(require_nest_middleware_interface(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/dynamic-module.interface.js
var require_dynamic_module_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/dynamic-module.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/forward-reference.interface.js
var require_forward_reference_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/forward-reference.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/injection-token.interface.js
var require_injection_token_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/injection-token.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/introspection-result.interface.js
var require_introspection_result_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/introspection-result.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/module-metadata.interface.js
var require_module_metadata_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/module-metadata.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/nest-module.interface.js
var require_nest_module_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/nest-module.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/optional-factory-dependency.interface.js
var require_optional_factory_dependency_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/optional-factory-dependency.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/provider.interface.js
var require_provider_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/provider.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/index.js
var require_modules = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/modules/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$21 = __require("tslib");
	tslib_1$21.__exportStar(require_dynamic_module_interface(), exports);
	tslib_1$21.__exportStar(require_forward_reference_interface(), exports);
	tslib_1$21.__exportStar(require_injection_token_interface(), exports);
	tslib_1$21.__exportStar(require_introspection_result_interface(), exports);
	tslib_1$21.__exportStar(require_module_metadata_interface(), exports);
	tslib_1$21.__exportStar(require_nest_module_interface(), exports);
	tslib_1$21.__exportStar(require_optional_factory_dependency_interface(), exports);
	tslib_1$21.__exportStar(require_provider_interface(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/nest-application-context.interface.js
var require_nest_application_context_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/nest-application-context.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/nest-application-options.interface.js
var require_nest_application_options_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/nest-application-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/nest-application.interface.js
var require_nest_application_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/nest-application.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/nest-microservice.interface.js
var require_nest_microservice_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/nest-microservice.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/scope-options.interface.js
var require_scope_options_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/scope-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Scope = void 0;
	/**
	* @publicApi
	*/
	var Scope;
	(function(Scope$1) {
		/**
		* The provider can be shared across multiple classes. The provider lifetime
		* is strictly tied to the application lifecycle. Once the application has
		* bootstrapped, all providers have been instantiated.
		*/
		Scope$1[Scope$1["DEFAULT"] = 0] = "DEFAULT";
		/**
		* A new private instance of the provider is instantiated for every use
		*/
		Scope$1[Scope$1["TRANSIENT"] = 1] = "TRANSIENT";
		/**
		* A new instance is instantiated for each request processing pipeline
		*/
		Scope$1[Scope$1["REQUEST"] = 2] = "REQUEST";
	})(Scope || (exports.Scope = Scope = {}));
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/type.interface.js
var require_type_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/type.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/version-options.interface.js
var require_version_options_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/version-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.VERSION_NEUTRAL = void 0;
	/**
	* Indicates that this will work for any version passed in the request, or no version.
	*
	* @publicApi
	*/
	exports.VERSION_NEUTRAL = Symbol("VERSION_NEUTRAL");
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/websockets/web-socket-adapter.interface.js
var require_web_socket_adapter_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/websockets/web-socket-adapter.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/index.js
var require_interfaces$2 = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/interfaces/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$20 = __require("tslib");
	tslib_1$20.__exportStar(require_abstract_interface(), exports);
	tslib_1$20.__exportStar(require_controller_metadata_interface(), exports);
	tslib_1$20.__exportStar(require_controller_interface(), exports);
	tslib_1$20.__exportStar(require_exception_filter_interface(), exports);
	tslib_1$20.__exportStar(require_rpc_exception_filter_interface(), exports);
	tslib_1$20.__exportStar(require_ws_exception_filter_interface(), exports);
	tslib_1$20.__exportStar(require_validation_error_interface(), exports);
	tslib_1$20.__exportStar(require_arguments_host_interface(), exports);
	tslib_1$20.__exportStar(require_can_activate_interface(), exports);
	tslib_1$20.__exportStar(require_custom_route_param_factory_interface(), exports);
	tslib_1$20.__exportStar(require_execution_context_interface(), exports);
	tslib_1$20.__exportStar(require_nest_interceptor_interface(), exports);
	tslib_1$20.__exportStar(require_paramtype_interface(), exports);
	tslib_1$20.__exportStar(require_pipe_transform_interface(), exports);
	tslib_1$20.__exportStar(require_global_prefix_options_interface(), exports);
	tslib_1$20.__exportStar(require_hooks(), exports);
	tslib_1$20.__exportStar(require_http(), exports);
	tslib_1$20.__exportStar(require_injectable_interface(), exports);
	tslib_1$20.__exportStar(require_nest_hybrid_application_options_interface(), exports);
	tslib_1$20.__exportStar(require_middleware(), exports);
	tslib_1$20.__exportStar(require_modules(), exports);
	tslib_1$20.__exportStar(require_nest_application_context_interface(), exports);
	tslib_1$20.__exportStar(require_nest_application_options_interface(), exports);
	tslib_1$20.__exportStar(require_nest_application_interface(), exports);
	tslib_1$20.__exportStar(require_nest_microservice_interface(), exports);
	tslib_1$20.__exportStar(require_scope_options_interface(), exports);
	tslib_1$20.__exportStar(require_type_interface(), exports);
	tslib_1$20.__exportStar(require_version_options_interface(), exports);
	tslib_1$20.__exportStar(require_web_socket_adapter_interface(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/random-string-generator.util.js
var require_random_string_generator_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/random-string-generator.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.randomStringGenerator = void 0;
	const uid_1 = require_dist();
	const randomStringGenerator = function() {
		return (0, uid_1.uid)(21);
	};
	exports.randomStringGenerator = randomStringGenerator;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/constants.js
var require_constants$1 = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/constants.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.CONFIGURABLE_MODULE_ID = exports.ASYNC_METHOD_SUFFIX = exports.DEFAULT_FACTORY_CLASS_METHOD_KEY = exports.DEFAULT_METHOD_KEY = void 0;
	exports.DEFAULT_METHOD_KEY = "register";
	exports.DEFAULT_FACTORY_CLASS_METHOD_KEY = "create";
	exports.ASYNC_METHOD_SUFFIX = "Async";
	exports.CONFIGURABLE_MODULE_ID = "CONFIGURABLE_MODULE_ID";
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/utils/generate-options-injection-token.util.js
var require_generate_options_injection_token_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/utils/generate-options-injection-token.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.generateOptionsInjectionToken = generateOptionsInjectionToken;
	const random_string_generator_util_1$1 = require_random_string_generator_util();
	function generateOptionsInjectionToken() {
		const hash = (0, random_string_generator_util_1$1.randomStringGenerator)();
		return `CONFIGURABLE_MODULE_OPTIONS[${hash}]`;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/utils/get-injection-providers.util.js
var require_get_injection_providers_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/utils/get-injection-providers.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.getInjectionProviders = getInjectionProviders;
	const shared_utils_1$11 = require_shared_utils();
	/**
	* @param value
	* @returns `true` if value is `OptionalFactoryDependency`
	*/
	function isOptionalFactoryDependency(value) {
		return !(0, shared_utils_1$11.isUndefined)(value.token) && !(0, shared_utils_1$11.isUndefined)(value.optional) && !value.prototype;
	}
	const mapInjectToTokens = function(t) {
		return isOptionalFactoryDependency(t) ? t.token : t;
	};
	/**
	*
	* @param providers List of a module's providers
	* @param tokens Injection tokens needed for a useFactory function (usually the module's options' token)
	* @returns All the providers needed for the tokens' injection (searched recursively)
	*/
	function getInjectionProviders(providers, tokens) {
		const result$1 = [];
		let search = tokens.map(mapInjectToTokens);
		while (search.length > 0) {
			const match = (providers !== null && providers !== void 0 ? providers : []).filter(function(p) {
				return !result$1.includes(p) && (search.includes(p) || search.includes(p === null || p === void 0 ? void 0 : p.provide));
			});
			result$1.push(...match);
			search = match.filter(function(p) {
				return p === null || p === void 0 ? void 0 : p.inject;
			}).flatMap(function(p) {
				return p.inject;
			}).map(mapInjectToTokens);
		}
		return result$1;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/utils/index.js
var require_utils$4 = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/utils/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$19 = __require("tslib");
	tslib_1$19.__exportStar(require_generate_options_injection_token_util(), exports);
	tslib_1$19.__exportStar(require_get_injection_providers_util(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/configurable-module.builder.js
var require_configurable_module_builder = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/configurable-module.builder.js"(exports) {
	var import_objectSpread2$6 = __toESM(require_objectSpread2());
	var import_asyncToGenerator$10 = __toESM(require_asyncToGenerator());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ConfigurableModuleBuilder = void 0;
	const logger_service_1$1 = require_logger_service();
	const random_string_generator_util_1 = require_random_string_generator_util();
	const constants_1 = require_constants$1();
	const utils_1$5 = require_utils$4();
	/**
	* Factory that lets you create configurable modules and
	* provides a way to reduce the majority of dynamic module boilerplate.
	*
	* @publicApi
	*/
	var ConfigurableModuleBuilder = class ConfigurableModuleBuilder {
		constructor(options = {}, parentBuilder) {
			this.options = options;
			this.logger = new logger_service_1$1.Logger(ConfigurableModuleBuilder.name);
			if (parentBuilder) {
				this.staticMethodKey = parentBuilder.staticMethodKey;
				this.factoryClassMethodKey = parentBuilder.factoryClassMethodKey;
				this.transformModuleDefinition = parentBuilder.transformModuleDefinition;
				this.extras = parentBuilder.extras;
			}
		}
		/**
		* Registers the "extras" object (a set of extra options that can be used to modify the dynamic module definition).
		* Values you specify within the "extras" object will be used as default values (that can be overridden by module consumers).
		*
		* This method also applies the so-called "module definition transform function" that takes the auto-generated
		* dynamic module object ("DynamicModule") and the actual consumer "extras" object as input parameters.
		* The "extras" object consists of values explicitly specified by module consumers and default values.
		*
		* @example
		* ```typescript
		* .setExtras<{ isGlobal?: boolean }>({ isGlobal: false }, (definition, extras) =>
		*    ({ ...definition, global: extras.isGlobal })
		* )
		* ```
		*/
		setExtras(extras, transformDefinition = function(def) {
			return def;
		}) {
			const builder = new ConfigurableModuleBuilder(this.options, this);
			builder.extras = extras;
			builder.transformModuleDefinition = transformDefinition;
			return builder;
		}
		/**
		* Dynamic modules must expose public static methods that let you pass in
		* configuration parameters (control the module's behavior from the outside).
		* Some frequently used names that you may have seen in other modules are:
		* "forRoot", "forFeature", "register", "configure".
		*
		* This method "setClassMethodName" lets you specify the name of the
		* method that will be auto-generated.
		*
		* @param key name of the method
		*/
		setClassMethodName(key) {
			const builder = new ConfigurableModuleBuilder(this.options, this);
			builder.staticMethodKey = key;
			return builder;
		}
		/**
		* Asynchronously configured modules (that rely on other modules, i.e. "ConfigModule")
		* let you pass the configuration factory class that will be registered and instantiated as a provider.
		* This provider then will be used to retrieve the module's configuration. To provide the configuration,
		* the corresponding factory method must be implemented.
		*
		* This method ("setFactoryMethodName") lets you control what method name will have to be
		* implemented by the config factory (default is "create").
		*
		* @param key name of the method
		*/
		setFactoryMethodName(key) {
			const builder = new ConfigurableModuleBuilder(this.options, this);
			builder.factoryClassMethodKey = key;
			return builder;
		}
		/**
		* Returns an object consisting of multiple properties that lets you
		* easily construct dynamic configurable modules. See "ConfigurableModuleHost" interface for more details.
		*/
		build() {
			var _this$staticMethodKey, _this$factoryClassMet, _this$options, _this$options$options, _this$transformModule;
			(_this$staticMethodKey = this.staticMethodKey) !== null && _this$staticMethodKey !== void 0 || (this.staticMethodKey = constants_1.DEFAULT_METHOD_KEY);
			(_this$factoryClassMet = this.factoryClassMethodKey) !== null && _this$factoryClassMet !== void 0 || (this.factoryClassMethodKey = constants_1.DEFAULT_FACTORY_CLASS_METHOD_KEY);
			(_this$options$options = (_this$options = this.options).optionsInjectionToken) !== null && _this$options$options !== void 0 || (_this$options.optionsInjectionToken = this.options.moduleName ? this.constructInjectionTokenString() : (0, utils_1$5.generateOptionsInjectionToken)());
			(_this$transformModule = this.transformModuleDefinition) !== null && _this$transformModule !== void 0 || (this.transformModuleDefinition = function(definition) {
				return definition;
			});
			return {
				ConfigurableModuleClass: this.createConfigurableModuleCls(),
				MODULE_OPTIONS_TOKEN: this.options.optionsInjectionToken,
				ASYNC_OPTIONS_TYPE: this.createTypeProxy("ASYNC_OPTIONS_TYPE"),
				OPTIONS_TYPE: this.createTypeProxy("OPTIONS_TYPE")
			};
		}
		constructInjectionTokenString() {
			const moduleNameInSnakeCase = this.options.moduleName.trim().split(/(?=[A-Z])/).join("_").toUpperCase();
			return `${moduleNameInSnakeCase}_MODULE_OPTIONS`;
		}
		createConfigurableModuleCls() {
			const self$1 = this;
			const asyncMethodKey = this.staticMethodKey + constants_1.ASYNC_METHOD_SUFFIX;
			class InternalModuleClass {
				static [self$1.staticMethodKey](options) {
					const providers = [{
						provide: self$1.options.optionsInjectionToken,
						useValue: this.omitExtras(options, self$1.extras)
					}];
					if (self$1.options.alwaysTransient) providers.push({
						provide: constants_1.CONFIGURABLE_MODULE_ID,
						useValue: (0, random_string_generator_util_1.randomStringGenerator)()
					});
					return self$1.transformModuleDefinition({
						module: this,
						providers
					}, (0, import_objectSpread2$6.default)((0, import_objectSpread2$6.default)({}, self$1.extras), options));
				}
				static [asyncMethodKey](options) {
					const providers = this.createAsyncProviders(options);
					if (self$1.options.alwaysTransient) providers.push({
						provide: constants_1.CONFIGURABLE_MODULE_ID,
						useValue: (0, random_string_generator_util_1.randomStringGenerator)()
					});
					return self$1.transformModuleDefinition({
						module: this,
						imports: options.imports || [],
						providers
					}, (0, import_objectSpread2$6.default)((0, import_objectSpread2$6.default)({}, self$1.extras), options));
				}
				static omitExtras(input, extras) {
					if (!extras) return input;
					const moduleOptions = {};
					const extrasKeys = Object.keys(extras);
					Object.keys(input).filter(function(key) {
						return !extrasKeys.includes(key);
					}).forEach(function(key) {
						moduleOptions[key] = input[key];
					});
					return moduleOptions;
				}
				static createAsyncProviders(options) {
					if (options.useExisting || options.useFactory) {
						if (options.inject && options.provideInjectionTokensFrom) return [this.createAsyncOptionsProvider(options), ...(0, utils_1$5.getInjectionProviders)(options.provideInjectionTokensFrom, options.inject)];
						return [this.createAsyncOptionsProvider(options)];
					}
					return [this.createAsyncOptionsProvider(options), {
						provide: options.useClass,
						useClass: options.useClass
					}];
				}
				static createAsyncOptionsProvider(options) {
					if (options.useFactory) return {
						provide: self$1.options.optionsInjectionToken,
						useFactory: options.useFactory,
						inject: options.inject || []
					};
					return {
						provide: self$1.options.optionsInjectionToken,
						useFactory: function() {
							var _ref = (0, import_asyncToGenerator$10.default)(function* (optionsFactory) {
								return yield optionsFactory[self$1.factoryClassMethodKey]();
							});
							return function useFactory(_x) {
								return _ref.apply(this, arguments);
							};
						}(),
						inject: [options.useExisting || options.useClass]
					};
				}
			}
			return InternalModuleClass;
		}
		createTypeProxy(typeName) {
			const proxy = new Proxy({}, { get: function() {
				throw new Error(`"${typeName}" is not supposed to be used as a value.`);
			} });
			return proxy;
		}
	};
	exports.ConfigurableModuleBuilder = ConfigurableModuleBuilder;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-async-options.interface.js
var require_configurable_module_async_options_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-async-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.js
var require_configurable_module_cls_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-host.interface.js
var require_configurable_module_host_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-host.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/interfaces/index.js
var require_interfaces$1 = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/interfaces/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$18 = __require("tslib");
	tslib_1$18.__exportStar(require_configurable_module_async_options_interface(), exports);
	tslib_1$18.__exportStar(require_configurable_module_cls_interface(), exports);
	tslib_1$18.__exportStar(require_configurable_module_host_interface(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/index.js
var require_module_utils = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/module-utils/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$17 = __require("tslib");
	tslib_1$17.__exportStar(require_configurable_module_builder(), exports);
	tslib_1$17.__exportStar(require_interfaces$1(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/default-value.pipe.js
var require_default_value_pipe = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/default-value.pipe.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.DefaultValuePipe = void 0;
	const tslib_1$16 = __require("tslib");
	const injectable_decorator_1$5 = require_injectable_decorator();
	const shared_utils_1$10 = require_shared_utils();
	/**
	* Defines the built-in DefaultValue Pipe
	*
	* @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)
	*
	* @publicApi
	*/
	let DefaultValuePipe = class DefaultValuePipe$1 {
		constructor(defaultValue) {
			this.defaultValue = defaultValue;
		}
		transform(value, _metadata$17) {
			if ((0, shared_utils_1$10.isNil)(value) || (0, shared_utils_1$10.isNumber)(value) && isNaN(value)) return this.defaultValue;
			return value;
		}
	};
	exports.DefaultValuePipe = DefaultValuePipe;
	exports.DefaultValuePipe = DefaultValuePipe = tslib_1$16.__decorate([(0, injectable_decorator_1$5.Injectable)(), tslib_1$16.__metadata("design:paramtypes", [Object])], DefaultValuePipe);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/file-validator.interface.js
var require_file_validator_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/file-validator.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.FileValidator = void 0;
	/**
	* Interface describing FileValidators, which can be added to a ParseFilePipe
	*
	* @see {ParseFilePipe}
	* @publicApi
	*/
	var FileValidator = class {
		constructor(validationOptions) {
			this.validationOptions = validationOptions;
		}
	};
	exports.FileValidator = FileValidator;
} });

//#endregion
//#region ../../node_modules/.pnpm/load-esm@1.0.2/node_modules/load-esm/index.js
var require_load_esm = __commonJS({ "../../node_modules/.pnpm/load-esm@1.0.2/node_modules/load-esm/index.js"(exports, module) {
	module.exports = { loadEsm: function(module$1) {
		return import(module$1);
	} };
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/file-type.validator.js
var require_file_type_validator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/file-type.validator.js"(exports) {
	var import_asyncToGenerator$9 = __toESM(require_asyncToGenerator());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.FileTypeValidator = void 0;
	const file_validator_interface_1$1 = require_file_validator_interface();
	const load_esm_1 = require_load_esm();
	/**
	* Defines the built-in FileTypeValidator. It validates incoming files by examining
	* their magic numbers using the file-type package, providing more reliable file type validation
	* than just checking the mimetype string.
	*
	* @see [File Validators](https://docs.nestjs.com/techniques/file-upload#validators)
	*
	* @publicApi
	*/
	var FileTypeValidator = class extends file_validator_interface_1$1.FileValidator {
		buildErrorMessage(file) {
			const expected = this.validationOptions.fileType;
			if (file === null || file === void 0 ? void 0 : file.mimetype) {
				const baseMessage = `Validation failed (current file type is ${file.mimetype}, expected type is ${expected})`;
				/**
				* If fallbackToMimetype is enabled, this means the validator failed to detect the file type
				* via magic number inspection (e.g. due to an unknown or too short buffer),
				* and instead used the mimetype string provided by the client as a fallback.
				*
				* This message clarifies that fallback logic was used, in case users rely on file signatures.
				*/
				if (this.validationOptions.fallbackToMimetype) return `${baseMessage} - magic number detection failed, used mimetype fallback`;
				return baseMessage;
			}
			return `Validation failed (expected type is ${expected})`;
		}
		isValid(file) {
			return (0, import_asyncToGenerator$9.default)(function* () {
				if (!this.validationOptions) return true;
				const isFileValid = !!file && "mimetype" in file;
				if (this.validationOptions.skipMagicNumbersValidation) return isFileValid && !!file.mimetype.match(this.validationOptions.fileType);
				if (!isFileValid || !file.buffer) return false;
				try {
					const { fileTypeFromBuffer } = yield (0, load_esm_1.loadEsm)("file-type");
					const fileType = yield fileTypeFromBuffer(file.buffer);
					if (fileType) return !!fileType.mime.match(this.validationOptions.fileType);
					/**
					* Fallback logic: If file-type cannot detect magic number (e.g. file too small),
					* Optionally fall back to mimetype string for compatibility.
					* This is useful for plain text, CSVs, or files without recognizable signatures.
					*/
					if (this.validationOptions.fallbackToMimetype) return !!file.mimetype.match(this.validationOptions.fileType);
					return false;
				} catch (_unused) {
					return false;
				}
			})();
		}
	};
	exports.FileTypeValidator = FileTypeValidator;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/max-file-size.validator.js
var require_max_file_size_validator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/max-file-size.validator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.MaxFileSizeValidator = void 0;
	const file_validator_interface_1 = require_file_validator_interface();
	/**
	* Defines the built-in MaxSize File Validator
	*
	* @see [File Validators](https://docs.nestjs.com/techniques/file-upload#file-validation)
	*
	* @publicApi
	*/
	var MaxFileSizeValidator = class extends file_validator_interface_1.FileValidator {
		buildErrorMessage(file) {
			if ("message" in this.validationOptions) {
				if (typeof this.validationOptions.message === "function") return this.validationOptions.message(this.validationOptions.maxSize);
				return this.validationOptions.message;
			}
			if (file === null || file === void 0 ? void 0 : file.size) return `Validation failed (current file size is ${file.size}, expected size is less than ${this.validationOptions.maxSize})`;
			return `Validation failed (expected size is less than ${this.validationOptions.maxSize})`;
		}
		isValid(file) {
			if (!this.validationOptions || !file) return true;
			return "size" in file && file.size < this.validationOptions.maxSize;
		}
	};
	exports.MaxFileSizeValidator = MaxFileSizeValidator;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/parse-file-options.interface.js
var require_parse_file_options_interface = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/parse-file-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/http-error-by-code.util.js
var require_http_error_by_code_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/http-error-by-code.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.HttpErrorByCode = void 0;
	const enums_1$4 = require_enums$1();
	const exceptions_1 = require_exceptions();
	exports.HttpErrorByCode = {
		[enums_1$4.HttpStatus.BAD_GATEWAY]: exceptions_1.BadGatewayException,
		[enums_1$4.HttpStatus.BAD_REQUEST]: exceptions_1.BadRequestException,
		[enums_1$4.HttpStatus.CONFLICT]: exceptions_1.ConflictException,
		[enums_1$4.HttpStatus.FORBIDDEN]: exceptions_1.ForbiddenException,
		[enums_1$4.HttpStatus.GATEWAY_TIMEOUT]: exceptions_1.GatewayTimeoutException,
		[enums_1$4.HttpStatus.GONE]: exceptions_1.GoneException,
		[enums_1$4.HttpStatus.I_AM_A_TEAPOT]: exceptions_1.ImATeapotException,
		[enums_1$4.HttpStatus.INTERNAL_SERVER_ERROR]: exceptions_1.InternalServerErrorException,
		[enums_1$4.HttpStatus.METHOD_NOT_ALLOWED]: exceptions_1.MethodNotAllowedException,
		[enums_1$4.HttpStatus.NOT_ACCEPTABLE]: exceptions_1.NotAcceptableException,
		[enums_1$4.HttpStatus.NOT_FOUND]: exceptions_1.NotFoundException,
		[enums_1$4.HttpStatus.NOT_IMPLEMENTED]: exceptions_1.NotImplementedException,
		[enums_1$4.HttpStatus.PAYLOAD_TOO_LARGE]: exceptions_1.PayloadTooLargeException,
		[enums_1$4.HttpStatus.PRECONDITION_FAILED]: exceptions_1.PreconditionFailedException,
		[enums_1$4.HttpStatus.REQUEST_TIMEOUT]: exceptions_1.RequestTimeoutException,
		[enums_1$4.HttpStatus.SERVICE_UNAVAILABLE]: exceptions_1.ServiceUnavailableException,
		[enums_1$4.HttpStatus.UNAUTHORIZED]: exceptions_1.UnauthorizedException,
		[enums_1$4.HttpStatus.UNPROCESSABLE_ENTITY]: exceptions_1.UnprocessableEntityException,
		[enums_1$4.HttpStatus.UNSUPPORTED_MEDIA_TYPE]: exceptions_1.UnsupportedMediaTypeException
	};
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/parse-file.pipe.js
var require_parse_file_pipe = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/parse-file.pipe.js"(exports) {
	var import_asyncToGenerator$8 = __toESM(require_asyncToGenerator());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ParseFilePipe = void 0;
	const tslib_1$15 = __require("tslib");
	const core_1$4 = require_core$1();
	const enums_1$3 = require_enums$1();
	const http_error_by_code_util_1$8 = require_http_error_by_code_util();
	const shared_utils_1$9 = require_shared_utils();
	/**
	* Defines the built-in ParseFile Pipe. This pipe can be used to validate incoming files
	* with `@UploadedFile()` decorator. You can use either other specific built-in validators
	* or provide one of your own, simply implementing it through FileValidator interface
	* and adding it to ParseFilePipe's constructor.
	*
	* @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)
	*
	* @publicApi
	*/
	let ParseFilePipe = class ParseFilePipe$1 {
		constructor(options = {}) {
			const { exceptionFactory, errorHttpStatusCode = enums_1$3.HttpStatus.BAD_REQUEST, validators: validators$2 = [], fileIsRequired } = options;
			this.exceptionFactory = exceptionFactory || function(error) {
				return new http_error_by_code_util_1$8.HttpErrorByCode[errorHttpStatusCode](error);
			};
			this.validators = validators$2;
			this.fileIsRequired = fileIsRequired !== null && fileIsRequired !== void 0 ? fileIsRequired : true;
		}
		transform(value) {
			return (0, import_asyncToGenerator$8.default)(function* () {
				const areThereAnyFilesIn = this.thereAreNoFilesIn(value);
				if (areThereAnyFilesIn && this.fileIsRequired) throw this.exceptionFactory("File is required");
				if (!areThereAnyFilesIn && this.validators.length) yield this.validateFilesOrFile(value);
				return value;
			})();
		}
		validateFilesOrFile(value) {
			var _this = this;
			return (0, import_asyncToGenerator$8.default)(function* () {
				if (Array.isArray(value)) yield Promise.all(value.map(function(f) {
					return _this.validate(f);
				}));
				else yield this.validate(value);
			})();
		}
		thereAreNoFilesIn(value) {
			const isEmptyArray = Array.isArray(value) && (0, shared_utils_1$9.isEmpty)(value);
			const isEmptyObject = (0, shared_utils_1$9.isObject)(value) && (0, shared_utils_1$9.isEmpty)(Object.keys(value));
			return (0, shared_utils_1$9.isUndefined)(value) || isEmptyArray || isEmptyObject;
		}
		validate(file) {
			return (0, import_asyncToGenerator$8.default)(function* () {
				for (const validator$2 of this.validators) yield this.validateOrThrow(file, validator$2);
				return file;
			})();
		}
		validateOrThrow(file, validator$2) {
			return (0, import_asyncToGenerator$8.default)(function* () {
				const isValid = yield validator$2.isValid(file);
				if (!isValid) {
					const errorMessage = validator$2.buildErrorMessage(file);
					throw this.exceptionFactory(errorMessage);
				}
			})();
		}
		/**
		* @returns list of validators used in this pipe.
		*/
		getValidators() {
			return this.validators;
		}
	};
	exports.ParseFilePipe = ParseFilePipe;
	exports.ParseFilePipe = ParseFilePipe = tslib_1$15.__decorate([
		(0, core_1$4.Injectable)(),
		tslib_1$15.__param(0, (0, core_1$4.Optional)()),
		tslib_1$15.__metadata("design:paramtypes", [Object])
	], ParseFilePipe);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/parse-file-pipe.builder.js
var require_parse_file_pipe_builder = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/parse-file-pipe.builder.js"(exports) {
	var import_objectSpread2$5 = __toESM(require_objectSpread2());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ParseFilePipeBuilder = void 0;
	const file_type_validator_1 = require_file_type_validator();
	const max_file_size_validator_1 = require_max_file_size_validator();
	const parse_file_pipe_1 = require_parse_file_pipe();
	/**
	* @publicApi
	*/
	var ParseFilePipeBuilder = class {
		constructor() {
			this.validators = [];
		}
		addMaxSizeValidator(options) {
			return this.addValidator(new max_file_size_validator_1.MaxFileSizeValidator(options));
		}
		addFileTypeValidator(options) {
			return this.addValidator(new file_type_validator_1.FileTypeValidator(options));
		}
		addValidator(validator$2) {
			this.validators.push(validator$2);
			return this;
		}
		build(additionalOptions) {
			const parseFilePipe = new parse_file_pipe_1.ParseFilePipe((0, import_objectSpread2$5.default)((0, import_objectSpread2$5.default)({}, additionalOptions), {}, { validators: this.validators }));
			this.validators = [];
			return parseFilePipe;
		}
	};
	exports.ParseFilePipeBuilder = ParseFilePipeBuilder;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/index.js
var require_file = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/file/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$14 = __require("tslib");
	tslib_1$14.__exportStar(require_file_type_validator(), exports);
	tslib_1$14.__exportStar(require_file_validator_interface(), exports);
	tslib_1$14.__exportStar(require_max_file_size_validator(), exports);
	tslib_1$14.__exportStar(require_parse_file_options_interface(), exports);
	tslib_1$14.__exportStar(require_parse_file_pipe(), exports);
	tslib_1$14.__exportStar(require_parse_file_pipe_builder(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.76.0/node_modules/@oxc-project/runtime/src/helpers/objectWithoutPropertiesLoose.js
var require_objectWithoutPropertiesLoose = __commonJS({ "../../node_modules/.pnpm/@oxc-project+runtime@0.76.0/node_modules/@oxc-project/runtime/src/helpers/objectWithoutPropertiesLoose.js"(exports, module) {
	function _objectWithoutPropertiesLoose(r, e) {
		if (null == r) return {};
		var t = {};
		for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
			if (e.includes(n)) continue;
			t[n] = r[n];
		}
		return t;
	}
	module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;
} });

//#endregion
//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.76.0/node_modules/@oxc-project/runtime/src/helpers/objectWithoutProperties.js
var require_objectWithoutProperties = __commonJS({ "../../node_modules/.pnpm/@oxc-project+runtime@0.76.0/node_modules/@oxc-project/runtime/src/helpers/objectWithoutProperties.js"(exports, module) {
	var objectWithoutPropertiesLoose = require_objectWithoutPropertiesLoose();
	function _objectWithoutProperties$1(e, t) {
		if (null == e) return {};
		var o, r, i$1 = objectWithoutPropertiesLoose(e, t);
		if (Object.getOwnPropertySymbols) {
			var s = Object.getOwnPropertySymbols(e);
			for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i$1[o] = e[o]);
		}
		return i$1;
	}
	module.exports = _objectWithoutProperties$1, module.exports.__esModule = true, module.exports["default"] = module.exports;
} });

//#endregion
//#region ../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/concat.js
var require_concat$2 = __commonJS({ "../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/concat.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	var ConcatIterator = class {
		constructor(toConcat) {
			this.toConcat = toConcat;
		}
		next() {
			if (this.toConcat.length === 0) return { done: true };
			const result$1 = this.toConcat[0].next();
			if (!result$1.done) return result$1;
			this.toConcat.shift();
			return this.next();
		}
	};
	exports.ConcatIterator = ConcatIterator;
} });

//#endregion
//#region ../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/filter.js
var require_filter$1 = __commonJS({ "../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/filter.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	var FilterIterator = class {
		constructor(source, predicate) {
			this.source = source;
			this.predicate = predicate;
		}
		next() {
			let result$1;
			do
				result$1 = this.source.next();
			while (!result$1.done && !this.predicate(result$1.value));
			return result$1;
		}
	};
	exports.FilterIterator = FilterIterator;
} });

//#endregion
//#region ../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/utils.js
var require_utils$3 = __commonJS({ "../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/utils.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	function isIterator(candidate) {
		return typeof candidate === "object" && candidate !== null && typeof candidate.next === "function";
	}
	exports.isIterator = isIterator;
	function isIterable$1(candidate) {
		return typeof candidate === "object" && candidate !== null && typeof candidate[Symbol.iterator] === "function";
	}
	exports.isIterable = isIterable$1;
	function toIterator(collection) {
		if (isIterator(collection)) return collection;
		if (isIterable$1(collection)) return collection[Symbol.iterator]();
		throw new Error("Passed collection is neither an Iterator nor an Iterable");
	}
	exports.toIterator = toIterator;
} });

//#endregion
//#region ../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/flatten.js
var require_flatten = __commonJS({ "../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/flatten.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const utils_1$4 = require_utils$3();
	var FlattenIterator = class {
		constructor(outer) {
			this.outer = outer;
		}
		next() {
			if (this.inner) {
				const result$1 = this.inner.next();
				if (!result$1.done) return result$1;
				this.inner = void 0;
			}
			const { value, done } = this.outer.next();
			if (utils_1$4.isIterable(value)) {
				this.inner = value[Symbol.iterator]();
				return this.next();
			}
			return {
				value,
				done
			};
		}
	};
	exports.FlattenIterator = FlattenIterator;
} });

//#endregion
//#region ../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/map.js
var require_map$1 = __commonJS({ "../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/map.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	/**
	* An iterator that emits results by running each element through a provided predicate
	*/
	var MapIterator = class {
		constructor(source, iteratee) {
			this.source = source;
			this.iteratee = iteratee;
		}
		next() {
			const { value, done } = this.source.next();
			return {
				value: !done && this.iteratee(value),
				done
			};
		}
	};
	exports.MapIterator = MapIterator;
} });

//#endregion
//#region ../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/slice.js
var require_slice = __commonJS({ "../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/slice.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	var SliceIterator = class {
		/**
		* @param {Iterator<T>} source Source Iterator
		* @param {number} start Zero-based positive start index, inclusive
		* @param {number} end Zero-based positive end index, exclusive, defaults to end of iterator
		*/
		constructor(source, start, end = Infinity) {
			this.source = source;
			this.start = start;
			this.end = end;
			this.i = 0;
		}
		next() {
			while (this.i < this.start) {
				const result$1 = this.source.next();
				if (result$1.done) return result$1;
				this.i++;
			}
			this.i++;
			if (this.i >= this.end) return { done: true };
			return this.source.next();
		}
	};
	exports.SliceIterator = SliceIterator;
} });

//#endregion
//#region ../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/zip.js
var require_zip$2 = __commonJS({ "../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/zip.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	var ZipIterator = class {
		constructor(a, b) {
			this.a = a;
			this.b = b;
		}
		next() {
			const a = this.a.next();
			if (a.done) return { done: true };
			const b = this.b.next();
			if (b.done) return { done: true };
			return {
				value: [a.value, b.value],
				done: false
			};
		}
	};
	exports.ZipIterator = ZipIterator;
} });

//#endregion
//#region ../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/iterate.js
var require_iterate = __commonJS({ "../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/iterate.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const concat_1$5 = require_concat$2();
	const filter_1$6 = require_filter$1();
	const flatten_1 = require_flatten();
	const map_1$7 = require_map$1();
	const slice_1 = require_slice();
	const utils_1$3 = require_utils$3();
	const zip_1$4 = require_zip$2();
	var IteratorWithOperators = class IteratorWithOperators {
		/**
		* @param source Iterator to wrap
		*/
		constructor(source) {
			this.source = source;
		}
		/**
		* Returns a `{ value, done }` object that adheres to the Iterator protocol
		*/
		next() {
			return this.source.next();
		}
		/**
		* The presence of this method makes the Iterator itself Iterable.
		* This makes it possible to pass it to `for of` and Iterable-accepting functions like `Array.from()`
		*/
		[Symbol.iterator]() {
			return this;
		}
		/**
		* Returns a new Iterator by running each element thru iteratee
		*/
		map(iteratee) {
			return new IteratorWithOperators(new map_1$7.MapIterator(this.source, iteratee));
		}
		filter(predicate) {
			return new IteratorWithOperators(new filter_1$6.FilterIterator(this.source, predicate));
		}
		/**
		* Returns a new Iterator concatenating the Iterator with an additional Iterator or Iterable
		*/
		concat(collection) {
			return new IteratorWithOperators(new concat_1$5.ConcatIterator([this.source, utils_1$3.toIterator(collection)]));
		}
		/**
		* Returns a new Iterator that emits slice of the source with n elements taken from the beginning
		*
		* @param limit The number of elements to take.
		*/
		take(limit$1) {
			return new IteratorWithOperators(new slice_1.SliceIterator(this.source, 0, limit$1 + 1));
		}
		/**
		* Returns a new Iterator that emits slice of the source with n elements dropped from the beginning
		*
		* @param n The number of elements to drop.
		*/
		drop(n) {
			return new IteratorWithOperators(new slice_1.SliceIterator(this.source, n, Infinity));
		}
		/**
		* Returns a new Iterator that emits a slice of the source
		*
		* @param {number} start Zero-based positive start index, inclusive
		* @param {number} end Zero-based positive end index, exclusive, defaults to end of iterator
		*/
		slice(start, end = Infinity) {
			return new IteratorWithOperators(new slice_1.SliceIterator(this.source, start, end));
		}
		/**
		* Returns a new Iterator that flattens items emitted by the Iterator a single level deep
		*/
		flatten() {
			return new IteratorWithOperators(new flatten_1.FlattenIterator(this.source));
		}
		reduce(iteratee, accumulator) {
			let result$1;
			if (accumulator === void 0) {
				result$1 = this.source.next();
				if (result$1.done) throw new TypeError("Reduce of empty Iterator with no initial value");
				accumulator = result$1.value;
			}
			while (true) {
				result$1 = this.source.next();
				if (result$1.done) break;
				accumulator = iteratee(accumulator, result$1.value);
			}
			return accumulator;
		}
		find(predicate) {
			let result$1;
			while (true) {
				result$1 = this.source.next();
				if (result$1.done) return void 0;
				if (predicate(result$1.value)) return result$1.value;
			}
		}
		/**
		* Iterates and checks if `value` is emitted by the Iterator
		*
		* @param value The value to search
		*/
		includes(value) {
			let result$1;
			do {
				result$1 = this.source.next();
				if (!result$1.done && result$1.value === value) return true;
			} while (!result$1.done);
			return false;
		}
		/**
		* Iterates and checks if `predicate` returns truthy for any element emitted by the Iterator
		*/
		some(predicate) {
			let result$1;
			do {
				result$1 = this.source.next();
				if (!result$1.done && predicate(result$1.value)) return true;
			} while (!result$1.done);
			return false;
		}
		/**
		* Iterates and checks if `predicate` returns truthy for all elements emitted by the Iterator
		*/
		every(predicate) {
			let result$1;
			do {
				result$1 = this.source.next();
				if (!result$1.done && !predicate(result$1.value)) return false;
			} while (!result$1.done);
			return true;
		}
		/**
		* Iterates and invokes `iteratee` for every element emitted by the Iterator
		*/
		forEach(iteratee) {
			let result$1;
			while (true) {
				result$1 = this.source.next();
				if (result$1.done) break;
				iteratee(result$1.value);
			}
		}
		/**
		* Iterates and joins all elements emitted by the Iterator together as a string separated by an optional separator
		*/
		join(separator = ",") {
			let joined = "";
			let result$1;
			while (true) {
				result$1 = this.source.next();
				if (result$1.done) break;
				joined += separator + result$1.value;
			}
			return joined.substr(separator.length);
		}
		/**
		* Iterates and returns all items emitted by the Iterator as an array.
		* Equivalent to passing the Iterator to `Array.from()`
		*/
		toArray() {
			return Array.from(this);
		}
		/**
		* Iterates and returns all items emitted by the Iterator as an ES6 Set.
		* Equivalent to passing the Iterator to `new Set()`
		*/
		toSet() {
			const set = /* @__PURE__ */ new Set();
			while (true) {
				const { value, done } = this.next();
				if (done) return set;
				set.add(value);
			}
		}
		/**
		* Iterates and returns all `[key, value]` paris emitted by the Iterator as an ES6 Map.
		* Equivalent to passing the Iterator to `new Map()`
		*/
		toMap() {
			return new Map(this);
		}
	};
	exports.IteratorWithOperators = IteratorWithOperators;
	/**
	* Creates an Iterator with advanced chainable operator methods for any Iterable or Iterator
	*/
	function iterate(collection) {
		return new IteratorWithOperators(utils_1$3.toIterator(collection));
	}
	exports.iterate = iterate;
	/**
	* Creates an Iterator that emits pairs of values from the two passed Iterators
	*/
	function zip$3(a, b) {
		return new IteratorWithOperators(new zip_1$4.ZipIterator(utils_1$3.toIterator(a), utils_1$3.toIterator(b)));
	}
	exports.zip = zip$3;
	exports.default = iterate;
} });

//#endregion
//#region ../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/index.js
var require_lib = __commonJS({ "../../node_modules/.pnpm/iterare@1.2.1/node_modules/iterare/lib/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const iterate_1 = require_iterate();
	exports.iterate = iterate_1.iterate;
	exports.zip = iterate_1.zip;
	exports.default = iterate_1.iterate;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/load-package.util.js
var require_load_package_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/load-package.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.loadPackage = loadPackage;
	const logger_service_1 = require_logger_service();
	const MISSING_REQUIRED_DEPENDENCY = function(name, reason) {
		return `The "${name}" package is missing. Please, make sure to install it to take advantage of ${reason}.`;
	};
	const logger = new logger_service_1.Logger("PackageLoader");
	function loadPackage(packageName, context$1, loaderFn) {
		try {
			return loaderFn ? loaderFn() : __require(packageName);
		} catch (e) {
			logger.error(MISSING_REQUIRED_DEPENDENCY(packageName, context$1));
			logger_service_1.Logger.flush();
			process.exit(1);
		}
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/metadata/ValidationMetadata.js
var require_ValidationMetadata = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/metadata/ValidationMetadata.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ValidationMetadata = void 0;
	/**
	* This metadata contains validation rules.
	*/
	var ValidationMetadata = class {
		constructor(args) {
			/**
			* Validation groups used for this validation.
			*/
			this.groups = [];
			/**
			* Specifies if validated value is an array and each of its item must be validated.
			*/
			this.each = false;
			this.context = void 0;
			this.type = args.type;
			this.name = args.name;
			this.target = args.target;
			this.propertyName = args.propertyName;
			this.constraints = args === null || args === void 0 ? void 0 : args.constraints;
			this.constraintCls = args.constraintCls;
			this.validationTypeOptions = args.validationTypeOptions;
			if (args.validationOptions) {
				this.message = args.validationOptions.message;
				this.groups = args.validationOptions.groups;
				this.always = args.validationOptions.always;
				this.each = args.validationOptions.each;
				this.context = args.validationOptions.context;
			}
		}
	};
	exports.ValidationMetadata = ValidationMetadata;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation-schema/ValidationSchemaToMetadataTransformer.js
var require_ValidationSchemaToMetadataTransformer = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation-schema/ValidationSchemaToMetadataTransformer.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ValidationSchemaToMetadataTransformer = void 0;
	const ValidationMetadata_1$7 = require_ValidationMetadata();
	/**
	* Used to transform validation schemas to validation metadatas.
	*/
	var ValidationSchemaToMetadataTransformer = class {
		transform(schema) {
			const metadatas = [];
			Object.keys(schema.properties).forEach(function(property) {
				schema.properties[property].forEach(function(validation) {
					const validationOptions = {
						message: validation.message,
						groups: validation.groups,
						always: validation.always,
						each: validation.each
					};
					const args = {
						type: validation.type,
						name: validation.name,
						target: schema.name,
						propertyName: property,
						constraints: validation.constraints,
						validationTypeOptions: validation.options,
						validationOptions
					};
					metadatas.push(new ValidationMetadata_1$7.ValidationMetadata(args));
				});
			});
			return metadatas;
		}
	};
	exports.ValidationSchemaToMetadataTransformer = ValidationSchemaToMetadataTransformer;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/utils/convert-to-array.util.js
var require_convert_to_array_util = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/utils/convert-to-array.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.convertToArray = void 0;
	/**
	* Convert Map, Set to Array
	*/
	function convertToArray(val) {
		if (val instanceof Map) return Array.from(val.values());
		return Array.isArray(val) ? val : Array.from(val);
	}
	exports.convertToArray = convertToArray;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/utils/get-global.util.js
var require_get_global_util$1 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/utils/get-global.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.getGlobal = void 0;
	/**
	* This function returns the global object across Node and browsers.
	*
	* Note: `globalThis` is the standardized approach however it has been added to
	* Node.js in version 12. We need to include this snippet until Node 12 EOL.
	*/
	function getGlobal$1() {
		if (typeof globalThis !== "undefined") return globalThis;
		if (typeof global !== "undefined") return global;
		if (typeof window !== "undefined") return window;
		if (typeof self !== "undefined") return self;
	}
	exports.getGlobal = getGlobal$1;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/utils/is-promise.util.js
var require_is_promise_util$1 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/utils/is-promise.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isPromise = void 0;
	function isPromise$2(p) {
		return p !== null && typeof p === "object" && typeof p.then === "function";
	}
	exports.isPromise = isPromise$2;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/utils/index.js
var require_utils$2 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/utils/index.js"(exports) {
	var __createBinding$8 = void 0 && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		var desc = Object.getOwnPropertyDescriptor(m, k);
		if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
			enumerable: true,
			get: function() {
				return m[k];
			}
		};
		Object.defineProperty(o, k2, desc);
	} : function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		o[k2] = m[k];
	});
	var __exportStar$7 = void 0 && (void 0).__exportStar || function(m, exports$1) {
		for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports$1, p)) __createBinding$8(exports$1, m, p);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	__exportStar$7(require_convert_to_array_util(), exports);
	__exportStar$7(require_get_global_util$1(), exports);
	__exportStar$7(require_is_promise_util$1(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/metadata/MetadataStorage.js
var require_MetadataStorage$1 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/metadata/MetadataStorage.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.getMetadataStorage = exports.MetadataStorage = void 0;
	const ValidationSchemaToMetadataTransformer_1 = require_ValidationSchemaToMetadataTransformer();
	const utils_1$2 = require_utils$2();
	/**
	* Storage all metadatas.
	*/
	var MetadataStorage$1 = class {
		constructor() {
			this.validationMetadatas = /* @__PURE__ */ new Map();
			this.constraintMetadatas = /* @__PURE__ */ new Map();
		}
		get hasValidationMetaData() {
			return !!this.validationMetadatas.size;
		}
		/**
		* Adds a new validation metadata.
		*/
		addValidationSchema(schema) {
			var _this = this;
			const validationMetadatas = new ValidationSchemaToMetadataTransformer_1.ValidationSchemaToMetadataTransformer().transform(schema);
			validationMetadatas.forEach(function(validationMetadata) {
				return _this.addValidationMetadata(validationMetadata);
			});
		}
		/**
		* Adds a new validation metadata.
		*/
		addValidationMetadata(metadata$1) {
			const existingMetadata = this.validationMetadatas.get(metadata$1.target);
			if (existingMetadata) existingMetadata.push(metadata$1);
			else this.validationMetadatas.set(metadata$1.target, [metadata$1]);
		}
		/**
		* Adds a new constraint metadata.
		*/
		addConstraintMetadata(metadata$1) {
			const existingMetadata = this.constraintMetadatas.get(metadata$1.target);
			if (existingMetadata) existingMetadata.push(metadata$1);
			else this.constraintMetadatas.set(metadata$1.target, [metadata$1]);
		}
		/**
		* Groups metadata by their property names.
		*/
		groupByPropertyName(metadata$1) {
			const grouped = {};
			metadata$1.forEach(function(metadata$2) {
				if (!grouped[metadata$2.propertyName]) grouped[metadata$2.propertyName] = [];
				grouped[metadata$2.propertyName].push(metadata$2);
			});
			return grouped;
		}
		/**
		* Gets all validation metadatas for the given object with the given groups.
		*/
		getTargetValidationMetadatas(targetConstructor, targetSchema, always, strictGroups, groups) {
			const includeMetadataBecauseOfAlwaysOption = function(metadata$1) {
				if (typeof metadata$1.always !== "undefined") return metadata$1.always;
				if (metadata$1.groups && metadata$1.groups.length) return false;
				return always;
			};
			const excludeMetadataBecauseOfStrictGroupsOption = function(metadata$1) {
				if (strictGroups) {
					if (!groups || !groups.length) {
						if (metadata$1.groups && metadata$1.groups.length) return true;
					}
				}
				return false;
			};
			const filteredForOriginalMetadatasSearch = this.validationMetadatas.get(targetConstructor) || [];
			const originalMetadatas = filteredForOriginalMetadatasSearch.filter(function(metadata$1) {
				if (metadata$1.target !== targetConstructor && metadata$1.target !== targetSchema) return false;
				if (includeMetadataBecauseOfAlwaysOption(metadata$1)) return true;
				if (excludeMetadataBecauseOfStrictGroupsOption(metadata$1)) return false;
				if (groups && groups.length > 0) return metadata$1.groups && !!metadata$1.groups.find(function(group) {
					return groups.indexOf(group) !== -1;
				});
				return true;
			});
			const filteredForInheritedMetadatasSearch = [];
			for (const [key, value] of this.validationMetadatas.entries()) if (targetConstructor.prototype instanceof key) filteredForInheritedMetadatasSearch.push(...value);
			const inheritedMetadatas = filteredForInheritedMetadatasSearch.filter(function(metadata$1) {
				if (typeof metadata$1.target === "string") return false;
				if (metadata$1.target === targetConstructor) return false;
				if (metadata$1.target instanceof Function && !(targetConstructor.prototype instanceof metadata$1.target)) return false;
				if (includeMetadataBecauseOfAlwaysOption(metadata$1)) return true;
				if (excludeMetadataBecauseOfStrictGroupsOption(metadata$1)) return false;
				if (groups && groups.length > 0) return metadata$1.groups && !!metadata$1.groups.find(function(group) {
					return groups.indexOf(group) !== -1;
				});
				return true;
			});
			const uniqueInheritedMetadatas = inheritedMetadatas.filter(function(inheritedMetadata) {
				return !originalMetadatas.find(function(originalMetadata) {
					return originalMetadata.propertyName === inheritedMetadata.propertyName && originalMetadata.type === inheritedMetadata.type;
				});
			});
			return originalMetadatas.concat(uniqueInheritedMetadatas);
		}
		/**
		* Gets all validator constraints for the given object.
		*/
		getTargetValidatorConstraints(target) {
			return this.constraintMetadatas.get(target) || [];
		}
	};
	exports.MetadataStorage = MetadataStorage$1;
	/**
	* Gets metadata storage.
	* Metadata storage follows the best practices and stores metadata in a global variable.
	*/
	function getMetadataStorage() {
		const global$1 = (0, utils_1$2.getGlobal)();
		if (!global$1.classValidatorMetadataStorage) global$1.classValidatorMetadataStorage = new MetadataStorage$1();
		return global$1.classValidatorMetadataStorage;
	}
	exports.getMetadataStorage = getMetadataStorage;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidationError.js
var require_ValidationError = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidationError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ValidationError = void 0;
	/**
	* Validation error description.
	*/
	var ValidationError = class {
		/**
		*
		* @param shouldDecorate decorate the message with ANSI formatter escape codes for better readability
		* @param hasParent true when the error is a child of an another one
		* @param parentPath path as string to the parent of this property
		* @param showConstraintMessages show constraint messages instead of constraint names
		*/
		toString(shouldDecorate = false, hasParent = false, parentPath = ``, showConstraintMessages = false) {
			var _this = this;
			const boldStart = shouldDecorate ? `\x1b[1m` : ``;
			const boldEnd = shouldDecorate ? `\x1b[22m` : ``;
			const constraintsToString = function() {
				var _a;
				return (showConstraintMessages ? Object.values : Object.keys)((_a = _this.constraints) !== null && _a !== void 0 ? _a : {}).join(`, `);
			};
			const propConstraintFailed = function(propertyName) {
				return ` - property ${boldStart}${parentPath}${propertyName}${boldEnd} has failed the following constraints: ${boldStart}${constraintsToString()}${boldEnd} \n`;
			};
			if (!hasParent) return `An instance of ${boldStart}${this.target ? this.target.constructor.name : "an object"}${boldEnd} has failed the validation:\n` + (this.constraints ? propConstraintFailed(this.property) : ``) + (this.children ? this.children.map(function(childError) {
				return childError.toString(shouldDecorate, true, _this.property, showConstraintMessages);
			}).join(``) : ``);
			else {
				const formattedProperty = Number.isInteger(+this.property) ? `[${this.property}]` : `${parentPath ? `.` : ``}${this.property}`;
				if (this.constraints) return propConstraintFailed(formattedProperty);
				else return this.children ? this.children.map(function(childError) {
					return childError.toString(shouldDecorate, true, `${parentPath}${formattedProperty}`, showConstraintMessages);
				}).join(``) : ``;
			}
		}
	};
	exports.ValidationError = ValidationError;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidationTypes.js
var require_ValidationTypes = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidationTypes.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ValidationTypes = void 0;
	/**
	* Validation types.
	*/
	var ValidationTypes = class {
		/**
		* Checks if validation type is valid.
		*/
		static isValid(type) {
			var _this = this;
			return type !== "isValid" && type !== "getMessage" && Object.keys(this).map(function(key) {
				return _this[key];
			}).indexOf(type) !== -1;
		}
	};
	exports.ValidationTypes = ValidationTypes;
	ValidationTypes.CUSTOM_VALIDATION = "customValidation";
	ValidationTypes.NESTED_VALIDATION = "nestedValidation";
	ValidationTypes.PROMISE_VALIDATION = "promiseValidation";
	ValidationTypes.CONDITIONAL_VALIDATION = "conditionalValidation";
	ValidationTypes.WHITELIST = "whitelistValidation";
	ValidationTypes.IS_DEFINED = "isDefined";
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidationUtils.js
var require_ValidationUtils = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidationUtils.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ValidationUtils = exports.constraintToString = void 0;
	/**
	* Convert the constraint to a string to be shown in an error
	*/
	function constraintToString(constraint) {
		if (Array.isArray(constraint)) return constraint.join(", ");
		if (typeof constraint === "symbol") constraint = constraint.description;
		return `${constraint}`;
	}
	exports.constraintToString = constraintToString;
	var ValidationUtils = class {
		static replaceMessageSpecialTokens(message, validationArguments) {
			let messageString;
			if (message instanceof Function) messageString = message(validationArguments);
			else if (typeof message === "string") messageString = message;
			if (messageString && Array.isArray(validationArguments.constraints)) validationArguments.constraints.forEach(function(constraint, index) {
				messageString = messageString.replace(new RegExp(`\\$constraint${index + 1}`, "g"), constraintToString(constraint));
			});
			if (messageString && validationArguments.value !== void 0 && validationArguments.value !== null && [
				"string",
				"boolean",
				"number"
			].includes(typeof validationArguments.value)) messageString = messageString.replace(/\$value/g, validationArguments.value);
			if (messageString) messageString = messageString.replace(/\$property/g, validationArguments.property);
			if (messageString) messageString = messageString.replace(/\$target/g, validationArguments.targetName);
			return messageString;
		}
	};
	exports.ValidationUtils = ValidationUtils;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidationExecutor.js
var require_ValidationExecutor = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidationExecutor.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ValidationExecutor = void 0;
	const ValidationError_1 = require_ValidationError();
	const ValidationTypes_1$8 = require_ValidationTypes();
	const ValidationUtils_1 = require_ValidationUtils();
	const utils_1$1 = require_utils$2();
	const MetadataStorage_1$9 = require_MetadataStorage$1();
	/**
	* Executes validation over given object.
	*/
	var ValidationExecutor = class {
		constructor(validator$2, validatorOptions) {
			this.validator = validator$2;
			this.validatorOptions = validatorOptions;
			this.awaitingPromises = [];
			this.ignoreAsyncValidations = false;
			this.metadataStorage = (0, MetadataStorage_1$9.getMetadataStorage)();
		}
		execute(object, targetSchema, validationErrors) {
			var _this = this;
			var _a, _b;
			/**
			* If there is no metadata registered it means possibly the dependencies are not flatterned and
			* more than one instance is used.
			*
			* TODO: This needs proper handling, forcing to use the same container or some other proper solution.
			*/
			if (!this.metadataStorage.hasValidationMetaData && ((_a = this.validatorOptions) === null || _a === void 0 ? void 0 : _a.enableDebugMessages) === true) console.warn("No validation metadata found. No validation will be  performed. There are multiple possible reasons:\n  - There may be multiple class-validator versions installed. You will need to flatten your dependencies to fix the issue.\n  - This validation runs before any file with validation decorator was parsed by NodeJS.");
			const groups = this.validatorOptions ? this.validatorOptions.groups : void 0;
			const strictGroups = this.validatorOptions && this.validatorOptions.strictGroups || false;
			const always = this.validatorOptions && this.validatorOptions.always || false;
			/** Forbid unknown values are turned on by default and any other value than false will enable it. */
			const forbidUnknownValues = ((_b = this.validatorOptions) === null || _b === void 0 ? void 0 : _b.forbidUnknownValues) === void 0 || this.validatorOptions.forbidUnknownValues !== false;
			const targetMetadatas = this.metadataStorage.getTargetValidationMetadatas(object.constructor, targetSchema, always, strictGroups, groups);
			const groupedMetadatas = this.metadataStorage.groupByPropertyName(targetMetadatas);
			if (forbidUnknownValues && !targetMetadatas.length) {
				const validationError = new ValidationError_1.ValidationError();
				if (!this.validatorOptions || !this.validatorOptions.validationError || this.validatorOptions.validationError.target === void 0 || this.validatorOptions.validationError.target === true) validationError.target = object;
				validationError.value = void 0;
				validationError.property = void 0;
				validationError.children = [];
				validationError.constraints = { unknownValue: "an unknown value was passed to the validate function" };
				validationErrors.push(validationError);
				return;
			}
			if (this.validatorOptions && this.validatorOptions.whitelist) this.whitelist(object, groupedMetadatas, validationErrors);
			Object.keys(groupedMetadatas).forEach(function(propertyName) {
				const value = object[propertyName];
				const definedMetadatas = groupedMetadatas[propertyName].filter(function(metadata$1) {
					return metadata$1.type === ValidationTypes_1$8.ValidationTypes.IS_DEFINED;
				});
				const metadatas = groupedMetadatas[propertyName].filter(function(metadata$1) {
					return metadata$1.type !== ValidationTypes_1$8.ValidationTypes.IS_DEFINED && metadata$1.type !== ValidationTypes_1$8.ValidationTypes.WHITELIST;
				});
				if (value instanceof Promise && metadatas.find(function(metadata$1) {
					return metadata$1.type === ValidationTypes_1$8.ValidationTypes.PROMISE_VALIDATION;
				})) _this.awaitingPromises.push(value.then(function(resolvedValue) {
					_this.performValidations(object, resolvedValue, propertyName, definedMetadatas, metadatas, validationErrors);
				}));
				else _this.performValidations(object, value, propertyName, definedMetadatas, metadatas, validationErrors);
			});
		}
		whitelist(object, groupedMetadatas, validationErrors) {
			var _this2 = this;
			const notAllowedProperties = [];
			Object.keys(object).forEach(function(propertyName) {
				if (!groupedMetadatas[propertyName] || groupedMetadatas[propertyName].length === 0) notAllowedProperties.push(propertyName);
			});
			if (notAllowedProperties.length > 0) if (this.validatorOptions && this.validatorOptions.forbidNonWhitelisted) notAllowedProperties.forEach(function(property) {
				const validationError = _this2.generateValidationError(object, object[property], property);
				validationError.constraints = { [ValidationTypes_1$8.ValidationTypes.WHITELIST]: `property ${property} should not exist` };
				validationError.children = void 0;
				validationErrors.push(validationError);
			});
			else notAllowedProperties.forEach(function(property) {
				return delete object[property];
			});
		}
		stripEmptyErrors(errors) {
			var _this3 = this;
			return errors.filter(function(error) {
				if (error.children) error.children = _this3.stripEmptyErrors(error.children);
				if (Object.keys(error.constraints).length === 0) if (error.children.length === 0) return false;
				else delete error.constraints;
				return true;
			});
		}
		performValidations(object, value, propertyName, definedMetadatas, metadatas, validationErrors) {
			const customValidationMetadatas = metadatas.filter(function(metadata$1) {
				return metadata$1.type === ValidationTypes_1$8.ValidationTypes.CUSTOM_VALIDATION;
			});
			const nestedValidationMetadatas = metadatas.filter(function(metadata$1) {
				return metadata$1.type === ValidationTypes_1$8.ValidationTypes.NESTED_VALIDATION;
			});
			const conditionalValidationMetadatas = metadatas.filter(function(metadata$1) {
				return metadata$1.type === ValidationTypes_1$8.ValidationTypes.CONDITIONAL_VALIDATION;
			});
			const validationError = this.generateValidationError(object, value, propertyName);
			validationErrors.push(validationError);
			const canValidate = this.conditionalValidations(object, value, conditionalValidationMetadatas);
			if (!canValidate) return;
			this.customValidations(object, value, definedMetadatas, validationError);
			this.mapContexts(object, value, definedMetadatas, validationError);
			if (value === void 0 && this.validatorOptions && this.validatorOptions.skipUndefinedProperties === true) return;
			if (value === null && this.validatorOptions && this.validatorOptions.skipNullProperties === true) return;
			if ((value === null || value === void 0) && this.validatorOptions && this.validatorOptions.skipMissingProperties === true) return;
			this.customValidations(object, value, customValidationMetadatas, validationError);
			this.nestedValidations(value, nestedValidationMetadatas, validationError);
			this.mapContexts(object, value, metadatas, validationError);
			this.mapContexts(object, value, customValidationMetadatas, validationError);
		}
		generateValidationError(object, value, propertyName) {
			const validationError = new ValidationError_1.ValidationError();
			if (!this.validatorOptions || !this.validatorOptions.validationError || this.validatorOptions.validationError.target === void 0 || this.validatorOptions.validationError.target === true) validationError.target = object;
			if (!this.validatorOptions || !this.validatorOptions.validationError || this.validatorOptions.validationError.value === void 0 || this.validatorOptions.validationError.value === true) validationError.value = value;
			validationError.property = propertyName;
			validationError.children = [];
			validationError.constraints = {};
			return validationError;
		}
		conditionalValidations(object, value, metadatas) {
			return metadatas.map(function(metadata$1) {
				return metadata$1.constraints[0](object, value);
			}).reduce(function(resultA, resultB) {
				return resultA && resultB;
			}, true);
		}
		customValidations(object, value, metadatas, error) {
			var _this4 = this;
			metadatas.forEach(function(metadata$1) {
				_this4.metadataStorage.getTargetValidatorConstraints(metadata$1.constraintCls).forEach(function(customConstraintMetadata) {
					if (customConstraintMetadata.async && _this4.ignoreAsyncValidations) return;
					if (_this4.validatorOptions && _this4.validatorOptions.stopAtFirstError && Object.keys(error.constraints || {}).length > 0) return;
					const validationArguments = {
						targetName: object.constructor ? object.constructor.name : void 0,
						property: metadata$1.propertyName,
						object,
						value,
						constraints: metadata$1.constraints
					};
					if (!metadata$1.each || !(Array.isArray(value) || value instanceof Set || value instanceof Map)) {
						const validatedValue = customConstraintMetadata.instance.validate(value, validationArguments);
						if ((0, utils_1$1.isPromise)(validatedValue)) {
							const promise = validatedValue.then(function(isValid) {
								if (!isValid) {
									const [type, message] = _this4.createValidationError(object, value, metadata$1, customConstraintMetadata);
									error.constraints[type] = message;
									if (metadata$1.context) {
										if (!error.contexts) error.contexts = {};
										error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata$1.context);
									}
								}
							});
							_this4.awaitingPromises.push(promise);
						} else if (!validatedValue) {
							const [type, message] = _this4.createValidationError(object, value, metadata$1, customConstraintMetadata);
							error.constraints[type] = message;
						}
						return;
					}
					const arrayValue = (0, utils_1$1.convertToArray)(value);
					const validatedSubValues = arrayValue.map(function(subValue) {
						return customConstraintMetadata.instance.validate(subValue, validationArguments);
					});
					const validationIsAsync = validatedSubValues.some(function(validatedSubValue) {
						return (0, utils_1$1.isPromise)(validatedSubValue);
					});
					if (validationIsAsync) {
						const asyncValidatedSubValues = validatedSubValues.map(function(validatedSubValue) {
							return (0, utils_1$1.isPromise)(validatedSubValue) ? validatedSubValue : Promise.resolve(validatedSubValue);
						});
						const asyncValidationIsFinishedPromise = Promise.all(asyncValidatedSubValues).then(function(flatValidatedValues) {
							const validationResult$1 = flatValidatedValues.every(function(isValid) {
								return isValid;
							});
							if (!validationResult$1) {
								const [type, message] = _this4.createValidationError(object, value, metadata$1, customConstraintMetadata);
								error.constraints[type] = message;
								if (metadata$1.context) {
									if (!error.contexts) error.contexts = {};
									error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata$1.context);
								}
							}
						});
						_this4.awaitingPromises.push(asyncValidationIsFinishedPromise);
						return;
					}
					const validationResult = validatedSubValues.every(function(isValid) {
						return isValid;
					});
					if (!validationResult) {
						const [type, message] = _this4.createValidationError(object, value, metadata$1, customConstraintMetadata);
						error.constraints[type] = message;
					}
				});
			});
		}
		nestedValidations(value, metadatas, error) {
			var _this5 = this;
			if (value === void 0) return;
			metadatas.forEach(function(metadata$1) {
				if (metadata$1.type !== ValidationTypes_1$8.ValidationTypes.NESTED_VALIDATION && metadata$1.type !== ValidationTypes_1$8.ValidationTypes.PROMISE_VALIDATION) return;
				else if (_this5.validatorOptions && _this5.validatorOptions.stopAtFirstError && Object.keys(error.constraints || {}).length > 0) return;
				if (Array.isArray(value) || value instanceof Set || value instanceof Map) {
					const arrayLikeValue = value instanceof Set ? Array.from(value) : value;
					arrayLikeValue.forEach(function(subValue, index) {
						_this5.performValidations(value, subValue, index.toString(), [], metadatas, error.children);
					});
				} else if (value instanceof Object) {
					const targetSchema = typeof metadata$1.target === "string" ? metadata$1.target : metadata$1.target.name;
					_this5.execute(value, targetSchema, error.children);
				} else {
					const [type, message] = _this5.createValidationError(metadata$1.target, value, metadata$1);
					error.constraints[type] = message;
				}
			});
		}
		mapContexts(object, value, metadatas, error) {
			var _this6 = this;
			return metadatas.forEach(function(metadata$1) {
				if (metadata$1.context) {
					let customConstraint;
					if (metadata$1.type === ValidationTypes_1$8.ValidationTypes.CUSTOM_VALIDATION) {
						const customConstraints = _this6.metadataStorage.getTargetValidatorConstraints(metadata$1.constraintCls);
						customConstraint = customConstraints[0];
					}
					const type = _this6.getConstraintType(metadata$1, customConstraint);
					if (error.constraints[type]) {
						if (!error.contexts) error.contexts = {};
						error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata$1.context);
					}
				}
			});
		}
		createValidationError(object, value, metadata$1, customValidatorMetadata) {
			const targetName = object.constructor ? object.constructor.name : void 0;
			const type = this.getConstraintType(metadata$1, customValidatorMetadata);
			const validationArguments = {
				targetName,
				property: metadata$1.propertyName,
				object,
				value,
				constraints: metadata$1.constraints
			};
			let message = metadata$1.message || "";
			if (!metadata$1.message && (!this.validatorOptions || this.validatorOptions && !this.validatorOptions.dismissDefaultMessages)) {
				if (customValidatorMetadata && customValidatorMetadata.instance.defaultMessage instanceof Function) message = customValidatorMetadata.instance.defaultMessage(validationArguments);
			}
			const messageString = ValidationUtils_1.ValidationUtils.replaceMessageSpecialTokens(message, validationArguments);
			return [type, messageString];
		}
		getConstraintType(metadata$1, customValidatorMetadata) {
			const type = customValidatorMetadata && customValidatorMetadata.name ? customValidatorMetadata.name : metadata$1.type;
			return type;
		}
	};
	exports.ValidationExecutor = ValidationExecutor;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/Validator.js
var require_Validator = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/Validator.js"(exports) {
	var import_asyncToGenerator$7 = __toESM(require_asyncToGenerator());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Validator = void 0;
	const ValidationExecutor_1 = require_ValidationExecutor();
	/**
	* Validator performs validation of the given object based on its metadata.
	*/
	var Validator = class {
		/**
		* Performs validation of the given object based on decorators or validation schema.
		*/
		validate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {
			return this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions);
		}
		/**
		* Performs validation of the given object based on decorators or validation schema and reject on error.
		*/
		validateOrReject(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {
			return (0, import_asyncToGenerator$7.default)(function* () {
				const errors = yield this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions);
				if (errors.length) return Promise.reject(errors);
			})();
		}
		/**
		* Performs validation of the given object based on decorators or validation schema.
		*/
		validateSync(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {
			const object = typeof objectOrSchemaName === "string" ? objectOrValidationOptions : objectOrSchemaName;
			const options = typeof objectOrSchemaName === "string" ? maybeValidatorOptions : objectOrValidationOptions;
			const schema = typeof objectOrSchemaName === "string" ? objectOrSchemaName : void 0;
			const executor = new ValidationExecutor_1.ValidationExecutor(this, options);
			executor.ignoreAsyncValidations = true;
			const validationErrors = [];
			executor.execute(object, schema, validationErrors);
			return executor.stripEmptyErrors(validationErrors);
		}
		/**
		* Performs validation of the given object based on decorators or validation schema.
		* Common method for `validateOrReject` and `validate` methods.
		*/
		coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {
			const object = typeof objectOrSchemaName === "string" ? objectOrValidationOptions : objectOrSchemaName;
			const options = typeof objectOrSchemaName === "string" ? maybeValidatorOptions : objectOrValidationOptions;
			const schema = typeof objectOrSchemaName === "string" ? objectOrSchemaName : void 0;
			const executor = new ValidationExecutor_1.ValidationExecutor(this, options);
			const validationErrors = [];
			executor.execute(object, schema, validationErrors);
			return Promise.all(executor.awaitingPromises).then(function() {
				return executor.stripEmptyErrors(validationErrors);
			});
		}
	};
	exports.Validator = Validator;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/container.js
var require_container = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/container.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.getFromContainer = exports.useContainer = void 0;
	/**
	* Container to be used by this library for inversion control. If container was not implicitly set then by default
	* container simply creates a new instance of the given class.
	*/
	const defaultContainer = new class {
		constructor() {
			this.instances = [];
		}
		get(someClass) {
			let instance = (this.instances.find(function(instance$1) {
				return instance$1.type === someClass;
			}));
			if (!instance) {
				instance = {
					type: someClass,
					object: new someClass()
				};
				this.instances.push(instance);
			}
			return instance.object;
		}
	}();
	let userContainer;
	let userContainerOptions;
	/**
	* Sets container to be used by this library.
	*/
	function useContainer(iocContainer, options) {
		userContainer = iocContainer;
		userContainerOptions = options;
	}
	exports.useContainer = useContainer;
	/**
	* Gets the IOC container used by this library.
	*/
	function getFromContainer(someClass) {
		if (userContainer) try {
			const instance = userContainer.get(someClass);
			if (instance) return instance;
			if (!userContainerOptions || !userContainerOptions.fallback) return instance;
		} catch (error) {
			if (!userContainerOptions || !userContainerOptions.fallbackOnErrors) throw error;
		}
		return defaultContainer.get(someClass);
	}
	exports.getFromContainer = getFromContainer;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/Allow.js
var require_Allow = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/Allow.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Allow = void 0;
	const ValidationTypes_1$7 = require_ValidationTypes();
	const ValidationMetadata_1$6 = require_ValidationMetadata();
	const MetadataStorage_1$8 = require_MetadataStorage$1();
	/**
	* If object has both allowed and not allowed properties a validation error will be thrown.
	*/
	function Allow(validationOptions) {
		return function(object, propertyName) {
			const args = {
				type: ValidationTypes_1$7.ValidationTypes.WHITELIST,
				target: object.constructor,
				propertyName,
				validationOptions
			};
			(0, MetadataStorage_1$8.getMetadataStorage)().addValidationMetadata(new ValidationMetadata_1$6.ValidationMetadata(args));
		};
	}
	exports.Allow = Allow;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/metadata/ConstraintMetadata.js
var require_ConstraintMetadata = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/metadata/ConstraintMetadata.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ConstraintMetadata = void 0;
	const container_1$2 = require_container();
	/**
	* This metadata interface contains information for custom validators.
	*/
	var ConstraintMetadata = class {
		constructor(target, name, async = false) {
			this.target = target;
			this.name = name;
			this.async = async;
		}
		/**
		* Instance of the target custom validation class which performs validation.
		*/
		get instance() {
			return (0, container_1$2.getFromContainer)(this.target);
		}
	};
	exports.ConstraintMetadata = ConstraintMetadata;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/register-decorator.js
var require_register_decorator = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/register-decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.registerDecorator = void 0;
	const ConstraintMetadata_1$1 = require_ConstraintMetadata();
	const ValidationMetadata_1$5 = require_ValidationMetadata();
	const ValidationTypes_1$6 = require_ValidationTypes();
	const container_1$1 = require_container();
	const MetadataStorage_1$7 = require_MetadataStorage$1();
	/**
	* Registers a custom validation decorator.
	*/
	function registerDecorator(options) {
		let constraintCls;
		if (options.validator instanceof Function) {
			constraintCls = options.validator;
			const constraintClasses = (0, container_1$1.getFromContainer)(MetadataStorage_1$7.MetadataStorage).getTargetValidatorConstraints(options.validator);
			if (constraintClasses.length > 1) throw `More than one implementation of ValidatorConstraintInterface found for validator on: ${options.target.name}:${options.propertyName}`;
		} else {
			const validator$2 = options.validator;
			constraintCls = class CustomConstraint {
				validate(value, validationArguments) {
					return validator$2.validate(value, validationArguments);
				}
				defaultMessage(validationArguments) {
					if (validator$2.defaultMessage) return validator$2.defaultMessage(validationArguments);
					return "";
				}
			};
			(0, MetadataStorage_1$7.getMetadataStorage)().addConstraintMetadata(new ConstraintMetadata_1$1.ConstraintMetadata(constraintCls, options.name, options.async));
		}
		const validationMetadataArgs = {
			type: options.name && ValidationTypes_1$6.ValidationTypes.isValid(options.name) ? options.name : ValidationTypes_1$6.ValidationTypes.CUSTOM_VALIDATION,
			name: options.name,
			target: options.target,
			propertyName: options.propertyName,
			validationOptions: options.options,
			constraintCls,
			constraints: options.constraints
		};
		(0, MetadataStorage_1$7.getMetadataStorage)().addValidationMetadata(new ValidationMetadata_1$5.ValidationMetadata(validationMetadataArgs));
	}
	exports.registerDecorator = registerDecorator;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/ValidateBy.js
var require_ValidateBy = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/ValidateBy.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ValidateBy = exports.buildMessage = void 0;
	const register_decorator_1 = require_register_decorator();
	function buildMessage(impl, validationOptions) {
		return function(validationArguments) {
			const eachPrefix = validationOptions && validationOptions.each ? "each value in " : "";
			return impl(eachPrefix, validationArguments);
		};
	}
	exports.buildMessage = buildMessage;
	function ValidateBy(options, validationOptions) {
		return function(object, propertyName) {
			(0, register_decorator_1.registerDecorator)({
				name: options.name,
				target: object.constructor,
				propertyName,
				options: validationOptions,
				constraints: options.constraints,
				validator: options.validator
			});
		};
	}
	exports.ValidateBy = ValidateBy;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsDefined.js
var require_IsDefined = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsDefined.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsDefined = exports.isDefined = exports.IS_DEFINED = void 0;
	const ValidateBy_1$103 = require_ValidateBy();
	const ValidationTypes_1$5 = require_ValidationTypes();
	exports.IS_DEFINED = ValidationTypes_1$5.ValidationTypes.IS_DEFINED;
	/**
	* Checks if value is defined (!== undefined, !== null).
	*/
	function isDefined(value) {
		return value !== void 0 && value !== null;
	}
	exports.isDefined = isDefined;
	/**
	* Checks if value is defined (!== undefined, !== null).
	*/
	function IsDefined(validationOptions) {
		return (0, ValidateBy_1$103.ValidateBy)({
			name: exports.IS_DEFINED,
			validator: {
				validate: function(value) {
					return isDefined(value);
				},
				defaultMessage: (0, ValidateBy_1$103.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property should not be null or undefined";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsDefined = IsDefined;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsOptional.js
var require_IsOptional = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsOptional.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsOptional = exports.IS_OPTIONAL = void 0;
	const ValidationTypes_1$4 = require_ValidationTypes();
	const ValidationMetadata_1$4 = require_ValidationMetadata();
	const MetadataStorage_1$6 = require_MetadataStorage$1();
	exports.IS_OPTIONAL = "isOptional";
	/**
	* Checks if value is missing and if so, ignores all validators.
	*/
	function IsOptional(validationOptions) {
		return function(object, propertyName) {
			const args = {
				type: ValidationTypes_1$4.ValidationTypes.CONDITIONAL_VALIDATION,
				name: exports.IS_OPTIONAL,
				target: object.constructor,
				propertyName,
				constraints: [function(object$1, value) {
					return object$1[propertyName] !== null && object$1[propertyName] !== void 0;
				}],
				validationOptions
			};
			(0, MetadataStorage_1$6.getMetadataStorage)().addValidationMetadata(new ValidationMetadata_1$4.ValidationMetadata(args));
		};
	}
	exports.IsOptional = IsOptional;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/Validate.js
var require_Validate = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/Validate.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Validate = exports.ValidatorConstraint = void 0;
	const ValidationMetadata_1$3 = require_ValidationMetadata();
	const MetadataStorage_1$5 = require_MetadataStorage$1();
	const ValidationTypes_1$3 = require_ValidationTypes();
	const ConstraintMetadata_1 = require_ConstraintMetadata();
	/**
	* Registers custom validator class.
	*/
	function ValidatorConstraint(options) {
		return function(target) {
			const isAsync = options && options.async;
			let name = options && options.name ? options.name : "";
			if (!name) {
				name = target.name;
				if (!name) name = name.replace(new RegExp("\\.?([A-Z]+)", "g"), function(x, y) {
					return "_" + y.toLowerCase();
				}).replace(/^_/, "");
			}
			const metadata$1 = new ConstraintMetadata_1.ConstraintMetadata(target, name, isAsync);
			(0, MetadataStorage_1$5.getMetadataStorage)().addConstraintMetadata(metadata$1);
		};
	}
	exports.ValidatorConstraint = ValidatorConstraint;
	function Validate(constraintClass, constraintsOrValidationOptions, maybeValidationOptions) {
		return function(object, propertyName) {
			const args = {
				type: ValidationTypes_1$3.ValidationTypes.CUSTOM_VALIDATION,
				target: object.constructor,
				propertyName,
				constraintCls: constraintClass,
				constraints: Array.isArray(constraintsOrValidationOptions) ? constraintsOrValidationOptions : void 0,
				validationOptions: !Array.isArray(constraintsOrValidationOptions) ? constraintsOrValidationOptions : maybeValidationOptions
			};
			(0, MetadataStorage_1$5.getMetadataStorage)().addValidationMetadata(new ValidationMetadata_1$3.ValidationMetadata(args));
		};
	}
	exports.Validate = Validate;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/ValidateIf.js
var require_ValidateIf = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/ValidateIf.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ValidateIf = void 0;
	const ValidationTypes_1$2 = require_ValidationTypes();
	const ValidationMetadata_1$2 = require_ValidationMetadata();
	const MetadataStorage_1$4 = require_MetadataStorage$1();
	/**
	* Ignores the other validators on a property when the provided condition function returns false.
	*/
	function ValidateIf(condition, validationOptions) {
		return function(object, propertyName) {
			const args = {
				type: ValidationTypes_1$2.ValidationTypes.CONDITIONAL_VALIDATION,
				target: object.constructor,
				propertyName,
				constraints: [condition],
				validationOptions
			};
			(0, MetadataStorage_1$4.getMetadataStorage)().addValidationMetadata(new ValidationMetadata_1$2.ValidationMetadata(args));
		};
	}
	exports.ValidateIf = ValidateIf;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/ValidateNested.js
var require_ValidateNested = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/ValidateNested.js"(exports) {
	var import_objectSpread2$4 = __toESM(require_objectSpread2());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ValidateNested = void 0;
	const ValidationTypes_1$1 = require_ValidationTypes();
	const ValidationMetadata_1$1 = require_ValidationMetadata();
	const MetadataStorage_1$3 = require_MetadataStorage$1();
	/**
	* Objects / object arrays marked with this decorator will also be validated.
	*/
	function ValidateNested(validationOptions) {
		const opts = (0, import_objectSpread2$4.default)({}, validationOptions);
		const eachPrefix = opts.each ? "each value in " : "";
		opts.message = opts.message || eachPrefix + "nested property $property must be either object or array";
		return function(object, propertyName) {
			const args = {
				type: ValidationTypes_1$1.ValidationTypes.NESTED_VALIDATION,
				target: object.constructor,
				propertyName,
				validationOptions: opts
			};
			(0, MetadataStorage_1$3.getMetadataStorage)().addValidationMetadata(new ValidationMetadata_1$1.ValidationMetadata(args));
		};
	}
	exports.ValidateNested = ValidateNested;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/ValidatePromise.js
var require_ValidatePromise = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/ValidatePromise.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ValidatePromise = void 0;
	const ValidationTypes_1 = require_ValidationTypes();
	const ValidationMetadata_1 = require_ValidationMetadata();
	const MetadataStorage_1$2 = require_MetadataStorage$1();
	/**
	* Resolve promise before validation
	*/
	function ValidatePromise(validationOptions) {
		return function(object, propertyName) {
			const args = {
				type: ValidationTypes_1.ValidationTypes.PROMISE_VALIDATION,
				target: object.constructor,
				propertyName,
				validationOptions
			};
			(0, MetadataStorage_1$2.getMetadataStorage)().addValidationMetadata(new ValidationMetadata_1.ValidationMetadata(args));
		};
	}
	exports.ValidatePromise = ValidatePromise;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/assertString.js
var require_assertString = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/assertString.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = assertString;
	function assertString(input) {
		if (input === void 0 || input === null) throw new TypeError("Expected a string but received a ".concat(input));
		if (input.constructor.name !== "String") throw new TypeError("Expected a string but received a ".concat(input.constructor.name));
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/merge.js
var require_merge$1 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/merge.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = merge$1;
	function merge$1() {
		var obj = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
		var defaults = arguments.length > 1 ? arguments[1] : void 0;
		for (var key in defaults) if (typeof obj[key] === "undefined") obj[key] = defaults[key];
		return obj;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/includesString.js
var require_includesString = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/includesString.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = void 0;
	var includes$1 = function includes$2(str, val) {
		return str.indexOf(val) !== -1;
	};
	var _default$4 = exports.default = includes$1;
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLatLong.js
var require_isLatLong = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLatLong.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isLatLong$1;
	var _assertString$93 = _interopRequireDefault$147(require_assertString());
	var _merge$14 = _interopRequireDefault$147(require_merge$1());
	var _includesString$1 = _interopRequireDefault$147(require_includesString());
	function _interopRequireDefault$147(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var lat = new RegExp("^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$", "");
	var long = new RegExp("^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$", "");
	var latDMS = new RegExp("^(([1-8]?\\d)\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|90\\D+0\\D+0)\\D+[NSns]?$", "i");
	var longDMS = new RegExp("^\\s*([1-7]?\\d{1,2}\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|180\\D+0\\D+0)\\D+[EWew]?$", "i");
	var defaultLatLongOptions = { checkDMS: false };
	function isLatLong$1(str, options) {
		(0, _assertString$93.default)(str);
		options = (0, _merge$14.default)(options, defaultLatLongOptions);
		if (!(0, _includesString$1.default)(str, ",")) return false;
		var pair = str.split(",");
		if (pair[0].startsWith("(") && !pair[1].endsWith(")") || pair[1].endsWith(")") && !pair[0].startsWith("(")) return false;
		if (options.checkDMS) return latDMS.test(pair[0]) && longDMS.test(pair[1]);
		return lat.test(pair[0]) && long.test(pair[1]);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsLatLong.js
var require_IsLatLong = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsLatLong.js"(exports) {
	var __importDefault$67 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsLatLong = exports.isLatLong = exports.IS_LATLONG = void 0;
	const ValidateBy_1$102 = require_ValidateBy();
	const isLatLong_1 = __importDefault$67(require_isLatLong());
	exports.IS_LATLONG = "isLatLong";
	/**
	* Checks if a value is string in format a "latitude,longitude".
	*/
	function isLatLong(value) {
		return typeof value === "string" && (0, isLatLong_1.default)(value);
	}
	exports.isLatLong = isLatLong;
	/**
	* Checks if a value is string in format a "latitude,longitude".
	*/
	function IsLatLong(validationOptions) {
		return (0, ValidateBy_1$102.ValidateBy)({
			name: exports.IS_LATLONG,
			validator: {
				validate: function(value, args) {
					return isLatLong(value);
				},
				defaultMessage: (0, ValidateBy_1$102.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a latitude,longitude string";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsLatLong = IsLatLong;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsLatitude.js
var require_IsLatitude = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsLatitude.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsLatitude = exports.isLatitude = exports.IS_LATITUDE = void 0;
	const ValidateBy_1$101 = require_ValidateBy();
	const IsLatLong_1$1 = require_IsLatLong();
	exports.IS_LATITUDE = "isLatitude";
	/**
	* Checks if a given value is a latitude.
	*/
	function isLatitude(value) {
		return (typeof value === "number" || typeof value === "string") && (0, IsLatLong_1$1.isLatLong)(`${value},0`);
	}
	exports.isLatitude = isLatitude;
	/**
	* Checks if a given value is a latitude.
	*/
	function IsLatitude(validationOptions) {
		return (0, ValidateBy_1$101.ValidateBy)({
			name: exports.IS_LATITUDE,
			validator: {
				validate: function(value, args) {
					return isLatitude(value);
				},
				defaultMessage: (0, ValidateBy_1$101.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a latitude string or number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsLatitude = IsLatitude;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsLongitude.js
var require_IsLongitude = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsLongitude.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsLongitude = exports.isLongitude = exports.IS_LONGITUDE = void 0;
	const ValidateBy_1$100 = require_ValidateBy();
	const IsLatLong_1 = require_IsLatLong();
	exports.IS_LONGITUDE = "isLongitude";
	/**
	* Checks if a given value is a longitude.
	*/
	function isLongitude(value) {
		return (typeof value === "number" || typeof value === "string") && (0, IsLatLong_1.isLatLong)(`0,${value}`);
	}
	exports.isLongitude = isLongitude;
	/**
	* Checks if a given value is a longitude.
	*/
	function IsLongitude(validationOptions) {
		return (0, ValidateBy_1$100.ValidateBy)({
			name: exports.IS_LONGITUDE,
			validator: {
				validate: function(value, args) {
					return isLongitude(value);
				},
				defaultMessage: (0, ValidateBy_1$100.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a longitude string or number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsLongitude = IsLongitude;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/Equals.js
var require_Equals = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/Equals.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Equals = exports.equals = exports.EQUALS = void 0;
	const ValidateBy_1$99 = require_ValidateBy();
	exports.EQUALS = "equals";
	/**
	* Checks if value matches ("===") the comparison.
	*/
	function equals$1(value, comparison) {
		return value === comparison;
	}
	exports.equals = equals$1;
	/**
	* Checks if value matches ("===") the comparison.
	*/
	function Equals(comparison, validationOptions) {
		return (0, ValidateBy_1$99.ValidateBy)({
			name: exports.EQUALS,
			constraints: [comparison],
			validator: {
				validate: function(value, args) {
					return equals$1(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$99.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be equal to $constraint1";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.Equals = Equals;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/NotEquals.js
var require_NotEquals = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/NotEquals.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.NotEquals = exports.notEquals = exports.NOT_EQUALS = void 0;
	const ValidateBy_1$98 = require_ValidateBy();
	exports.NOT_EQUALS = "notEquals";
	/**
	* Checks if value does not match ("!==") the comparison.
	*/
	function notEquals(value, comparison) {
		return value !== comparison;
	}
	exports.notEquals = notEquals;
	/**
	* Checks if value does not match ("!==") the comparison.
	*/
	function NotEquals(comparison, validationOptions) {
		return (0, ValidateBy_1$98.ValidateBy)({
			name: exports.NOT_EQUALS,
			constraints: [comparison],
			validator: {
				validate: function(value, args) {
					return notEquals(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$98.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property should not be equal to $constraint1";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.NotEquals = NotEquals;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsEmpty.js
var require_IsEmpty = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsEmpty.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsEmpty = exports.isEmpty = exports.IS_EMPTY = void 0;
	const ValidateBy_1$97 = require_ValidateBy();
	exports.IS_EMPTY = "isEmpty";
	/**
	* Checks if given value is empty (=== '', === null, === undefined).
	*/
	function isEmpty$2(value) {
		return value === "" || value === null || value === void 0;
	}
	exports.isEmpty = isEmpty$2;
	/**
	* Checks if given value is empty (=== '', === null, === undefined).
	*/
	function IsEmpty(validationOptions) {
		return (0, ValidateBy_1$97.ValidateBy)({
			name: exports.IS_EMPTY,
			validator: {
				validate: function(value, args) {
					return isEmpty$2(value);
				},
				defaultMessage: (0, ValidateBy_1$97.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be empty";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsEmpty = IsEmpty;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsNotEmpty.js
var require_IsNotEmpty = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsNotEmpty.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsNotEmpty = exports.isNotEmpty = exports.IS_NOT_EMPTY = void 0;
	const ValidateBy_1$96 = require_ValidateBy();
	exports.IS_NOT_EMPTY = "isNotEmpty";
	/**
	* Checks if given value is not empty (!== '', !== null, !== undefined).
	*/
	function isNotEmpty(value) {
		return value !== "" && value !== null && value !== void 0;
	}
	exports.isNotEmpty = isNotEmpty;
	/**
	* Checks if given value is not empty (!== '', !== null, !== undefined).
	*/
	function IsNotEmpty(validationOptions) {
		return (0, ValidateBy_1$96.ValidateBy)({
			name: exports.IS_NOT_EMPTY,
			validator: {
				validate: function(value, args) {
					return isNotEmpty(value);
				},
				defaultMessage: (0, ValidateBy_1$96.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property should not be empty";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsNotEmpty = IsNotEmpty;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsIn.js
var require_IsIn = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsIn.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsIn = exports.isIn = exports.IS_IN = void 0;
	const ValidateBy_1$95 = require_ValidateBy();
	exports.IS_IN = "isIn";
	/**
	* Checks if given value is in a array of allowed values.
	*/
	function isIn$1(value, possibleValues) {
		return Array.isArray(possibleValues) && possibleValues.some(function(possibleValue) {
			return possibleValue === value;
		});
	}
	exports.isIn = isIn$1;
	/**
	* Checks if given value is in a array of allowed values.
	*/
	function IsIn(values, validationOptions) {
		return (0, ValidateBy_1$95.ValidateBy)({
			name: exports.IS_IN,
			constraints: [values],
			validator: {
				validate: function(value, args) {
					return isIn$1(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$95.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be one of the following values: $constraint1";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsIn = IsIn;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsNotIn.js
var require_IsNotIn = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/common/IsNotIn.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsNotIn = exports.isNotIn = exports.IS_NOT_IN = void 0;
	const ValidateBy_1$94 = require_ValidateBy();
	exports.IS_NOT_IN = "isNotIn";
	/**
	* Checks if given value not in a array of allowed values.
	*/
	function isNotIn(value, possibleValues) {
		return !Array.isArray(possibleValues) || !possibleValues.some(function(possibleValue) {
			return possibleValue === value;
		});
	}
	exports.isNotIn = isNotIn;
	/**
	* Checks if given value not in a array of allowed values.
	*/
	function IsNotIn(values, validationOptions) {
		return (0, ValidateBy_1$94.ValidateBy)({
			name: exports.IS_NOT_IN,
			constraints: [values],
			validator: {
				validate: function(value, args) {
					return isNotIn(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$94.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property should not be one of the following values: $constraint1";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsNotIn = IsNotIn;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/nullUndefinedCheck.js
var require_nullUndefinedCheck = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/nullUndefinedCheck.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isNullOrUndefined;
	function isNullOrUndefined(value) {
		return value === null || value === void 0;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/alpha.js
var require_alpha = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/alpha.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.farsiLocales = exports.englishLocales = exports.dotDecimal = exports.decimal = exports.commaDecimal = exports.bengaliLocales = exports.arabicLocales = exports.alphanumeric = exports.alpha = void 0;
	var alpha = exports.alpha = {
		"en-US": /^[A-Z]+$/i,
		"az-AZ": /^[A-VXYZÇƏĞİıÖŞÜ]+$/i,
		"bg-BG": /^[А-Я]+$/i,
		"cs-CZ": /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,
		"da-DK": /^[A-ZÆØÅ]+$/i,
		"de-DE": /^[A-ZÄÖÜß]+$/i,
		"el-GR": /^[Α-ώ]+$/i,
		"es-ES": /^[A-ZÁÉÍÑÓÚÜ]+$/i,
		"fa-IR": /^[ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی]+$/i,
		"fi-FI": /^[A-ZÅÄÖ]+$/i,
		"fr-FR": /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
		"it-IT": /^[A-ZÀÉÈÌÎÓÒÙ]+$/i,
		"ja-JP": /^[ぁ-んァ-ヶｦ-ﾟ一-龠ー・。、]+$/i,
		"nb-NO": /^[A-ZÆØÅ]+$/i,
		"nl-NL": /^[A-ZÁÉËÏÓÖÜÚ]+$/i,
		"nn-NO": /^[A-ZÆØÅ]+$/i,
		"hu-HU": /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,
		"pl-PL": /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,
		"pt-PT": /^[A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,
		"ru-RU": /^[А-ЯЁ]+$/i,
		"kk-KZ": /^[А-ЯЁ\u04D8\u04B0\u0406\u04A2\u0492\u04AE\u049A\u04E8\u04BA]+$/i,
		"sl-SI": /^[A-ZČĆĐŠŽ]+$/i,
		"sk-SK": /^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,
		"sr-RS@latin": /^[A-ZČĆŽŠĐ]+$/i,
		"sr-RS": /^[А-ЯЂЈЉЊЋЏ]+$/i,
		"sv-SE": /^[A-ZÅÄÖ]+$/i,
		"th-TH": /^[ก-๐\s]+$/i,
		"tr-TR": /^[A-ZÇĞİıÖŞÜ]+$/i,
		"uk-UA": /^[А-ЩЬЮЯЄIЇҐі]+$/i,
		"vi-VN": /^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,
		"ko-KR": /^[ㄱ-ㅎㅏ-ㅣ가-힣]*$/,
		"ku-IQ": /^[ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,
		ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,
		he: /^[א-ת]+$/,
		fa: /^['آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی']+$/i,
		bn: /^['ঀঁংঃঅআইঈউঊঋঌএঐওঔকখগঘঙচছজঝঞটঠডঢণতথদধনপফবভমযরলশষসহ়ঽািীুূৃৄেৈোৌ্ৎৗড়ঢ়য়ৠৡৢৣৰৱ৲৳৴৵৶৷৸৹৺৻']+$/,
		eo: /^[ABCĈD-GĜHĤIJĴK-PRSŜTUŬVZ]+$/i,
		"hi-IN": /^[\u0900-\u0961]+[\u0972-\u097F]*$/i,
		"si-LK": /^[\u0D80-\u0DFF]+$/
	};
	var alphanumeric = exports.alphanumeric = {
		"en-US": /^[0-9A-Z]+$/i,
		"az-AZ": /^[0-9A-VXYZÇƏĞİıÖŞÜ]+$/i,
		"bg-BG": /^[0-9А-Я]+$/i,
		"cs-CZ": /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,
		"da-DK": /^[0-9A-ZÆØÅ]+$/i,
		"de-DE": /^[0-9A-ZÄÖÜß]+$/i,
		"el-GR": /^[0-9Α-ω]+$/i,
		"es-ES": /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,
		"fi-FI": /^[0-9A-ZÅÄÖ]+$/i,
		"fr-FR": /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
		"it-IT": /^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,
		"ja-JP": /^[0-9０-９ぁ-んァ-ヶｦ-ﾟ一-龠ー・。、]+$/i,
		"hu-HU": /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,
		"nb-NO": /^[0-9A-ZÆØÅ]+$/i,
		"nl-NL": /^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,
		"nn-NO": /^[0-9A-ZÆØÅ]+$/i,
		"pl-PL": /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,
		"pt-PT": /^[0-9A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,
		"ru-RU": /^[0-9А-ЯЁ]+$/i,
		"kk-KZ": /^[0-9А-ЯЁ\u04D8\u04B0\u0406\u04A2\u0492\u04AE\u049A\u04E8\u04BA]+$/i,
		"sl-SI": /^[0-9A-ZČĆĐŠŽ]+$/i,
		"sk-SK": /^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,
		"sr-RS@latin": /^[0-9A-ZČĆŽŠĐ]+$/i,
		"sr-RS": /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,
		"sv-SE": /^[0-9A-ZÅÄÖ]+$/i,
		"th-TH": /^[ก-๙\s]+$/i,
		"tr-TR": /^[0-9A-ZÇĞİıÖŞÜ]+$/i,
		"uk-UA": /^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,
		"ko-KR": /^[0-9ㄱ-ㅎㅏ-ㅣ가-힣]*$/,
		"ku-IQ": /^[٠١٢٣٤٥٦٧٨٩0-9ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,
		"vi-VN": /^[0-9A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,
		ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,
		he: /^[0-9א-ת]+$/,
		fa: /^['0-9آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی۱۲۳۴۵۶۷۸۹۰']+$/i,
		bn: /^['ঀঁংঃঅআইঈউঊঋঌএঐওঔকখগঘঙচছজঝঞটঠডঢণতথদধনপফবভমযরলশষসহ়ঽািীুূৃৄেৈোৌ্ৎৗড়ঢ়য়ৠৡৢৣ০১২৩৪৫৬৭৮৯ৰৱ৲৳৴৵৶৷৸৹৺৻']+$/,
		eo: /^[0-9ABCĈD-GĜHĤIJĴK-PRSŜTUŬVZ]+$/i,
		"hi-IN": /^[\u0900-\u0963]+[\u0966-\u097F]*$/i,
		"si-LK": /^[0-9\u0D80-\u0DFF]+$/
	};
	var decimal = exports.decimal = {
		"en-US": ".",
		ar: "٫"
	};
	var englishLocales = exports.englishLocales = [
		"AU",
		"GB",
		"HK",
		"IN",
		"NZ",
		"ZA",
		"ZM"
	];
	for (var locale, i = 0; i < englishLocales.length; i++) {
		locale = "en-".concat(englishLocales[i]);
		alpha[locale] = alpha["en-US"];
		alphanumeric[locale] = alphanumeric["en-US"];
		decimal[locale] = decimal["en-US"];
	}
	var arabicLocales = exports.arabicLocales = [
		"AE",
		"BH",
		"DZ",
		"EG",
		"IQ",
		"JO",
		"KW",
		"LB",
		"LY",
		"MA",
		"QM",
		"QA",
		"SA",
		"SD",
		"SY",
		"TN",
		"YE"
	];
	for (var _locale, _i = 0; _i < arabicLocales.length; _i++) {
		_locale = "ar-".concat(arabicLocales[_i]);
		alpha[_locale] = alpha.ar;
		alphanumeric[_locale] = alphanumeric.ar;
		decimal[_locale] = decimal.ar;
	}
	var farsiLocales = exports.farsiLocales = ["IR", "AF"];
	for (var _locale2, _i2 = 0; _i2 < farsiLocales.length; _i2++) {
		_locale2 = "fa-".concat(farsiLocales[_i2]);
		alphanumeric[_locale2] = alphanumeric.fa;
		decimal[_locale2] = decimal.ar;
	}
	var bengaliLocales = exports.bengaliLocales = ["BD", "IN"];
	for (var _locale3, _i3 = 0; _i3 < bengaliLocales.length; _i3++) {
		_locale3 = "bn-".concat(bengaliLocales[_i3]);
		alpha[_locale3] = alpha.bn;
		alphanumeric[_locale3] = alphanumeric.bn;
		decimal[_locale3] = decimal["en-US"];
	}
	var dotDecimal = exports.dotDecimal = [
		"ar-EG",
		"ar-LB",
		"ar-LY"
	];
	var commaDecimal = exports.commaDecimal = [
		"bg-BG",
		"cs-CZ",
		"da-DK",
		"de-DE",
		"el-GR",
		"en-ZM",
		"eo",
		"es-ES",
		"fr-CA",
		"fr-FR",
		"id-ID",
		"it-IT",
		"ku-IQ",
		"hi-IN",
		"hu-HU",
		"nb-NO",
		"nn-NO",
		"nl-NL",
		"pl-PL",
		"pt-PT",
		"ru-RU",
		"kk-KZ",
		"si-LK",
		"sl-SI",
		"sr-RS@latin",
		"sr-RS",
		"sv-SE",
		"tr-TR",
		"uk-UA",
		"vi-VN"
	];
	for (var _i4 = 0; _i4 < dotDecimal.length; _i4++) decimal[dotDecimal[_i4]] = decimal["en-US"];
	for (var _i5 = 0; _i5 < commaDecimal.length; _i5++) decimal[commaDecimal[_i5]] = ",";
	alpha["fr-CA"] = alpha["fr-FR"];
	alphanumeric["fr-CA"] = alphanumeric["fr-FR"];
	alpha["pt-BR"] = alpha["pt-PT"];
	alphanumeric["pt-BR"] = alphanumeric["pt-PT"];
	decimal["pt-BR"] = decimal["pt-PT"];
	alpha["pl-Pl"] = alpha["pl-PL"];
	alphanumeric["pl-Pl"] = alphanumeric["pl-PL"];
	decimal["pl-Pl"] = decimal["pl-PL"];
	alpha["fa-AF"] = alpha.fa;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isFloat.js
var require_isFloat = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isFloat.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isFloat;
	exports.locales = void 0;
	var _assertString$92 = _interopRequireDefault$146(require_assertString());
	var _nullUndefinedCheck$1 = _interopRequireDefault$146(require_nullUndefinedCheck());
	var _alpha$4 = require_alpha();
	function _interopRequireDefault$146(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isFloat(str, options) {
		(0, _assertString$92.default)(str);
		options = options || {};
		var float = new RegExp("^(?:[-+])?(?:[0-9]+)?(?:\\".concat(options.locale ? _alpha$4.decimal[options.locale] : ".", "[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$"));
		if (str === "" || str === "." || str === "," || str === "-" || str === "+") return false;
		var value = parseFloat(str.replace(",", "."));
		return float.test(str) && (!options.hasOwnProperty("min") || (0, _nullUndefinedCheck$1.default)(options.min) || value >= options.min) && (!options.hasOwnProperty("max") || (0, _nullUndefinedCheck$1.default)(options.max) || value <= options.max) && (!options.hasOwnProperty("lt") || (0, _nullUndefinedCheck$1.default)(options.lt) || value < options.lt) && (!options.hasOwnProperty("gt") || (0, _nullUndefinedCheck$1.default)(options.gt) || value > options.gt);
	}
	var locales$6 = exports.locales = Object.keys(_alpha$4.decimal);
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/toFloat.js
var require_toFloat = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/toFloat.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = toFloat;
	var _isFloat$1 = _interopRequireDefault$145(require_isFloat());
	function _interopRequireDefault$145(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function toFloat(str) {
		if (!(0, _isFloat$1.default)(str)) return NaN;
		return parseFloat(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isDivisibleBy.js
var require_isDivisibleBy = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isDivisibleBy.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isDivisibleBy$1;
	var _assertString$91 = _interopRequireDefault$144(require_assertString());
	var _toFloat$1 = _interopRequireDefault$144(require_toFloat());
	function _interopRequireDefault$144(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isDivisibleBy$1(str, num) {
		(0, _assertString$91.default)(str);
		return (0, _toFloat$1.default)(str) % parseInt(num, 10) === 0;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/number/IsDivisibleBy.js
var require_IsDivisibleBy = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/number/IsDivisibleBy.js"(exports) {
	var __importDefault$66 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsDivisibleBy = exports.isDivisibleBy = exports.IS_DIVISIBLE_BY = void 0;
	const ValidateBy_1$93 = require_ValidateBy();
	const isDivisibleBy_1 = __importDefault$66(require_isDivisibleBy());
	exports.IS_DIVISIBLE_BY = "isDivisibleBy";
	/**
	* Checks if value is a number that's divisible by another.
	*/
	function isDivisibleBy(value, num) {
		return typeof value === "number" && typeof num === "number" && (0, isDivisibleBy_1.default)(String(value), num);
	}
	exports.isDivisibleBy = isDivisibleBy;
	/**
	* Checks if value is a number that's divisible by another.
	*/
	function IsDivisibleBy(num, validationOptions) {
		return (0, ValidateBy_1$93.ValidateBy)({
			name: exports.IS_DIVISIBLE_BY,
			constraints: [num],
			validator: {
				validate: function(value, args) {
					return isDivisibleBy(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$93.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be divisible by $constraint1";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsDivisibleBy = IsDivisibleBy;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/number/IsPositive.js
var require_IsPositive = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/number/IsPositive.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsPositive = exports.isPositive = exports.IS_POSITIVE = void 0;
	const ValidateBy_1$92 = require_ValidateBy();
	exports.IS_POSITIVE = "isPositive";
	/**
	* Checks if the value is a positive number greater than zero.
	*/
	function isPositive(value) {
		return typeof value === "number" && value > 0;
	}
	exports.isPositive = isPositive;
	/**
	* Checks if the value is a positive number greater than zero.
	*/
	function IsPositive(validationOptions) {
		return (0, ValidateBy_1$92.ValidateBy)({
			name: exports.IS_POSITIVE,
			validator: {
				validate: function(value, args) {
					return isPositive(value);
				},
				defaultMessage: (0, ValidateBy_1$92.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a positive number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsPositive = IsPositive;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/number/IsNegative.js
var require_IsNegative = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/number/IsNegative.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsNegative = exports.isNegative = exports.IS_NEGATIVE = void 0;
	const ValidateBy_1$91 = require_ValidateBy();
	exports.IS_NEGATIVE = "isNegative";
	/**
	* Checks if the value is a negative number smaller than zero.
	*/
	function isNegative(value) {
		return typeof value === "number" && value < 0;
	}
	exports.isNegative = isNegative;
	/**
	* Checks if the value is a negative number smaller than zero.
	*/
	function IsNegative(validationOptions) {
		return (0, ValidateBy_1$91.ValidateBy)({
			name: exports.IS_NEGATIVE,
			validator: {
				validate: function(value, args) {
					return isNegative(value);
				},
				defaultMessage: (0, ValidateBy_1$91.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a negative number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsNegative = IsNegative;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/number/Max.js
var require_Max = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/number/Max.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Max = exports.max = exports.MAX = void 0;
	const ValidateBy_1$90 = require_ValidateBy();
	exports.MAX = "max";
	/**
	* Checks if the first number is less than or equal to the second.
	*/
	function max$1(num, max$2) {
		return typeof num === "number" && typeof max$2 === "number" && num <= max$2;
	}
	exports.max = max$1;
	/**
	* Checks if the value is less than or equal to the allowed maximum value.
	*/
	function Max(maxValue, validationOptions) {
		return (0, ValidateBy_1$90.ValidateBy)({
			name: exports.MAX,
			constraints: [maxValue],
			validator: {
				validate: function(value, args) {
					return max$1(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$90.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must not be greater than $constraint1";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.Max = Max;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/number/Min.js
var require_Min = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/number/Min.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Min = exports.min = exports.MIN = void 0;
	const ValidateBy_1$89 = require_ValidateBy();
	exports.MIN = "min";
	/**
	* Checks if the first number is greater than or equal to the second.
	*/
	function min$1(num, min$2) {
		return typeof num === "number" && typeof min$2 === "number" && num >= min$2;
	}
	exports.min = min$1;
	/**
	* Checks if the value is greater than or equal to the allowed minimum value.
	*/
	function Min(minValue, validationOptions) {
		return (0, ValidateBy_1$89.ValidateBy)({
			name: exports.MIN,
			constraints: [minValue],
			validator: {
				validate: function(value, args) {
					return min$1(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$89.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must not be less than $constraint1";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.Min = Min;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/date/MinDate.js
var require_MinDate = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/date/MinDate.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.MinDate = exports.minDate = exports.MIN_DATE = void 0;
	const ValidateBy_1$88 = require_ValidateBy();
	exports.MIN_DATE = "minDate";
	/**
	* Checks if the value is a date that's after the specified date.
	*/
	function minDate(date, minDate$1) {
		return date instanceof Date && date.getTime() >= (minDate$1 instanceof Date ? minDate$1 : minDate$1()).getTime();
	}
	exports.minDate = minDate;
	/**
	* Checks if the value is a date that's after the specified date.
	*/
	function MinDate(date, validationOptions) {
		return (0, ValidateBy_1$88.ValidateBy)({
			name: exports.MIN_DATE,
			constraints: [date],
			validator: {
				validate: function(value, args) {
					return minDate(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$88.buildMessage)(function(eachPrefix) {
					return "minimal allowed date for " + eachPrefix + "$property is $constraint1";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.MinDate = MinDate;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/date/MaxDate.js
var require_MaxDate = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/date/MaxDate.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.MaxDate = exports.maxDate = exports.MAX_DATE = void 0;
	const ValidateBy_1$87 = require_ValidateBy();
	exports.MAX_DATE = "maxDate";
	/**
	* Checks if the value is a date that's before the specified date.
	*/
	function maxDate(date, maxDate$1) {
		return date instanceof Date && date.getTime() <= (maxDate$1 instanceof Date ? maxDate$1 : maxDate$1()).getTime();
	}
	exports.maxDate = maxDate;
	/**
	* Checks if the value is a date that's before the specified date.
	*/
	function MaxDate(date, validationOptions) {
		return (0, ValidateBy_1$87.ValidateBy)({
			name: exports.MAX_DATE,
			constraints: [date],
			validator: {
				validate: function(value, args) {
					return maxDate(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$87.buildMessage)(function(eachPrefix) {
					return "maximal allowed date for " + eachPrefix + "$property is $constraint1";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.MaxDate = MaxDate;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/toString.js
var require_toString = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/toString.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = toString$1;
	function _typeof$20(o) {
		"@babel/helpers - typeof";
		return _typeof$20 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof$20(o);
	}
	function toString$1(input) {
		if (_typeof$20(input) === "object" && input !== null) if (typeof input.toString === "function") input = input.toString();
		else input = "[object Object]";
		else if (input === null || typeof input === "undefined" || isNaN(input) && !input.length) input = "";
		return String(input);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/contains.js
var require_contains = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/contains.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = contains$1;
	var _assertString$90 = _interopRequireDefault$143(require_assertString());
	var _toString$1 = _interopRequireDefault$143(require_toString());
	var _merge$13 = _interopRequireDefault$143(require_merge$1());
	function _interopRequireDefault$143(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var defaultContainsOptions = {
		ignoreCase: false,
		minOccurrences: 1
	};
	function contains$1(str, elem, options) {
		(0, _assertString$90.default)(str);
		options = (0, _merge$13.default)(options, defaultContainsOptions);
		if (options.ignoreCase) return str.toLowerCase().split((0, _toString$1.default)(elem).toLowerCase()).length > options.minOccurrences;
		return str.split((0, _toString$1.default)(elem)).length > options.minOccurrences;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/Contains.js
var require_Contains = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/Contains.js"(exports) {
	var __importDefault$65 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Contains = exports.contains = exports.CONTAINS = void 0;
	const ValidateBy_1$86 = require_ValidateBy();
	const contains_1$1 = __importDefault$65(require_contains());
	exports.CONTAINS = "contains";
	/**
	* Checks if the string contains the seed.
	* If given value is not a string, then it returns false.
	*/
	function contains(value, seed) {
		return typeof value === "string" && (0, contains_1$1.default)(value, seed);
	}
	exports.contains = contains;
	/**
	* Checks if the string contains the seed.
	* If given value is not a string, then it returns false.
	*/
	function Contains(seed, validationOptions) {
		return (0, ValidateBy_1$86.ValidateBy)({
			name: exports.CONTAINS,
			constraints: [seed],
			validator: {
				validate: function(value, args) {
					return contains(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$86.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain a $constraint1 string";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.Contains = Contains;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/NotContains.js
var require_NotContains = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/NotContains.js"(exports) {
	var __importDefault$64 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.NotContains = exports.notContains = exports.NOT_CONTAINS = void 0;
	const ValidateBy_1$85 = require_ValidateBy();
	const contains_1 = __importDefault$64(require_contains());
	exports.NOT_CONTAINS = "notContains";
	/**
	* Checks if the string does not contain the seed.
	* If given value is not a string, then it returns false.
	*/
	function notContains(value, seed) {
		return typeof value === "string" && !(0, contains_1.default)(value, seed);
	}
	exports.notContains = notContains;
	/**
	* Checks if the string does not contain the seed.
	* If given value is not a string, then it returns false.
	*/
	function NotContains(seed, validationOptions) {
		return (0, ValidateBy_1$85.ValidateBy)({
			name: exports.NOT_CONTAINS,
			constraints: [seed],
			validator: {
				validate: function(value, args) {
					return notContains(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$85.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property should not contain a $constraint1 string";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.NotContains = NotContains;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isAlpha.js
var require_isAlpha = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isAlpha.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isAlpha$1;
	exports.locales = void 0;
	var _assertString$89 = _interopRequireDefault$142(require_assertString());
	var _alpha$3 = require_alpha();
	function _interopRequireDefault$142(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isAlpha$1(_str) {
		var locale$1 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "en-US";
		var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
		(0, _assertString$89.default)(_str);
		var str = _str;
		var ignore = options.ignore;
		if (ignore) if (ignore instanceof RegExp) str = str.replace(ignore, "");
		else if (typeof ignore === "string") str = str.replace(new RegExp("[".concat(ignore.replace(/[-[\]{}()*+?.,\\^$|#\\s]/g, "\\$&"), "]"), "g"), "");
		else throw new Error("ignore should be instance of a String or RegExp");
		if (locale$1 in _alpha$3.alpha) return _alpha$3.alpha[locale$1].test(str);
		throw new Error("Invalid locale '".concat(locale$1, "'"));
	}
	var locales$5 = exports.locales = Object.keys(_alpha$3.alpha);
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsAlpha.js
var require_IsAlpha = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsAlpha.js"(exports) {
	var __importDefault$63 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsAlpha = exports.isAlpha = exports.IS_ALPHA = void 0;
	const ValidateBy_1$84 = require_ValidateBy();
	const isAlpha_1 = __importDefault$63(require_isAlpha());
	exports.IS_ALPHA = "isAlpha";
	/**
	* Checks if the string contains only letters (a-zA-Z).
	* If given value is not a string, then it returns false.
	*/
	function isAlpha(value, locale$1) {
		return typeof value === "string" && (0, isAlpha_1.default)(value, locale$1);
	}
	exports.isAlpha = isAlpha;
	/**
	* Checks if the string contains only letters (a-zA-Z).
	* If given value is not a string, then it returns false.
	*/
	function IsAlpha(locale$1, validationOptions) {
		return (0, ValidateBy_1$84.ValidateBy)({
			name: exports.IS_ALPHA,
			constraints: [locale$1],
			validator: {
				validate: function(value, args) {
					return isAlpha(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$84.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain only letters (a-zA-Z)";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsAlpha = IsAlpha;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isAlphanumeric.js
var require_isAlphanumeric = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isAlphanumeric.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isAlphanumeric$1;
	exports.locales = void 0;
	var _assertString$88 = _interopRequireDefault$141(require_assertString());
	var _alpha$2 = require_alpha();
	function _interopRequireDefault$141(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isAlphanumeric$1(_str) {
		var locale$1 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "en-US";
		var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
		(0, _assertString$88.default)(_str);
		var str = _str;
		var ignore = options.ignore;
		if (ignore) if (ignore instanceof RegExp) str = str.replace(ignore, "");
		else if (typeof ignore === "string") str = str.replace(new RegExp("[".concat(ignore.replace(/[-[\]{}()*+?.,\\^$|#\\s]/g, "\\$&"), "]"), "g"), "");
		else throw new Error("ignore should be instance of a String or RegExp");
		if (locale$1 in _alpha$2.alphanumeric) return _alpha$2.alphanumeric[locale$1].test(str);
		throw new Error("Invalid locale '".concat(locale$1, "'"));
	}
	var locales$4 = exports.locales = Object.keys(_alpha$2.alphanumeric);
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsAlphanumeric.js
var require_IsAlphanumeric = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsAlphanumeric.js"(exports) {
	var __importDefault$62 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsAlphanumeric = exports.isAlphanumeric = exports.IS_ALPHANUMERIC = void 0;
	const ValidateBy_1$83 = require_ValidateBy();
	const isAlphanumeric_1 = __importDefault$62(require_isAlphanumeric());
	exports.IS_ALPHANUMERIC = "isAlphanumeric";
	/**
	* Checks if the string contains only letters and numbers.
	* If given value is not a string, then it returns false.
	*/
	function isAlphanumeric(value, locale$1) {
		return typeof value === "string" && (0, isAlphanumeric_1.default)(value, locale$1);
	}
	exports.isAlphanumeric = isAlphanumeric;
	/**
	* Checks if the string contains only letters and numbers.
	* If given value is not a string, then it returns false.
	*/
	function IsAlphanumeric(locale$1, validationOptions) {
		return (0, ValidateBy_1$83.ValidateBy)({
			name: exports.IS_ALPHANUMERIC,
			constraints: [locale$1],
			validator: {
				validate: function(value, args) {
					return isAlphanumeric(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$83.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain only letters and numbers";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsAlphanumeric = IsAlphanumeric;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/includesArray.js
var require_includesArray = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/includesArray.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = void 0;
	var includes = function includes$2(arr, val) {
		return arr.some(function(arrVal) {
			return val === arrVal;
		});
	};
	var _default$3 = exports.default = includes;
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isDecimal.js
var require_isDecimal = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isDecimal.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isDecimal$1;
	var _merge$12 = _interopRequireDefault$140(require_merge$1());
	var _assertString$87 = _interopRequireDefault$140(require_assertString());
	var _includesArray$4 = _interopRequireDefault$140(require_includesArray());
	var _alpha$1 = require_alpha();
	function _interopRequireDefault$140(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function decimalRegExp(options) {
		var regExp = new RegExp("^[-+]?([0-9]+)?(\\".concat(_alpha$1.decimal[options.locale], "[0-9]{").concat(options.decimal_digits, "})").concat(options.force_decimal ? "" : "?", "$"));
		return regExp;
	}
	var default_decimal_options = {
		force_decimal: false,
		decimal_digits: "1,",
		locale: "en-US"
	};
	var blacklist$1 = [
		"",
		"-",
		"+"
	];
	function isDecimal$1(str, options) {
		(0, _assertString$87.default)(str);
		options = (0, _merge$12.default)(options, default_decimal_options);
		if (options.locale in _alpha$1.decimal) return !(0, _includesArray$4.default)(blacklist$1, str.replace(/ /g, "")) && decimalRegExp(options).test(str);
		throw new Error("Invalid locale '".concat(options.locale, "'"));
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsDecimal.js
var require_IsDecimal = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsDecimal.js"(exports) {
	var __importDefault$61 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsDecimal = exports.isDecimal = exports.IS_DECIMAL = void 0;
	const ValidateBy_1$82 = require_ValidateBy();
	const isDecimal_1 = __importDefault$61(require_isDecimal());
	exports.IS_DECIMAL = "isDecimal";
	/**
	* Checks if the string is a valid decimal.
	* If given value is not a string, then it returns false.
	*/
	function isDecimal(value, options) {
		return typeof value === "string" && (0, isDecimal_1.default)(value, options);
	}
	exports.isDecimal = isDecimal;
	/**
	* Checks if the string is a valid decimal.
	* If given value is not a string, then it returns false.
	*/
	function IsDecimal(options, validationOptions) {
		return (0, ValidateBy_1$82.ValidateBy)({
			name: exports.IS_DECIMAL,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isDecimal(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$82.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property is not a valid decimal number.";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsDecimal = IsDecimal;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isAscii.js
var require_isAscii = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isAscii.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isAscii$1;
	var _assertString$86 = _interopRequireDefault$139(require_assertString());
	function _interopRequireDefault$139(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var ascii = /^[\x00-\x7F]+$/;
	function isAscii$1(str) {
		(0, _assertString$86.default)(str);
		return ascii.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsAscii.js
var require_IsAscii = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsAscii.js"(exports) {
	var __importDefault$60 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsAscii = exports.isAscii = exports.IS_ASCII = void 0;
	const ValidateBy_1$81 = require_ValidateBy();
	const isAscii_1 = __importDefault$60(require_isAscii());
	exports.IS_ASCII = "isAscii";
	/**
	* Checks if the string contains ASCII chars only.
	* If given value is not a string, then it returns false.
	*/
	function isAscii(value) {
		return typeof value === "string" && (0, isAscii_1.default)(value);
	}
	exports.isAscii = isAscii;
	/**
	* Checks if the string contains ASCII chars only.
	* If given value is not a string, then it returns false.
	*/
	function IsAscii(validationOptions) {
		return (0, ValidateBy_1$81.ValidateBy)({
			name: exports.IS_ASCII,
			validator: {
				validate: function(value, args) {
					return isAscii(value);
				},
				defaultMessage: (0, ValidateBy_1$81.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain only ASCII characters";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsAscii = IsAscii;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBase64.js
var require_isBase64 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBase64.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isBase64$1;
	var _assertString$85 = _interopRequireDefault$138(require_assertString());
	var _merge$11 = _interopRequireDefault$138(require_merge$1());
	function _interopRequireDefault$138(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var base64WithPadding = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/;
	var base64WithoutPadding = /^[A-Za-z0-9+/]+$/;
	var base64UrlWithPadding = /^(?:[A-Za-z0-9_-]{4})*(?:[A-Za-z0-9_-]{2}==|[A-Za-z0-9_-]{3}=|[A-Za-z0-9_-]{4})$/;
	var base64UrlWithoutPadding = /^[A-Za-z0-9_-]+$/;
	function isBase64$1(str, options) {
		var _options;
		(0, _assertString$85.default)(str);
		options = (0, _merge$11.default)(options, {
			urlSafe: false,
			padding: !((_options = options) !== null && _options !== void 0 && _options.urlSafe)
		});
		if (str === "") return true;
		var regex;
		if (options.urlSafe) regex = options.padding ? base64UrlWithPadding : base64UrlWithoutPadding;
		else regex = options.padding ? base64WithPadding : base64WithoutPadding;
		return (!options.padding || str.length % 4 === 0) && regex.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBase64.js
var require_IsBase64 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBase64.js"(exports) {
	var __importDefault$59 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsBase64 = exports.isBase64 = exports.IS_BASE64 = void 0;
	const ValidateBy_1$80 = require_ValidateBy();
	const isBase64_1 = __importDefault$59(require_isBase64());
	exports.IS_BASE64 = "isBase64";
	/**
	* Checks if a string is base64 encoded.
	* If given value is not a string, then it returns false.
	*/
	function isBase64(value, options) {
		return typeof value === "string" && (0, isBase64_1.default)(value, options);
	}
	exports.isBase64 = isBase64;
	/**
	* Checks if a string is base64 encoded.
	* If given value is not a string, then it returns false.
	*/
	function IsBase64(options, validationOptions) {
		return (0, ValidateBy_1$80.ValidateBy)({
			name: exports.IS_BASE64,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isBase64(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$80.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be base64 encoded";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsBase64 = IsBase64;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isByteLength.js
var require_isByteLength = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isByteLength.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isByteLength$1;
	var _assertString$84 = _interopRequireDefault$137(require_assertString());
	function _interopRequireDefault$137(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _typeof$19(o) {
		"@babel/helpers - typeof";
		return _typeof$19 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof$19(o);
	}
	function isByteLength$1(str, options) {
		(0, _assertString$84.default)(str);
		var min$2;
		var max$2;
		if (_typeof$19(options) === "object") {
			min$2 = options.min || 0;
			max$2 = options.max;
		} else {
			min$2 = arguments[1];
			max$2 = arguments[2];
		}
		var len = encodeURI(str).split(/%..|./).length - 1;
		return len >= min$2 && (typeof max$2 === "undefined" || len <= max$2);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsByteLength.js
var require_IsByteLength = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsByteLength.js"(exports) {
	var __importDefault$58 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsByteLength = exports.isByteLength = exports.IS_BYTE_LENGTH = void 0;
	const ValidateBy_1$79 = require_ValidateBy();
	const isByteLength_1 = __importDefault$58(require_isByteLength());
	exports.IS_BYTE_LENGTH = "isByteLength";
	/**
	* Checks if the string's length (in bytes) falls in a range.
	* If given value is not a string, then it returns false.
	*/
	function isByteLength(value, min$2, max$2) {
		return typeof value === "string" && (0, isByteLength_1.default)(value, {
			min: min$2,
			max: max$2
		});
	}
	exports.isByteLength = isByteLength;
	/**
	* Checks if the string's length (in bytes) falls in a range.
	* If given value is not a string, then it returns false.
	*/
	function IsByteLength(min$2, max$2, validationOptions) {
		return (0, ValidateBy_1$79.ValidateBy)({
			name: exports.IS_BYTE_LENGTH,
			constraints: [min$2, max$2],
			validator: {
				validate: function(value, args) {
					return isByteLength(value, args === null || args === void 0 ? void 0 : args.constraints[0], args === null || args === void 0 ? void 0 : args.constraints[1]);
				},
				defaultMessage: (0, ValidateBy_1$79.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property's byte length must fall into ($constraint1, $constraint2) range";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsByteLength = IsByteLength;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLuhnNumber.js
var require_isLuhnNumber = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLuhnNumber.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isLuhnNumber;
	var _assertString$83 = _interopRequireDefault$136(require_assertString());
	function _interopRequireDefault$136(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isLuhnNumber(str) {
		(0, _assertString$83.default)(str);
		var sanitized = str.replace(/[- ]+/g, "");
		var sum = 0;
		var digit;
		var tmpNum;
		var shouldDouble;
		for (var i$1 = sanitized.length - 1; i$1 >= 0; i$1--) {
			digit = sanitized.substring(i$1, i$1 + 1);
			tmpNum = parseInt(digit, 10);
			if (shouldDouble) {
				tmpNum *= 2;
				if (tmpNum >= 10) sum += tmpNum % 10 + 1;
				else sum += tmpNum;
			} else sum += tmpNum;
			shouldDouble = !shouldDouble;
		}
		return !!(sum % 10 === 0 ? sanitized : false);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isCreditCard.js
var require_isCreditCard = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isCreditCard.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isCreditCard$1;
	var _assertString$82 = _interopRequireDefault$135(require_assertString());
	var _isLuhnNumber$1 = _interopRequireDefault$135(require_isLuhnNumber());
	function _interopRequireDefault$135(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var cards = {
		amex: /^3[47][0-9]{13}$/,
		dinersclub: /^3(?:0[0-5]|[68][0-9])[0-9]{11}$/,
		discover: /^6(?:011|5[0-9][0-9])[0-9]{12,15}$/,
		jcb: /^(?:2131|1800|35\d{3})\d{11}$/,
		mastercard: new RegExp("^5[1-5][0-9]{2}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$", ""),
		unionpay: new RegExp("^(6[27][0-9]{14}|^(81[0-9]{14,17}))$", ""),
		visa: /^(?:4[0-9]{12})(?:[0-9]{3,6})?$/
	};
	var allCards = function() {
		var tmpCardsArray = [];
		for (var cardProvider in cards)
 // istanbul ignore else
		if (cards.hasOwnProperty(cardProvider)) tmpCardsArray.push(cards[cardProvider]);
		return tmpCardsArray;
	}();
	function isCreditCard$1(card) {
		var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
		(0, _assertString$82.default)(card);
		var provider = options.provider;
		var sanitized = card.replace(/[- ]+/g, "");
		if (provider && provider.toLowerCase() in cards) {
			if (!cards[provider.toLowerCase()].test(sanitized)) return false;
		} else if (provider && !(provider.toLowerCase() in cards)) throw new Error("".concat(provider, " is not a valid credit card provider."));
		else if (!allCards.some(function(cardProvider) {
			return cardProvider.test(sanitized);
		})) return false;
		return (0, _isLuhnNumber$1.default)(card);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsCreditCard.js
var require_IsCreditCard = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsCreditCard.js"(exports) {
	var __importDefault$57 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsCreditCard = exports.isCreditCard = exports.IS_CREDIT_CARD = void 0;
	const ValidateBy_1$78 = require_ValidateBy();
	const isCreditCard_1 = __importDefault$57(require_isCreditCard());
	exports.IS_CREDIT_CARD = "isCreditCard";
	/**
	* Checks if the string is a credit card.
	* If given value is not a string, then it returns false.
	*/
	function isCreditCard(value) {
		return typeof value === "string" && (0, isCreditCard_1.default)(value);
	}
	exports.isCreditCard = isCreditCard;
	/**
	* Checks if the string is a credit card.
	* If given value is not a string, then it returns false.
	*/
	function IsCreditCard(validationOptions) {
		return (0, ValidateBy_1$78.ValidateBy)({
			name: exports.IS_CREDIT_CARD,
			validator: {
				validate: function(value, args) {
					return isCreditCard(value);
				},
				defaultMessage: (0, ValidateBy_1$78.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a credit card";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsCreditCard = IsCreditCard;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isCurrency.js
var require_isCurrency = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isCurrency.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isCurrency$1;
	var _merge$10 = _interopRequireDefault$134(require_merge$1());
	var _assertString$81 = _interopRequireDefault$134(require_assertString());
	function _interopRequireDefault$134(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function currencyRegex(options) {
		var decimal_digits = "\\d{".concat(options.digits_after_decimal[0], "}");
		options.digits_after_decimal.forEach(function(digit, index) {
			if (index !== 0) decimal_digits = "".concat(decimal_digits, "|\\d{").concat(digit, "}");
		});
		var symbol = "(".concat(options.symbol.replace(/\W/, function(m) {
			return "\\".concat(m);
		}), ")").concat(options.require_symbol ? "" : "?"), negative = "-?", whole_dollar_amount_without_sep = "[1-9]\\d*", whole_dollar_amount_with_sep = "[1-9]\\d{0,2}(\\".concat(options.thousands_separator, "\\d{3})*"), valid_whole_dollar_amounts = [
			"0",
			whole_dollar_amount_without_sep,
			whole_dollar_amount_with_sep
		], whole_dollar_amount = "(".concat(valid_whole_dollar_amounts.join("|"), ")?"), decimal_amount = "(\\".concat(options.decimal_separator, "(").concat(decimal_digits, "))").concat(options.require_decimal ? "" : "?");
		var pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : "");
		if (options.allow_negatives && !options.parens_for_negatives) {
			if (options.negative_sign_after_digits) pattern += negative;
			else if (options.negative_sign_before_digits) pattern = negative + pattern;
		}
		if (options.allow_negative_sign_placeholder) pattern = "( (?!\\-))?".concat(pattern);
		else if (options.allow_space_after_symbol) pattern = " ?".concat(pattern);
		else if (options.allow_space_after_digits) pattern += "( (?!$))?";
		if (options.symbol_after_digits) pattern += symbol;
		else pattern = symbol + pattern;
		if (options.allow_negatives) {
			if (options.parens_for_negatives) pattern = "(\\(".concat(pattern, "\\)|").concat(pattern, ")");
			else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) pattern = negative + pattern;
		}
		return new RegExp("^(?!-? )(?=.*\\d)".concat(pattern, "$"));
	}
	var default_currency_options = {
		symbol: "$",
		require_symbol: false,
		allow_space_after_symbol: false,
		symbol_after_digits: false,
		allow_negatives: true,
		parens_for_negatives: false,
		negative_sign_before_digits: false,
		negative_sign_after_digits: false,
		allow_negative_sign_placeholder: false,
		thousands_separator: ",",
		decimal_separator: ".",
		allow_decimal: true,
		require_decimal: false,
		digits_after_decimal: [2],
		allow_space_after_digits: false
	};
	function isCurrency$1(str, options) {
		(0, _assertString$81.default)(str);
		options = (0, _merge$10.default)(options, default_currency_options);
		return currencyRegex(options).test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsCurrency.js
var require_IsCurrency = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsCurrency.js"(exports) {
	var __importDefault$56 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsCurrency = exports.isCurrency = exports.IS_CURRENCY = void 0;
	const ValidateBy_1$77 = require_ValidateBy();
	const isCurrency_1 = __importDefault$56(require_isCurrency());
	exports.IS_CURRENCY = "isCurrency";
	/**
	* Checks if the string is a valid currency amount.
	* If given value is not a string, then it returns false.
	*/
	function isCurrency(value, options) {
		return typeof value === "string" && (0, isCurrency_1.default)(value, options);
	}
	exports.isCurrency = isCurrency;
	/**
	* Checks if the string is a valid currency amount.
	* If given value is not a string, then it returns false.
	*/
	function IsCurrency(options, validationOptions) {
		return (0, ValidateBy_1$77.ValidateBy)({
			name: exports.IS_CURRENCY,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isCurrency(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$77.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a currency";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsCurrency = IsCurrency;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/checkHost.js
var require_checkHost = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/checkHost.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = checkHost;
	function isRegExp(obj) {
		return Object.prototype.toString.call(obj) === "[object RegExp]";
	}
	function checkHost(host, matches$2) {
		for (var i$1 = 0; i$1 < matches$2.length; i$1++) {
			var match = matches$2[i$1];
			if (host === match || isRegExp(match) && match.test(host)) return true;
		}
		return false;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isFQDN.js
var require_isFQDN = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isFQDN.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isFQDN$1;
	var _assertString$80 = _interopRequireDefault$133(require_assertString());
	var _merge$9 = _interopRequireDefault$133(require_merge$1());
	function _interopRequireDefault$133(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var default_fqdn_options = {
		require_tld: true,
		allow_underscores: false,
		allow_trailing_dot: false,
		allow_numeric_tld: false,
		allow_wildcard: false,
		ignore_max_length: false
	};
	function isFQDN$1(str, options) {
		(0, _assertString$80.default)(str);
		options = (0, _merge$9.default)(options, default_fqdn_options);
		if (options.allow_trailing_dot && str[str.length - 1] === ".") str = str.substring(0, str.length - 1);
		if (options.allow_wildcard === true && str.indexOf("*.") === 0) str = str.substring(2);
		var parts = str.split(".");
		var tld = parts[parts.length - 1];
		if (options.require_tld) {
			if (parts.length < 2) return false;
			if (!options.allow_numeric_tld && !new RegExp("^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$", "i").test(tld)) return false;
			if (/\s/.test(tld)) return false;
		}
		if (!options.allow_numeric_tld && /^\d+$/.test(tld)) return false;
		return parts.every(function(part) {
			if (part.length > 63 && !options.ignore_max_length) return false;
			if (!/^[a-z_\u00a1-\uffff0-9-]+$/i.test(part)) return false;
			if (/[\uff01-\uff5e]/.test(part)) return false;
			if (/^-|-$/.test(part)) return false;
			if (!options.allow_underscores && /_/.test(part)) return false;
			return true;
		});
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIP.js
var require_isIP = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIP.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isIP$1;
	var _assertString$79 = _interopRequireDefault$132(require_assertString());
	function _interopRequireDefault$132(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _typeof$18(o) {
		"@babel/helpers - typeof";
		return _typeof$18 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof$18(o);
	}
	/**
	11.3.  Examples
	
	The following addresses
	
	fe80::1234 (on the 1st link of the node)
	ff02::5678 (on the 5th link of the node)
	ff08::9abc (on the 10th organization of the node)
	
	would be represented as follows:
	
	fe80::1234%1
	ff02::5678%5
	ff08::9abc%10
	
	(Here we assume a natural translation from a zone index to the
	<zone_id> part, where the Nth zone of any scope is translated into
	"N".)
	
	If we use interface names as <zone_id>, those addresses could also be
	represented as follows:
	
	fe80::1234%ne0
	ff02::5678%pvc1.3
	ff08::9abc%interface10
	
	where the interface "ne0" belongs to the 1st link, "pvc1.3" belongs
	to the 5th link, and "interface10" belongs to the 10th organization.
	* * */
	var IPv4SegmentFormat = "(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])";
	var IPv4AddressFormat = "(".concat(IPv4SegmentFormat, "[.]){3}").concat(IPv4SegmentFormat);
	var IPv4AddressRegExp = new RegExp("^".concat(IPv4AddressFormat, "$"));
	var IPv6SegmentFormat = "(?:[0-9a-fA-F]{1,4})";
	var IPv6AddressRegExp = /* @__PURE__ */ new RegExp("^(" + "(?:".concat(IPv6SegmentFormat, ":){7}(?:").concat(IPv6SegmentFormat, "|:)|") + "(?:".concat(IPv6SegmentFormat, ":){6}(?:").concat(IPv4AddressFormat, "|:").concat(IPv6SegmentFormat, "|:)|") + "(?:".concat(IPv6SegmentFormat, ":){5}(?::").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,2}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){4}(?:(:").concat(IPv6SegmentFormat, "){0,1}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,3}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){3}(?:(:").concat(IPv6SegmentFormat, "){0,2}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,4}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){2}(?:(:").concat(IPv6SegmentFormat, "){0,3}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,5}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){1}(?:(:").concat(IPv6SegmentFormat, "){0,4}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,6}|:)|") + "(?::((?::".concat(IPv6SegmentFormat, "){0,5}:").concat(IPv4AddressFormat, "|(?::").concat(IPv6SegmentFormat, "){1,7}|:))") + ")(%[0-9a-zA-Z.]{1,})?$");
	function isIP$1(ipAddress) {
		var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
		(0, _assertString$79.default)(ipAddress);
		var version$1 = (_typeof$18(options) === "object" ? options.version : arguments[1]) || "";
		if (!version$1) return isIP$1(ipAddress, { version: 4 }) || isIP$1(ipAddress, { version: 6 });
		if (version$1.toString() === "4") return IPv4AddressRegExp.test(ipAddress);
		if (version$1.toString() === "6") return IPv6AddressRegExp.test(ipAddress);
		return false;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isEmail.js
var require_isEmail = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isEmail.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isEmail$1;
	var _assertString$78 = _interopRequireDefault$131(require_assertString());
	var _checkHost$1 = _interopRequireDefault$131(require_checkHost());
	var _isByteLength$1 = _interopRequireDefault$131(require_isByteLength());
	var _isFQDN$2 = _interopRequireDefault$131(require_isFQDN());
	var _isIP$3 = _interopRequireDefault$131(require_isIP());
	var _merge$8 = _interopRequireDefault$131(require_merge$1());
	function _interopRequireDefault$131(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var default_email_options = {
		allow_display_name: false,
		allow_underscores: false,
		require_display_name: false,
		allow_utf8_local_part: true,
		require_tld: true,
		blacklisted_chars: "",
		ignore_max_length: false,
		host_blacklist: [],
		host_whitelist: []
	};
	var splitNameAddress = new RegExp("^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)<", "i");
	var emailUserPart = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i;
	var gmailUserPart = /^[a-z\d]+$/;
	var quotedEmailUser = new RegExp("^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$", "i");
	var emailUserUtf8Part = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A1-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i;
	var quotedEmailUserUtf8 = new RegExp("^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$", "i");
	var defaultMaxEmailLength = 254;
	/**
	* Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2
	* @param {String} display_name
	*/
	function validateDisplayName(display_name) {
		var display_name_without_quotes = display_name.replace(new RegExp("^\"(.+)\"$", ""), "$1");
		if (!display_name_without_quotes.trim()) return false;
		var contains_illegal = /[\.";<>]/.test(display_name_without_quotes);
		if (contains_illegal) {
			if (display_name_without_quotes === display_name) return false;
			var all_start_with_back_slash = display_name_without_quotes.split("\"").length === display_name_without_quotes.split("\\\"").length;
			if (!all_start_with_back_slash) return false;
		}
		return true;
	}
	function isEmail$1(str, options) {
		(0, _assertString$78.default)(str);
		options = (0, _merge$8.default)(options, default_email_options);
		if (options.require_display_name || options.allow_display_name) {
			var display_email = str.match(splitNameAddress);
			if (display_email) {
				var display_name = display_email[1];
				str = str.replace(display_name, "").replace(new RegExp("(^<|>$)", "g"), "");
				if (display_name.endsWith(" ")) display_name = display_name.slice(0, -1);
				if (!validateDisplayName(display_name)) return false;
			} else if (options.require_display_name) return false;
		}
		if (!options.ignore_max_length && str.length > defaultMaxEmailLength) return false;
		var parts = str.split("@");
		var domain = parts.pop();
		var lower_domain = domain.toLowerCase();
		if (options.host_blacklist.length > 0 && (0, _checkHost$1.default)(lower_domain, options.host_blacklist)) return false;
		if (options.host_whitelist.length > 0 && !(0, _checkHost$1.default)(lower_domain, options.host_whitelist)) return false;
		var user = parts.join("@");
		if (options.domain_specific_validation && (lower_domain === "gmail.com" || lower_domain === "googlemail.com")) {
			user = user.toLowerCase();
			var username = user.split("+")[0];
			if (!(0, _isByteLength$1.default)(username.replace(/\./g, ""), {
				min: 6,
				max: 30
			})) return false;
			var _user_parts = username.split(".");
			for (var i$1 = 0; i$1 < _user_parts.length; i$1++) if (!gmailUserPart.test(_user_parts[i$1])) return false;
		}
		if (options.ignore_max_length === false && (!(0, _isByteLength$1.default)(user, { max: 64 }) || !(0, _isByteLength$1.default)(domain, { max: 254 }))) return false;
		if (!(0, _isFQDN$2.default)(domain, {
			require_tld: options.require_tld,
			ignore_max_length: options.ignore_max_length,
			allow_underscores: options.allow_underscores
		})) {
			if (!options.allow_ip_domain) return false;
			if (!(0, _isIP$3.default)(domain)) {
				if (!domain.startsWith("[") || !domain.endsWith("]")) return false;
				var noBracketdomain = domain.slice(1, -1);
				if (noBracketdomain.length === 0 || !(0, _isIP$3.default)(noBracketdomain)) return false;
			}
		}
		if (options.blacklisted_chars) {
			if (user.search(new RegExp("[".concat(options.blacklisted_chars, "]+"), "g")) !== -1) return false;
		}
		if (user[0] === "\"" && user[user.length - 1] === "\"") {
			user = user.slice(1, user.length - 1);
			return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);
		}
		var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;
		var user_parts = user.split(".");
		for (var _i$1 = 0; _i$1 < user_parts.length; _i$1++) if (!pattern.test(user_parts[_i$1])) return false;
		return true;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsEmail.js
var require_IsEmail = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsEmail.js"(exports) {
	var __importDefault$55 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsEmail = exports.isEmail = exports.IS_EMAIL = void 0;
	const ValidateBy_1$76 = require_ValidateBy();
	const isEmail_1 = __importDefault$55(require_isEmail());
	exports.IS_EMAIL = "isEmail";
	/**
	* Checks if the string is an email.
	* If given value is not a string, then it returns false.
	*/
	function isEmail(value, options) {
		return typeof value === "string" && (0, isEmail_1.default)(value, options);
	}
	exports.isEmail = isEmail;
	/**
	* Checks if the string is an email.
	* If given value is not a string, then it returns false.
	*/
	function IsEmail(options, validationOptions) {
		return (0, ValidateBy_1$76.ValidateBy)({
			name: exports.IS_EMAIL,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isEmail(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$76.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be an email";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsEmail = IsEmail;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsFQDN.js
var require_IsFQDN = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsFQDN.js"(exports) {
	var __importDefault$54 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsFQDN = exports.isFQDN = exports.IS_FQDN = void 0;
	const ValidateBy_1$75 = require_ValidateBy();
	const isFQDN_1 = __importDefault$54(require_isFQDN());
	exports.IS_FQDN = "isFqdn";
	/**
	* Checks if the string is a fully qualified domain name (e.g. domain.com).
	* If given value is not a string, then it returns false.
	*/
	function isFQDN(value, options) {
		return typeof value === "string" && (0, isFQDN_1.default)(value, options);
	}
	exports.isFQDN = isFQDN;
	/**
	* Checks if the string is a fully qualified domain name (e.g. domain.com).
	* If given value is not a string, then it returns false.
	*/
	function IsFQDN(options, validationOptions) {
		return (0, ValidateBy_1$75.ValidateBy)({
			name: exports.IS_FQDN,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isFQDN(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$75.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a valid domain name";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsFQDN = IsFQDN;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isFullWidth.js
var require_isFullWidth = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isFullWidth.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isFullWidth$1;
	exports.fullWidth = void 0;
	var _assertString$77 = _interopRequireDefault$130(require_assertString());
	function _interopRequireDefault$130(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var fullWidth = exports.fullWidth = /[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;
	function isFullWidth$1(str) {
		(0, _assertString$77.default)(str);
		return fullWidth.test(str);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsFullWidth.js
var require_IsFullWidth = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsFullWidth.js"(exports) {
	var __importDefault$53 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsFullWidth = exports.isFullWidth = exports.IS_FULL_WIDTH = void 0;
	const ValidateBy_1$74 = require_ValidateBy();
	const isFullWidth_1 = __importDefault$53(require_isFullWidth());
	exports.IS_FULL_WIDTH = "isFullWidth";
	/**
	* Checks if the string contains any full-width chars.
	* If given value is not a string, then it returns false.
	*/
	function isFullWidth(value) {
		return typeof value === "string" && (0, isFullWidth_1.default)(value);
	}
	exports.isFullWidth = isFullWidth;
	/**
	* Checks if the string contains any full-width chars.
	* If given value is not a string, then it returns false.
	*/
	function IsFullWidth(validationOptions) {
		return (0, ValidateBy_1$74.ValidateBy)({
			name: exports.IS_FULL_WIDTH,
			validator: {
				validate: function(value, args) {
					return isFullWidth(value);
				},
				defaultMessage: (0, ValidateBy_1$74.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain a full-width characters";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsFullWidth = IsFullWidth;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isHalfWidth.js
var require_isHalfWidth = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isHalfWidth.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isHalfWidth$1;
	exports.halfWidth = void 0;
	var _assertString$76 = _interopRequireDefault$129(require_assertString());
	function _interopRequireDefault$129(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var halfWidth = exports.halfWidth = /[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;
	function isHalfWidth$1(str) {
		(0, _assertString$76.default)(str);
		return halfWidth.test(str);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsHalfWidth.js
var require_IsHalfWidth = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsHalfWidth.js"(exports) {
	var __importDefault$52 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsHalfWidth = exports.isHalfWidth = exports.IS_HALF_WIDTH = void 0;
	const ValidateBy_1$73 = require_ValidateBy();
	const isHalfWidth_1 = __importDefault$52(require_isHalfWidth());
	exports.IS_HALF_WIDTH = "isHalfWidth";
	/**
	* Checks if the string contains any half-width chars.
	* If given value is not a string, then it returns false.
	*/
	function isHalfWidth(value) {
		return typeof value === "string" && (0, isHalfWidth_1.default)(value);
	}
	exports.isHalfWidth = isHalfWidth;
	/**
	* Checks if the string contains any half-width chars.
	* If given value is not a string, then it returns false.
	*/
	function IsHalfWidth(validationOptions) {
		return (0, ValidateBy_1$73.ValidateBy)({
			name: exports.IS_HALF_WIDTH,
			validator: {
				validate: function(value, args) {
					return isHalfWidth(value);
				},
				defaultMessage: (0, ValidateBy_1$73.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain a half-width characters";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsHalfWidth = IsHalfWidth;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isVariableWidth.js
var require_isVariableWidth = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isVariableWidth.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isVariableWidth$1;
	var _assertString$75 = _interopRequireDefault$128(require_assertString());
	var _isFullWidth$1 = require_isFullWidth();
	var _isHalfWidth$1 = require_isHalfWidth();
	function _interopRequireDefault$128(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isVariableWidth$1(str) {
		(0, _assertString$75.default)(str);
		return _isFullWidth$1.fullWidth.test(str) && _isHalfWidth$1.halfWidth.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsVariableWidth.js
var require_IsVariableWidth = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsVariableWidth.js"(exports) {
	var __importDefault$51 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsVariableWidth = exports.isVariableWidth = exports.IS_VARIABLE_WIDTH = void 0;
	const ValidateBy_1$72 = require_ValidateBy();
	const isVariableWidth_1 = __importDefault$51(require_isVariableWidth());
	exports.IS_VARIABLE_WIDTH = "isVariableWidth";
	/**
	* Checks if the string contains variable-width chars.
	* If given value is not a string, then it returns false.
	*/
	function isVariableWidth(value) {
		return typeof value === "string" && (0, isVariableWidth_1.default)(value);
	}
	exports.isVariableWidth = isVariableWidth;
	/**
	* Checks if the string contains variable-width chars.
	* If given value is not a string, then it returns false.
	*/
	function IsVariableWidth(validationOptions) {
		return (0, ValidateBy_1$72.ValidateBy)({
			name: exports.IS_VARIABLE_WIDTH,
			validator: {
				validate: function(value, args) {
					return isVariableWidth(value);
				},
				defaultMessage: (0, ValidateBy_1$72.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain a full-width and half-width characters";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsVariableWidth = IsVariableWidth;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isHexColor.js
var require_isHexColor = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isHexColor.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isHexColor$1;
	var _assertString$74 = _interopRequireDefault$127(require_assertString());
	function _interopRequireDefault$127(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var hexcolor = new RegExp("^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$", "i");
	function isHexColor$1(str) {
		(0, _assertString$74.default)(str);
		return hexcolor.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsHexColor.js
var require_IsHexColor = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsHexColor.js"(exports) {
	var __importDefault$50 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsHexColor = exports.isHexColor = exports.IS_HEX_COLOR = void 0;
	const ValidateBy_1$71 = require_ValidateBy();
	const isHexColor_1 = __importDefault$50(require_isHexColor());
	exports.IS_HEX_COLOR = "isHexColor";
	/**
	* Checks if the string is a hexadecimal color.
	* If given value is not a string, then it returns false.
	*/
	function isHexColor(value) {
		return typeof value === "string" && (0, isHexColor_1.default)(value);
	}
	exports.isHexColor = isHexColor;
	/**
	* Checks if the string is a hexadecimal color.
	* If given value is not a string, then it returns false.
	*/
	function IsHexColor(validationOptions) {
		return (0, ValidateBy_1$71.ValidateBy)({
			name: exports.IS_HEX_COLOR,
			validator: {
				validate: function(value, args) {
					return isHexColor(value);
				},
				defaultMessage: (0, ValidateBy_1$71.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a hexadecimal color";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsHexColor = IsHexColor;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isHexadecimal.js
var require_isHexadecimal = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isHexadecimal.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isHexadecimal$1;
	var _assertString$73 = _interopRequireDefault$126(require_assertString());
	function _interopRequireDefault$126(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var hexadecimal = new RegExp("^(0x|0h)?[0-9A-F]+$", "i");
	function isHexadecimal$1(str) {
		(0, _assertString$73.default)(str);
		return hexadecimal.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsHexadecimal.js
var require_IsHexadecimal = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsHexadecimal.js"(exports) {
	var __importDefault$49 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsHexadecimal = exports.isHexadecimal = exports.IS_HEXADECIMAL = void 0;
	const ValidateBy_1$70 = require_ValidateBy();
	const isHexadecimal_1 = __importDefault$49(require_isHexadecimal());
	exports.IS_HEXADECIMAL = "isHexadecimal";
	/**
	* Checks if the string is a hexadecimal number.
	* If given value is not a string, then it returns false.
	*/
	function isHexadecimal(value) {
		return typeof value === "string" && (0, isHexadecimal_1.default)(value);
	}
	exports.isHexadecimal = isHexadecimal;
	/**
	* Checks if the string is a hexadecimal number.
	* If given value is not a string, then it returns false.
	*/
	function IsHexadecimal(validationOptions) {
		return (0, ValidateBy_1$70.ValidateBy)({
			name: exports.IS_HEXADECIMAL,
			validator: {
				validate: function(value, args) {
					return isHexadecimal(value);
				},
				defaultMessage: (0, ValidateBy_1$70.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a hexadecimal number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsHexadecimal = IsHexadecimal;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/ValidationOptions.js
var require_ValidationOptions = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/ValidationOptions.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isValidationOptions = void 0;
	function isValidationOptions(val) {
		if (!val) return false;
		return "each" in val || "message" in val || "groups" in val || "always" in val || "context" in val;
	}
	exports.isValidationOptions = isValidationOptions;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMACAddress.js
var require_isMACAddress = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMACAddress.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isMACAddress$1;
	var _assertString$72 = _interopRequireDefault$125(require_assertString());
	function _interopRequireDefault$125(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var macAddress48 = new RegExp("^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){4}([0-9a-fA-F]{2})$", "");
	var macAddress48NoSeparators = new RegExp("^([0-9a-fA-F]){12}$", "");
	var macAddress48WithDots = new RegExp("^([0-9a-fA-F]{4}\\.){2}([0-9a-fA-F]{4})$", "");
	var macAddress64 = new RegExp("^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){6}([0-9a-fA-F]{2})$", "");
	var macAddress64NoSeparators = new RegExp("^([0-9a-fA-F]){16}$", "");
	var macAddress64WithDots = new RegExp("^([0-9a-fA-F]{4}\\.){3}([0-9a-fA-F]{4})$", "");
	function isMACAddress$1(str, options) {
		(0, _assertString$72.default)(str);
		if (options !== null && options !== void 0 && options.eui) options.eui = String(options.eui);
		/**
		* @deprecated `no_colons` TODO: remove it in the next major
		*/
		if (options !== null && options !== void 0 && options.no_colons || options !== null && options !== void 0 && options.no_separators) {
			if (options.eui === "48") return macAddress48NoSeparators.test(str);
			if (options.eui === "64") return macAddress64NoSeparators.test(str);
			return macAddress48NoSeparators.test(str) || macAddress64NoSeparators.test(str);
		}
		if ((options === null || options === void 0 ? void 0 : options.eui) === "48") return macAddress48.test(str) || macAddress48WithDots.test(str);
		if ((options === null || options === void 0 ? void 0 : options.eui) === "64") return macAddress64.test(str) || macAddress64WithDots.test(str);
		return isMACAddress$1(str, { eui: "48" }) || isMACAddress$1(str, { eui: "64" });
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMacAddress.js
var require_IsMacAddress = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMacAddress.js"(exports) {
	var __importDefault$48 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsMACAddress = exports.isMACAddress = exports.IS_MAC_ADDRESS = void 0;
	const ValidationOptions_1 = require_ValidationOptions();
	const ValidateBy_1$69 = require_ValidateBy();
	const isMACAddress_1 = __importDefault$48(require_isMACAddress());
	exports.IS_MAC_ADDRESS = "isMacAddress";
	/**
	* Check if the string is a MAC address.
	* If given value is not a string, then it returns false.
	*/
	function isMACAddress(value, options) {
		return typeof value === "string" && (0, isMACAddress_1.default)(value, options);
	}
	exports.isMACAddress = isMACAddress;
	function IsMACAddress(optionsOrValidationOptionsArg, validationOptionsArg) {
		const options = !(0, ValidationOptions_1.isValidationOptions)(optionsOrValidationOptionsArg) ? optionsOrValidationOptionsArg : void 0;
		const validationOptions = (0, ValidationOptions_1.isValidationOptions)(optionsOrValidationOptionsArg) ? optionsOrValidationOptionsArg : validationOptionsArg;
		return (0, ValidateBy_1$69.ValidateBy)({
			name: exports.IS_MAC_ADDRESS,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isMACAddress(value, options);
				},
				defaultMessage: (0, ValidateBy_1$69.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a MAC Address";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsMACAddress = IsMACAddress;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsIP.js
var require_IsIP = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsIP.js"(exports) {
	var __importDefault$47 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsIP = exports.isIP = exports.IS_IP = void 0;
	const ValidateBy_1$68 = require_ValidateBy();
	const isIP_1 = __importDefault$47(require_isIP());
	exports.IS_IP = "isIp";
	/**
	* Checks if the string is an IP (version 4 or 6).
	* If given value is not a string, then it returns false.
	*/
	function isIP(value, version$1) {
		const versionStr = version$1 ? `${version$1}` : void 0;
		return typeof value === "string" && (0, isIP_1.default)(value, versionStr);
	}
	exports.isIP = isIP;
	/**
	* Checks if the string is an IP (version 4 or 6).
	* If given value is not a string, then it returns false.
	*/
	function IsIP(version$1, validationOptions) {
		return (0, ValidateBy_1$68.ValidateBy)({
			name: exports.IS_IP,
			constraints: [version$1],
			validator: {
				validate: function(value, args) {
					return isIP(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$68.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be an ip address";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsIP = IsIP;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isInt.js
var require_isInt = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isInt.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isInt$1;
	var _assertString$71 = _interopRequireDefault$124(require_assertString());
	var _nullUndefinedCheck = _interopRequireDefault$124(require_nullUndefinedCheck());
	function _interopRequireDefault$124(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;
	var intLeadingZeroes = /^[-+]?[0-9]+$/;
	function isInt$1(str, options) {
		(0, _assertString$71.default)(str);
		options = options || {};
		var regex = options.allow_leading_zeroes === false ? int : intLeadingZeroes;
		var minCheckPassed = !options.hasOwnProperty("min") || (0, _nullUndefinedCheck.default)(options.min) || str >= options.min;
		var maxCheckPassed = !options.hasOwnProperty("max") || (0, _nullUndefinedCheck.default)(options.max) || str <= options.max;
		var ltCheckPassed = !options.hasOwnProperty("lt") || (0, _nullUndefinedCheck.default)(options.lt) || str < options.lt;
		var gtCheckPassed = !options.hasOwnProperty("gt") || (0, _nullUndefinedCheck.default)(options.gt) || str > options.gt;
		return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isPort.js
var require_isPort = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isPort.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isPort$1;
	var _isInt$2 = _interopRequireDefault$123(require_isInt());
	function _interopRequireDefault$123(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isPort$1(str) {
		return (0, _isInt$2.default)(str, {
			allow_leading_zeroes: false,
			min: 0,
			max: 65535
		});
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsPort.js
var require_IsPort = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsPort.js"(exports) {
	var __importDefault$46 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsPort = exports.isPort = exports.IS_PORT = void 0;
	const ValidateBy_1$67 = require_ValidateBy();
	const isPort_1 = __importDefault$46(require_isPort());
	exports.IS_PORT = "isPort";
	/**
	* Check if the string is a valid port number.
	*/
	function isPort(value) {
		return typeof value === "string" && (0, isPort_1.default)(value);
	}
	exports.isPort = isPort;
	/**
	* Check if the string is a valid port number.
	*/
	function IsPort(validationOptions) {
		return (0, ValidateBy_1$67.ValidateBy)({
			name: exports.IS_PORT,
			validator: {
				validate: function(value, args) {
					return isPort(value);
				},
				defaultMessage: (0, ValidateBy_1$67.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a port";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsPort = IsPort;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISBN.js
var require_isISBN = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISBN.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isISBN$1;
	var _assertString$70 = _interopRequireDefault$122(require_assertString());
	function _interopRequireDefault$122(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var possibleIsbn10 = /^(?:[0-9]{9}X|[0-9]{10})$/;
	var possibleIsbn13 = /^(?:[0-9]{13})$/;
	var factor = [1, 3];
	function isISBN$1(isbn, options) {
		(0, _assertString$70.default)(isbn);
		var version$1 = String((options === null || options === void 0 ? void 0 : options.version) || options);
		if (!(options !== null && options !== void 0 && options.version || options)) return isISBN$1(isbn, { version: 10 }) || isISBN$1(isbn, { version: 13 });
		var sanitizedIsbn = isbn.replace(/[\s-]+/g, "");
		var checksum = 0;
		if (version$1 === "10") {
			if (!possibleIsbn10.test(sanitizedIsbn)) return false;
			for (var i$1 = 0; i$1 < version$1 - 1; i$1++) checksum += (i$1 + 1) * sanitizedIsbn.charAt(i$1);
			if (sanitizedIsbn.charAt(9) === "X") checksum += 10 * 10;
			else checksum += 10 * sanitizedIsbn.charAt(9);
			if (checksum % 11 === 0) return true;
		} else if (version$1 === "13") {
			if (!possibleIsbn13.test(sanitizedIsbn)) return false;
			for (var _i$1 = 0; _i$1 < 12; _i$1++) checksum += factor[_i$1 % 2] * sanitizedIsbn.charAt(_i$1);
			if (sanitizedIsbn.charAt(12) - (10 - checksum % 10) % 10 === 0) return true;
		}
		return false;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISBN.js
var require_IsISBN = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISBN.js"(exports) {
	var __importDefault$45 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsISBN = exports.isISBN = exports.IS_ISBN = void 0;
	const ValidateBy_1$66 = require_ValidateBy();
	const isISBN_1 = __importDefault$45(require_isISBN());
	exports.IS_ISBN = "isIsbn";
	/**
	* Checks if the string is an ISBN (version 10 or 13).
	* If given value is not a string, then it returns false.
	*/
	function isISBN(value, version$1) {
		const versionStr = version$1 ? `${version$1}` : void 0;
		return typeof value === "string" && (0, isISBN_1.default)(value, versionStr);
	}
	exports.isISBN = isISBN;
	/**
	* Checks if the string is an ISBN (version 10 or 13).
	* If given value is not a string, then it returns false.
	*/
	function IsISBN(version$1, validationOptions) {
		return (0, ValidateBy_1$66.ValidateBy)({
			name: exports.IS_ISBN,
			constraints: [version$1],
			validator: {
				validate: function(value, args) {
					return isISBN(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$66.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be an ISBN";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsISBN = IsISBN;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISIN.js
var require_isISIN = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISIN.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isISIN$1;
	var _assertString$69 = _interopRequireDefault$121(require_assertString());
	function _interopRequireDefault$121(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;
	function isISIN$1(str) {
		(0, _assertString$69.default)(str);
		if (!isin.test(str)) return false;
		var double = true;
		var sum = 0;
		for (var i$1 = str.length - 2; i$1 >= 0; i$1--) if (str[i$1] >= "A" && str[i$1] <= "Z") {
			var value = str[i$1].charCodeAt(0) - 55;
			var lo = value % 10;
			var hi = Math.trunc(value / 10);
			for (var _i$1 = 0, _arr = [lo, hi]; _i$1 < _arr.length; _i$1++) {
				var digit = _arr[_i$1];
				if (double) if (digit >= 5) sum += 1 + (digit - 5) * 2;
				else sum += digit * 2;
				else sum += digit;
				double = !double;
			}
		} else {
			var _digit = str[i$1].charCodeAt(0) - "0".charCodeAt(0);
			if (double) if (_digit >= 5) sum += 1 + (_digit - 5) * 2;
			else sum += _digit * 2;
			else sum += _digit;
			double = !double;
		}
		var check = Math.trunc((sum + 9) / 10) * 10 - sum;
		return +str[str.length - 1] === check;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISIN.js
var require_IsISIN = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISIN.js"(exports) {
	var __importDefault$44 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsISIN = exports.isISIN = exports.IS_ISIN = void 0;
	const ValidateBy_1$65 = require_ValidateBy();
	const isISIN_1 = __importDefault$44(require_isISIN());
	exports.IS_ISIN = "isIsin";
	/**
	* Checks if the string is an ISIN (stock/security identifier).
	* If given value is not a string, then it returns false.
	*/
	function isISIN(value) {
		return typeof value === "string" && (0, isISIN_1.default)(value);
	}
	exports.isISIN = isISIN;
	/**
	* Checks if the string is an ISIN (stock/security identifier).
	* If given value is not a string, then it returns false.
	*/
	function IsISIN(validationOptions) {
		return (0, ValidateBy_1$65.ValidateBy)({
			name: exports.IS_ISIN,
			validator: {
				validate: function(value, args) {
					return isISIN(value);
				},
				defaultMessage: (0, ValidateBy_1$65.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be an ISIN (stock/security identifier)";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsISIN = IsISIN;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO8601.js
var require_isISO8601 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO8601.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isISO8601$1;
	var _assertString$68 = _interopRequireDefault$120(require_assertString());
	function _interopRequireDefault$120(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var iso8601 = new RegExp("^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$", "");
	var iso8601StrictSeparator = new RegExp("^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$", "");
	var isValidDate$1 = function isValidDate$2(str) {
		var ordinalMatch = str.match(new RegExp("^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)", ""));
		if (ordinalMatch) {
			var oYear = Number(ordinalMatch[1]);
			var oDay = Number(ordinalMatch[2]);
			if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;
			return oDay <= 365;
		}
		var match = str.match(new RegExp("(\\d{4})-?(\\d{0,2})-?(\\d*)", "")).map(Number);
		var year = match[1];
		var month = match[2];
		var day = match[3];
		var monthString = month ? "0".concat(month).slice(-2) : month;
		var dayString = day ? "0".concat(day).slice(-2) : day;
		var d = new Date("".concat(year, "-").concat(monthString || "01", "-").concat(dayString || "01"));
		if (month && day) return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;
		return true;
	};
	function isISO8601$1(str) {
		var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
		(0, _assertString$68.default)(str);
		var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);
		if (check && options.strict) return isValidDate$1(str);
		return check;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISO8601.js
var require_IsISO8601 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISO8601.js"(exports) {
	var __importDefault$43 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsISO8601 = exports.isISO8601 = exports.IS_ISO8601 = void 0;
	const ValidateBy_1$64 = require_ValidateBy();
	const isISO8601_1 = __importDefault$43(require_isISO8601());
	exports.IS_ISO8601 = "isIso8601";
	/**
	* Checks if the string is a valid ISO 8601 date.
	* If given value is not a string, then it returns false.
	* Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.
	*/
	function isISO8601(value, options) {
		return typeof value === "string" && (0, isISO8601_1.default)(value, options);
	}
	exports.isISO8601 = isISO8601;
	/**
	* Checks if the string is a valid ISO 8601 date.
	* If given value is not a string, then it returns false.
	* Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.
	*/
	function IsISO8601(options, validationOptions) {
		return (0, ValidateBy_1$64.ValidateBy)({
			name: exports.IS_ISO8601,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isISO8601(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$64.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a valid ISO 8601 date string";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsISO8601 = IsISO8601;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isJSON.js
var require_isJSON = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isJSON.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isJSON$1;
	var _assertString$67 = _interopRequireDefault$119(require_assertString());
	var _includesArray$3 = _interopRequireDefault$119(require_includesArray());
	var _merge$7 = _interopRequireDefault$119(require_merge$1());
	function _interopRequireDefault$119(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _typeof$17(o) {
		"@babel/helpers - typeof";
		return _typeof$17 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof$17(o);
	}
	var default_json_options = { allow_primitives: false };
	function isJSON$1(str, options) {
		(0, _assertString$67.default)(str);
		try {
			options = (0, _merge$7.default)(options, default_json_options);
			var primitives = [];
			if (options.allow_primitives) primitives = [
				null,
				false,
				true
			];
			var obj = JSON.parse(str);
			return (0, _includesArray$3.default)(primitives, obj) || !!obj && _typeof$17(obj) === "object";
		} catch (e) {}
		return false;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsJSON.js
var require_IsJSON = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsJSON.js"(exports) {
	var __importDefault$42 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsJSON = exports.isJSON = exports.IS_JSON = void 0;
	const ValidateBy_1$63 = require_ValidateBy();
	const isJSON_1 = __importDefault$42(require_isJSON());
	exports.IS_JSON = "isJson";
	/**
	* Checks if the string is valid JSON (note: uses JSON.parse).
	* If given value is not a string, then it returns false.
	*/
	function isJSON(value) {
		return typeof value === "string" && (0, isJSON_1.default)(value);
	}
	exports.isJSON = isJSON;
	/**
	* Checks if the string is valid JSON (note: uses JSON.parse).
	* If given value is not a string, then it returns false.
	*/
	function IsJSON(validationOptions) {
		return (0, ValidateBy_1$63.ValidateBy)({
			name: exports.IS_JSON,
			validator: {
				validate: function(value, args) {
					return isJSON(value);
				},
				defaultMessage: (0, ValidateBy_1$63.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a json string";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsJSON = IsJSON;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isJWT.js
var require_isJWT = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isJWT.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isJWT$1;
	var _assertString$66 = _interopRequireDefault$118(require_assertString());
	var _isBase$1 = _interopRequireDefault$118(require_isBase64());
	function _interopRequireDefault$118(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isJWT$1(str) {
		(0, _assertString$66.default)(str);
		var dotSplit = str.split(".");
		var len = dotSplit.length;
		if (len !== 3) return false;
		return dotSplit.reduce(function(acc, currElem) {
			return acc && (0, _isBase$1.default)(currElem, { urlSafe: true });
		}, true);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsJWT.js
var require_IsJWT = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsJWT.js"(exports) {
	var __importDefault$41 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsJWT = exports.isJWT = exports.IS_JWT = void 0;
	const ValidateBy_1$62 = require_ValidateBy();
	const isJWT_1 = __importDefault$41(require_isJWT());
	exports.IS_JWT = "isJwt";
	/**
	* Checks if the string is valid JWT token.
	* If given value is not a string, then it returns false.
	*/
	function isJWT(value) {
		return typeof value === "string" && (0, isJWT_1.default)(value);
	}
	exports.isJWT = isJWT;
	/**
	* Checks if the string is valid JWT token.
	* If given value is not a string, then it returns false.
	*/
	function IsJWT(validationOptions) {
		return (0, ValidateBy_1$62.ValidateBy)({
			name: exports.IS_JWT,
			validator: {
				validate: function(value, args) {
					return isJWT(value);
				},
				defaultMessage: (0, ValidateBy_1$62.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a jwt string";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsJWT = IsJWT;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLowercase.js
var require_isLowercase = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLowercase.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isLowercase$1;
	var _assertString$65 = _interopRequireDefault$117(require_assertString());
	function _interopRequireDefault$117(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isLowercase$1(str) {
		(0, _assertString$65.default)(str);
		return str === str.toLowerCase();
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsLowercase.js
var require_IsLowercase = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsLowercase.js"(exports) {
	var __importDefault$40 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsLowercase = exports.isLowercase = exports.IS_LOWERCASE = void 0;
	const ValidateBy_1$61 = require_ValidateBy();
	const isLowercase_1 = __importDefault$40(require_isLowercase());
	exports.IS_LOWERCASE = "isLowercase";
	/**
	* Checks if the string is lowercase.
	* If given value is not a string, then it returns false.
	*/
	function isLowercase(value) {
		return typeof value === "string" && (0, isLowercase_1.default)(value);
	}
	exports.isLowercase = isLowercase;
	/**
	* Checks if the string is lowercase.
	* If given value is not a string, then it returns false.
	*/
	function IsLowercase(validationOptions) {
		return (0, ValidateBy_1$61.ValidateBy)({
			name: exports.IS_LOWERCASE,
			validator: {
				validate: function(value, args) {
					return isLowercase(value);
				},
				defaultMessage: (0, ValidateBy_1$61.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a lowercase string";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsLowercase = IsLowercase;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMobilePhone.js
var require_isMobilePhone = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMobilePhone.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isMobilePhone$1;
	exports.locales = void 0;
	var _assertString$64 = _interopRequireDefault$116(require_assertString());
	function _interopRequireDefault$116(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var phones = {
		"am-AM": new RegExp("^(\\+?374|0)(33|4[134]|55|77|88|9[13-689])\\d{6}$", ""),
		"ar-AE": new RegExp("^((\\+?971)|0)?5[024568]\\d{7}$", ""),
		"ar-BH": new RegExp("^(\\+?973)?(3|6)\\d{7}$", ""),
		"ar-DZ": new RegExp("^(\\+?213|0)(5|6|7)\\d{8}$", ""),
		"ar-LB": new RegExp("^(\\+?961)?((3|81)\\d{6}|7\\d{7})$", ""),
		"ar-EG": new RegExp("^((\\+?20)|0)?1[0125]\\d{8}$", ""),
		"ar-IQ": new RegExp("^(\\+?964|0)?7[0-9]\\d{8}$", ""),
		"ar-JO": new RegExp("^(\\+?962|0)?7[789]\\d{7}$", ""),
		"ar-KW": new RegExp("^(\\+?965)([569]\\d{7}|41\\d{6})$", ""),
		"ar-LY": new RegExp("^((\\+?218)|0)?(9[1-6]\\d{7}|[1-8]\\d{7,9})$", ""),
		"ar-MA": /^(?:(?:\+|00)212|0)[5-7]\d{8}$/,
		"ar-OM": new RegExp("^((\\+|00)968)?([79][1-9])\\d{6}$", ""),
		"ar-PS": new RegExp("^(\\+?970|0)5[6|9](\\d{7})$", ""),
		"ar-SA": new RegExp("^(!?(\\+?966)|0)?5\\d{8}$", ""),
		"ar-SD": new RegExp("^((\\+?249)|0)?(9[012369]|1[012])\\d{7}$", ""),
		"ar-SY": new RegExp("^(!?(\\+?963)|0)?9\\d{8}$", ""),
		"ar-TN": new RegExp("^(\\+?216)?[2459]\\d{7}$", ""),
		"az-AZ": new RegExp("^(\\+994|0)(10|5[015]|7[07]|99)\\d{7}$", ""),
		"bs-BA": new RegExp("^((((\\+|00)3876)|06))((([0-3]|[5-6])\\d{6})|(4\\d{7}))$", ""),
		"be-BY": new RegExp("^(\\+?375)?(24|25|29|33|44)\\d{7}$", ""),
		"bg-BG": new RegExp("^(\\+?359|0)?8[789]\\d{7}$", ""),
		"bn-BD": new RegExp("^(\\+?880|0)1[13456789][0-9]{8}$", ""),
		"ca-AD": new RegExp("^(\\+376)?[346]\\d{5}$", ""),
		"cs-CZ": new RegExp("^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$", ""),
		"da-DK": new RegExp("^(\\+?45)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$", ""),
		"de-DE": new RegExp("^((\\+49|0)1)(5[0-25-9]\\d|6([23]|0\\d?)|7([0-57-9]|6\\d))\\d{7,9}$", ""),
		"de-AT": new RegExp("^(\\+43|0)\\d{1,4}\\d{3,12}$", ""),
		"de-CH": new RegExp("^(\\+41|0)([1-9])\\d{1,9}$", ""),
		"de-LU": new RegExp("^(\\+352)?((6\\d1)\\d{6})$", ""),
		"dv-MV": new RegExp("^(\\+?960)?(7[2-9]|9[1-9])\\d{5}$", ""),
		"el-GR": new RegExp("^(\\+?30|0)?6(8[5-9]|9(?![26])[0-9])\\d{7}$", ""),
		"el-CY": new RegExp("^(\\+?357?)?(9(9|7|6|5|4)\\d{6})$", ""),
		"en-AI": new RegExp("^(\\+?1|0)264(?:2(35|92)|4(?:6[1-2]|76|97)|5(?:3[6-9]|8[1-4])|7(?:2(4|9)|72))\\d{4}$", ""),
		"en-AU": new RegExp("^(\\+?61|0)4\\d{8}$", ""),
		"en-AG": /^(?:\+1|1)268(?:464|7(?:1[3-9]|[28]\d|3[0246]|64|7[0-689]))\d{4}$/,
		"en-BM": new RegExp("^(\\+?1)?441(((3|7)\\d{6}$)|(5[0-3][0-9]\\d{4}$)|(59\\d{5}$))", ""),
		"en-BS": new RegExp("^(\\+?1[-\\s]?|0)?\\(?242\\)?[-\\s]?\\d{3}[-\\s]?\\d{4}$", ""),
		"en-GB": new RegExp("^(\\+?44|0)7[1-9]\\d{8}$", ""),
		"en-GG": new RegExp("^(\\+?44|0)1481\\d{6}$", ""),
		"en-GH": new RegExp("^(\\+233|0)(20|50|24|54|27|57|26|56|23|53|28|55|59)\\d{7}$", ""),
		"en-GY": new RegExp("^(\\+592|0)6\\d{6}$", ""),
		"en-HK": new RegExp("^(\\+?852[-\\s]?)?[456789]\\d{3}[-\\s]?\\d{4}$", ""),
		"en-MO": new RegExp("^(\\+?853[-\\s]?)?[6]\\d{3}[-\\s]?\\d{4}$", ""),
		"en-IE": new RegExp("^(\\+?353|0)8[356789]\\d{7}$", ""),
		"en-IN": new RegExp("^(\\+?91|0)?[6789]\\d{9}$", ""),
		"en-JM": new RegExp("^(\\+?876)?\\d{7}$", ""),
		"en-KE": new RegExp("^(\\+?254|0)(7|1)\\d{8}$", ""),
		"fr-CF": new RegExp("^(\\+?236| ?)(70|75|77|72|21|22)\\d{6}$", ""),
		"en-SS": new RegExp("^(\\+?211|0)(9[1257])\\d{7}$", ""),
		"en-KI": new RegExp("^((\\+686|686)?)?( )?((6|7)(2|3|8)[0-9]{6})$", ""),
		"en-KN": /^(?:\+1|1)869(?:46\d|48[89]|55[6-8]|66\d|76[02-7])\d{4}$/,
		"en-LS": new RegExp("^(\\+?266)(22|28|57|58|59|27|52)\\d{6}$", ""),
		"en-MT": new RegExp("^(\\+?356|0)?(99|79|77|21|27|22|25)[0-9]{6}$", ""),
		"en-MU": new RegExp("^(\\+?230|0)?\\d{8}$", ""),
		"en-MW": new RegExp("^(\\+?265|0)(((77|88|31|99|98|21)\\d{7})|(((111)|1)\\d{6})|(32000\\d{4}))$", ""),
		"en-NA": new RegExp("^(\\+?264|0)(6|8)\\d{7}$", ""),
		"en-NG": new RegExp("^(\\+?234|0)?[789]\\d{9}$", ""),
		"en-NZ": new RegExp("^(\\+?64|0)[28]\\d{7,9}$", ""),
		"en-PG": new RegExp("^(\\+?675|0)?(7\\d|8[18])\\d{6}$", ""),
		"en-PK": new RegExp("^((00|\\+)?92|0)3[0-6]\\d{8}$", ""),
		"en-PH": new RegExp("^(09|\\+639)\\d{9}$", ""),
		"en-RW": new RegExp("^(\\+?250|0)?[7]\\d{8}$", ""),
		"en-SG": new RegExp("^(\\+65)?[3689]\\d{7}$", ""),
		"en-SL": new RegExp("^(\\+?232|0)\\d{8}$", ""),
		"en-TZ": new RegExp("^(\\+?255|0)?[67]\\d{8}$", ""),
		"en-UG": new RegExp("^(\\+?256|0)?[7]\\d{8}$", ""),
		"en-US": new RegExp("^((\\+1|1)?( |-)?)?(\\([2-9][0-9]{2}\\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$", ""),
		"en-ZA": new RegExp("^(\\+?27|0)\\d{9}$", ""),
		"en-ZM": new RegExp("^(\\+?26)?0[79][567]\\d{7}$", ""),
		"en-ZW": new RegExp("^(\\+263)[0-9]{9}$", ""),
		"en-BW": new RegExp("^(\\+?267)?(7[1-8]{1})\\d{6}$", ""),
		"es-AR": new RegExp("^\\+?549(11|[2368]\\d)\\d{8}$", ""),
		"es-BO": new RegExp("^(\\+?591)?(6|7)\\d{7}$", ""),
		"es-CO": new RegExp("^(\\+?57)?3(0(0|1|2|4|5)|1\\d|2[0-4]|5(0|1))\\d{7}$", ""),
		"es-CL": new RegExp("^(\\+?56|0)[2-9]\\d{1}\\d{7}$", ""),
		"es-CR": new RegExp("^(\\+506)?[2-8]\\d{7}$", ""),
		"es-CU": new RegExp("^(\\+53|0053)?5\\d{7}$", ""),
		"es-DO": new RegExp("^(\\+?1)?8[024]9\\d{7}$", ""),
		"es-HN": new RegExp("^(\\+?504)?[9|8|3|2]\\d{7}$", ""),
		"es-EC": new RegExp("^(\\+?593|0)([2-7]|9[2-9])\\d{7}$", ""),
		"es-ES": new RegExp("^(\\+?34)?[6|7]\\d{8}$", ""),
		"es-GT": new RegExp("^(\\+?502)?[2|6|7]\\d{7}$", ""),
		"es-PE": new RegExp("^(\\+?51)?9\\d{8}$", ""),
		"es-MX": new RegExp("^(\\+?52)?(1|01)?\\d{10,11}$", ""),
		"es-NI": new RegExp("^(\\+?505)\\d{7,8}$", ""),
		"es-PA": new RegExp("^(\\+?507)\\d{7,8}$", ""),
		"es-PY": new RegExp("^(\\+?595|0)9[9876]\\d{7}$", ""),
		"es-SV": new RegExp("^(\\+?503)?[67]\\d{7}$", ""),
		"es-UY": new RegExp("^(\\+598|0)9[1-9][\\d]{6}$", ""),
		"es-VE": new RegExp("^(\\+?58)?(2|4)\\d{9}$", ""),
		"et-EE": new RegExp("^(\\+?372)?\\s?(5|8[1-4])\\s?([0-9]\\s?){6,7}$", ""),
		"fa-IR": new RegExp("^(\\+?98[\\-\\s]?|0)9[0-39]\\d[\\-\\s]?\\d{3}[\\-\\s]?\\d{4}$", ""),
		"fi-FI": new RegExp("^(\\+?358|0)\\s?(4[0-6]|50)\\s?(\\d\\s?){4,8}$", ""),
		"fj-FJ": new RegExp("^(\\+?679)?\\s?\\d{3}\\s?\\d{4}$", ""),
		"fo-FO": new RegExp("^(\\+?298)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$", ""),
		"fr-BF": new RegExp("^(\\+226|0)[67]\\d{7}$", ""),
		"fr-BJ": new RegExp("^(\\+229)\\d{8}$", ""),
		"fr-CD": new RegExp("^(\\+?243|0)?(8|9)\\d{8}$", ""),
		"fr-CM": new RegExp("^(\\+?237)6[0-9]{8}$", ""),
		"fr-FR": new RegExp("^(\\+?33|0)[67]\\d{8}$", ""),
		"fr-GF": new RegExp("^(\\+?594|0|00594)[67]\\d{8}$", ""),
		"fr-GP": new RegExp("^(\\+?590|0|00590)[67]\\d{8}$", ""),
		"fr-MQ": new RegExp("^(\\+?596|0|00596)[67]\\d{8}$", ""),
		"fr-PF": new RegExp("^(\\+?689)?8[789]\\d{6}$", ""),
		"fr-RE": new RegExp("^(\\+?262|0|00262)[67]\\d{8}$", ""),
		"fr-WF": new RegExp("^(\\+681)?\\d{6}$", ""),
		"he-IL": new RegExp("^(\\+972|0)([23489]|5[012345689]|77)[1-9]\\d{6}$", ""),
		"hu-HU": new RegExp("^(\\+?36|06)(20|30|31|50|70)\\d{7}$", ""),
		"id-ID": new RegExp("^(\\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\\s?|\\d]{5,11})$", ""),
		"ir-IR": new RegExp("^(\\+98|0)?9\\d{9}$", ""),
		"it-IT": new RegExp("^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$", ""),
		"it-SM": new RegExp("^((\\+378)|(0549)|(\\+390549)|(\\+3780549))?6\\d{5,9}$", ""),
		"ja-JP": new RegExp("^(\\+81[ \\-]?(\\(0\\))?|0)[6789]0[ \\-]?\\d{4}[ \\-]?\\d{4}$", ""),
		"ka-GE": new RegExp("^(\\+?995)?(79\\d{7}|5\\d{8})$", ""),
		"kk-KZ": new RegExp("^(\\+?7|8)?7\\d{9}$", ""),
		"kl-GL": new RegExp("^(\\+?299)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$", ""),
		"ko-KR": new RegExp("^((\\+?82)[ \\-]?)?0?1([0|1|6|7|8|9]{1})[ \\-]?\\d{3,4}[ \\-]?\\d{4}$", ""),
		"ky-KG": new RegExp("^(\\+996\\s?)?(22[0-9]|50[0-9]|55[0-9]|70[0-9]|75[0-9]|77[0-9]|880|990|995|996|997|998)\\s?\\d{3}\\s?\\d{3}$", ""),
		"lt-LT": new RegExp("^(\\+370|8)\\d{8}$", ""),
		"lv-LV": new RegExp("^(\\+?371)2\\d{7}$", ""),
		"mg-MG": new RegExp("^((\\+?261|0)(2|3)\\d)?\\d{7}$", ""),
		"mn-MN": new RegExp("^(\\+|00|011)?976(77|81|88|91|94|95|96|99)\\d{6}$", ""),
		"my-MM": new RegExp("^(\\+?959|09|9)(2[5-7]|3[1-2]|4[0-5]|6[6-9]|7[5-9]|9[6-9])[0-9]{7}$", ""),
		"ms-MY": new RegExp("^(\\+?60|0)1(([0145](-|\\s)?\\d{7,8})|([236-9](-|\\s)?\\d{7}))$", ""),
		"mz-MZ": new RegExp("^(\\+?258)?8[234567]\\d{7}$", ""),
		"nb-NO": new RegExp("^(\\+?47)?[49]\\d{7}$", ""),
		"ne-NP": new RegExp("^(\\+?977)?9[78]\\d{8}$", ""),
		"nl-BE": new RegExp("^(\\+?32|0)4\\d{8}$", ""),
		"nl-NL": new RegExp("^(((\\+|00)?31\\(0\\))|((\\+|00)?31)|0)6{1}\\d{8}$", ""),
		"nl-AW": new RegExp("^(\\+)?297(56|59|64|73|74|99)\\d{5}$", ""),
		"nn-NO": new RegExp("^(\\+?47)?[49]\\d{7}$", ""),
		"pl-PL": new RegExp("^(\\+?48)? ?([5-8]\\d|45) ?\\d{3} ?\\d{2} ?\\d{2}$", ""),
		"pt-BR": new RegExp("^((\\+?55\\ ?[1-9]{2}\\ ?)|(\\+?55\\ ?\\([1-9]{2}\\)\\ ?)|(0[1-9]{2}\\ ?)|(\\([1-9]{2}\\)\\ ?)|([1-9]{2}\\ ?))((\\d{4}\\-?\\d{4})|(9[1-9]{1}\\d{3}\\-?\\d{4}))$", ""),
		"pt-PT": new RegExp("^(\\+?351)?9[1236]\\d{7}$", ""),
		"pt-AO": new RegExp("^(\\+?244)?9\\d{8}$", ""),
		"ro-MD": new RegExp("^(\\+?373|0)((6(0|1|2|6|7|8|9))|(7(6|7|8|9)))\\d{6}$", ""),
		"ro-RO": new RegExp("^(\\+?40|0)\\s?7\\d{2}(\\/|\\s|\\.|-)?\\d{3}(\\s|\\.|-)?\\d{3}$", ""),
		"ru-RU": new RegExp("^(\\+?7|8)?9\\d{9}$", ""),
		"si-LK": new RegExp("^(?:0|94|\\+94)?(7(0|1|2|4|5|6|7|8)( |-)?)\\d{7}$", ""),
		"sl-SI": new RegExp("^(\\+386\\s?|0)(\\d{1}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}|\\d{2}\\s?\\d{3}\\s?\\d{3})$", ""),
		"sk-SK": new RegExp("^(\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$", ""),
		"so-SO": new RegExp("^(\\+?252|0)((6[0-9])\\d{7}|(7[1-9])\\d{7})$", ""),
		"sq-AL": new RegExp("^(\\+355|0)6[2-9]\\d{7}$", ""),
		"sr-RS": new RegExp("^(\\+3816|06)[- \\d]{5,9}$", ""),
		"sv-SE": new RegExp("^(\\+?46|0)[\\s\\-]?7[\\s\\-]?[02369]([\\s\\-]?\\d){7}$", ""),
		"tg-TJ": new RegExp("^(\\+?992)?[5][5]\\d{7}$", ""),
		"th-TH": new RegExp("^(\\+66|66|0)\\d{9}$", ""),
		"tr-TR": new RegExp("^(\\+?90|0)?5\\d{9}$", ""),
		"tk-TM": new RegExp("^(\\+993|993|8)\\d{8}$", ""),
		"uk-UA": new RegExp("^(\\+?38)?0(50|6[36-8]|7[357]|9[1-9])\\d{7}$", ""),
		"uz-UZ": new RegExp("^(\\+?998)?(6[125-79]|7[1-69]|88|9\\d)\\d{7}$", ""),
		"vi-VN": new RegExp("^((\\+?84)|0)((3([2-9]))|(5([25689]))|(7([0|6-9]))|(8([1-9]))|(9([0-9])))([0-9]{7})$", ""),
		"zh-CN": new RegExp("^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$", ""),
		"zh-TW": new RegExp("^(\\+?886\\-?|0)?9\\d{8}$", ""),
		"dz-BT": new RegExp("^(\\+?975|0)?(17|16|77|02)\\d{6}$", ""),
		"ar-YE": new RegExp("^(((\\+|00)9677|0?7)[0137]\\d{7}|((\\+|00)967|0)[1-7]\\d{6})$", ""),
		"ar-EH": new RegExp("^(\\+?212|0)[\\s\\-]?(5288|5289)[\\s\\-]?\\d{5}$", ""),
		"fa-AF": new RegExp("^(\\+93|0)?(2{1}[0-8]{1}|[3-5]{1}[0-4]{1})(\\d{7})$", ""),
		"mk-MK": new RegExp("^(\\+?389|0)?((?:2[2-9]\\d{6}|(?:3[1-4]|4[2-8])\\d{6}|500\\d{5}|5[2-9]\\d{6}|7[0-9][2-9]\\d{5}|8[1-9]\\d{6}|800\\d{5}|8009\\d{4}))$", "")
	};
	phones["en-CA"] = phones["en-US"];
	phones["fr-CA"] = phones["en-CA"];
	phones["fr-BE"] = phones["nl-BE"];
	phones["zh-HK"] = phones["en-HK"];
	phones["zh-MO"] = phones["en-MO"];
	phones["ga-IE"] = phones["en-IE"];
	phones["fr-CH"] = phones["de-CH"];
	phones["it-CH"] = phones["fr-CH"];
	function isMobilePhone$1(str, locale$1, options) {
		(0, _assertString$64.default)(str);
		if (options && options.strictMode && !str.startsWith("+")) return false;
		if (Array.isArray(locale$1)) return locale$1.some(function(key$1) {
			// istanbul ignore else
			if (phones.hasOwnProperty(key$1)) {
				var phone$1 = phones[key$1];
				if (phone$1.test(str)) return true;
			}
			return false;
		});
		else if (locale$1 in phones) return phones[locale$1].test(str);
		else if (!locale$1 || locale$1 === "any") {
			for (var key in phones)
 // istanbul ignore else
			if (phones.hasOwnProperty(key)) {
				var phone = phones[key];
				if (phone.test(str)) return true;
			}
			return false;
		}
		throw new Error("Invalid locale '".concat(locale$1, "'"));
	}
	var locales$3 = exports.locales = Object.keys(phones);
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMobilePhone.js
var require_IsMobilePhone = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMobilePhone.js"(exports) {
	var __importDefault$39 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsMobilePhone = exports.isMobilePhone = exports.IS_MOBILE_PHONE = void 0;
	const ValidateBy_1$60 = require_ValidateBy();
	const isMobilePhone_1 = __importDefault$39(require_isMobilePhone());
	exports.IS_MOBILE_PHONE = "isMobilePhone";
	/**
	* Checks if the string is a mobile phone number (locale is either an array of locales (e.g ['sk-SK', 'sr-RS'])
	* OR one of ['am-Am', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', ar-JO', 'ar-KW', 'ar-SA', 'ar-SY', 'ar-TN', 'be-BY',
	* 'bg-BG', 'bn-BD', 'cs-CZ', 'da-DK', 'de-DE', 'de-AT', 'el-GR', 'en-AU', 'en-CA', 'en-GB', 'en-GG', 'en-GH', 'en-HK',
	* 'en-MO', 'en-IE', 'en-IN', 'en-KE', 'en-MT', 'en-MU', 'en-NG', 'en-NZ', 'en-PK', 'en-RW', 'en-SG', 'en-SL', 'en-UG',
	* 'en-US', 'en-TZ', 'en-ZA', 'en-ZM', 'es-CL', 'es-CR', 'es-EC', 'es-ES', 'es-MX', 'es-PA', 'es-PY', 'es-UY', 'et-EE',
	* 'fa-IR', 'fi-FI', 'fj-FJ', 'fo-FO', 'fr-BE', 'fr-FR', 'fr-GF', 'fr-GP', 'fr-MQ', 'fr-RE', 'he-IL', 'hu-HU', 'id-ID',
	* 'it-IT', 'ja-JP', 'kk-KZ', 'kl-GL', 'ko-KR', 'lt-LT', 'ms-MY', 'nb-NO', 'ne-NP', 'nl-BE', 'nl-NL', 'nn-NO', 'pl-PL',
	* 'pt-BR', 'pt-PT', 'ro-RO', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sv-SE', 'th-TH', 'tr-TR', 'uk-UA', 'vi-VN', 'zh-CN',
	* 'zh-HK', 'zh-MO', 'zh-TW']
	* If given value is not a string, then it returns false.
	*/
	function isMobilePhone(value, locale$1, options) {
		return typeof value === "string" && (0, isMobilePhone_1.default)(value, locale$1, options);
	}
	exports.isMobilePhone = isMobilePhone;
	/**
	* Checks if the string is a mobile phone number (locale is either an array of locales (e.g ['sk-SK', 'sr-RS'])
	* OR one of ['am-Am', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', ar-JO', 'ar-KW', 'ar-SA', 'ar-SY', 'ar-TN', 'be-BY',
	* 'bg-BG', 'bn-BD', 'cs-CZ', 'da-DK', 'de-DE', 'de-AT', 'el-GR', 'en-AU', 'en-CA', 'en-GB', 'en-GG', 'en-GH', 'en-HK',
	* 'en-MO', 'en-IE', 'en-IN', 'en-KE', 'en-MT', 'en-MU', 'en-NG', 'en-NZ', 'en-PK', 'en-RW', 'en-SG', 'en-SL', 'en-UG',
	* 'en-US', 'en-TZ', 'en-ZA', 'en-ZM', 'es-CL', 'es-CR', 'es-EC', 'es-ES', 'es-MX', 'es-PA', 'es-PY', 'es-UY', 'et-EE',
	* 'fa-IR', 'fi-FI', 'fj-FJ', 'fo-FO', 'fr-BE', 'fr-FR', 'fr-GF', 'fr-GP', 'fr-MQ', 'fr-RE', 'he-IL', 'hu-HU', 'id-ID',
	* 'it-IT', 'ja-JP', 'kk-KZ', 'kl-GL', 'ko-KR', 'lt-LT', 'ms-MY', 'nb-NO', 'ne-NP', 'nl-BE', 'nl-NL', 'nn-NO', 'pl-PL',
	* 'pt-BR', 'pt-PT', 'ro-RO', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sv-SE', 'th-TH', 'tr-TR', 'uk-UA', 'vi-VN', 'zh-CN',
	* 'zh-HK', 'zh-MO', 'zh-TW']
	* If given value is not a string, then it returns false.
	*/
	function IsMobilePhone(locale$1, options, validationOptions) {
		return (0, ValidateBy_1$60.ValidateBy)({
			name: exports.IS_MOBILE_PHONE,
			constraints: [locale$1, options],
			validator: {
				validate: function(value, args) {
					return isMobilePhone(value, args === null || args === void 0 ? void 0 : args.constraints[0], args === null || args === void 0 ? void 0 : args.constraints[1]);
				},
				defaultMessage: (0, ValidateBy_1$60.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a phone number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsMobilePhone = IsMobilePhone;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO31661Alpha2.js
var require_isISO31661Alpha2 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO31661Alpha2.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.CountryCodes = void 0;
	exports.default = isISO31661Alpha2$1;
	var _assertString$63 = _interopRequireDefault$115(require_assertString());
	function _interopRequireDefault$115(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var validISO31661Alpha2CountriesCodes = new Set([
		"AD",
		"AE",
		"AF",
		"AG",
		"AI",
		"AL",
		"AM",
		"AO",
		"AQ",
		"AR",
		"AS",
		"AT",
		"AU",
		"AW",
		"AX",
		"AZ",
		"BA",
		"BB",
		"BD",
		"BE",
		"BF",
		"BG",
		"BH",
		"BI",
		"BJ",
		"BL",
		"BM",
		"BN",
		"BO",
		"BQ",
		"BR",
		"BS",
		"BT",
		"BV",
		"BW",
		"BY",
		"BZ",
		"CA",
		"CC",
		"CD",
		"CF",
		"CG",
		"CH",
		"CI",
		"CK",
		"CL",
		"CM",
		"CN",
		"CO",
		"CR",
		"CU",
		"CV",
		"CW",
		"CX",
		"CY",
		"CZ",
		"DE",
		"DJ",
		"DK",
		"DM",
		"DO",
		"DZ",
		"EC",
		"EE",
		"EG",
		"EH",
		"ER",
		"ES",
		"ET",
		"FI",
		"FJ",
		"FK",
		"FM",
		"FO",
		"FR",
		"GA",
		"GB",
		"GD",
		"GE",
		"GF",
		"GG",
		"GH",
		"GI",
		"GL",
		"GM",
		"GN",
		"GP",
		"GQ",
		"GR",
		"GS",
		"GT",
		"GU",
		"GW",
		"GY",
		"HK",
		"HM",
		"HN",
		"HR",
		"HT",
		"HU",
		"ID",
		"IE",
		"IL",
		"IM",
		"IN",
		"IO",
		"IQ",
		"IR",
		"IS",
		"IT",
		"JE",
		"JM",
		"JO",
		"JP",
		"KE",
		"KG",
		"KH",
		"KI",
		"KM",
		"KN",
		"KP",
		"KR",
		"KW",
		"KY",
		"KZ",
		"LA",
		"LB",
		"LC",
		"LI",
		"LK",
		"LR",
		"LS",
		"LT",
		"LU",
		"LV",
		"LY",
		"MA",
		"MC",
		"MD",
		"ME",
		"MF",
		"MG",
		"MH",
		"MK",
		"ML",
		"MM",
		"MN",
		"MO",
		"MP",
		"MQ",
		"MR",
		"MS",
		"MT",
		"MU",
		"MV",
		"MW",
		"MX",
		"MY",
		"MZ",
		"NA",
		"NC",
		"NE",
		"NF",
		"NG",
		"NI",
		"NL",
		"NO",
		"NP",
		"NR",
		"NU",
		"NZ",
		"OM",
		"PA",
		"PE",
		"PF",
		"PG",
		"PH",
		"PK",
		"PL",
		"PM",
		"PN",
		"PR",
		"PS",
		"PT",
		"PW",
		"PY",
		"QA",
		"RE",
		"RO",
		"RS",
		"RU",
		"RW",
		"SA",
		"SB",
		"SC",
		"SD",
		"SE",
		"SG",
		"SH",
		"SI",
		"SJ",
		"SK",
		"SL",
		"SM",
		"SN",
		"SO",
		"SR",
		"SS",
		"ST",
		"SV",
		"SX",
		"SY",
		"SZ",
		"TC",
		"TD",
		"TF",
		"TG",
		"TH",
		"TJ",
		"TK",
		"TL",
		"TM",
		"TN",
		"TO",
		"TR",
		"TT",
		"TV",
		"TW",
		"TZ",
		"UA",
		"UG",
		"UM",
		"US",
		"UY",
		"UZ",
		"VA",
		"VC",
		"VE",
		"VG",
		"VI",
		"VN",
		"VU",
		"WF",
		"WS",
		"YE",
		"YT",
		"ZA",
		"ZM",
		"ZW"
	]);
	function isISO31661Alpha2$1(str) {
		(0, _assertString$63.default)(str);
		return validISO31661Alpha2CountriesCodes.has(str.toUpperCase());
	}
	var CountryCodes = exports.CountryCodes = validISO31661Alpha2CountriesCodes;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISO31661Alpha2.js
var require_IsISO31661Alpha2 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISO31661Alpha2.js"(exports) {
	var __importDefault$38 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsISO31661Alpha2 = exports.isISO31661Alpha2 = exports.IS_ISO31661_ALPHA_2 = void 0;
	const ValidateBy_1$59 = require_ValidateBy();
	const isISO31661Alpha2_1 = __importDefault$38(require_isISO31661Alpha2());
	exports.IS_ISO31661_ALPHA_2 = "isISO31661Alpha2";
	/**
	* Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.
	*/
	function isISO31661Alpha2(value) {
		return typeof value === "string" && (0, isISO31661Alpha2_1.default)(value);
	}
	exports.isISO31661Alpha2 = isISO31661Alpha2;
	/**
	* Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.
	*/
	function IsISO31661Alpha2(validationOptions) {
		return (0, ValidateBy_1$59.ValidateBy)({
			name: exports.IS_ISO31661_ALPHA_2,
			validator: {
				validate: function(value, args) {
					return isISO31661Alpha2(value);
				},
				defaultMessage: (0, ValidateBy_1$59.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a valid ISO31661 Alpha2 code";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsISO31661Alpha2 = IsISO31661Alpha2;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO31661Alpha3.js
var require_isISO31661Alpha3 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO31661Alpha3.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isISO31661Alpha3$1;
	var _assertString$62 = _interopRequireDefault$114(require_assertString());
	function _interopRequireDefault$114(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var validISO31661Alpha3CountriesCodes = new Set([
		"AFG",
		"ALA",
		"ALB",
		"DZA",
		"ASM",
		"AND",
		"AGO",
		"AIA",
		"ATA",
		"ATG",
		"ARG",
		"ARM",
		"ABW",
		"AUS",
		"AUT",
		"AZE",
		"BHS",
		"BHR",
		"BGD",
		"BRB",
		"BLR",
		"BEL",
		"BLZ",
		"BEN",
		"BMU",
		"BTN",
		"BOL",
		"BES",
		"BIH",
		"BWA",
		"BVT",
		"BRA",
		"IOT",
		"BRN",
		"BGR",
		"BFA",
		"BDI",
		"KHM",
		"CMR",
		"CAN",
		"CPV",
		"CYM",
		"CAF",
		"TCD",
		"CHL",
		"CHN",
		"CXR",
		"CCK",
		"COL",
		"COM",
		"COG",
		"COD",
		"COK",
		"CRI",
		"CIV",
		"HRV",
		"CUB",
		"CUW",
		"CYP",
		"CZE",
		"DNK",
		"DJI",
		"DMA",
		"DOM",
		"ECU",
		"EGY",
		"SLV",
		"GNQ",
		"ERI",
		"EST",
		"ETH",
		"FLK",
		"FRO",
		"FJI",
		"FIN",
		"FRA",
		"GUF",
		"PYF",
		"ATF",
		"GAB",
		"GMB",
		"GEO",
		"DEU",
		"GHA",
		"GIB",
		"GRC",
		"GRL",
		"GRD",
		"GLP",
		"GUM",
		"GTM",
		"GGY",
		"GIN",
		"GNB",
		"GUY",
		"HTI",
		"HMD",
		"VAT",
		"HND",
		"HKG",
		"HUN",
		"ISL",
		"IND",
		"IDN",
		"IRN",
		"IRQ",
		"IRL",
		"IMN",
		"ISR",
		"ITA",
		"JAM",
		"JPN",
		"JEY",
		"JOR",
		"KAZ",
		"KEN",
		"KIR",
		"PRK",
		"KOR",
		"KWT",
		"KGZ",
		"LAO",
		"LVA",
		"LBN",
		"LSO",
		"LBR",
		"LBY",
		"LIE",
		"LTU",
		"LUX",
		"MAC",
		"MKD",
		"MDG",
		"MWI",
		"MYS",
		"MDV",
		"MLI",
		"MLT",
		"MHL",
		"MTQ",
		"MRT",
		"MUS",
		"MYT",
		"MEX",
		"FSM",
		"MDA",
		"MCO",
		"MNG",
		"MNE",
		"MSR",
		"MAR",
		"MOZ",
		"MMR",
		"NAM",
		"NRU",
		"NPL",
		"NLD",
		"NCL",
		"NZL",
		"NIC",
		"NER",
		"NGA",
		"NIU",
		"NFK",
		"MNP",
		"NOR",
		"OMN",
		"PAK",
		"PLW",
		"PSE",
		"PAN",
		"PNG",
		"PRY",
		"PER",
		"PHL",
		"PCN",
		"POL",
		"PRT",
		"PRI",
		"QAT",
		"REU",
		"ROU",
		"RUS",
		"RWA",
		"BLM",
		"SHN",
		"KNA",
		"LCA",
		"MAF",
		"SPM",
		"VCT",
		"WSM",
		"SMR",
		"STP",
		"SAU",
		"SEN",
		"SRB",
		"SYC",
		"SLE",
		"SGP",
		"SXM",
		"SVK",
		"SVN",
		"SLB",
		"SOM",
		"ZAF",
		"SGS",
		"SSD",
		"ESP",
		"LKA",
		"SDN",
		"SUR",
		"SJM",
		"SWZ",
		"SWE",
		"CHE",
		"SYR",
		"TWN",
		"TJK",
		"TZA",
		"THA",
		"TLS",
		"TGO",
		"TKL",
		"TON",
		"TTO",
		"TUN",
		"TUR",
		"TKM",
		"TCA",
		"TUV",
		"UGA",
		"UKR",
		"ARE",
		"GBR",
		"USA",
		"UMI",
		"URY",
		"UZB",
		"VUT",
		"VEN",
		"VNM",
		"VGB",
		"VIR",
		"WLF",
		"ESH",
		"YEM",
		"ZMB",
		"ZWE"
	]);
	function isISO31661Alpha3$1(str) {
		(0, _assertString$62.default)(str);
		return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISO31661Alpha3.js
var require_IsISO31661Alpha3 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISO31661Alpha3.js"(exports) {
	var __importDefault$37 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsISO31661Alpha3 = exports.isISO31661Alpha3 = exports.IS_ISO31661_ALPHA_3 = void 0;
	const ValidateBy_1$58 = require_ValidateBy();
	const isISO31661Alpha3_1 = __importDefault$37(require_isISO31661Alpha3());
	exports.IS_ISO31661_ALPHA_3 = "isISO31661Alpha3";
	/**
	* Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.
	*/
	function isISO31661Alpha3(value) {
		return typeof value === "string" && (0, isISO31661Alpha3_1.default)(value);
	}
	exports.isISO31661Alpha3 = isISO31661Alpha3;
	/**
	* Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.
	*/
	function IsISO31661Alpha3(validationOptions) {
		return (0, ValidateBy_1$58.ValidateBy)({
			name: exports.IS_ISO31661_ALPHA_3,
			validator: {
				validate: function(value, args) {
					return isISO31661Alpha3(value);
				},
				defaultMessage: (0, ValidateBy_1$58.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a valid ISO31661 Alpha3 code";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsISO31661Alpha3 = IsISO31661Alpha3;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMongoId.js
var require_isMongoId = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMongoId.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isMongoId$1;
	var _assertString$61 = _interopRequireDefault$113(require_assertString());
	var _isHexadecimal$1 = _interopRequireDefault$113(require_isHexadecimal());
	function _interopRequireDefault$113(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isMongoId$1(str) {
		(0, _assertString$61.default)(str);
		return (0, _isHexadecimal$1.default)(str) && str.length === 24;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMongoId.js
var require_IsMongoId = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMongoId.js"(exports) {
	var __importDefault$36 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsMongoId = exports.isMongoId = exports.IS_MONGO_ID = void 0;
	const ValidateBy_1$57 = require_ValidateBy();
	const isMongoId_1 = __importDefault$36(require_isMongoId());
	exports.IS_MONGO_ID = "isMongoId";
	/**
	* Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.
	* If given value is not a string, then it returns false.
	*/
	function isMongoId(value) {
		return typeof value === "string" && (0, isMongoId_1.default)(value);
	}
	exports.isMongoId = isMongoId;
	/**
	* Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.
	* If given value is not a string, then it returns false.
	*/
	function IsMongoId(validationOptions) {
		return (0, ValidateBy_1$57.ValidateBy)({
			name: exports.IS_MONGO_ID,
			validator: {
				validate: function(value, args) {
					return isMongoId(value);
				},
				defaultMessage: (0, ValidateBy_1$57.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a mongodb id";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsMongoId = IsMongoId;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMultibyte.js
var require_isMultibyte = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMultibyte.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isMultibyte$1;
	var _assertString$60 = _interopRequireDefault$112(require_assertString());
	function _interopRequireDefault$112(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var multibyte = /[^\x00-\x7F]/;
	function isMultibyte$1(str) {
		(0, _assertString$60.default)(str);
		return multibyte.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMultibyte.js
var require_IsMultibyte = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMultibyte.js"(exports) {
	var __importDefault$35 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsMultibyte = exports.isMultibyte = exports.IS_MULTIBYTE = void 0;
	const ValidateBy_1$56 = require_ValidateBy();
	const isMultibyte_1 = __importDefault$35(require_isMultibyte());
	exports.IS_MULTIBYTE = "isMultibyte";
	/**
	* Checks if the string contains one or more multibyte chars.
	* If given value is not a string, then it returns false.
	*/
	function isMultibyte(value) {
		return typeof value === "string" && (0, isMultibyte_1.default)(value);
	}
	exports.isMultibyte = isMultibyte;
	/**
	* Checks if the string contains one or more multibyte chars.
	* If given value is not a string, then it returns false.
	*/
	function IsMultibyte(validationOptions) {
		return (0, ValidateBy_1$56.ValidateBy)({
			name: exports.IS_MULTIBYTE,
			validator: {
				validate: function(value, args) {
					return isMultibyte(value);
				},
				defaultMessage: (0, ValidateBy_1$56.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain one or more multibyte chars";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsMultibyte = IsMultibyte;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isSurrogatePair.js
var require_isSurrogatePair = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isSurrogatePair.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isSurrogatePair$1;
	var _assertString$59 = _interopRequireDefault$111(require_assertString());
	function _interopRequireDefault$111(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var surrogatePair = /[\uD800-\uDBFF][\uDC00-\uDFFF]/;
	function isSurrogatePair$1(str) {
		(0, _assertString$59.default)(str);
		return surrogatePair.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsSurrogatePair.js
var require_IsSurrogatePair = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsSurrogatePair.js"(exports) {
	var __importDefault$34 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsSurrogatePair = exports.isSurrogatePair = exports.IS_SURROGATE_PAIR = void 0;
	const ValidateBy_1$55 = require_ValidateBy();
	const isSurrogatePair_1 = __importDefault$34(require_isSurrogatePair());
	exports.IS_SURROGATE_PAIR = "isSurrogatePair";
	/**
	* Checks if the string contains any surrogate pairs chars.
	* If given value is not a string, then it returns false.
	*/
	function isSurrogatePair(value) {
		return typeof value === "string" && (0, isSurrogatePair_1.default)(value);
	}
	exports.isSurrogatePair = isSurrogatePair;
	/**
	* Checks if the string contains any surrogate pairs chars.
	* If given value is not a string, then it returns false.
	*/
	function IsSurrogatePair(validationOptions) {
		return (0, ValidateBy_1$55.ValidateBy)({
			name: exports.IS_SURROGATE_PAIR,
			validator: {
				validate: function(value, args) {
					return isSurrogatePair(value);
				},
				defaultMessage: (0, ValidateBy_1$55.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain any surrogate pairs chars";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsSurrogatePair = IsSurrogatePair;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isURL.js
var require_isURL = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isURL.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isURL$1;
	var _assertString$58 = _interopRequireDefault$110(require_assertString());
	var _checkHost = _interopRequireDefault$110(require_checkHost());
	var _includesString = _interopRequireDefault$110(require_includesString());
	var _isFQDN$1 = _interopRequireDefault$110(require_isFQDN());
	var _isIP$2 = _interopRequireDefault$110(require_isIP());
	var _merge$6 = _interopRequireDefault$110(require_merge$1());
	function _interopRequireDefault$110(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _slicedToArray$6(r, e) {
		return _arrayWithHoles$6(r) || _iterableToArrayLimit$6(r, e) || _unsupportedIterableToArray$17(r, e) || _nonIterableRest$6();
	}
	function _nonIterableRest$6() {
		throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$17(r, a) {
		if (r) {
			if ("string" == typeof r) return _arrayLikeToArray$17(r, a);
			var t = {}.toString.call(r).slice(8, -1);
			return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray$17(r, a) : void 0;
		}
	}
	function _arrayLikeToArray$17(r, a) {
		(null == a || a > r.length) && (a = r.length);
		for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
		return n;
	}
	function _iterableToArrayLimit$6(r, l) {
		var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
		if (null != t) {
			var e, n, i$1, u, a = [], f = !0, o = !1;
			try {
				if (i$1 = (t = t.call(r)).next, 0 === l) {
					if (Object(t) !== t) return;
					f = !1;
				} else for (; !(f = (e = i$1.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
			} catch (r$1) {
				o = !0, n = r$1;
			} finally {
				try {
					if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
				} finally {
					if (o) throw n;
				}
			}
			return a;
		}
	}
	function _arrayWithHoles$6(r) {
		if (Array.isArray(r)) return r;
	}
	var default_url_options = {
		protocols: [
			"http",
			"https",
			"ftp"
		],
		require_tld: true,
		require_protocol: false,
		require_host: true,
		require_port: false,
		require_valid_protocol: true,
		allow_underscores: false,
		allow_trailing_dot: false,
		allow_protocol_relative_urls: false,
		allow_fragments: true,
		allow_query_components: true,
		validate_length: true,
		max_allowed_length: 2084
	};
	var wrapped_ipv6 = new RegExp("^\\[([^\\]]+)\\](?::([0-9]+))?$", "");
	function isURL$1(url, options) {
		(0, _assertString$58.default)(url);
		if (!url || /[\s<>]/.test(url)) return false;
		if (url.indexOf("mailto:") === 0) return false;
		options = (0, _merge$6.default)(options, default_url_options);
		if (options.validate_length && url.length > options.max_allowed_length) return false;
		if (!options.allow_fragments && (0, _includesString.default)(url, "#")) return false;
		if (!options.allow_query_components && ((0, _includesString.default)(url, "?") || (0, _includesString.default)(url, "&"))) return false;
		var protocol, auth, host, hostname, port, port_str, split, ipv6;
		split = url.split("#");
		url = split.shift();
		split = url.split("?");
		url = split.shift();
		split = url.split("://");
		if (split.length > 1) {
			protocol = split.shift().toLowerCase();
			if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) return false;
		} else if (options.require_protocol) return false;
		else if (url.slice(0, 2) === "//") {
			if (!options.allow_protocol_relative_urls) return false;
			split[0] = url.slice(2);
		}
		url = split.join("://");
		if (url === "") return false;
		split = url.split("/");
		url = split.shift();
		if (url === "" && !options.require_host) return true;
		split = url.split("@");
		if (split.length > 1) {
			if (options.disallow_auth) return false;
			if (split[0] === "") return false;
			auth = split.shift();
			if (auth.indexOf(":") >= 0 && auth.split(":").length > 2) return false;
			var _auth$split = auth.split(":"), _auth$split2 = _slicedToArray$6(_auth$split, 2), user = _auth$split2[0], password = _auth$split2[1];
			if (user === "" && password === "") return false;
		}
		hostname = split.join("@");
		port_str = null;
		ipv6 = null;
		var ipv6_match = hostname.match(wrapped_ipv6);
		if (ipv6_match) {
			host = "";
			ipv6 = ipv6_match[1];
			port_str = ipv6_match[2] || null;
		} else {
			split = hostname.split(":");
			host = split.shift();
			if (split.length) port_str = split.join(":");
		}
		if (port_str !== null && port_str.length > 0) {
			port = parseInt(port_str, 10);
			if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) return false;
		} else if (options.require_port) return false;
		if (options.host_whitelist) return (0, _checkHost.default)(host, options.host_whitelist);
		if (host === "" && !options.require_host) return true;
		if (!(0, _isIP$2.default)(host) && !(0, _isFQDN$1.default)(host, options) && (!ipv6 || !(0, _isIP$2.default)(ipv6, 6))) return false;
		host = host || ipv6;
		if (options.host_blacklist && (0, _checkHost.default)(host, options.host_blacklist)) return false;
		return true;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsUrl.js
var require_IsUrl = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsUrl.js"(exports) {
	var __importDefault$33 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsUrl = exports.isURL = exports.IS_URL = void 0;
	const ValidateBy_1$54 = require_ValidateBy();
	const isURL_1 = __importDefault$33(require_isURL());
	exports.IS_URL = "isUrl";
	/**
	* Checks if the string is a url.
	* If given value is not a string, then it returns false.
	*/
	function isURL(value, options) {
		return typeof value === "string" && (0, isURL_1.default)(value, options);
	}
	exports.isURL = isURL;
	/**
	* Checks if the string is a url.
	* If given value is not a string, then it returns false.
	*/
	function IsUrl(options, validationOptions) {
		return (0, ValidateBy_1$54.ValidateBy)({
			name: exports.IS_URL,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isURL(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$54.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a URL address";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsUrl = IsUrl;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isUUID.js
var require_isUUID = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isUUID.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isUUID$1;
	var _assertString$57 = _interopRequireDefault$109(require_assertString());
	function _interopRequireDefault$109(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var uuid = {
		1: /^[0-9A-F]{8}-[0-9A-F]{4}-1[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
		2: /^[0-9A-F]{8}-[0-9A-F]{4}-2[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
		3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
		4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
		5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
		6: /^[0-9A-F]{8}-[0-9A-F]{4}-6[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
		7: /^[0-9A-F]{8}-[0-9A-F]{4}-7[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
		8: /^[0-9A-F]{8}-[0-9A-F]{4}-8[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
		nil: /^00000000-0000-0000-0000-000000000000$/i,
		max: /^ffffffff-ffff-ffff-ffff-ffffffffffff$/i,
		loose: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
		all: /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i
	};
	function isUUID$1(str, version$1) {
		(0, _assertString$57.default)(str);
		if (version$1 === void 0 || version$1 === null) version$1 = "all";
		return version$1 in uuid ? uuid[version$1].test(str) : false;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsUUID.js
var require_IsUUID = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsUUID.js"(exports) {
	var __importDefault$32 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsUUID = exports.isUUID = exports.IS_UUID = void 0;
	const ValidateBy_1$53 = require_ValidateBy();
	const isUUID_1 = __importDefault$32(require_isUUID());
	exports.IS_UUID = "isUuid";
	/**
	* Checks if the string is a UUID (version 3, 4 or 5).
	* If given value is not a string, then it returns false.
	*/
	function isUUID(value, version$1) {
		return typeof value === "string" && (0, isUUID_1.default)(value, version$1);
	}
	exports.isUUID = isUUID;
	/**
	* Checks if the string is a UUID (version 3, 4 or 5).
	* If given value is not a string, then it returns false.
	*/
	function IsUUID(version$1, validationOptions) {
		return (0, ValidateBy_1$53.ValidateBy)({
			name: exports.IS_UUID,
			constraints: [version$1],
			validator: {
				validate: function(value, args) {
					return isUUID(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$53.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a UUID";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsUUID = IsUUID;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsFirebasePushId.js
var require_IsFirebasePushId = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsFirebasePushId.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsFirebasePushId = exports.isFirebasePushId = exports.IS_FIREBASE_PUSH_ID = void 0;
	const ValidateBy_1$52 = require_ValidateBy();
	exports.IS_FIREBASE_PUSH_ID = "IsFirebasePushId";
	/**
	* Checks if the string is a Firebase Push Id
	* If given value is not a Firebase Push Id, it returns false
	*/
	function isFirebasePushId(value) {
		const webSafeRegex = /^[a-zA-Z0-9_-]*$/;
		return typeof value === "string" && value.length === 20 && webSafeRegex.test(value);
	}
	exports.isFirebasePushId = isFirebasePushId;
	/**
	* Checks if the string is a Firebase Push Id
	* If given value is not a Firebase Push Id, it returns false
	*/
	function IsFirebasePushId(validationOptions) {
		return (0, ValidateBy_1$52.ValidateBy)({
			name: exports.IS_FIREBASE_PUSH_ID,
			validator: {
				validate: function(value, args) {
					return isFirebasePushId(value);
				},
				defaultMessage: (0, ValidateBy_1$52.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a Firebase Push Id";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsFirebasePushId = IsFirebasePushId;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isUppercase.js
var require_isUppercase = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isUppercase.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isUppercase$1;
	var _assertString$56 = _interopRequireDefault$108(require_assertString());
	function _interopRequireDefault$108(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isUppercase$1(str) {
		(0, _assertString$56.default)(str);
		return str === str.toUpperCase();
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsUppercase.js
var require_IsUppercase = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsUppercase.js"(exports) {
	var __importDefault$31 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsUppercase = exports.isUppercase = exports.IS_UPPERCASE = void 0;
	const ValidateBy_1$51 = require_ValidateBy();
	const isUppercase_1 = __importDefault$31(require_isUppercase());
	exports.IS_UPPERCASE = "isUppercase";
	/**
	* Checks if the string is uppercase.
	* If given value is not a string, then it returns false.
	*/
	function isUppercase(value) {
		return typeof value === "string" && (0, isUppercase_1.default)(value);
	}
	exports.isUppercase = isUppercase;
	/**
	* Checks if the string is uppercase.
	* If given value is not a string, then it returns false.
	*/
	function IsUppercase(validationOptions) {
		return (0, ValidateBy_1$51.ValidateBy)({
			name: exports.IS_UPPERCASE,
			validator: {
				validate: function(value, args) {
					return isUppercase(value);
				},
				defaultMessage: (0, ValidateBy_1$51.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be uppercase";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsUppercase = IsUppercase;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLength.js
var require_isLength = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLength.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isLength;
	var _assertString$55 = _interopRequireDefault$107(require_assertString());
	function _interopRequireDefault$107(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _typeof$16(o) {
		"@babel/helpers - typeof";
		return _typeof$16 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof$16(o);
	}
	function isLength(str, options) {
		(0, _assertString$55.default)(str);
		var min$2;
		var max$2;
		if (_typeof$16(options) === "object") {
			min$2 = options.min || 0;
			max$2 = options.max;
		} else {
			min$2 = arguments[1] || 0;
			max$2 = arguments[2];
		}
		var presentationSequences = str.match(new RegExp("(\\uFE0F|\\uFE0E)", "g")) || [];
		var surrogatePairs = str.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g) || [];
		var len = str.length - presentationSequences.length - surrogatePairs.length;
		var isInsideRange = len >= min$2 && (typeof max$2 === "undefined" || len <= max$2);
		if (isInsideRange && Array.isArray(options === null || options === void 0 ? void 0 : options.discreteLengths)) return options.discreteLengths.some(function(discreteLen) {
			return discreteLen === len;
		});
		return isInsideRange;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/Length.js
var require_Length = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/Length.js"(exports) {
	var __importDefault$30 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Length = exports.length = exports.IS_LENGTH = void 0;
	const ValidateBy_1$50 = require_ValidateBy();
	const isLength_1$2 = __importDefault$30(require_isLength());
	exports.IS_LENGTH = "isLength";
	/**
	* Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.
	* If given value is not a string, then it returns false.
	*/
	function length(value, min$2, max$2) {
		return typeof value === "string" && (0, isLength_1$2.default)(value, {
			min: min$2,
			max: max$2
		});
	}
	exports.length = length;
	/**
	* Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.
	* If given value is not a string, then it returns false.
	*/
	function Length(min$2, max$2, validationOptions) {
		return (0, ValidateBy_1$50.ValidateBy)({
			name: exports.IS_LENGTH,
			constraints: [min$2, max$2],
			validator: {
				validate: function(value, args) {
					return length(value, args === null || args === void 0 ? void 0 : args.constraints[0], args === null || args === void 0 ? void 0 : args.constraints[1]);
				},
				defaultMessage: (0, ValidateBy_1$50.buildMessage)(function(eachPrefix, args) {
					const isMinLength = (args === null || args === void 0 ? void 0 : args.constraints[0]) !== null && (args === null || args === void 0 ? void 0 : args.constraints[0]) !== void 0;
					const isMaxLength = (args === null || args === void 0 ? void 0 : args.constraints[1]) !== null && (args === null || args === void 0 ? void 0 : args.constraints[1]) !== void 0;
					if (isMinLength && (!args.value || args.value.length < (args === null || args === void 0 ? void 0 : args.constraints[0]))) return eachPrefix + "$property must be longer than or equal to $constraint1 characters";
					else if (isMaxLength && args.value.length > (args === null || args === void 0 ? void 0 : args.constraints[1])) return eachPrefix + "$property must be shorter than or equal to $constraint2 characters";
					return eachPrefix + "$property must be longer than or equal to $constraint1 and shorter than or equal to $constraint2 characters";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.Length = Length;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/MaxLength.js
var require_MaxLength = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/MaxLength.js"(exports) {
	var __importDefault$29 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.MaxLength = exports.maxLength = exports.MAX_LENGTH = void 0;
	const ValidateBy_1$49 = require_ValidateBy();
	const isLength_1$1 = __importDefault$29(require_isLength());
	exports.MAX_LENGTH = "maxLength";
	/**
	* Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.
	* If given value is not a string, then it returns false.
	*/
	function maxLength(value, max$2) {
		return typeof value === "string" && (0, isLength_1$1.default)(value, {
			min: 0,
			max: max$2
		});
	}
	exports.maxLength = maxLength;
	/**
	* Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.
	* If given value is not a string, then it returns false.
	*/
	function MaxLength(max$2, validationOptions) {
		return (0, ValidateBy_1$49.ValidateBy)({
			name: exports.MAX_LENGTH,
			constraints: [max$2],
			validator: {
				validate: function(value, args) {
					return maxLength(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$49.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be shorter than or equal to $constraint1 characters";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.MaxLength = MaxLength;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/MinLength.js
var require_MinLength = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/MinLength.js"(exports) {
	var __importDefault$28 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.MinLength = exports.minLength = exports.MIN_LENGTH = void 0;
	const ValidateBy_1$48 = require_ValidateBy();
	const isLength_1 = __importDefault$28(require_isLength());
	exports.MIN_LENGTH = "minLength";
	/**
	* Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.
	* If given value is not a string, then it returns false.
	*/
	function minLength(value, min$2) {
		return typeof value === "string" && (0, isLength_1.default)(value, { min: min$2 });
	}
	exports.minLength = minLength;
	/**
	* Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.
	* If given value is not a string, then it returns false.
	*/
	function MinLength(min$2, validationOptions) {
		return (0, ValidateBy_1$48.ValidateBy)({
			name: exports.MIN_LENGTH,
			constraints: [min$2],
			validator: {
				validate: function(value, args) {
					return minLength(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$48.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be longer than or equal to $constraint1 characters";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.MinLength = MinLength;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/matches.js
var require_matches = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/matches.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = matches$1;
	var _assertString$54 = _interopRequireDefault$106(require_assertString());
	function _interopRequireDefault$106(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function matches$1(str, pattern, modifiers) {
		(0, _assertString$54.default)(str);
		if (Object.prototype.toString.call(pattern) !== "[object RegExp]") pattern = new RegExp(pattern, modifiers);
		return !!str.match(pattern);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/Matches.js
var require_Matches = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/Matches.js"(exports) {
	var __importDefault$27 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Matches = exports.matches = exports.MATCHES = void 0;
	const ValidateBy_1$47 = require_ValidateBy();
	const matches_1$1 = __importDefault$27(require_matches());
	exports.MATCHES = "matches";
	function matches(value, pattern, modifiers) {
		return typeof value === "string" && (0, matches_1$1.default)(value, pattern, modifiers);
	}
	exports.matches = matches;
	function Matches(pattern, modifiersOrAnnotationOptions, validationOptions) {
		let modifiers;
		if (modifiersOrAnnotationOptions && modifiersOrAnnotationOptions instanceof Object && !validationOptions) validationOptions = modifiersOrAnnotationOptions;
		else modifiers = modifiersOrAnnotationOptions;
		return (0, ValidateBy_1$47.ValidateBy)({
			name: exports.MATCHES,
			constraints: [pattern, modifiers],
			validator: {
				validate: function(value, args) {
					return matches(value, args === null || args === void 0 ? void 0 : args.constraints[0], args === null || args === void 0 ? void 0 : args.constraints[1]);
				},
				defaultMessage: (0, ValidateBy_1$47.buildMessage)(function(eachPrefix, args) {
					return eachPrefix + "$property must match $constraint1 regular expression";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.Matches = Matches;
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/metadata.max.json
var require_metadata_max = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/metadata.max.json"(exports, module) {
	module.exports = {
		"version": 4,
		"country_calling_codes": {
			"1": [
				"US",
				"AG",
				"AI",
				"AS",
				"BB",
				"BM",
				"BS",
				"CA",
				"DM",
				"DO",
				"GD",
				"GU",
				"JM",
				"KN",
				"KY",
				"LC",
				"MP",
				"MS",
				"PR",
				"SX",
				"TC",
				"TT",
				"VC",
				"VG",
				"VI"
			],
			"7": ["RU", "KZ"],
			"20": ["EG"],
			"27": ["ZA"],
			"30": ["GR"],
			"31": ["NL"],
			"32": ["BE"],
			"33": ["FR"],
			"34": ["ES"],
			"36": ["HU"],
			"39": ["IT", "VA"],
			"40": ["RO"],
			"41": ["CH"],
			"43": ["AT"],
			"44": [
				"GB",
				"GG",
				"IM",
				"JE"
			],
			"45": ["DK"],
			"46": ["SE"],
			"47": ["NO", "SJ"],
			"48": ["PL"],
			"49": ["DE"],
			"51": ["PE"],
			"52": ["MX"],
			"53": ["CU"],
			"54": ["AR"],
			"55": ["BR"],
			"56": ["CL"],
			"57": ["CO"],
			"58": ["VE"],
			"60": ["MY"],
			"61": [
				"AU",
				"CC",
				"CX"
			],
			"62": ["ID"],
			"63": ["PH"],
			"64": ["NZ"],
			"65": ["SG"],
			"66": ["TH"],
			"81": ["JP"],
			"82": ["KR"],
			"84": ["VN"],
			"86": ["CN"],
			"90": ["TR"],
			"91": ["IN"],
			"92": ["PK"],
			"93": ["AF"],
			"94": ["LK"],
			"95": ["MM"],
			"98": ["IR"],
			"211": ["SS"],
			"212": ["MA", "EH"],
			"213": ["DZ"],
			"216": ["TN"],
			"218": ["LY"],
			"220": ["GM"],
			"221": ["SN"],
			"222": ["MR"],
			"223": ["ML"],
			"224": ["GN"],
			"225": ["CI"],
			"226": ["BF"],
			"227": ["NE"],
			"228": ["TG"],
			"229": ["BJ"],
			"230": ["MU"],
			"231": ["LR"],
			"232": ["SL"],
			"233": ["GH"],
			"234": ["NG"],
			"235": ["TD"],
			"236": ["CF"],
			"237": ["CM"],
			"238": ["CV"],
			"239": ["ST"],
			"240": ["GQ"],
			"241": ["GA"],
			"242": ["CG"],
			"243": ["CD"],
			"244": ["AO"],
			"245": ["GW"],
			"246": ["IO"],
			"247": ["AC"],
			"248": ["SC"],
			"249": ["SD"],
			"250": ["RW"],
			"251": ["ET"],
			"252": ["SO"],
			"253": ["DJ"],
			"254": ["KE"],
			"255": ["TZ"],
			"256": ["UG"],
			"257": ["BI"],
			"258": ["MZ"],
			"260": ["ZM"],
			"261": ["MG"],
			"262": ["RE", "YT"],
			"263": ["ZW"],
			"264": ["NA"],
			"265": ["MW"],
			"266": ["LS"],
			"267": ["BW"],
			"268": ["SZ"],
			"269": ["KM"],
			"290": ["SH", "TA"],
			"291": ["ER"],
			"297": ["AW"],
			"298": ["FO"],
			"299": ["GL"],
			"350": ["GI"],
			"351": ["PT"],
			"352": ["LU"],
			"353": ["IE"],
			"354": ["IS"],
			"355": ["AL"],
			"356": ["MT"],
			"357": ["CY"],
			"358": ["FI", "AX"],
			"359": ["BG"],
			"370": ["LT"],
			"371": ["LV"],
			"372": ["EE"],
			"373": ["MD"],
			"374": ["AM"],
			"375": ["BY"],
			"376": ["AD"],
			"377": ["MC"],
			"378": ["SM"],
			"380": ["UA"],
			"381": ["RS"],
			"382": ["ME"],
			"383": ["XK"],
			"385": ["HR"],
			"386": ["SI"],
			"387": ["BA"],
			"389": ["MK"],
			"420": ["CZ"],
			"421": ["SK"],
			"423": ["LI"],
			"500": ["FK"],
			"501": ["BZ"],
			"502": ["GT"],
			"503": ["SV"],
			"504": ["HN"],
			"505": ["NI"],
			"506": ["CR"],
			"507": ["PA"],
			"508": ["PM"],
			"509": ["HT"],
			"590": [
				"GP",
				"BL",
				"MF"
			],
			"591": ["BO"],
			"592": ["GY"],
			"593": ["EC"],
			"594": ["GF"],
			"595": ["PY"],
			"596": ["MQ"],
			"597": ["SR"],
			"598": ["UY"],
			"599": ["CW", "BQ"],
			"670": ["TL"],
			"672": ["NF"],
			"673": ["BN"],
			"674": ["NR"],
			"675": ["PG"],
			"676": ["TO"],
			"677": ["SB"],
			"678": ["VU"],
			"679": ["FJ"],
			"680": ["PW"],
			"681": ["WF"],
			"682": ["CK"],
			"683": ["NU"],
			"685": ["WS"],
			"686": ["KI"],
			"687": ["NC"],
			"688": ["TV"],
			"689": ["PF"],
			"690": ["TK"],
			"691": ["FM"],
			"692": ["MH"],
			"850": ["KP"],
			"852": ["HK"],
			"853": ["MO"],
			"855": ["KH"],
			"856": ["LA"],
			"880": ["BD"],
			"886": ["TW"],
			"960": ["MV"],
			"961": ["LB"],
			"962": ["JO"],
			"963": ["SY"],
			"964": ["IQ"],
			"965": ["KW"],
			"966": ["SA"],
			"967": ["YE"],
			"968": ["OM"],
			"970": ["PS"],
			"971": ["AE"],
			"972": ["IL"],
			"973": ["BH"],
			"974": ["QA"],
			"975": ["BT"],
			"976": ["MN"],
			"977": ["NP"],
			"992": ["TJ"],
			"993": ["TM"],
			"994": ["AZ"],
			"995": ["GE"],
			"996": ["KG"],
			"998": ["UZ"]
		},
		"countries": {
			"AC": [
				"247",
				"00",
				"(?:[01589]\\d|[46])\\d{4}",
				[5, 6],
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["6[2-467]\\d{3}", [5]],
					["4\\d{4}", [5]],
					0,
					0,
					0,
					0,
					["(?:0[1-9]|[1589]\\d)\\d{4}", [6]]
				]
			],
			"AD": [
				"376",
				"00",
				"(?:1|6\\d)\\d{7}|[135-9]\\d{5}",
				[
					6,
					8,
					9
				],
				[
					[
						"(\\d{3})(\\d{3})",
						"$1 $2",
						["[135-9]"]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						["1"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["6"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["[78]\\d{5}", [6]],
					["690\\d{6}|[356]\\d{5}", [6, 9]],
					["180[02]\\d{4}", [8]],
					["[19]\\d{5}", [6]]
				]
			],
			"AE": [
				"971",
				"00",
				"(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}",
				[
					5,
					6,
					7,
					8,
					9,
					10,
					11,
					12
				],
				[
					[
						"(\\d{3})(\\d{2,9})",
						"$1 $2",
						["60|8"]
					],
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[236]|[479][2-8]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d)(\\d{5})",
						"$1 $2 $3",
						["[479]"]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["5"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["[2-4679][2-8]\\d{6}", [8]],
					["5[024-68]\\d{7}", [9]],
					["400\\d{6}|800\\d{2,9}"],
					["900[02]\\d{5}", [9]],
					0,
					0,
					["600[25]\\d{5}", [9]],
					0,
					0,
					["700[05]\\d{5}", [9]]
				]
			],
			"AF": [
				"93",
				"00",
				"[2-7]\\d{8}",
				[9],
				[[
					"(\\d{2})(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["[2-7]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\d{6}"], ["7\\d{8}"]]
			],
			"AG": [
				"1",
				"011",
				"(?:268|[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([457]\\d{6})$|1",
				"268$1",
				0,
				"268",
				[
					["268(?:4(?:6[0-38]|84)|56[0-2])\\d{4}"],
					["268(?:464|7(?:1[3-9]|[28]\\d|3[0246]|64|7[0-689]))\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"],
					0,
					0,
					["26840[69]\\d{4}"],
					["26848[01]\\d{4}"]
				]
			],
			"AI": [
				"1",
				"011",
				"(?:264|[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2457]\\d{6})$|1",
				"264$1",
				0,
				"264",
				[
					["264(?:292|4(?:6[12]|9[78]))\\d{4}"],
					["264(?:235|4(?:69|76)|5(?:3[6-9]|8[1-4])|7(?:29|72))\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"],
					0,
					0,
					["264724\\d{4}"]
				]
			],
			"AL": [
				"355",
				"00",
				"(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}",
				[
					6,
					7,
					8,
					9
				],
				[
					[
						"(\\d{3})(\\d{3,4})",
						"$1 $2",
						["80|9"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["4[2-6]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[2358][2-5]|4"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						["[23578]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["6"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["4505[0-2]\\d{3}|(?:[2358][16-9]\\d[2-9]|4410)\\d{4}|(?:[2358][2-5][2-9]|4(?:[2-57-9][2-9]|6\\d))\\d{5}", [8]],
					["6(?:[78][2-9]|9\\d)\\d{6}", [9]],
					["800\\d{4}", [7]],
					["900[1-9]\\d\\d", [6]],
					["700[2-9]\\d{4}", [8]],
					0,
					0,
					0,
					0,
					["808[1-9]\\d\\d", [6]]
				]
			],
			"AM": [
				"374",
				"00",
				"(?:[1-489]\\d|55|60|77)\\d{6}",
				[8],
				[
					[
						"(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["[89]0"],
						"0 $1"
					],
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						["2|3[12]"],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{6})",
						"$1 $2",
						["1|47"],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{6})",
						"$1 $2",
						["[3-9]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:(?:1[0-25]|47)\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2)\\d{5}"],
					["(?:33|4[1349]|55|77|88|9[13-9])\\d{6}"],
					["800\\d{5}"],
					["90[016]\\d{5}"],
					0,
					0,
					0,
					0,
					["60(?:2[78]|3[5-9]|4[02-9]|5[0-46-9]|[6-8]\\d|9[0-2])\\d{4}"],
					["80[1-4]\\d{5}"]
				]
			],
			"AO": [
				"244",
				"00",
				"[29]\\d{8}",
				[9],
				[[
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[29]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["2\\d(?:[0134][25-9]|[25-9]\\d)\\d{5}"], ["9[1-79]\\d{7}"]]
			],
			"AR": [
				"54",
				"00",
				"(?:11|[89]\\d\\d)\\d{8}|[2368]\\d{9}",
				[10, 11],
				[
					[
						"(\\d{4})(\\d{2})(\\d{4})",
						"$1 $2-$3",
						[
							"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])",
							"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)",
							"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]",
							"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"
						],
						"0$1",
						1
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2-$3",
						["1"],
						"0$1",
						1
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						["[68]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2-$3",
						["[23]"],
						"0$1",
						1
					],
					[
						"(\\d)(\\d{4})(\\d{2})(\\d{4})",
						"$2 15-$3-$4",
						[
							"9(?:2[2-469]|3[3-578])",
							"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))",
							"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)",
							"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]",
							"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"
						],
						"0$1",
						0,
						"$1 $2 $3-$4"
					],
					[
						"(\\d)(\\d{2})(\\d{4})(\\d{4})",
						"$2 15-$3-$4",
						["91"],
						"0$1",
						0,
						"$1 $2 $3-$4"
					],
					[
						"(\\d{3})(\\d{3})(\\d{5})",
						"$1-$2-$3",
						["8"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{3})(\\d{4})",
						"$2 15-$3-$4",
						["9"],
						"0$1",
						0,
						"$1 $2 $3-$4"
					]
				],
				"0",
				0,
				"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?",
				"9$1",
				0,
				0,
				[
					["3(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\d{5}|(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|47[35]|9(?:[07]2|2[26]|34|46))|3327)[45]\\d{5}|(?:2(?:657|9(?:54|66))|3(?:48[27]|7(?:55|77)|8(?:65|78)))[2-8]\\d{5}|(?:2(?:284|3(?:02|23)|477|622|920)|3(?:4(?:46|89|92)|541))[2-7]\\d{5}|(?:(?:11[1-8]|670)\\d|2(?:2(?:0[45]|1[2-6]|3[3-6])|3(?:[06]4|7[45])|494|6(?:04|1[2-8]|[36][45]|4[3-6])|80[45]|9(?:[17][4-6]|[48][45]|9[3-6]))|3(?:364|4(?:1[2-8]|[25][4-6]|3[3-6]|84)|5(?:1[2-9]|[38][4-6])|6(?:2[45]|44)|7[069][45]|8(?:0[45]|1[2-7]|3[4-6]|5[3-6]|7[2-6]|8[3-68])))\\d{6}|(?:2(?:2(?:62|81)|320|9(?:42|83))|3(?:329|4(?:62|7[16])|5(?:43|64)|7(?:18|5[17])))[2-6]\\d{5}|2(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\d{5}|(?:2(?:257|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|64)|5(?:25|37|4[47]|71)|7(?:35|72)|825))[3-6]\\d{5}|(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[035-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[14]|4[13]|5[468]|7[3-5]|8[26])|8(?:2[67]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\d{5}", [10]],
					["93(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\d{5}|9(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|47[35]|9(?:[07]2|2[26]|34|46))|3327)[45]\\d{5}|9(?:2(?:657|9(?:54|66))|3(?:48[27]|7(?:55|77)|8(?:65|78)))[2-8]\\d{5}|9(?:2(?:284|3(?:02|23)|477|622|920)|3(?:4(?:46|89|92)|541))[2-7]\\d{5}|(?:675\\d|9(?:11[1-8]\\d|2(?:2(?:0[45]|1[2-6]|3[3-6])|3(?:[06]4|7[45])|494|6(?:04|1[2-8]|[36][45]|4[3-6])|80[45]|9(?:[17][4-6]|[48][45]|9[3-6]))|3(?:364|4(?:1[2-8]|[25][4-6]|3[3-6]|84)|5(?:1[2-9]|[38][4-6])|6(?:2[45]|44)|7[069][45]|8(?:0[45]|1[2-7]|3[4-6]|5[3-6]|7[2-6]|8[3-68]))))\\d{6}|9(?:2(?:2(?:62|81)|320|9(?:42|83))|3(?:329|4(?:62|7[16])|5(?:43|64)|7(?:18|5[17])))[2-6]\\d{5}|92(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\d{5}|9(?:2(?:257|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|64)|5(?:25|37|4[47]|71)|7(?:35|72)|825))[3-6]\\d{5}|9(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[035-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[14]|4[13]|5[468]|7[3-5]|8[26])|8(?:2[67]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\d{5}"],
					["800\\d{7,8}"],
					["60[04579]\\d{7}", [10]],
					0,
					0,
					["810\\d{7}", [10]]
				]
			],
			"AS": [
				"1",
				"011",
				"(?:[58]\\d\\d|684|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([267]\\d{6})$|1",
				"684$1",
				0,
				"684",
				[
					["6846(?:22|33|44|55|77|88|9[19])\\d{4}"],
					["684(?:2(?:48|5[2468]|7[26])|7(?:3[13]|70|82))\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"AT": [
				"43",
				"00",
				"1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}",
				[
					4,
					5,
					6,
					7,
					8,
					9,
					10,
					11,
					12,
					13
				],
				[
					[
						"(\\d)(\\d{3,12})",
						"$1 $2",
						["1(?:11|[2-9])"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})",
						"$1 $2",
						["517"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3,5})",
						"$1 $2",
						["5[079]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3,10})",
						"$1 $2",
						["(?:31|4)6|51|6(?:48|5[0-3579]|[6-9])|7(?:20|32|8)|[89]", "(?:31|4)6|51|6(?:485|5[0-3579]|[6-9])|7(?:20|32|8)|[89]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{3,9})",
						"$1 $2",
						["[2-467]|5[2-6]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["5"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4})(\\d{4,7})",
						"$1 $2 $3",
						["5"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["1(?:11\\d|[2-9]\\d{3,11})|(?:316|463)\\d{3,10}|648[34]\\d{3,9}|(?:51|66|73)2\\d{3,10}|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-578]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|4(?:2[1-8]|35|7[1368]|8[2457])|5(?:2[1-8]|3[357]|4[147]|5[12578]|6[37])|6(?:13|2[1-47]|4[135-7]|5[468])|7(?:2[1-8]|35|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\d{4,10}"],
					["6(?:485|(?:5[0-3579]|6[013-9]|[7-9]\\d)\\d)\\d{3,9}", [
						7,
						8,
						9,
						10,
						11,
						12,
						13
					]],
					["800\\d{6,10}", [
						9,
						10,
						11,
						12,
						13
					]],
					["(?:8[69][2-68]|9(?:0[01]|3[019]))\\d{6,10}", [
						9,
						10,
						11,
						12,
						13
					]],
					0,
					0,
					0,
					0,
					["5(?:0[1-9]|17|[79]\\d)\\d{2,10}|7[28]0\\d{6,10}", [
						5,
						6,
						7,
						8,
						9,
						10,
						11,
						12,
						13
					]],
					["8(?:10|2[018])\\d{6,10}|828\\d{5}", [
						8,
						9,
						10,
						11,
						12,
						13
					]]
				]
			],
			"AU": [
				"61",
				"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011",
				"1(?:[0-79]\\d{7}(?:\\d(?:\\d{2})?)?|8[0-24-9]\\d{7})|[2-478]\\d{8}|1\\d{4,7}",
				[
					5,
					6,
					7,
					8,
					9,
					10,
					12
				],
				[
					[
						"(\\d{2})(\\d{3,4})",
						"$1 $2",
						["16"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2,4})",
						"$1 $2 $3",
						["16"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["14|4"],
						"0$1"
					],
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["[2378]"],
						"(0$1)"
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["1(?:30|[89])"]
					]
				],
				"0",
				0,
				"(183[12])|0",
				0,
				0,
				0,
				[
					["(?:(?:2(?:(?:[0-26-9]\\d|3[0-8]|5[0135-9])\\d|4(?:[02-9]\\d|10))|3(?:(?:[0-3589]\\d|6[1-9]|7[0-35-9])\\d|4(?:[0-578]\\d|90))|7(?:[013-57-9]\\d|2[0-8])\\d)\\d\\d|8(?:51(?:0(?:0[03-9]|[12479]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\d|7[89]|9[0-4])|[34]\\d\\d)|(?:6[0-8]|[78]\\d)\\d{3}|9(?:[02-9]\\d{3}|1(?:(?:[0-58]\\d|6[0135-9])\\d|7(?:0[0-24-9]|[1-9]\\d)|9(?:[0-46-9]\\d|5[0-79])))))\\d{3}", [9]],
					["4(?:79[01]|83[0-389]|94[0-478])\\d{5}|4(?:[0-36]\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}", [9]],
					["180(?:0\\d{3}|2)\\d{3}", [7, 10]],
					["190[0-26]\\d{6}", [10]],
					0,
					0,
					0,
					["163\\d{2,6}", [
						5,
						6,
						7,
						8,
						9
					]],
					["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]],
					["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", [
						6,
						8,
						10,
						12
					]]
				],
				"0011"
			],
			"AW": [
				"297",
				"00",
				"(?:[25-79]\\d\\d|800)\\d{4}",
				[7],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[25-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["5(?:2\\d|8[1-9])\\d{4}"],
					["(?:290|5[69]\\d|6(?:[03]0|22|4[0-2]|[69]\\d)|7(?:[34]\\d|7[07])|9(?:6[45]|9[4-8]))\\d{4}"],
					["800\\d{4}"],
					["900\\d{4}"],
					0,
					0,
					0,
					0,
					["(?:28\\d|501)\\d{4}"]
				]
			],
			"AX": [
				"358",
				"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))",
				"2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}",
				[
					5,
					6,
					7,
					8,
					9,
					10,
					11,
					12
				],
				0,
				"0",
				0,
				0,
				0,
				0,
				"18",
				[
					["18[1-8]\\d{3,6}", [
						6,
						7,
						8,
						9
					]],
					["4946\\d{2,6}|(?:4[0-8]|50)\\d{4,8}", [
						6,
						7,
						8,
						9,
						10
					]],
					["800\\d{4,6}", [
						7,
						8,
						9
					]],
					["[67]00\\d{5,6}", [8, 9]],
					0,
					0,
					["20\\d{4,8}|60[12]\\d{5,6}|7(?:099\\d{4,5}|5[03-9]\\d{3,7})|20[2-59]\\d\\d|(?:606|7(?:0[78]|1|3\\d))\\d{7}|(?:10|29|3[09]|70[1-5]\\d)\\d{4,8}"]
				],
				"00"
			],
			"AZ": [
				"994",
				"00",
				"365\\d{6}|(?:[124579]\\d|60|88)\\d{7}",
				[9],
				[
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["90"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"1[28]|2|365|46",
							"1[28]|2|365[45]|46",
							"1[28]|2|365(?:4|5[02])|46"
						],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[13-9]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2[12]428|3655[02])\\d{4}|(?:2(?:22[0-79]|63[0-28])|3654)\\d{5}|(?:(?:1[28]|46)\\d|2(?:[014-6]2|[23]3))\\d{6}"],
					["36554\\d{4}|(?:[16]0|4[04]|5[015]|7[07]|99)\\d{7}"],
					["88\\d{7}"],
					["900200\\d{3}"]
				]
			],
			"BA": [
				"387",
				"00",
				"6\\d{8}|(?:[35689]\\d|49|70)\\d{6}",
				[8, 9],
				[
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["6[1-3]|[7-9]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2-$3",
						["[3-5]|6[56]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3 $4",
						["6"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:3(?:[05-79][2-9]|1[4579]|[23][24-9]|4[2-4689]|8[2457-9])|49[2-579]|5(?:0[2-49]|[13][2-9]|[268][2-4679]|4[4689]|5[2-79]|7[2-69]|9[2-4689]))\\d{5}", [8]],
					["6040\\d{5}|6(?:03|[1-356]|44|7\\d)\\d{6}"],
					["8[08]\\d{6}", [8]],
					["9[0246]\\d{6}", [8]],
					0,
					0,
					["703[235]0\\d{3}|70(?:2[0-5]|3[0146]|[56]0)\\d{4}", [8]],
					0,
					0,
					["8[12]\\d{6}", [8]]
				]
			],
			"BB": [
				"1",
				"011",
				"(?:246|[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-9]\\d{6})$|1",
				"246$1",
				0,
				"246",
				[
					["246521[0369]\\d{3}|246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\d|3[2-9])|5(?:20|[34]\\d|54|7[1-3])|6(?:2\\d|38)|7[35]7|9(?:1[89]|63))\\d{4}"],
					["246(?:(?:2(?:[3568]\\d|4[0-57-9])|3(?:5[2-9]|6[0-6])|4(?:46|5\\d)|69[5-7]|8(?:[2-5]\\d|83))\\d|52(?:1[147]|20))\\d{3}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["(?:246976|900[2-9]\\d\\d)\\d{4}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"],
					0,
					["246(?:292|367|4(?:1[7-9]|3[01]|4[47-9]|67)|7(?:1[2-9]|2\\d|3[016]|53))\\d{4}"],
					0,
					["24631\\d{5}"]
				]
			],
			"BD": [
				"880",
				"00",
				"[1-469]\\d{9}|8[0-79]\\d{7,8}|[2-79]\\d{8}|[2-9]\\d{7}|[3-9]\\d{6}|[57-9]\\d{5}",
				[
					6,
					7,
					8,
					9,
					10
				],
				[
					[
						"(\\d{2})(\\d{4,6})",
						"$1-$2",
						["31[5-8]|[459]1"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3,7})",
						"$1-$2",
						["3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{3,6})",
						"$1-$2",
						["[13-9]|2[23]"],
						"0$1"
					],
					[
						"(\\d)(\\d{7,8})",
						"$1-$2",
						["2"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:4(?:31\\d\\d|423)|5222)\\d{3}(?:\\d{2})?|8332[6-9]\\d\\d|(?:3(?:03[56]|224)|4(?:22[25]|653))\\d{3,4}|(?:3(?:42[47]|529|823)|4(?:027|525|65(?:28|8))|562|6257|7(?:1(?:5[3-5]|6[12]|7[156]|89)|22[589]56|32|42675|52(?:[25689](?:56|8)|[347]8)|71(?:6[1267]|75|89)|92374)|82(?:2[59]|32)56|9(?:03[23]56|23(?:256|373)|31|5(?:1|2[4589]56)))\\d{3}|(?:3(?:02[348]|22[35]|324|422)|4(?:22[67]|32[236-9]|6(?:2[46]|5[57])|953)|5526|6(?:024|6655)|81)\\d{4,5}|(?:2(?:7(?:1[0-267]|2[0-289]|3[0-29]|4[01]|5[1-3]|6[013]|7[0178]|91)|8(?:0[125]|1[1-6]|2[0157-9]|3[1-69]|41|6[1-35]|7[1-5]|8[1-8]|9[0-6])|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[0136-9]|7[0-7]|8[014-9]))|3(?:0(?:2[025-79]|3[2-4])|181|22[12]|32[2356]|824)|4(?:02[09]|22[348]|32[045]|523|6(?:27|54))|666(?:22|53)|7(?:22[57-9]|42[56]|82[35])8|8(?:0[124-9]|2(?:181|2[02-4679]8)|4[12]|[5-7]2)|9(?:[04]2|2(?:2|328)|81))\\d{4}|(?:2(?:[23]\\d|[45])\\d\\d|3(?:1(?:2[5-7]|[5-7])|425|822)|4(?:033|1\\d|[257]1|332|4(?:2[246]|5[25])|6(?:2[35]|56|62)|8(?:23|54)|92[2-5])|5(?:02[03489]|22[457]|32[35-79]|42[46]|6(?:[18]|53)|724|826)|6(?:023|2(?:2[2-5]|5[3-5]|8)|32[3478]|42[34]|52[47]|6(?:[18]|6(?:2[34]|5[24]))|[78]2[2-5]|92[2-6])|7(?:02|21\\d|[3-589]1|6[12]|72[24])|8(?:217|3[12]|[5-7]1)|9[24]1)\\d{5}|(?:(?:3[2-8]|5[2-57-9]|6[03-589])1|4[4689][18])\\d{5}|[59]1\\d{5}"],
					["(?:1[13-9]\\d|644)\\d{7}|(?:3[78]|44|66)[02-9]\\d{7}", [10]],
					["80[03]\\d{7}", [10]],
					0,
					0,
					0,
					0,
					0,
					["96(?:0[469]|1[0-47]|3[389]|43|6[69]|7[78])\\d{6}", [10]]
				]
			],
			"BE": [
				"32",
				"00",
				"4\\d{8}|[1-9]\\d{7}",
				[8, 9],
				[
					[
						"(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["(?:80|9)0"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[239]|4[23]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[15-8]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["4"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["80[2-8]\\d{5}|(?:1[0-69]|[23][2-8]|4[23]|5\\d|6[013-57-9]|71|8[1-79]|9[2-4])\\d{6}", [8]],
					["4[5-9]\\d{7}", [9]],
					["800[1-9]\\d{4}", [8]],
					["(?:70(?:2[0-57]|3[04-7]|44|6[04-69]|7[0579])|90\\d\\d)\\d{4}", [8]],
					0,
					0,
					["78(?:0[578]|1[014-8]|2[25]|3[15-8]|48|5[05]|60|7[06-8]|9\\d)\\d{4}", [8]],
					0,
					0,
					["7879\\d{4}", [8]]
				]
			],
			"BF": [
				"226",
				"00",
				"[025-7]\\d{7}",
				[8],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[025-7]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["2(?:0(?:49|5[23]|6[5-7]|9[016-9])|4(?:4[569]|5[4-6]|6[5-7]|7[0179])|5(?:[34]\\d|50|6[5-7]))\\d{4}"], ["(?:0[1-7]|5[0-8]|[67]\\d)\\d{6}"]]
			],
			"BG": [
				"359",
				"00",
				"00800\\d{7}|[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}",
				[
					6,
					7,
					8,
					9,
					12
				],
				[
					[
						"(\\d)(\\d)(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["2"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						["43[1-6]|70[1-9]"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["2"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2,3})",
						"$1 $2 $3",
						["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["(?:70|8)0"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{2})",
						"$1 $2 $3",
						["43[1-7]|7"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[48]|9[08]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["9"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["2\\d{5,7}|(?:43[1-6]|70[1-9])\\d{4,5}|(?:[36]\\d|4[124-7]|[57][1-9]|8[1-6]|9[1-7])\\d{5,6}", [
						6,
						7,
						8
					]],
					["(?:43[07-9]|99[69]\\d)\\d{5}|(?:8[7-9]|98)\\d{7}", [8, 9]],
					["(?:00800\\d\\d|800)\\d{5}", [8, 12]],
					["90\\d{6}", [8]],
					0,
					0,
					0,
					0,
					0,
					["700\\d{5}", [8]]
				]
			],
			"BH": [
				"973",
				"00",
				"[136-9]\\d{7}",
				[8],
				[[
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["[13679]|8[02-4679]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1(?:3[1356]|6[0156]|7\\d)\\d|6(?:1[16]\\d|500|6(?:0\\d|3[12]|44|55|7[7-9]|88)|9[69][69])|7(?:[07]\\d\\d|1(?:11|78)))\\d{4}"],
					["(?:3(?:[0-79]\\d|8[0-57-9])\\d|6(?:3(?:00|33|6[16])|441|6(?:3[03-9]|[69]\\d|7[0-689])))\\d{4}"],
					["8[02369]\\d{6}"],
					["(?:87|9[0-8])\\d{6}"],
					0,
					0,
					0,
					0,
					0,
					["84\\d{6}"]
				]
			],
			"BI": [
				"257",
				"00",
				"(?:[267]\\d|31)\\d{6}",
				[8],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[2367]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["(?:22|31)\\d{6}"], ["(?:29|6[124-9]|7[125-9])\\d{6}"]]
			],
			"BJ": [
				"229",
				"00",
				"(?:01\\d|[24-689])\\d{7}",
				[8, 10],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[24-689]"]
				], [
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4 $5",
					["0"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2090\\d{4}|(?:012\\d\\d|2(?:02|1[037]|2[45]|3[68]|4\\d))\\d{5}"],
					["(?:01(?:2[5-9]|[4-69]\\d)|4[0-8]|[56]\\d|9[013-9])\\d{6}"],
					0,
					0,
					0,
					0,
					["81\\d{6}", [8]],
					0,
					["857[58]\\d{4}", [8]]
				]
			],
			"BL": [
				"590",
				"00",
				"(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}",
				[9],
				0,
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["590(?:2[7-9]|3[3-7]|5[12]|87)\\d{4}"],
					["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],
					["80[0-5]\\d{6}"],
					0,
					0,
					0,
					0,
					0,
					["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]
				]
			],
			"BM": [
				"1",
				"011",
				"(?:441|[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-9]\\d{6})$|1",
				"441$1",
				0,
				"441",
				[
					["441(?:[46]\\d\\d|5(?:4\\d|60|89))\\d{4}"],
					["441(?:[2378]\\d|5[0-39]|9[02])\\d{5}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"BN": [
				"673",
				"00",
				"[2-578]\\d{6}",
				[7],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[2-578]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["22[0-7]\\d{4}|(?:2[013-9]|[34]\\d|5[0-25-9])\\d{5}"],
					["(?:22[89]|[78]\\d\\d)\\d{4}"],
					0,
					0,
					0,
					0,
					0,
					0,
					["5[34]\\d{5}"]
				]
			],
			"BO": [
				"591",
				"00(?:1\\d)?",
				"8001\\d{5}|(?:[2-467]\\d|50)\\d{6}",
				[8, 9],
				[
					[
						"(\\d)(\\d{7})",
						"$1 $2",
						["[235]|4[46]"]
					],
					[
						"(\\d{8})",
						"$1",
						["[67]"]
					],
					[
						"(\\d{3})(\\d{2})(\\d{4})",
						"$1 $2 $3",
						["8"]
					]
				],
				"0",
				0,
				"0(1\\d)?",
				0,
				0,
				0,
				[
					["(?:2(?:2\\d\\d|5(?:11|[258]\\d|9[67])|6(?:12|2\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\d\\d|4(?:6\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:[27]\\d|3[2-4]|4[248]|5[24]|6[2-6]))|4(?:4\\d\\d|6(?:11|[24689]\\d|72)))\\d{4}", [8]],
					["[67]\\d{7}", [8]],
					["8001[07]\\d{4}", [9]],
					0,
					0,
					0,
					0,
					0,
					["50\\d{6}", [8]]
				]
			],
			"BQ": [
				"599",
				"00",
				"(?:[34]1|7\\d)\\d{5}",
				[7],
				0,
				0,
				0,
				0,
				0,
				0,
				"[347]",
				[["(?:318[023]|41(?:6[023]|70)|7(?:1[578]|2[05]|50)\\d)\\d{3}"], ["(?:31(?:8[14-8]|9[14578])|416[14-9]|7(?:0[01]|7[07]|8\\d|9[056])\\d)\\d{3}"]]
			],
			"BR": [
				"55",
				"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)",
				"[1-467]\\d{9,10}|55[0-46-9]\\d{8}|[34]\\d{7}|55\\d{7,8}|(?:5[0-46-9]|[89]\\d)\\d{7,9}",
				[
					8,
					9,
					10,
					11
				],
				[
					[
						"(\\d{4})(\\d{4})",
						"$1-$2",
						["300|4(?:0[02]|37|86)", "300|4(?:0(?:0|20)|370|864)"]
					],
					[
						"(\\d{3})(\\d{2,3})(\\d{4})",
						"$1 $2 $3",
						["(?:[358]|90)0"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2-$3",
						["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"],
						"($1)"
					],
					[
						"(\\d{2})(\\d{5})(\\d{4})",
						"$1 $2-$3",
						["[16][1-9]|[2-57-9]"],
						"($1)"
					]
				],
				"0",
				0,
				"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?",
				"$2",
				0,
				0,
				[
					["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-5]\\d{7}", [10]],
					["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])(?:7|9\\d)\\d{7}", [10, 11]],
					["800\\d{6,7}", [9, 10]],
					["[59]00\\d{6,7}", [9, 10]],
					0,
					0,
					0,
					0,
					0,
					["(?:30[03]\\d{3}|4(?:0(?:0\\d|20)|370|864))\\d{4}|300\\d{5}", [8, 10]]
				]
			],
			"BS": [
				"1",
				"011",
				"(?:242|[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([3-8]\\d{6})$|1",
				"242$1",
				0,
				"242",
				[
					["242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-5]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\d{4}"],
					["242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\d|3[0-4]|[89]9))\\d{4}"],
					["242300\\d{4}|8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"],
					0,
					["242225\\d{4}"]
				]
			],
			"BT": [
				"975",
				"00",
				"[17]\\d{7}|[2-8]\\d{6}",
				[7, 8],
				[[
					"(\\d)(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[2-68]|7[246]"]
				], [
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["1[67]|7"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\d{5}", [7]], ["(?:1[67]|77)\\d{6}", [8]]]
			],
			"BW": [
				"267",
				"00",
				"(?:0800|(?:[37]|800)\\d)\\d{6}|(?:[2-6]\\d|90)\\d{5}",
				[
					7,
					8,
					10
				],
				[
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						["90"]
					],
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						["[24-6]|3[15-9]"]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[37]"]
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["0"]
					],
					[
						"(\\d{3})(\\d{4})(\\d{3})",
						"$1 $2 $3",
						["8"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0-35-9]|55|[69]\\d|7[013]|81)|4(?:6[03]|7[1267]|9[0-5])|5(?:3[03489]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[013467]))\\d{4}", [7]],
					["(?:321|7[1-8]\\d)\\d{5}", [8]],
					["(?:0800|800\\d)\\d{6}", [10]],
					["90\\d{5}", [7]],
					0,
					0,
					0,
					0,
					["79(?:1(?:[0-2]\\d|3[0-8])|2[0-7]\\d)\\d{3}", [8]]
				]
			],
			"BY": [
				"375",
				"810",
				"(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}",
				[
					6,
					7,
					8,
					9,
					10,
					11
				],
				[
					[
						"(\\d{3})(\\d{3})",
						"$1 $2",
						["800"],
						"8 $1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2,4})",
						"$1 $2 $3",
						["800"],
						"8 $1"
					],
					[
						"(\\d{4})(\\d{2})(\\d{3})",
						"$1 $2-$3",
						["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])", "1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"],
						"8 0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2-$3-$4",
						["1(?:[56]|7[467])|2[1-3]"],
						"8 0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2-$3-$4",
						["[1-4]"],
						"8 0$1"
					],
					[
						"(\\d{3})(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						["[89]"],
						"8 $1"
					]
				],
				"8",
				0,
				"0|80?",
				0,
				0,
				0,
				[
					["(?:1(?:5(?:1[1-5]|[24]\\d|6[2-4]|9[1-7])|6(?:[235]\\d|4[1-7])|7\\d\\d)|2(?:1(?:[246]\\d|3[0-35-9]|5[1-9])|2(?:[235]\\d|4[0-8])|3(?:[26]\\d|3[02-79]|4[024-7]|5[03-7])))\\d{5}", [9]],
					["(?:2(?:5[5-79]|9[1-9])|(?:33|44)\\d)\\d{6}", [9]],
					["800\\d{3,7}|8(?:0[13]|20\\d)\\d{7}"],
					["(?:810|902)\\d{7}", [10]],
					0,
					0,
					0,
					0,
					["249\\d{6}", [9]]
				],
				"8~10"
			],
			"BZ": [
				"501",
				"00",
				"(?:0800\\d|[2-8])\\d{6}",
				[7, 11],
				[[
					"(\\d{3})(\\d{4})",
					"$1-$2",
					["[2-8]"]
				], [
					"(\\d)(\\d{3})(\\d{4})(\\d{3})",
					"$1-$2-$3-$4",
					["0"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:[02]\\d|36|[68]0)|[3-58](?:[02]\\d|[68]0)|7(?:[02]\\d|32|[68]0))\\d{4}", [7]],
					["6[0-35-7]\\d{5}", [7]],
					["0800\\d{7}", [11]]
				]
			],
			"CA": [
				"1",
				"011",
				"[2-9]\\d{9}|3\\d{6}",
				[7, 10],
				0,
				"1",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:04|[23]6|[48]9|5[07]|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|7[39])|9(?:0[25]|42))[2-9]\\d{6}", [10]],
					["", [10]],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", [10]],
					["900[2-9]\\d{6}", [10]],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|(?:5(?:2[125-9]|33|44|66|77|88)|6(?:22|33))[2-9]\\d{6}", [10]],
					0,
					["310\\d{4}", [7]],
					0,
					["600[2-9]\\d{6}", [10]]
				]
			],
			"CC": [
				"61",
				"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011",
				"1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",
				[
					6,
					7,
					8,
					9,
					10,
					12
				],
				0,
				"0",
				0,
				"([59]\\d{7})$|0",
				"8$1",
				0,
				0,
				[
					["8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}", [9]],
					["4(?:79[01]|83[0-389]|94[0-478])\\d{5}|4(?:[0-36]\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}", [9]],
					["180(?:0\\d{3}|2)\\d{3}", [7, 10]],
					["190[0-26]\\d{6}", [10]],
					0,
					0,
					0,
					0,
					["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]],
					["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", [
						6,
						8,
						10,
						12
					]]
				],
				"0011"
			],
			"CD": [
				"243",
				"00",
				"(?:(?:[189]|5\\d)\\d|2)\\d{7}|[1-68]\\d{6}",
				[
					7,
					8,
					9,
					10
				],
				[
					[
						"(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["88"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						["[1-6]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{2})(\\d{4})",
						"$1 $2 $3",
						["2"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["1"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[89]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["5"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["(?:(?:12|573)\\d\\d|276)\\d{5}|[1-6]\\d{6}"], ["88\\d{5}|(?:8[0-69]|9[017-9])\\d{7}", [7, 9]]]
			],
			"CF": [
				"236",
				"00",
				"(?:[27]\\d{3}|8776)\\d{4}",
				[8],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[278]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2[12]\\d{6}"],
					["7[024-7]\\d{6}"],
					0,
					["8776\\d{4}"]
				]
			],
			"CG": [
				"242",
				"00",
				"222\\d{6}|(?:0\\d|80)\\d{7}",
				[9],
				[[
					"(\\d)(\\d{4})(\\d{4})",
					"$1 $2 $3",
					["8"]
				], [
					"(\\d{2})(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["[02]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["222[1-589]\\d{5}"],
					["026(?:1[0-5]|6[6-9])\\d{4}|0(?:[14-6]\\d\\d|2(?:40|5[5-8]|6[07-9]))\\d{5}"],
					0,
					["80[0-2]\\d{6}"]
				]
			],
			"CH": [
				"41",
				"00",
				"8\\d{11}|[2-9]\\d{8}",
				[9, 12],
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["8[047]|90"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[2-79]|81"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4 $5",
						["8"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\d{7}", [9]],
					["(?:6[89]|7[235-9])\\d{7}", [9]],
					["800\\d{6}", [9]],
					["90[016]\\d{6}", [9]],
					["878\\d{6}", [9]],
					["860\\d{9}", [12]],
					["5[18]\\d{7}", [9]],
					["74[0248]\\d{6}", [9]],
					0,
					["84[0248]\\d{6}", [9]]
				]
			],
			"CI": [
				"225",
				"00",
				"[02]\\d{9}",
				[10],
				[[
					"(\\d{2})(\\d{2})(\\d)(\\d{5})",
					"$1 $2 $3 $4",
					["2"]
				], [
					"(\\d{2})(\\d{2})(\\d{2})(\\d{4})",
					"$1 $2 $3 $4",
					["0"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["2(?:[15]\\d{3}|7(?:2(?:0[23]|1[2357]|2[245]|3[45]|4[3-5])|3(?:06|1[69]|[2-6]7)))\\d{5}"], ["0[157]\\d{8}"]]
			],
			"CK": [
				"682",
				"00",
				"[2-578]\\d{4}",
				[5],
				[[
					"(\\d{2})(\\d{3})",
					"$1 $2",
					["[2-578]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["(?:2\\d|3[13-7]|4[1-5])\\d{3}"], ["[578]\\d{4}"]]
			],
			"CL": [
				"56",
				"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0",
				"12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}",
				[
					9,
					10,
					11
				],
				[
					[
						"(\\d{5})(\\d{4})",
						"$1 $2",
						["219", "2196"],
						"($1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["44"]
					],
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["2[1-36]"],
						"($1)"
					],
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["9[2-9]"]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"],
						"($1)"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["60|8"]
					],
					[
						"(\\d{4})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["1"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3 $4",
						["60"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:1982[0-6]|3314[05-9])\\d{3}|(?:2(?:1(?:160|962)|3(?:2\\d\\d|3(?:[03467]\\d|1[0-35-9]|2[1-9]|5[0-24-9]|8[0-3])|600)|646[59])|80[1-9]\\d\\d|9(?:3(?:[0-57-9]\\d\\d|6(?:0[02-9]|[1-9]\\d))|6(?:[0-8]\\d\\d|9(?:[02-79]\\d|1[05-9]))|7[1-9]\\d\\d|9(?:[03-9]\\d\\d|1(?:[0235-9]\\d|4[0-24-9])|2(?:[0-79]\\d|8[0-46-9]))))\\d{4}|(?:22|3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8[1-9]|9[2458])\\d{7}", [9]],
					["", [9]],
					["(?:123|8)00\\d{6}", [9, 11]],
					0,
					0,
					0,
					0,
					0,
					["44\\d{7}", [9]],
					["600\\d{7,8}", [10, 11]]
				]
			],
			"CM": [
				"237",
				"00",
				"[26]\\d{8}|88\\d{6,7}",
				[8, 9],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["88"]
				], [
					"(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4 $5",
					["[26]|88"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:22|33)\\d{6}", [9]],
					["(?:24[23]|6(?:[25-9]\\d|40))\\d{6}", [9]],
					["88\\d{6,7}"]
				]
			],
			"CN": [
				"86",
				"00|1(?:[12]\\d|79)\\d\\d00",
				"(?:(?:1[03-689]|2\\d)\\d\\d|6)\\d{8}|1\\d{10}|[126]\\d{6}(?:\\d(?:\\d{2})?)?|86\\d{5,6}|(?:[3-579]\\d|8[0-57-9])\\d{5,9}",
				[
					7,
					8,
					9,
					10,
					11,
					12
				],
				[
					[
						"(\\d{2})(\\d{5,6})",
						"$1 $2",
						[
							"(?:10|2[0-57-9])[19]|3(?:[157]|35|49|9[1-68])|4(?:1[124-9]|2[179]|6[47-9]|7|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:07|1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3|4[13]|5[1-5]|7[0-79]|9[0-35-9])|(?:4[35]|59|85)[1-9]",
							"(?:10|2[0-57-9])(?:1[02]|9[56])|8078|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))1",
							"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|80781|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))12",
							"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|807812|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123",
							"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:078|1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{5,6})",
						"$1 $2",
						[
							"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]",
							"(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]",
							"85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])",
							"85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["(?:4|80)0"]
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"10|2(?:[02-57-9]|1[1-9])",
							"10|2(?:[02-57-9]|1[1-9])",
							"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"
						],
						"0$1",
						1
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"],
						"0$1",
						1
					],
					[
						"(\\d{3})(\\d{7,8})",
						"$1 $2",
						["9"]
					],
					[
						"(\\d{4})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["80"],
						"0$1",
						1
					],
					[
						"(\\d{3})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["[3-578]"],
						"0$1",
						1
					],
					[
						"(\\d{3})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["1[3-9]"]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3 $4",
						["[12]"],
						"0$1",
						1
					]
				],
				"0",
				0,
				"(1(?:[12]\\d|79)\\d\\d)|0",
				0,
				0,
				0,
				[
					["(?:10(?:[02-79]\\d\\d|[18](?:0[1-9]|[1-9]\\d))|2(?:[02-57-9]\\d{3}|1(?:[18](?:0[1-9]|[1-9]\\d)|[2-79]\\d\\d))|(?:41[03]|8078|9(?:78|94))\\d\\d)\\d{5}|(?:10|2[0-57-9])(?:1(?:00|23)\\d\\d|95\\d{3,4})|(?:41[03]|9(?:78|94))(?:100\\d\\d|95\\d{3,4})|8078123|(?:43[35]|754|851)\\d{7,8}|(?:43[35]|754|851)(?:1(?:00\\d|23)\\d|95\\d{3,4})|(?:3(?:11|7[179])|4(?:[15]1|3[12])|5(?:1\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[57]|6[09])|8(?:71|98))(?:[02-8]\\d{7}|1(?:0(?:0\\d\\d(?:\\d{3})?|[1-9]\\d{5})|[13-9]\\d{6}|2(?:[0-24-9]\\d{5}|3\\d(?:\\d{4})?))|9(?:[0-46-9]\\d{6}|5\\d{3}(?:\\d(?:\\d{2})?)?))|(?:3(?:1[02-9]|35|49|5\\d|7[02-68]|9[1-68])|4(?:1[24-9]|2[179]|3[46-9]|5[2-9]|6[47-9]|7\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\d|2[248]|3[04-9]|4[3-6]|5[0-3689]|6[2368]|9[02-9])|8(?:1[236-8]|2[5-7]|3\\d|5[2-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))(?:[02-8]\\d{6}|1(?:0(?:0\\d\\d(?:\\d{2})?|[1-9]\\d{4})|[13-9]\\d{5}|2(?:[0-24-9]\\d{4}|3\\d(?:\\d{3})?))|9(?:[0-46-9]\\d{5}|5\\d{3,5}))", [
						7,
						8,
						9,
						10,
						11
					]],
					["1740[0-5]\\d{6}|1(?:[38]\\d|4[57]|[59][0-35-9]|6[25-7]|7[0-35-8])\\d{8}", [11]],
					["(?:(?:10|21)8|8)00\\d{7}", [10, 12]],
					["16[08]\\d{5}", [8]],
					0,
					0,
					0,
					0,
					0,
					["10(?:10\\d{4}|96\\d{3,4})|400\\d{7}|950\\d{7,8}|(?:2[0-57-9]|3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))96\\d{3,4}", [
						7,
						8,
						9,
						10,
						11
					]]
				],
				"00"
			],
			"CO": [
				"57",
				"00(?:4(?:[14]4|56)|[579])",
				"(?:46|60\\d\\d)\\d{6}|(?:1\\d|[39])\\d{9}",
				[
					8,
					10,
					11
				],
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						["46"]
					],
					[
						"(\\d{3})(\\d{7})",
						"$1 $2",
						["6|90"],
						"($1)"
					],
					[
						"(\\d{3})(\\d{7})",
						"$1 $2",
						["3[0-357]|9[14]"]
					],
					[
						"(\\d)(\\d{3})(\\d{7})",
						"$1-$2-$3",
						["1"],
						"0$1",
						0,
						"$1 $2 $3"
					]
				],
				"0",
				0,
				"0([3579]|4(?:[14]4|56))?",
				0,
				0,
				0,
				[
					["601055(?:[0-4]\\d|50)\\d\\d|6010(?:[0-4]\\d|5[0-4])\\d{4}|(?:46|60(?:[18][1-9]|[24-7][2-9]))\\d{6}", [8, 10]],
					["333301[0-5]\\d{3}|3333(?:00|2[5-9]|[3-9]\\d)\\d{4}|(?:3(?:(?:0[0-5]|1\\d|5[01]|70)\\d|2(?:[0-3]\\d|4[1-9])|3(?:00|3[0-24-9]))|9(?:101|408))\\d{6}", [10]],
					["1800\\d{7}", [11]],
					["(?:19(?:0[01]|4[78])|901)\\d{7}", [10, 11]]
				]
			],
			"CR": [
				"506",
				"00",
				"(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}",
				[8, 10],
				[[
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["[2-7]|8[3-9]"]
				], [
					"(\\d{3})(\\d{3})(\\d{4})",
					"$1-$2-$3",
					["[89]"]
				]],
				0,
				0,
				"(19(?:0[0-2468]|1[09]|20|66|77|99))",
				0,
				0,
				0,
				[
					["210[7-9]\\d{4}|2(?:[024-7]\\d|1[1-9])\\d{5}", [8]],
					["(?:3005\\d|6500[01])\\d{3}|(?:5[07]|6[0-4]|7[0-3]|8[3-9])\\d{6}", [8]],
					["800\\d{7}", [10]],
					["90[059]\\d{7}", [10]],
					0,
					0,
					0,
					0,
					["(?:210[0-6]|4\\d{3}|5100)\\d{4}", [8]]
				]
			],
			"CU": [
				"53",
				"119",
				"(?:[2-7]|8\\d\\d)\\d{7}|[2-47]\\d{6}|[34]\\d{5}",
				[
					6,
					7,
					8,
					10
				],
				[
					[
						"(\\d{2})(\\d{4,6})",
						"$1 $2",
						["2[1-4]|[34]"],
						"(0$1)"
					],
					[
						"(\\d)(\\d{6,7})",
						"$1 $2",
						["7"],
						"(0$1)"
					],
					[
						"(\\d)(\\d{7})",
						"$1 $2",
						["[56]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{7})",
						"$1 $2",
						["8"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:3[23]|4[89])\\d{4,6}|(?:31|4[36]|8(?:0[25]|78)\\d)\\d{6}|(?:2[1-4]|4[1257]|7\\d)\\d{5,6}"],
					["(?:5\\d|6[2-4])\\d{6}", [8]],
					["800\\d{7}", [10]],
					0,
					0,
					0,
					0,
					0,
					0,
					["807\\d{7}", [10]]
				]
			],
			"CV": [
				"238",
				"0",
				"(?:[2-59]\\d\\d|800)\\d{4}",
				[7],
				[[
					"(\\d{3})(\\d{2})(\\d{2})",
					"$1 $2 $3",
					["[2-589]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\d|7[1-3]|8[1-5])\\d{4}"],
					["(?:36|5[1-389]|9\\d)\\d{5}"],
					["800\\d{4}"],
					0,
					0,
					0,
					0,
					0,
					["(?:3[3-5]|4[356])\\d{5}"]
				]
			],
			"CW": [
				"599",
				"00",
				"(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}",
				[7, 8],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[3467]"]
				], [
					"(\\d)(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["9[4-8]"]
				]],
				0,
				0,
				0,
				0,
				0,
				"[69]",
				[
					["9(?:4(?:3[0-5]|4[14]|6\\d)|50\\d|7(?:2[014]|3[02-9]|4[4-9]|6[357]|77|8[7-9])|8(?:3[39]|[46]\\d|7[01]|8[57-9]))\\d{4}"],
					["953[01]\\d{4}|9(?:5[12467]|6[5-9])\\d{5}"],
					0,
					0,
					0,
					0,
					0,
					["955\\d{5}", [8]],
					0,
					["60[0-2]\\d{4}", [7]]
				]
			],
			"CX": [
				"61",
				"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011",
				"1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",
				[
					6,
					7,
					8,
					9,
					10,
					12
				],
				0,
				"0",
				0,
				"([59]\\d{7})$|0",
				"8$1",
				0,
				0,
				[
					["8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}", [9]],
					["4(?:79[01]|83[0-389]|94[0-478])\\d{5}|4(?:[0-36]\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}", [9]],
					["180(?:0\\d{3}|2)\\d{3}", [7, 10]],
					["190[0-26]\\d{6}", [10]],
					0,
					0,
					0,
					0,
					["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]],
					["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", [
						6,
						8,
						10,
						12
					]]
				],
				"0011"
			],
			"CY": [
				"357",
				"00",
				"(?:[279]\\d|[58]0)\\d{6}",
				[8],
				[[
					"(\\d{2})(\\d{6})",
					"$1 $2",
					["[257-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2[2-6]\\d{6}"],
					["9(?:10|[4-79]\\d)\\d{5}"],
					["800\\d{5}"],
					["90[09]\\d{5}"],
					["700\\d{5}"],
					0,
					["(?:50|77)\\d{6}"],
					0,
					0,
					["80[1-9]\\d{5}"]
				]
			],
			"CZ": [
				"420",
				"00",
				"(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}",
				[
					9,
					10,
					11,
					12
				],
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[2-8]|9[015-7]"]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})(\\d{2})",
						"$1 $2 $3 $4",
						["96"]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["9"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["9"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2\\d|3[1257-9]|4[16-9]|5[13-9])\\d{7}", [9]],
					["(?:60[1-8]\\d|7(?:0(?:[2-5]\\d|60)|19[0-2]|[2379]\\d\\d))\\d{5}", [9]],
					["800\\d{6}", [9]],
					["9(?:0[05689]|76)\\d{6}", [9]],
					["70[01]\\d{6}", [9]],
					["9(?:3\\d{9}|6\\d{7,10})"],
					["9(?:5\\d|7[2-4])\\d{6}", [9]],
					0,
					["9[17]0\\d{6}", [9]],
					["8[134]\\d{7}", [9]]
				]
			],
			"DE": [
				"49",
				"00",
				"[2579]\\d{5,14}|49(?:[34]0|69|8\\d)\\d\\d?|49(?:37|49|60|7[089]|9\\d)\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\d{1,8}|(?:1|[368]\\d|4[0-8])\\d{3,13}|49(?:[015]\\d|2[13]|31|[46][1-8])\\d{1,9}",
				[
					4,
					5,
					6,
					7,
					8,
					9,
					10,
					11,
					12,
					13,
					14,
					15
				],
				[
					[
						"(\\d{2})(\\d{3,13})",
						"$1 $2",
						["3[02]|40|[68]9"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3,12})",
						"$1 $2",
						["2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1", "2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{2,11})",
						"$1 $2",
						["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]", "[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						["138"],
						"0$1"
					],
					[
						"(\\d{5})(\\d{2,10})",
						"$1 $2",
						["3"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{5,11})",
						"$1 $2",
						["181"],
						"0$1"
					],
					[
						"(\\d{3})(\\d)(\\d{4,10})",
						"$1 $2 $3",
						["1(?:3|80)|9"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{7,8})",
						"$1 $2",
						["1[67]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{7,12})",
						"$1 $2",
						["8"],
						"0$1"
					],
					[
						"(\\d{5})(\\d{6})",
						"$1 $2",
						[
							"185",
							"1850",
							"18500"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["7"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{7})",
						"$1 $2",
						["18[68]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{7})",
						"$1 $2",
						["15[1279]"],
						"0$1"
					],
					[
						"(\\d{5})(\\d{6})",
						"$1 $2",
						["15[03568]", "15(?:[0568]|31)"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{8})",
						"$1 $2",
						["18"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{7,8})",
						"$1 $2 $3",
						["1(?:6[023]|7)"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{2})(\\d{7})",
						"$1 $2 $3",
						["15[279]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{8})",
						"$1 $2 $3",
						["15"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["32\\d{9,11}|49[1-6]\\d{10}|322\\d{6}|49[0-7]\\d{3,9}|(?:[34]0|[68]9)\\d{3,13}|(?:2(?:0[1-689]|[1-3569]\\d|4[0-8]|7[1-7]|8[0-7])|3(?:[3569]\\d|4[0-79]|7[1-7]|8[1-8])|4(?:1[02-9]|[2-48]\\d|5[0-6]|6[0-8]|7[0-79])|5(?:0[2-8]|[124-6]\\d|[38][0-8]|[79][0-7])|6(?:0[02-9]|[1-358]\\d|[47][0-8]|6[1-9])|7(?:0[2-8]|1[1-9]|[27][0-7]|3\\d|[4-6][0-8]|8[0-5]|9[013-7])|8(?:0[2-9]|1[0-79]|2\\d|3[0-46-9]|4[0-6]|5[013-9]|6[1-8]|7[0-8]|8[0-24-6])|9(?:0[6-9]|[1-4]\\d|[589][0-7]|6[0-8]|7[0-467]))\\d{3,12}", [
						5,
						6,
						7,
						8,
						9,
						10,
						11,
						12,
						13,
						14,
						15
					]],
					["1(?:(?:5(?:[0-25-9]\\d\\d|310)|7[26]\\d\\d)\\d{6}|6[023]\\d{7,8})|17\\d{8}", [10, 11]],
					["800\\d{7,12}", [
						10,
						11,
						12,
						13,
						14,
						15
					]],
					["(?:137[7-9]|900(?:[135]|9\\d))\\d{6}", [10, 11]],
					["700\\d{8}", [11]],
					["1(?:6(?:013|255|399)|7(?:(?:[015]1|[69]3)3|[2-4]55|[78]99))\\d{7,8}|15(?:(?:[03-68]00|113)\\d|2\\d55|7\\d99|9\\d33)\\d{7}", [12, 13]],
					["18(?:1\\d{5,11}|[2-9]\\d{8})", [
						8,
						9,
						10,
						11,
						12,
						13,
						14
					]],
					["16(?:4\\d{1,10}|[89]\\d{1,11})", [
						4,
						5,
						6,
						7,
						8,
						9,
						10,
						11,
						12,
						13,
						14
					]],
					0,
					["180\\d{5,11}|13(?:7[1-6]\\d\\d|8)\\d{4}", [
						7,
						8,
						9,
						10,
						11,
						12,
						13,
						14
					]]
				]
			],
			"DJ": [
				"253",
				"00",
				"(?:2\\d|77)\\d{6}",
				[8],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[27]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["2(?:1[2-5]|7[45])\\d{5}"], ["77\\d{6}"]]
			],
			"DK": [
				"45",
				"00",
				"[2-9]\\d{7}",
				[8],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[2-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:[0-59][1-9]|[6-8]\\d)|3(?:[0-3][1-9]|4[13]|5[1-58]|6[1347-9]|7\\d|8[1-8]|9[1-79])|4(?:[0-25][1-9]|[34][2-9]|6[13-579]|7[13579]|8[1-47]|9[127])|5(?:[0-36][1-9]|4[146-9]|5[3-57-9]|7[568]|8[1-358]|9[1-69])|6(?:[0135][1-9]|2[1-68]|4[2-8]|6[1689]|[78]\\d|9[15689])|7(?:[0-69][1-9]|7[3-9]|8[147])|8(?:[16-9][1-9]|2[1-58])|9(?:[1-47-9][1-9]|6\\d))\\d{5}"],
					["(?:2[6-8]|37|6[78]|96)\\d{6}|(?:2[0-59]|3[0-689]|[457]\\d|6[0-69]|8[126-9]|9[1-47-9])[1-9]\\d{5}"],
					["80\\d{6}"],
					["90\\d{6}"]
				]
			],
			"DM": [
				"1",
				"011",
				"(?:[58]\\d\\d|767|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-7]\\d{6})$|1",
				"767$1",
				0,
				"767",
				[
					["767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4])\\d{4}"],
					["767(?:2(?:[2-4689]5|7[5-7])|31[5-7]|61[1-8]|70[1-6])\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"DO": [
				"1",
				"011",
				"(?:[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				0,
				0,
				0,
				"8001|8[024]9",
				[
					["8(?:[04]9[2-9]\\d\\d|29(?:2(?:[0-59]\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\d|4[7-9])|[45]\\d\\d|6(?:[0-27-9]\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9])))\\d{4}"],
					["8[024]9[2-9]\\d{6}"],
					["8(?:00(?:14|[2-9]\\d)|(?:33|44|55|66|77|88)[2-9]\\d)\\d{5}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"DZ": [
				"213",
				"00",
				"(?:[1-4]|[5-79]\\d|80)\\d{7}",
				[8, 9],
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[1-4]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["9"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[5-8]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["9619\\d{5}|(?:1\\d|2[013-79]|3[0-8]|4[013-689])\\d{6}"],
					["(?:5(?:4[0-29]|5\\d|6[0-3])|6(?:[569]\\d|7[0-6])|7[7-9]\\d)\\d{6}", [9]],
					["800\\d{6}", [9]],
					["80[3-689]1\\d{5}", [9]],
					0,
					0,
					0,
					0,
					["98[23]\\d{6}", [9]],
					["80[12]1\\d{5}", [9]]
				]
			],
			"EC": [
				"593",
				"00",
				"1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}",
				[
					8,
					9,
					10,
					11
				],
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2-$3",
						["[2-7]"],
						"(0$1)",
						0,
						"$1-$2-$3"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["9"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["1"]
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["[2-7][2-7]\\d{6}", [8]],
					["964[0-2]\\d{5}|9(?:39|[57][89]|6[0-36-9]|[89]\\d)\\d{6}", [9]],
					["1800\\d{7}|1[78]00\\d{6}", [10, 11]],
					0,
					0,
					0,
					0,
					0,
					["[2-7]890\\d{4}", [8]]
				]
			],
			"EE": [
				"372",
				"00",
				"8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}",
				[
					7,
					8,
					10
				],
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88", "[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88"]
					],
					[
						"(\\d{4})(\\d{3,4})",
						"$1 $2",
						["[45]|8(?:00|[1-49])", "[45]|8(?:00[1-9]|[1-49])"]
					],
					[
						"(\\d{2})(\\d{2})(\\d{4})",
						"$1 $2 $3",
						["7"]
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["8"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:3[23589]|4[3-8]|6\\d|7[1-9]|88)\\d{5}", [7]],
					["(?:5\\d{5}|8(?:1(?:0(?:0(?:00|[178]\\d)|[3-9]\\d\\d)|(?:1(?:0[2-6]|1\\d)|(?:2[0-59]|[3-79]\\d)\\d)\\d)|2(?:0(?:0(?:00|4\\d)|(?:19|[2-7]\\d)\\d)|(?:(?:[124-69]\\d|3[5-9])\\d|7(?:[0-79]\\d|8[13-9])|8(?:[2-6]\\d|7[01]))\\d)|[349]\\d{4}))\\d\\d|5(?:(?:[02]\\d|5[0-478])\\d|1(?:[0-8]\\d|95)|6(?:4[0-4]|5[1-589]))\\d{3}", [7, 8]],
					["800(?:(?:0\\d\\d|1)\\d|[2-9])\\d{3}"],
					["(?:40\\d\\d|900)\\d{4}", [7, 8]],
					["70[0-2]\\d{5}", [8]]
				]
			],
			"EG": [
				"20",
				"00",
				"[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}",
				[
					8,
					9,
					10
				],
				[
					[
						"(\\d)(\\d{7,8})",
						"$1 $2",
						["[23]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{6,7})",
						"$1 $2",
						["1[35]|[4-6]|8[2468]|9[235-7]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[89]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{8})",
						"$1 $2",
						["1"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["13[23]\\d{6}|(?:15|57)\\d{6,7}|(?:2\\d|3|4[05-8]|5[05]|6[24-689]|8[2468]|9[235-7])\\d{7}", [8, 9]],
					["1[0-25]\\d{8}", [10]],
					["800\\d{7}", [10]],
					["900\\d{7}", [10]]
				]
			],
			"EH": [
				"212",
				"00",
				"[5-8]\\d{8}",
				[9],
				0,
				"0",
				0,
				0,
				0,
				0,
				"528[89]",
				[
					["528[89]\\d{5}"],
					["(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[0167]\\d|2[0-467]|5[0-3]|8[0-7]))\\d{6}"],
					["80[0-7]\\d{6}"],
					["89\\d{7}"],
					0,
					0,
					0,
					0,
					["(?:592(?:4[0-2]|93)|80[89]\\d\\d)\\d{4}"]
				]
			],
			"ER": [
				"291",
				"00",
				"[178]\\d{6}",
				[7],
				[[
					"(\\d)(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[178]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["(?:1(?:1[12568]|[24]0|55|6[146])|8\\d\\d)\\d{4}"], ["(?:17[1-3]|7\\d\\d)\\d{4}"]]
			],
			"ES": [
				"34",
				"00",
				"[5-9]\\d{8}",
				[9],
				[[
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[89]00"]
				], [
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[5-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["96906(?:0[0-8]|1[1-9]|[2-9]\\d)\\d\\d|9(?:69(?:0[0-57-9]|[1-9]\\d)|73(?:[0-8]\\d|9[1-9]))\\d{4}|(?:8(?:[1356]\\d|[28][0-8]|[47][1-9])|9(?:[135]\\d|[268][0-8]|4[1-9]|7[124-9]))\\d{6}"],
					["(?:590[16]00\\d|9(?:6906(?:09|10)|7390\\d\\d))\\d\\d|(?:6\\d|7[1-48])\\d{7}"],
					["[89]00\\d{6}"],
					["80[367]\\d{6}"],
					["70\\d{7}"],
					0,
					["51\\d{7}"],
					0,
					0,
					["90[12]\\d{6}"]
				]
			],
			"ET": [
				"251",
				"00",
				"(?:11|[2-579]\\d)\\d{7}",
				[9],
				[[
					"(\\d{2})(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["[1-579]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["11667[01]\\d{3}|(?:11(?:1(?:1[124]|2[2-7]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8]|7\\d)|5(?:1[578]|44|5[0-4])|6(?:1[578]|2[69]|39|4[5-7]|5[0-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|(?:22|55)[0-6]|33[0134689]|44[04]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:119|22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:(?:11|22)[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\d)))\\d{4}"], ["700[1-9]\\d{5}|(?:7(?:0[1-9]|1[0-8]|22|77|86|99)|9\\d\\d)\\d{6}"]]
			],
			"FI": [
				"358",
				"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))",
				"[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}",
				[
					5,
					6,
					7,
					8,
					9,
					10,
					11,
					12
				],
				[
					[
						"(\\d{5})",
						"$1",
						["20[2-59]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3,7})",
						"$1 $2",
						["(?:[1-3]0|[68])0|70[07-9]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4,8})",
						"$1 $2",
						["[14]|2[09]|50|7[135]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{6,10})",
						"$1 $2",
						["7"],
						"0$1"
					],
					[
						"(\\d)(\\d{4,9})",
						"$1 $2",
						["(?:19|[2568])[1-8]|3(?:0[1-9]|[1-9])|9"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				"1[03-79]|[2-9]",
				[
					["1[3-7][1-8]\\d{3,6}|(?:19[1-8]|[23568][1-8]\\d|9(?:00|[1-8]\\d))\\d{2,6}", [
						5,
						6,
						7,
						8,
						9
					]],
					["4946\\d{2,6}|(?:4[0-8]|50)\\d{4,8}", [
						6,
						7,
						8,
						9,
						10
					]],
					["800\\d{4,6}", [
						7,
						8,
						9
					]],
					["[67]00\\d{5,6}", [8, 9]],
					0,
					0,
					["20\\d{4,8}|60[12]\\d{5,6}|7(?:099\\d{4,5}|5[03-9]\\d{3,7})|20[2-59]\\d\\d|(?:606|7(?:0[78]|1|3\\d))\\d{7}|(?:10|29|3[09]|70[1-5]\\d)\\d{4,8}"]
				],
				"00"
			],
			"FJ": [
				"679",
				"0(?:0|52)",
				"45\\d{5}|(?:0800\\d|[235-9])\\d{6}",
				[7, 11],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[235-9]|45"]
				], [
					"(\\d{4})(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["0"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["603\\d{4}|(?:3[0-5]|6[25-7]|8[58])\\d{5}", [7]],
					["(?:[279]\\d|45|5[01568]|8[034679])\\d{5}", [7]],
					["0800\\d{7}", [11]]
				],
				"00"
			],
			"FK": [
				"500",
				"00",
				"[2-7]\\d{4}",
				[5],
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				[["[2-47]\\d{4}"], ["[56]\\d{4}"]]
			],
			"FM": [
				"691",
				"00",
				"(?:[39]\\d\\d|820)\\d{4}",
				[7],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[389]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["31(?:00[67]|208|309)\\d\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-6]\\d)\\d)\\d{3}"], ["31(?:00[67]|208|309)\\d\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-7]\\d)\\d)\\d{3}"]]
			],
			"FO": [
				"298",
				"00",
				"[2-9]\\d{5}",
				[6],
				[[
					"(\\d{6})",
					"$1",
					["[2-9]"]
				]],
				0,
				0,
				"(10(?:01|[12]0|88))",
				0,
				0,
				0,
				[
					["(?:20|[34]\\d|8[19])\\d{4}"],
					["(?:[27][1-9]|5\\d|9[16])\\d{4}"],
					["80[257-9]\\d{3}"],
					["90(?:[13-5][15-7]|2[125-7]|9\\d)\\d\\d"],
					0,
					0,
					0,
					0,
					["(?:6[0-36]|88)\\d{4}"]
				]
			],
			"FR": [
				"33",
				"00",
				"[1-9]\\d{8}",
				[9],
				[[
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["8"],
					"0 $1"
				], [
					"(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4 $5",
					["[1-79]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:26[013-9]|59[1-35-9])\\d{6}|(?:[13]\\d|2[0-57-9]|4[1-9]|5[0-8])\\d{7}"],
					["(?:6(?:[0-24-8]\\d|3[0-8]|9[589])|7[3-9]\\d)\\d{6}"],
					["80[0-5]\\d{6}"],
					["836(?:0[0-36-9]|[1-9]\\d)\\d{4}|8(?:1[2-9]|2[2-47-9]|3[0-57-9]|[569]\\d|8[0-35-9])\\d{6}"],
					0,
					0,
					["80[6-9]\\d{6}"],
					0,
					["9\\d{8}"],
					["8(?:1[01]|2[0156]|4[024]|84)\\d{6}"]
				]
			],
			"GA": [
				"241",
				"00",
				"(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}",
				[7, 8],
				[
					[
						"(\\d)(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[2-7]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["0"]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["11|[67]"],
						"0$1"
					]
				],
				0,
				0,
				"0(11\\d{6}|60\\d{6}|61\\d{6}|6[256]\\d{6}|7[467]\\d{6})",
				"$1",
				0,
				0,
				[["[01]1\\d{6}", [8]], ["(?:(?:0[2-7]|7[467])\\d|6(?:0[0-4]|10|[256]\\d))\\d{5}|[2-7]\\d{6}"]]
			],
			"GB": [
				"44",
				"00",
				"[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}",
				[
					7,
					9,
					10
				],
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"800",
							"8001",
							"80011",
							"800111",
							"8001111"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3",
						[
							"845",
							"8454",
							"84546",
							"845464"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{6})",
						"$1 $2",
						["800"],
						"0$1"
					],
					[
						"(\\d{5})(\\d{4,5})",
						"$1 $2",
						[
							"1(?:38|5[23]|69|76|94)",
							"1(?:(?:38|69)7|5(?:24|39)|768|946)",
							"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"
						],
						"0$1"
					],
					[
						"(\\d{4})(\\d{5,6})",
						"$1 $2",
						["1(?:[2-69][02-9]|[78])"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["[25]|7(?:0|6[02-9])", "[25]|7(?:0|6(?:[03-9]|2[356]))"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{6})",
						"$1 $2",
						["7"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[1389]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1(?:1(?:3(?:[0-58]\\d\\d|73[0-35])|4(?:(?:[0-5]\\d|70)\\d|69[7-9])|(?:(?:5[0-26-9]|[78][0-49])\\d|6(?:[0-4]\\d|50))\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)\\d|1(?:[0-7]\\d|8[0-3]))|(?:3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\d)\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{3})\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}", [9, 10]],
					["7(?:457[0-57-9]|700[01]|911[028])\\d{5}|7(?:[1-3]\\d\\d|4(?:[0-46-9]\\d|5[0-689])|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[024-9]\\d|1[02-9]|3[0-689]))\\d{6}", [10]],
					["80[08]\\d{7}|800\\d{6}|8001111"],
					["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d", [7, 10]],
					["70\\d{8}", [10]],
					0,
					["(?:3[0347]|55)\\d{8}", [10]],
					["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}", [10]],
					["56\\d{8}", [10]]
				],
				0,
				" x"
			],
			"GD": [
				"1",
				"011",
				"(?:473|[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-9]\\d{6})$|1",
				"473$1",
				0,
				"473",
				[
					["473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-4]|5[59]|73|90)|63[68]|7(?:58|84)|800|938)\\d{4}"],
					["473(?:4(?:0[2-79]|1[04-9]|2[0-5]|49|5[6-8])|5(?:2[01]|3[3-8])|901)\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"GE": [
				"995",
				"00",
				"(?:[3-57]\\d\\d|800)\\d{6}",
				[9],
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["70"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["32"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[57]"]
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[348]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:3(?:[256]\\d|4[124-9]|7[0-4])|4(?:1\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\d{6}"],
					["5(?:(?:(?:0555|1(?:[17]77|555))[5-9]|757(?:7[7-9]|8[01]))\\d|22252[0-4])\\d\\d|5(?:0(?:0[17]0|505)|1(?:0[01]0|1(?:07|33|51))|2(?:0[02]0|2[25]2)|3(?:0[03]0|3[35]3)|(?:40[04]|900)0|5222)[0-4]\\d{3}|(?:5(?:0(?:0(?:0\\d|11|22|3[0-6]|44|5[05]|77|88|9[09])|(?:[14]\\d|77)\\d|22[02])|1(?:1(?:[03][01]|[124]\\d|5[2-6]|7[0-4])|4\\d\\d)|[23]555|4(?:4\\d\\d|555)|5(?:[0157-9]\\d\\d|200|333|444)|6[89]\\d\\d|7(?:[0147-9]\\d\\d|5(?:00|[57]5))|8(?:0(?:[018]\\d|2[0-4])|5(?:55|8[89])|8(?:55|88))|9(?:090|[1-35-9]\\d\\d))|790\\d\\d)\\d{4}"],
					["800\\d{6}"],
					0,
					0,
					0,
					0,
					0,
					["70[67]\\d{6}"]
				]
			],
			"GF": [
				"594",
				"00",
				"(?:[56]94\\d|7093)\\d{5}|(?:80|9\\d)\\d{7}",
				[9],
				[[
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[5-7]|9[47]"],
					"0$1"
				], [
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[89]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["594(?:[02-49]\\d|1[0-5]|5[6-9]|6[0-3]|80)\\d{4}"],
					["(?:694(?:[0-249]\\d|3[0-8])|7093[0-3])\\d{4}"],
					["80[0-5]\\d{6}"],
					0,
					0,
					0,
					0,
					0,
					["9(?:(?:396|76\\d)\\d|476[0-6])\\d{4}"]
				]
			],
			"GG": [
				"44",
				"00",
				"(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?",
				[
					7,
					9,
					10
				],
				0,
				"0",
				0,
				"([25-9]\\d{5})$|0",
				"1481$1",
				0,
				0,
				[
					["1481[25-9]\\d{5}", [10]],
					["7(?:(?:781|839)\\d|911[17])\\d{5}", [10]],
					["80[08]\\d{7}|800\\d{6}|8001111"],
					["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d", [7, 10]],
					["70\\d{8}", [10]],
					0,
					["(?:3[0347]|55)\\d{8}", [10]],
					["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}", [10]],
					["56\\d{8}", [10]]
				]
			],
			"GH": [
				"233",
				"00",
				"(?:[235]\\d{3}|800)\\d{5}",
				[8, 9],
				[[
					"(\\d{3})(\\d{5})",
					"$1 $2",
					["8"],
					"0$1"
				], [
					"(\\d{2})(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["[235]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["3082[0-5]\\d{4}|3(?:0(?:[237]\\d|8[01])|[167](?:2[0-6]|7\\d|80)|2(?:2[0-5]|7\\d|80)|3(?:2[0-3]|7\\d|80)|4(?:2[013-9]|3[01]|7\\d|80)|5(?:2[0-7]|7\\d|80)|8(?:2[0-2]|7\\d|80)|9(?:[28]0|7\\d))\\d{5}", [9]],
					["(?:2(?:[0346-9]\\d|5[67])|5(?:[03-7]\\d|9[1-9]))\\d{6}", [9]],
					["800\\d{5}", [8]]
				]
			],
			"GI": [
				"350",
				"00",
				"(?:[25]\\d|60)\\d{6}",
				[8],
				[[
					"(\\d{3})(\\d{5})",
					"$1 $2",
					["2"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["2190[0-2]\\d{3}|2(?:0(?:[02]\\d|3[01])|16[24-9]|2[2-5]\\d)\\d{4}"], ["5251[0-4]\\d{3}|(?:5(?:[146-8]\\d\\d|250)|60(?:1[01]|6\\d))\\d{4}"]]
			],
			"GL": [
				"299",
				"00",
				"(?:19|[2-689]\\d|70)\\d{4}",
				[6],
				[[
					"(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3",
					["19|[2-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:19|3[1-7]|[68][1-9]|70|9\\d)\\d{4}"],
					["[245]\\d{5}"],
					["80\\d{4}"],
					0,
					0,
					0,
					0,
					0,
					["3[89]\\d{4}"]
				]
			],
			"GM": [
				"220",
				"00",
				"[2-9]\\d{6}",
				[7],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[2-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["(?:4(?:[23]\\d\\d|4(?:1[024679]|[6-9]\\d))|5(?:5(?:3\\d|4[0-7])|6[67]\\d|7(?:1[04]|2[035]|3[58]|48))|8\\d{3})\\d{3}"], ["(?:[23679]\\d|4[015]|5[0-489])\\d{5}"]]
			],
			"GN": [
				"224",
				"00",
				"722\\d{6}|(?:3|6\\d)\\d{7}",
				[8, 9],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["3"]
				], [
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[67]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["3(?:0(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])|1\\d\\d)\\d{4}", [8]],
					["6[0-356]\\d{7}", [9]],
					0,
					0,
					0,
					0,
					0,
					0,
					["722\\d{6}", [9]]
				]
			],
			"GP": [
				"590",
				"00",
				"(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}",
				[9],
				[[
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[5-79]"],
					"0$1"
				], [
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["8"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\d)\\d{4}"],
					["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],
					["80[0-5]\\d{6}"],
					0,
					0,
					0,
					0,
					0,
					["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]
				]
			],
			"GQ": [
				"240",
				"00",
				"222\\d{6}|(?:3\\d|55|[89]0)\\d{7}",
				[9],
				[[
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[235]"]
				], [
					"(\\d{3})(\\d{6})",
					"$1 $2",
					["[89]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["33[0-24-9]\\d[46]\\d{4}|3(?:33|5\\d)\\d[7-9]\\d{4}"],
					["(?:222|55\\d)\\d{6}"],
					["80\\d[1-9]\\d{5}"],
					["90\\d[1-9]\\d{5}"]
				]
			],
			"GR": [
				"30",
				"00",
				"5005000\\d{3}|8\\d{9,11}|(?:[269]\\d|70)\\d{8}",
				[
					10,
					11,
					12
				],
				[
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["21|7"]
					],
					[
						"(\\d{4})(\\d{6})",
						"$1 $2",
						["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[2689]"]
					],
					[
						"(\\d{3})(\\d{3,4})(\\d{5})",
						"$1 $2 $3",
						["8"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:1\\d\\d|2(?:2[1-46-9]|[36][1-8]|4[1-7]|5[1-4]|7[1-5]|[89][1-9])|3(?:1\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\d|[269][1-6]|3[1245]|4[1-7]|5[13-9]|7[14]|8[1-5])|7(?:1\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\d|2[1-5]|[34][1-4]|9[1-57]))\\d{6}", [10]],
					["68[57-9]\\d{7}|(?:69|94)\\d{8}", [10]],
					["800\\d{7,9}"],
					["90[19]\\d{7}", [10]],
					["70\\d{8}", [10]],
					0,
					["5005000\\d{3}", [10]],
					0,
					0,
					["8(?:0[16]|12|[27]5|50)\\d{7}", [10]]
				]
			],
			"GT": [
				"502",
				"00",
				"80\\d{6}|(?:1\\d{3}|[2-7])\\d{7}",
				[8, 11],
				[[
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["[2-8]"]
				], [
					"(\\d{4})(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["1"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["[267][2-9]\\d{6}", [8]],
					["(?:[3-5]\\d\\d|80[0-4])\\d{5}", [8]],
					["18[01]\\d{8}", [11]],
					["19\\d{9}", [11]]
				]
			],
			"GU": [
				"1",
				"011",
				"(?:[58]\\d\\d|671|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-9]\\d{6})$|1",
				"671$1",
				0,
				"671",
				[
					["671(?:2\\d\\d|3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[02-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[478])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\d{4}"],
					[""],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"GW": [
				"245",
				"00",
				"[49]\\d{8}|4\\d{6}",
				[7, 9],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["40"]
				], [
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[49]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["443\\d{6}", [9]],
					["9(?:5\\d|6[569]|77)\\d{6}", [9]],
					0,
					0,
					0,
					0,
					0,
					0,
					["40\\d{5}", [7]]
				]
			],
			"GY": [
				"592",
				"001",
				"(?:[2-8]\\d{3}|9008)\\d{3}",
				[7],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[2-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\d|7[0-79])|3(?:2[25-9]|3\\d)|4(?:4[0-24]|5[56])|50[0-6]|77[1-57])\\d{4}"],
					["(?:510|6\\d\\d|7(?:[0-5]\\d|6[01]))\\d{4}"],
					["(?:289|8(?:00|6[28]|88|99))\\d{4}"],
					["9008\\d{3}"],
					0,
					0,
					0,
					0,
					["515\\d{4}"]
				]
			],
			"HK": [
				"852",
				"00(?:30|5[09]|[126-9]?)",
				"8[0-46-9]\\d{6,7}|9\\d{4,7}|(?:[2-7]|9\\d{3})\\d{7}",
				[
					5,
					6,
					7,
					8,
					9,
					11
				],
				[
					[
						"(\\d{3})(\\d{2,5})",
						"$1 $2",
						["900", "9003"]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["8"]
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["9"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:[13-9]\\d|2[013-9])\\d|3(?:(?:[1569][0-24-9]|4[0-246-9]|7[0-24-69])\\d|8(?:4[0-8]|[579]\\d|6[0-2]))|58(?:0[1-9]|1[2-9]))\\d{4}", [8]],
					["(?:4(?:44[0-35-9]|6(?:1[0-79]|4[0-57-9]|6[0-4])|7(?:[26][0-5]|4[0-48]))|5(?:73[0-6]|95[0-8])|6(?:26[013-8]|(?:66|78)[0-5])|70(?:7[1-8]|8[0-4])|84(?:4[0-2]|8[0-35-9])|9(?:29[013-9]|39[014-9]|59[0-4]|899))\\d{4}|(?:4(?:4[0-35-9]|6[02357-9]|7[015])|5(?:[1-59][0-46-9]|6[0-4689]|7[0-246-9])|6(?:0[1-9]|[13-59]\\d|[268][0-57-9]|7[0-79])|70[1-59]|84[0-39]|9(?:0[1-9]|1[02-9]|[2358][0-8]|[467]\\d))\\d{5}", [8]],
					["800\\d{6}", [9]],
					["900(?:[0-24-9]\\d{7}|3\\d{1,4})", [
						5,
						6,
						7,
						8,
						11
					]],
					["8(?:1[0-4679]\\d|2(?:[0-36]\\d|7[0-4])|3(?:[034]\\d|2[09]|70))\\d{4}", [8]],
					0,
					["30(?:0[1-9]|[15-7]\\d|2[047]|89)\\d{4}", [8]],
					["7(?:1(?:0[0-38]|1[0-3679]|3[013]|69|9[0136])|2(?:[02389]\\d|1[18]|7[27-9])|3(?:[0-38]\\d|7[0-369]|9[2357-9])|47\\d|5(?:[178]\\d|5[0-5])|6(?:0[0-7]|2[236-9]|[35]\\d)|7(?:[27]\\d|8[7-9])|8(?:[23689]\\d|7[1-9])|9(?:[025]\\d|6[0-246-8]|7[0-36-9]|8[238]))\\d{4}", [8]]
				],
				"00"
			],
			"HN": [
				"504",
				"00",
				"8\\d{10}|[237-9]\\d{7}",
				[8, 11],
				[[
					"(\\d{4})(\\d{4})",
					"$1-$2",
					["[237-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:2(?:0[0-59]|1[1-9]|[23]\\d|4[02-7]|5[57]|6[245]|7[0135689]|8[01346-9]|9[0-2])|4(?:0[578]|2[3-59]|3[13-9]|4[0-68]|5[1-3589])|5(?:0[2357-9]|1[1-356]|4[03-5]|5\\d|6[014-69]|7[04]|80)|6(?:[056]\\d|17|2[067]|3[047]|4[0-378]|[78][0-8]|9[01])|7(?:0[5-79]|6[46-9]|7[02-9]|8[034]|91)|8(?:79|8[0-357-9]|9[1-57-9]))\\d{4}", [8]],
					["[37-9]\\d{7}", [8]],
					["8002\\d{7}", [11]]
				]
			],
			"HR": [
				"385",
				"00",
				"[2-69]\\d{8}|80\\d{5,7}|[1-79]\\d{7}|6\\d{6}",
				[
					7,
					8,
					9
				],
				[
					[
						"(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["6[01]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2,3})",
						"$1 $2 $3",
						["8"],
						"0$1"
					],
					[
						"(\\d)(\\d{4})(\\d{3})",
						"$1 $2 $3",
						["1"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["6|7[245]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["9"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[2-57]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["8"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["1\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\d{6,7}", [8, 9]],
					["9(?:(?:0[1-9]|[12589]\\d)\\d\\d|7(?:[0679]\\d\\d|5(?:[01]\\d|44|55|77|9[5-79])))\\d{4}|98\\d{6}", [8, 9]],
					["80\\d{5,7}"],
					["6[01459]\\d{6}|6[01]\\d{5}", [7, 8]],
					["7[45]\\d{6}", [8]],
					0,
					["62\\d{6,7}|72\\d{6}", [8, 9]]
				]
			],
			"HT": [
				"509",
				"00",
				"(?:[2-489]\\d|55)\\d{6}",
				[8],
				[[
					"(\\d{2})(\\d{2})(\\d{4})",
					"$1 $2 $3",
					["[2-589]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:2\\d|5[1-5]|81|9[149])\\d{5}"],
					["(?:[34]\\d|55)\\d{6}"],
					["8\\d{7}"],
					0,
					0,
					0,
					0,
					0,
					["9(?:[67][0-4]|8[0-3589]|9\\d)\\d{5}"]
				]
			],
			"HU": [
				"36",
				"00",
				"[235-7]\\d{8}|[1-9]\\d{7}",
				[8, 9],
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["1"],
						"(06 $1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]"],
						"(06 $1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[2-9]"],
						"06 $1"
					]
				],
				"06",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1\\d|[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6[23689]|8[2-57-9]|9[2-69])\\d{6}", [8]],
					["(?:[257]0|3[01])\\d{7}", [9]],
					["(?:[48]0\\d|680[29])\\d{5}"],
					["9[01]\\d{6}", [8]],
					0,
					0,
					["38\\d{7}", [9]],
					0,
					["21\\d{7}", [9]]
				]
			],
			"ID": [
				"62",
				"00[89]",
				"00[1-9]\\d{9,14}|(?:[1-36]|8\\d{5})\\d{6}|00\\d{9}|[1-9]\\d{8,10}|[2-9]\\d{7}",
				[
					7,
					8,
					9,
					10,
					11,
					12,
					13,
					14,
					15,
					16,
					17
				],
				[
					[
						"(\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["15"]
					],
					[
						"(\\d{2})(\\d{5,9})",
						"$1 $2",
						["2[124]|[36]1"],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{5,7})",
						"$1 $2",
						["800"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{5,8})",
						"$1 $2",
						["[2-79]"],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3,4})(\\d{3})",
						"$1-$2-$3",
						["8[1-35-9]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{6,8})",
						"$1 $2",
						["1"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["804"],
						"0$1"
					],
					[
						"(\\d{3})(\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["80"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{4})(\\d{4,5})",
						"$1-$2-$3",
						["8"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["2[124]\\d{7,8}|619\\d{8}|2(?:1(?:14|500)|2\\d{3})\\d{3}|61\\d{5,8}|(?:2(?:[35][1-4]|6[0-8]|7[1-6]|8\\d|9[1-8])|3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|6(?:[25]\\d|3[1-69]|4[1-6])|7(?:02|[125][1-9]|[36]\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\d{5,8}", [
						7,
						8,
						9,
						10,
						11
					]],
					["8[1-35-9]\\d{7,10}", [
						9,
						10,
						11,
						12
					]],
					["00(?:1803\\d{5,11}|7803\\d{7})|(?:177\\d|800)\\d{5,7}", [
						8,
						9,
						10,
						11,
						12,
						13,
						14,
						15,
						16,
						17
					]],
					["809\\d{7}", [10]],
					0,
					0,
					["(?:1500|8071\\d{3})\\d{3}", [7, 10]],
					0,
					0,
					["804\\d{7}", [10]]
				]
			],
			"IE": [
				"353",
				"00",
				"(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}",
				[
					7,
					8,
					9,
					10
				],
				[
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						["2[24-9]|47|58|6[237-9]|9[35-9]"],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						["[45]0"],
						"(0$1)"
					],
					[
						"(\\d)(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						["1"],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[2569]|4[1-69]|7[14]"],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["70"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["81"],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[78]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["1"]
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["4"],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3 $4",
						["8"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1\\d|21)\\d{6,7}|(?:2[24-9]|4(?:0[24]|5\\d|7)|5(?:0[45]|1\\d|8)|6(?:1\\d|[237-9])|9(?:1\\d|[35-9]))\\d{5}|(?:23|4(?:[1-469]|8\\d)|5[23679]|6[4-6]|7[14]|9[04])\\d{7}"],
					["8(?:22|[35-9]\\d)\\d{6}", [9]],
					["1800\\d{6}", [10]],
					["15(?:1[2-8]|[2-8]0|9[089])\\d{6}", [10]],
					["700\\d{6}", [9]],
					["88210[1-9]\\d{4}|8(?:[35-79]5\\d\\d|8(?:[013-9]\\d\\d|2(?:[01][1-9]|[2-9]\\d)))\\d{5}", [10]],
					["818\\d{6}", [9]],
					0,
					["76\\d{7}", [9]],
					["18[59]0\\d{6}", [10]]
				]
			],
			"IL": [
				"972",
				"0(?:0|1[2-9])",
				"1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}",
				[
					7,
					8,
					9,
					10,
					11,
					12
				],
				[
					[
						"(\\d{4})(\\d{3})",
						"$1-$2",
						["125"]
					],
					[
						"(\\d{4})(\\d{2})(\\d{2})",
						"$1-$2-$3",
						["121"]
					],
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1-$2-$3",
						["[2-489]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						["[57]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})",
						"$1-$2-$3",
						["12"]
					],
					[
						"(\\d{4})(\\d{6})",
						"$1-$2",
						["159"]
					],
					[
						"(\\d)(\\d{3})(\\d{3})(\\d{3})",
						"$1-$2-$3-$4",
						["1[7-9]"]
					],
					[
						"(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})",
						"$1-$2 $3-$4",
						["15"]
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["153\\d{8,9}|29[1-9]\\d{5}|(?:2[0-8]|[3489]\\d)\\d{6}", [
						8,
						11,
						12
					]],
					["55(?:4(?:[01]0|5[0-2])|57[0-289])\\d{4}|5(?:(?:[0-2][02-9]|[36]\\d|[49][2-9]|8[3-7])\\d|5(?:01|2\\d|3[0-3]|4[34]|5[0-25689]|6[6-8]|7[0-267]|8[7-9]|9[1-9]))\\d{5}", [9]],
					["1(?:255|80[019]\\d{3})\\d{3}", [7, 10]],
					["1212\\d{4}|1(?:200|9(?:0[0-2]|19))\\d{6}", [8, 10]],
					0,
					["151\\d{8,9}", [11, 12]],
					["1599\\d{6}", [10]],
					0,
					["7(?:38(?:[05]\\d|8[08])|8(?:33|55|77|81)\\d)\\d{4}|7(?:18|2[23]|3[237]|47|6[258]|7\\d|82|9[2-9])\\d{6}", [9]],
					["1700\\d{6}", [10]]
				]
			],
			"IM": [
				"44",
				"00",
				"1624\\d{6}|(?:[3578]\\d|90)\\d{8}",
				[10],
				0,
				"0",
				0,
				"([25-8]\\d{5})$|0",
				"1624$1",
				0,
				"74576|(?:16|7[56])24",
				[
					["1624(?:230|[5-8]\\d\\d)\\d{3}"],
					["76245[06]\\d{4}|7(?:4576|[59]24\\d|624[0-4689])\\d{5}"],
					["808162\\d{4}"],
					["8(?:440[49]06|72299\\d)\\d{3}|(?:8(?:45|70)|90[0167])624\\d{4}"],
					["70\\d{8}"],
					0,
					["3440[49]06\\d{3}|(?:3(?:08162|3\\d{4}|45624|7(?:0624|2299))|55\\d{4})\\d{4}"],
					0,
					["56\\d{8}"]
				]
			],
			"IN": [
				"91",
				"00",
				"(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}",
				[
					8,
					9,
					10,
					11,
					12,
					13
				],
				[
					[
						"(\\d{8})",
						"$1",
						[
							"5(?:0|2[23]|3[03]|[67]1|88)",
							"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)",
							"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"
						],
						0,
						1
					],
					[
						"(\\d{4})(\\d{4,5})",
						"$1 $2",
						["180", "1800"],
						0,
						1
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["140"],
						0,
						1
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"11|2[02]|33|4[04]|79[1-7]|80[2-46]",
							"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])",
							"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"
						],
						"0$1",
						1
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]",
							"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]",
							"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"
						],
						"0$1",
						1
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807",
							"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]",
							"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"
						],
						"0$1",
						1
					],
					[
						"(\\d{5})(\\d{5})",
						"$1 $2",
						["[6-9]"],
						"0$1",
						1
					],
					[
						"(\\d{4})(\\d{2,4})(\\d{4})",
						"$1 $2 $3",
						["1(?:6|8[06])", "1(?:6|8[06]0)"],
						0,
						1
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["18"],
						0,
						1
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["2717(?:[2-7]\\d|95)\\d{4}|(?:271[0-689]|782[0-6])[2-7]\\d{5}|(?:170[24]|2(?:(?:[02][2-79]|90)\\d|80[13468])|(?:3(?:23|80)|683|79[1-7])\\d|4(?:20[24]|72[2-8])|552[1-7])\\d{6}|(?:11|33|4[04]|80)[2-7]\\d{7}|(?:342|674|788)(?:[0189][2-7]|[2-7]\\d)\\d{5}|(?:1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6[014]|7[1257]|8[01346])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[13]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[014-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91))[2-7]\\d{6}|(?:1(?:2[35-8]|3[346-9]|4[236-9]|[59][0235-9]|6[235-9]|7[34689]|8[257-9])|2(?:1[134689]|3[24-8]|4[2-8]|5[25689]|6[2-4679]|7[3-79]|8[2-479]|9[235-9])|3(?:01|1[79]|2[1245]|4[5-8]|5[125689]|6[235-7]|7[157-9]|8[2-46-8])|4(?:1[14578]|2[5689]|3[2-467]|5[4-7]|6[35]|73|8[2689]|9[2389])|5(?:[16][146-9]|2[14-8]|3[1346]|4[14-69]|5[46]|7[2-4]|8[2-8]|9[246])|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])|7(?:1[013-9]|2[0235-9]|3[2679]|4[1-35689]|5[2-46-9]|[67][02-9]|8[013-7]|9[089])|8(?:1[1357-9]|2[235-8]|3[03-57-9]|4[0-24-9]|5\\d|6[2457-9]|7[1-6]|8[1256]|9[2-4]))\\d[2-7]\\d{5}", [10]],
					["(?:61279|7(?:887[02-9]|9(?:313|79[07-9]))|8(?:079[04-9]|(?:84|91)7[02-8]))\\d{5}|(?:6(?:12|[2-47]1|5[17]|6[13]|80)[0189]|7(?:1(?:2[0189]|9[0-5])|2(?:[14][017-9]|8[0-59])|3(?:2[5-8]|[34][017-9]|9[016-9])|4(?:1[015-9]|[29][89]|39|8[389])|5(?:[15][017-9]|2[04-9]|9[7-9])|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589])|70[0289]|88[089]|97[02-8])|8(?:0(?:6[67]|7[02-8])|70[017-9]|84[01489]|91[0-289]))\\d{6}|(?:7(?:31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[0189]\\d|7[02-8])\\d{5}|(?:6(?:[09]\\d|1[04679]|2[03689]|3[05-9]|4[0489]|50|6[069]|7[07]|8[7-9])|7(?:0\\d|2[0235-79]|3[05-8]|40|5[0346-8]|6[6-9]|7[1-9]|8[0-79]|9[089])|8(?:0[01589]|1[0-57-9]|2[235-9]|3[03-57-9]|[45]\\d|6[02457-9]|7[1-69]|8[0-25-9]|9[02-9])|9\\d\\d)\\d{7}|(?:6(?:(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|8[124-6])\\d|7(?:[235689]\\d|4[0189]))|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-5])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]|881))[0189]\\d{5}", [10]],
					["000800\\d{7}|1(?:600\\d{6}|80(?:0\\d{4,9}|3\\d{9}))"],
					["186[12]\\d{9}", [13]],
					0,
					0,
					["140\\d{7}", [10]],
					0,
					0,
					["1860\\d{7}", [11]]
				]
			],
			"IO": [
				"246",
				"00",
				"3\\d{6}",
				[7],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["3"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["37\\d{5}"], ["38\\d{5}"]]
			],
			"IQ": [
				"964",
				"00",
				"(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}",
				[
					8,
					9,
					10
				],
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["1"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[2-6]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["7"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["1\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\d{6,7}", [8, 9]], ["7[3-9]\\d{8}", [10]]]
			],
			"IR": [
				"98",
				"00",
				"[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}",
				[
					4,
					5,
					6,
					7,
					10
				],
				[
					[
						"(\\d{4,5})",
						"$1",
						["96"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4,5})",
						"$1 $2",
						["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["9"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["[1-8]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])(?:[03-57]\\d{7}|[16]\\d{3}(?:\\d{4})?|[289]\\d{3}(?:\\d(?:\\d{3})?)?)|94(?:000[09]|(?:12\\d|30[0-2])\\d|2(?:121|[2689]0\\d)|4(?:111|40\\d))\\d{4}", [
						6,
						7,
						10
					]],
					["9(?:(?:0[0-5]|[13]\\d|2[0-3])\\d\\d|9(?:[0-46]\\d\\d|5(?:10|5\\d)|8(?:[12]\\d|88)|9(?:0[0-3]|[19]\\d|21|69|77|8[7-9])))\\d{5}", [10]],
					0,
					0,
					0,
					0,
					["96(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19])", [4, 5]]
				]
			],
			"IS": [
				"354",
				"00|1(?:0(?:01|[12]0)|100)",
				"(?:38\\d|[4-9])\\d{6}",
				[7, 9],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[4-9]"]
				], [
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["3"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:4(?:1[0-24-69]|2[0-7]|[37][0-8]|4[0-24589]|5[0-68]|6\\d|8[0-36-8])|5(?:05|[156]\\d|2[02578]|3[0-579]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|872)\\d{4}", [7]],
					["(?:38[589]\\d\\d|6(?:1[1-8]|2[0-6]|3[026-9]|4[014679]|5[0159]|6[0-69]|70|8[06-8]|9\\d)|7(?:5[057]|[6-9]\\d)|8(?:2[0-59]|[3-69]\\d|8[238]))\\d{4}"],
					["80[0-8]\\d{4}", [7]],
					["90(?:0\\d|1[5-79]|2[015-79]|3[135-79]|4[125-7]|5[25-79]|7[1-37]|8[0-35-7])\\d{3}", [7]],
					0,
					["(?:689|8(?:7[18]|80)|95[48])\\d{4}", [7]],
					["809\\d{4}", [7]],
					0,
					["49[0-24-79]\\d{4}", [7]]
				],
				"00"
			],
			"IT": [
				"39",
				"00",
				"0\\d{5,10}|1\\d{8,10}|3(?:[0-8]\\d{7,10}|9\\d{7,8})|(?:43|55|70)\\d{8}|8\\d{5}(?:\\d{2,4})?",
				[
					6,
					7,
					8,
					9,
					10,
					11,
					12
				],
				[
					[
						"(\\d{2})(\\d{4,6})",
						"$1 $2",
						["0[26]"]
					],
					[
						"(\\d{3})(\\d{3,6})",
						"$1 $2",
						["0[13-57-9][0159]|8(?:03|4[17]|9[2-5])", "0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))"]
					],
					[
						"(\\d{4})(\\d{2,6})",
						"$1 $2",
						["0(?:[13-579][2-46-8]|8[236-8])"]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						["894"]
					],
					[
						"(\\d{2})(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						["0[26]|5"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["1(?:44|[679])|[378]|43"]
					],
					[
						"(\\d{3})(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						["0[13-57-9][0159]|14"]
					],
					[
						"(\\d{2})(\\d{4})(\\d{5})",
						"$1 $2 $3",
						["0[26]"]
					],
					[
						"(\\d{4})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["0"]
					],
					[
						"(\\d{3})(\\d{4})(\\d{4,5})",
						"$1 $2 $3",
						["3"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["0669[0-79]\\d{1,6}|0(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\d|6[0-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7}", [
						6,
						7,
						8,
						9,
						10,
						11
					]],
					["3[2-9]\\d{7,8}|(?:31|43)\\d{8}", [9, 10]],
					["80(?:0\\d{3}|3)\\d{3}", [6, 9]],
					["(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}", [
						6,
						8,
						9,
						10
					]],
					["1(?:78\\d|99)\\d{6}", [9, 10]],
					["3[2-8]\\d{9,10}", [11, 12]],
					0,
					0,
					["55\\d{8}", [10]],
					["84(?:[08]\\d{3}|[17])\\d{3}", [6, 9]]
				]
			],
			"JE": [
				"44",
				"00",
				"1534\\d{6}|(?:[3578]\\d|90)\\d{8}",
				[10],
				0,
				"0",
				0,
				"([0-24-8]\\d{5})$|0",
				"1534$1",
				0,
				0,
				[
					["1534[0-24-8]\\d{5}"],
					["7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97\\d))\\d{5}"],
					["80(?:07(?:35|81)|8901)\\d{4}"],
					["(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}"],
					["701511\\d{4}"],
					0,
					["(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}"],
					["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}"],
					["56\\d{8}"]
				]
			],
			"JM": [
				"1",
				"011",
				"(?:[58]\\d\\d|658|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				0,
				0,
				0,
				"658|876",
				[
					["8766060\\d{3}|(?:658(?:2(?:[0-8]\\d|9[0-46-9])|[3-9]\\d\\d)|876(?:52[35]|6(?:0[1-3579]|1[0235-9]|[23]\\d|40|5[06]|6[2-589]|7[0-25-9]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\d|9[2-468])))\\d{4}"],
					["(?:658295|876(?:2(?:0[1-9]|[13-9]\\d|2[013-9])|[348]\\d\\d|5(?:0[1-9]|[1-9]\\d)|6(?:4[89]|6[67])|7(?:0[07]|7\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579])))\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"JO": [
				"962",
				"00",
				"(?:(?:[2689]|7\\d)\\d|32|53)\\d{6}",
				[8, 9],
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[2356]|87"],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{5,6})",
						"$1 $2",
						["[89]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{7})",
						"$1 $2",
						["70"],
						"0$1"
					],
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["7"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["87(?:000|90[01])\\d{3}|(?:2(?:6(?:2[0-35-9]|3[0-578]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\d|4[0-3]|[5-7][023])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2(?:[05]0|22)|3(?:00|33)|4(?:0[0-25]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[178]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[0239]))|87(?:20|7[078]|99))\\d{4}", [8]],
					["7(?:[78][0-25-9]|9\\d)\\d{6}", [9]],
					["80\\d{6}", [8]],
					["9\\d{7}", [8]],
					["70\\d{7}", [9]],
					0,
					["8(?:10|8\\d)\\d{5}", [8]],
					["74(?:66|77)\\d{5}", [9]],
					0,
					["85\\d{6}", [8]]
				]
			],
			"JP": [
				"81",
				"010",
				"00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}",
				[
					8,
					9,
					10,
					11,
					12,
					13,
					14,
					15,
					16,
					17
				],
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1-$2-$3",
						["(?:12|57|99)0"],
						"0$1"
					],
					[
						"(\\d{4})(\\d)(\\d{4})",
						"$1-$2-$3",
						[
							"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])",
							"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]",
							"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]"
						],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						["60"],
						"0$1"
					],
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1-$2-$3",
						["[36]|4(?:2[09]|7[01])", "[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						[
							"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])",
							"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]",
							"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{4})",
						"$1-$2-$3",
						["[14]|[289][2-9]|5[3-9]|7[2-4679]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						["800"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1-$2-$3",
						["[257-9]"],
						"0$1"
					]
				],
				"0",
				0,
				"(000[259]\\d{6})$|(?:(?:003768)0?)|0",
				"$1",
				0,
				0,
				[
					["(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\d|4(?:[2-578]\\d|6[02-8]|9[2-59])|5(?:[2-589]\\d|6[1-9]|7[2-8])|7(?:[25-9]\\d|3[4-9]|4[02-9])|8(?:[2679]\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\d|[679][1-9]))\\d{6}", [9]],
					["[7-9]0[1-9]\\d{7}", [10]],
					["00777(?:[01]|5\\d)\\d\\d|(?:00(?:7778|882[1245])|(?:120|800\\d)\\d\\d)\\d{4}|00(?:37|66|78)\\d{6,13}"],
					["990\\d{6}", [9]],
					["60\\d{7}", [9]],
					0,
					["570\\d{6}", [9]],
					["20\\d{8}", [10]],
					["50[1-9]\\d{7}", [10]]
				]
			],
			"KE": [
				"254",
				"000",
				"(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}",
				[
					7,
					8,
					9,
					10
				],
				[
					[
						"(\\d{2})(\\d{5,7})",
						"$1 $2",
						["[24-6]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{6})",
						"$1 $2",
						["[17]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[89]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:4[245]|5[1-79]|6[01457-9])\\d{5,7}|(?:4[136]|5[08]|62)\\d{7}|(?:[24]0|66)\\d{6,7}", [
						7,
						8,
						9
					]],
					["(?:1(?:0[0-8]|1[0-7]|2[014]|30)|7\\d\\d)\\d{6}", [9]],
					["800[02-8]\\d{5,6}", [9, 10]],
					["900[02-9]\\d{5}", [9]]
				]
			],
			"KG": [
				"996",
				"00",
				"8\\d{9}|[235-9]\\d{8}",
				[9, 10],
				[
					[
						"(\\d{4})(\\d{5})",
						"$1 $2",
						["3(?:1[346]|[24-79])"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[235-79]|88"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d)(\\d{2,3})",
						"$1 $2 $3 $4",
						["8"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["312(?:5[0-79]\\d|9(?:[0-689]\\d|7[0-24-9]))\\d{3}|(?:3(?:1(?:2[0-46-8]|3[1-9]|47|[56]\\d)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\d)|5(?:22|3[4-7]|59|6\\d)|6(?:22|5[35-7]|6\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\d)|9(?:22|4[1-8]|6\\d))|6(?:09|12|2[2-4])\\d)\\d{5}", [9]],
					["312(?:58\\d|973)\\d{3}|(?:2(?:0[0-35]|2\\d)|5[0-24-7]\\d|600|7(?:[07]\\d|55)|88[08]|9(?:12|9[05-9]))\\d{6}", [9]],
					["800\\d{6,7}"]
				]
			],
			"KH": [
				"855",
				"00[14-9]",
				"1\\d{9}|[1-9]\\d{7,8}",
				[
					8,
					9,
					10
				],
				[[
					"(\\d{2})(\\d{3})(\\d{3,4})",
					"$1 $2 $3",
					["[1-9]"],
					"0$1"
				], [
					"(\\d{4})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["1"]
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["23(?:4(?:[2-4]|[56]\\d)|[568]\\d\\d)\\d{4}|23[236-9]\\d{5}|(?:2[4-6]|3[2-6]|4[2-4]|[5-7][2-5])(?:(?:[237-9]|4[56]|5\\d)\\d{5}|6\\d{5,6})", [8, 9]],
					["(?:(?:1[28]|3[18]|9[67])\\d|6[016-9]|7(?:[07-9]|[16]\\d)|8(?:[013-79]|8\\d))\\d{6}|(?:1\\d|9[0-57-9])\\d{6}|(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])48\\d{5}", [8, 9]],
					["1800(?:1\\d|2[019])\\d{4}", [10]],
					["1900(?:1\\d|2[09])\\d{4}", [10]]
				]
			],
			"KI": [
				"686",
				"00",
				"(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}",
				[5, 8],
				0,
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:[24]\\d|3[1-9]|50|65(?:02[12]|12[56]|22[89]|[3-5]00)|7(?:27\\d\\d|3100|5(?:02[12]|12[56]|22[89]|[34](?:00|81)|500))|8[0-5])\\d{3}"],
					["(?:6200[01]|7(?:310[1-9]|5(?:02[03-9]|12[0-47-9]|22[0-7]|[34](?:0[1-9]|8[02-9])|50[1-9])))\\d{3}|(?:63\\d\\d|7(?:(?:[0146-9]\\d|2[0-689])\\d|3(?:[02-9]\\d|1[1-9])|5(?:[0-2][013-9]|[34][1-79]|5[1-9]|[6-9]\\d)))\\d{4}", [8]],
					0,
					0,
					0,
					0,
					0,
					0,
					["30(?:0[01]\\d\\d|12(?:11|20))\\d\\d", [8]]
				]
			],
			"KM": [
				"269",
				"00",
				"[3478]\\d{6}",
				[7],
				[[
					"(\\d{3})(\\d{2})(\\d{2})",
					"$1 $2 $3",
					["[3478]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["7[4-7]\\d{5}"],
					["[34]\\d{6}"],
					0,
					["8\\d{6}"]
				]
			],
			"KN": [
				"1",
				"011",
				"(?:[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-7]\\d{6})$|1",
				"869$1",
				0,
				"869",
				[
					["869(?:2(?:29|36)|302|4(?:6[015-9]|70)|56[5-7])\\d{4}"],
					["869(?:48[89]|55[6-8]|66\\d|76[02-7])\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"KP": [
				"850",
				"00|99",
				"85\\d{6}|(?:19\\d|[2-7])\\d{7}",
				[8, 10],
				[
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["8"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[2-7]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["1"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["(?:(?:195|2)\\d|3[19]|4[159]|5[37]|6[17]|7[39]|85)\\d{6}"], ["19[1-3]\\d{7}", [10]]]
			],
			"KR": [
				"82",
				"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))",
				"00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}",
				[
					5,
					6,
					8,
					9,
					10,
					11,
					12,
					13,
					14
				],
				[
					[
						"(\\d{2})(\\d{3,4})",
						"$1-$2",
						["(?:3[1-3]|[46][1-4]|5[1-5])1"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{4})",
						"$1-$2",
						["1"]
					],
					[
						"(\\d)(\\d{3,4})(\\d{4})",
						"$1-$2-$3",
						["2"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						["[36]0|8"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3,4})(\\d{4})",
						"$1-$2-$3",
						["[1346]|5[1-5]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1-$2-$3",
						["[57]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{5})(\\d{4})",
						"$1-$2-$3",
						["5"],
						"0$1"
					]
				],
				"0",
				0,
				"0(8(?:[1-46-8]|5\\d\\d))?",
				0,
				0,
				0,
				[
					["(?:2|3[1-3]|[46][1-4]|5[1-5])[1-9]\\d{6,7}|(?:3[1-3]|[46][1-4]|5[1-5])1\\d{2,3}", [
						5,
						6,
						8,
						9,
						10
					]],
					["1(?:05(?:[0-8]\\d|9[0-6])|22[13]\\d)\\d{4,5}|1(?:0[0-46-9]|[16-9]\\d|2[013-9])\\d{6,7}", [9, 10]],
					["00(?:308\\d{6,7}|798\\d{7,9})|(?:00368|[38]0)\\d{7}", [
						9,
						11,
						12,
						13,
						14
					]],
					["60[2-9]\\d{6}", [9]],
					["50\\d{8,9}", [10, 11]],
					0,
					["1(?:5(?:22|33|44|66|77|88|99)|6(?:[07]0|44|6[0168]|88)|8(?:00|33|55|77|99))\\d{4}", [8]],
					["15\\d{7,8}", [9, 10]],
					["70\\d{8}", [10]]
				]
			],
			"KW": [
				"965",
				"00",
				"18\\d{5}|(?:[2569]\\d|41)\\d{6}",
				[7, 8],
				[[
					"(\\d{4})(\\d{3,4})",
					"$1 $2",
					["[169]|2(?:[235]|4[1-35-9])|52"]
				], [
					"(\\d{3})(\\d{5})",
					"$1 $2",
					["[245]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:[23]\\d\\d|4(?:[1-35-9]\\d|44)|5(?:0[034]|[2-46]\\d|5[1-3]|7[1-7]))\\d{4}", [8]],
					["(?:41\\d\\d|5(?:(?:[05]\\d|1[0-7]|6[56])\\d|2(?:22|5[25])|7(?:55|77)|88[58])|6(?:(?:0[034679]|5[015-9]|6\\d)\\d|1(?:00|11|6[16])|2[26]2|3[36]3|4[46]4|7(?:0[013-9]|[67]\\d)|8[68]8|9(?:[069]\\d|3[039]))|9(?:(?:[04679]\\d|8[057-9])\\d|1(?:1[01]|99)|2(?:00|2\\d)|3(?:00|3[03])|5(?:00|5\\d)))\\d{4}", [8]],
					["18\\d{5}", [7]]
				]
			],
			"KY": [
				"1",
				"011",
				"(?:345|[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-9]\\d{6})$|1",
				"345$1",
				0,
				"345",
				[
					["345(?:2(?:22|3[23]|44|66)|333|444|6(?:23|38|40)|7(?:30|4[35-79]|6[6-9]|77)|8(?:00|1[45]|4[89]|88)|9(?:14|4[035-9]))\\d{4}"],
					["345(?:32[1-9]|42[0-4]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|82[56]|9(?:1[679]|2[2-9]|3[06-9]|90))\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["(?:345976|900[2-9]\\d\\d)\\d{4}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"KZ": [
				"7",
				"810",
				"(?:33622|8\\d{8})\\d{5}|[78]\\d{9}",
				[10, 14],
				0,
				"8",
				0,
				0,
				0,
				0,
				"33|7",
				[
					["(?:33622|7(?:1(?:0(?:[23]\\d|4[0-3]|59|63)|1(?:[23]\\d|4[0-79]|59)|2(?:[23]\\d|59)|3(?:2\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\d|3[013-9]|5[1-9]|97)|5(?:2\\d|3[1-9]|4[0-7]|59)|6(?:[2-4]\\d|5[19]|61)|72\\d|8(?:[27]\\d|3[1-46-9]|4[0-5]|59))|2(?:1(?:[23]\\d|4[46-9]|5[3469])|2(?:2\\d|3[0679]|46|5[12679])|3(?:[2-4]\\d|5[139])|4(?:2\\d|3[1-35-9]|59)|5(?:[23]\\d|4[0-8]|59|61)|6(?:2\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\d|40|5[279])|8(?:[23]\\d|4[0-3]|59)|9(?:2\\d|3[124578]|59))))\\d{5}", [10]],
					["7(?:0[0-25-8]|47|6[0-4]|7[15-8]|85)\\d{7}", [10]],
					["8(?:00|108\\d{3})\\d{7}"],
					["809\\d{7}", [10]],
					["808\\d{7}", [10]],
					0,
					0,
					0,
					["751\\d{7}", [10]]
				],
				"8~10"
			],
			"LA": [
				"856",
				"00",
				"[23]\\d{9}|3\\d{8}|(?:[235-8]\\d|41)\\d{6}",
				[
					8,
					9,
					10
				],
				[
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["2[13]|3[14]|[4-8]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3 $4",
						["3"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["[23]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["(?:2[13]|[35-7][14]|41|8[1468])\\d{6}", [8]], ["(?:20(?:[23579]\\d|8[78])|30[24]\\d)\\d{6}|30\\d{7}", [9, 10]]]
			],
			"LB": [
				"961",
				"00",
				"[27-9]\\d{7}|[13-9]\\d{6}",
				[7, 8],
				[[
					"(\\d)(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[13-69]|7(?:[2-57]|62|8[0-6]|9[04-9])|8[02-9]"],
					"0$1"
				], [
					"(\\d{2})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[27-9]"]
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["7(?:62|8[0-6]|9[04-9])\\d{4}|(?:[14-69]\\d|2(?:[14-69]\\d|[78][1-9])|7[2-57]|8[02-9])\\d{5}"],
					["(?:(?:3|81)\\d|7(?:[01]\\d|6[013-9]|8[7-9]|9[1-3]))\\d{5}"],
					0,
					["9[01]\\d{6}", [8]],
					0,
					0,
					0,
					0,
					0,
					["80\\d{6}", [8]]
				]
			],
			"LC": [
				"1",
				"011",
				"(?:[58]\\d\\d|758|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-8]\\d{6})$|1",
				"758$1",
				0,
				"758",
				[
					["758(?:234|4(?:30|5\\d|6[2-9]|8[0-2])|57[0-2]|(?:63|75)8)\\d{4}"],
					["758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\d|3[0-3])|812)\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"LI": [
				"423",
				"00",
				"[68]\\d{8}|(?:[2378]\\d|90)\\d{5}",
				[7, 9],
				[
					[
						"(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3",
						["[2379]|8(?:0[09]|7)", "[2379]|8(?:0(?:02|9)|7)"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["8"]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["69"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["6"]
					]
				],
				"0",
				0,
				"(1001)|0",
				0,
				0,
				0,
				[
					["(?:2(?:01|1[27]|2[024]|3\\d|6[02-578]|96)|3(?:[24]0|33|7[0135-7]|8[048]|9[0269]))\\d{4}", [7]],
					["(?:6(?:(?:4[5-9]|5[0-46-9])\\d|6(?:[024-6]\\d|[17]0|3[7-9]))\\d|7(?:[37-9]\\d|42|56))\\d{4}"],
					["8002[28]\\d\\d|80(?:05\\d|9)\\d{4}"],
					["90(?:02[258]|1(?:23|3[14])|66[136])\\d\\d", [7]],
					0,
					["697(?:42|56|[78]\\d)\\d{4}", [9]],
					["870(?:28|87)\\d\\d", [7]]
				]
			],
			"LK": [
				"94",
				"00",
				"[1-9]\\d{8}",
				[9],
				[[
					"(\\d{2})(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["7"],
					"0$1"
				], [
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[1-689]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:12[2-9]|602|8[12]\\d|9(?:1\\d|22|9[245]))\\d{6}|(?:11|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\d{6}"],
					["7(?:[0-25-8]\\d|4[0-4])\\d{6}"],
					0,
					0,
					0,
					0,
					["1973\\d{5}"]
				]
			],
			"LR": [
				"231",
				"00",
				"(?:[2457]\\d|33|88)\\d{7}|(?:2\\d|[4-6])\\d{6}",
				[
					7,
					8,
					9
				],
				[
					[
						"(\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["4[67]|[56]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["2"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[2-578]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["2\\d{7}", [8]],
					["(?:(?:(?:22|33)0|555|7(?:6[01]|7\\d)|88\\d)\\d|4(?:240|[67]))\\d{5}|[56]\\d{6}", [7, 9]],
					0,
					["332(?:02|[34]\\d)\\d{4}", [9]]
				]
			],
			"LS": [
				"266",
				"00",
				"(?:[256]\\d\\d|800)\\d{5}",
				[8],
				[[
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["[2568]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2\\d{7}"],
					["[56]\\d{7}"],
					["800[1256]\\d{4}"]
				]
			],
			"LT": [
				"370",
				"00",
				"(?:[3469]\\d|52|[78]0)\\d{6}",
				[8],
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["52[0-7]"],
						"(0-$1)",
						1
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["[7-9]"],
						"0 $1",
						1
					],
					[
						"(\\d{2})(\\d{6})",
						"$1 $2",
						["37|4(?:[15]|6[1-8])"],
						"(0-$1)",
						1
					],
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						["[3-6]"],
						"(0-$1)",
						1
					]
				],
				"0",
				0,
				"[08]",
				0,
				0,
				0,
				[
					["(?:3[1478]|4[124-6]|52)\\d{6}"],
					["6\\d{7}"],
					["80[02]\\d{5}"],
					["9(?:0[0239]|10)\\d{5}"],
					["70[05]\\d{5}"],
					0,
					["70[67]\\d{5}"],
					0,
					["[89]01\\d{5}"],
					["808\\d{5}"]
				]
			],
			"LU": [
				"352",
				"00",
				"35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}",
				[
					4,
					5,
					6,
					7,
					8,
					9,
					10,
					11
				],
				[
					[
						"(\\d{2})(\\d{3})",
						"$1 $2",
						["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3",
						["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]
					],
					[
						"(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["20[2-689]"]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})",
						"$1 $2 $3 $4",
						["2(?:[0367]|4[3-8])"]
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["80[01]|90[015]"]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3 $4",
						["20"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["6"]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})",
						"$1 $2 $3 $4 $5",
						["2(?:[0367]|4[3-8])"]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})",
						"$1 $2 $3 $4",
						["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"]
					]
				],
				0,
				0,
				"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)",
				0,
				0,
				0,
				[
					["(?:35[013-9]|80[2-9]|90[89])\\d{1,8}|(?:2[2-9]|3[0-46-9]|[457]\\d|8[13-9]|9[2-579])\\d{2,9}"],
					["6(?:[269][18]|5[1568]|7[189]|81)\\d{6}", [9]],
					["800\\d{5}", [8]],
					["90[015]\\d{5}", [8]],
					0,
					0,
					0,
					0,
					["20(?:1\\d{5}|[2-689]\\d{1,7})", [
						4,
						5,
						6,
						7,
						8,
						9,
						10
					]],
					["801\\d{5}", [8]]
				]
			],
			"LV": [
				"371",
				"00",
				"(?:[268]\\d|90)\\d{6}",
				[8],
				[[
					"(\\d{2})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[269]|8[01]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["6\\d{7}"],
					["2333[0-8]\\d{3}|2(?:[0-24-9]\\d\\d|3(?:0[07]|[14-9]\\d|2[02-9]|3[0-24-9]))\\d{4}"],
					["80\\d{6}"],
					["90\\d{6}"],
					0,
					0,
					0,
					0,
					0,
					["81\\d{6}"]
				]
			],
			"LY": [
				"218",
				"00",
				"[2-9]\\d{8}",
				[9],
				[[
					"(\\d{2})(\\d{7})",
					"$1-$2",
					["[2-9]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["(?:2(?:0[56]|[1-6]\\d|7[124579]|8[124])|3(?:1\\d|2[2356])|4(?:[17]\\d|2[1-357]|5[2-4]|8[124])|5(?:[1347]\\d|2[1-469]|5[13-5]|8[1-4])|6(?:[1-479]\\d|5[2-57]|8[1-5])|7(?:[13]\\d|2[13-79])|8(?:[124]\\d|5[124]|84))\\d{6}"], ["9[1-6]\\d{7}"]]
			],
			"MA": [
				"212",
				"00",
				"[5-8]\\d{8}",
				[9],
				[
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["5[45]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{5})",
						"$1-$2",
						["5(?:2[2-46-9]|3[3-9]|9)|8(?:0[89]|92)"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{7})",
						"$1-$2",
						["8"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{6})",
						"$1-$2",
						["[5-7]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["5(?:2(?:[0-25-79]\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}"],
					["(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[0167]\\d|2[0-467]|5[0-3]|8[0-7]))\\d{6}"],
					["80[0-7]\\d{6}"],
					["89\\d{7}"],
					0,
					0,
					0,
					0,
					["(?:592(?:4[0-2]|93)|80[89]\\d\\d)\\d{4}"]
				]
			],
			"MC": [
				"377",
				"00",
				"(?:[3489]|6\\d)\\d{7}",
				[8, 9],
				[
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["4"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[389]"]
					],
					[
						"(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4 $5",
						["6"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:870|9[2-47-9]\\d)\\d{5}", [8]],
					["4(?:[469]\\d|5[1-9])\\d{5}|(?:3|6\\d)\\d{7}"],
					["(?:800|90\\d)\\d{5}", [8]]
				]
			],
			"MD": [
				"373",
				"00",
				"(?:[235-7]\\d|[89]0)\\d{6}",
				[8],
				[
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						["[89]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["22|3"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["[25-7]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:(?:2[1-9]|3[1-79])\\d|5(?:33|5[257]))\\d{5}"],
					["562\\d{5}|(?:6\\d|7[16-9])\\d{6}"],
					["800\\d{5}"],
					["90[056]\\d{5}"],
					0,
					0,
					["803\\d{5}"],
					0,
					["3[08]\\d{6}"],
					["808\\d{5}"]
				]
			],
			"ME": [
				"382",
				"00",
				"(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}",
				[8, 9],
				[[
					"(\\d{2})(\\d{3})(\\d{3,4})",
					"$1 $2 $3",
					["[2-9]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:20[2-8]|3(?:[0-2][2-7]|3[24-7])|4(?:0[2-467]|1[2467])|5(?:0[2467]|1[24-7]|2[2-467]))\\d{5}", [8]],
					["6(?:[07-9]\\d|3[024]|6[0-25])\\d{5}", [8]],
					["80(?:[0-2578]|9\\d)\\d{5}"],
					["9(?:4[1568]|5[178])\\d{5}", [8]],
					0,
					0,
					["77[1-9]\\d{5}", [8]],
					0,
					["78[1-49]\\d{5}", [8]]
				]
			],
			"MF": [
				"590",
				"00",
				"(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}",
				[9],
				0,
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\d{4}"],
					["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],
					["80[0-5]\\d{6}"],
					0,
					0,
					0,
					0,
					0,
					["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]
				]
			],
			"MG": [
				"261",
				"00",
				"[23]\\d{8}",
				[9],
				[[
					"(\\d{2})(\\d{2})(\\d{3})(\\d{2})",
					"$1 $2 $3 $4",
					["[23]"],
					"0$1"
				]],
				"0",
				0,
				"([24-9]\\d{6})$|0",
				"20$1",
				0,
				0,
				[
					["2072[29]\\d{4}|20(?:2\\d|4[47]|5[3467]|6[279]|7[356]|8[268]|9[2457])\\d{5}"],
					["3[2-47-9]\\d{7}"],
					0,
					0,
					0,
					0,
					0,
					0,
					["22\\d{7}"]
				]
			],
			"MH": [
				"692",
				"011",
				"329\\d{4}|(?:[256]\\d|45)\\d{5}",
				[7],
				[[
					"(\\d{3})(\\d{4})",
					"$1-$2",
					["[2-6]"]
				]],
				"1",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:247|528|625)\\d{4}"],
					["(?:(?:23|54)5|329|45[35-8])\\d{4}"],
					0,
					0,
					0,
					0,
					0,
					0,
					["635\\d{4}"]
				]
			],
			"MK": [
				"389",
				"00",
				"[2-578]\\d{7}",
				[8],
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["2|34[47]|4(?:[37]7|5[47]|64)"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[347]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d)(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[58]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:(?:2(?:62|77)0|3444)\\d|4[56]440)\\d{3}|(?:34|4[357])700\\d{3}|(?:2(?:[0-3]\\d|5[0-578]|6[01]|82)|3(?:1[3-68]|[23][2-68]|4[23568])|4(?:[23][2-68]|4[3-68]|5[2568]|6[25-8]|7[24-68]|8[4-68]))\\d{5}"],
					["7(?:3555|(?:474|9[019]7)7)\\d{3}|7(?:[0-25-8]\\d\\d|3(?:[1-478]\\d|6[01])|4(?:2\\d|60|7[01578])|9(?:[2-4]\\d|5[01]|7[015]))\\d{4}"],
					["800\\d{5}"],
					["5\\d{7}"],
					0,
					0,
					0,
					0,
					0,
					["8(?:0[1-9]|[1-9]\\d)\\d{5}"]
				]
			],
			"ML": [
				"223",
				"00",
				"[24-9]\\d{7}",
				[8],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[24-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:07[0-8]|12[67])\\d{4}|(?:2(?:02|1[4-689])|4(?:0[0-4]|4[1-59]))\\d{5}"],
					["2(?:0(?:01|79)|17\\d)\\d{4}|(?:5[0-3]|[679]\\d|8[2-59])\\d{6}"],
					["80\\d{6}"]
				]
			],
			"MM": [
				"95",
				"00",
				"1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}",
				[
					6,
					7,
					8,
					9,
					10
				],
				[
					[
						"(\\d)(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["16|2"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["4(?:[2-46]|5[3-5])|5|6(?:[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-5]|(?:60|86)[23]"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[12]|452|678|86", "[12]|452|6788|86"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[4-7]|8[1-35]"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{4,6})",
						"$1 $2 $3",
						["9(?:2[0-4]|[35-9]|4[137-9])"],
						"0$1"
					],
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["2"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["8"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["92"],
						"0$1"
					],
					[
						"(\\d)(\\d{5})(\\d{4})",
						"$1 $2 $3",
						["9"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1(?:(?:12|[28]\\d|3[56]|7[3-6]|9[0-6])\\d|4(?:2[29]|7[0-2]|83)|6)|2(?:2(?:00|8[34])|4(?:0\\d|22|7[0-2]|83)|51\\d\\d)|4(?:2(?:2\\d\\d|48[013])|3(?:20\\d|4(?:70|83)|56)|420\\d|5(?:2\\d|470))|6(?:0(?:[23]|88\\d)|(?:124|[56]2\\d)\\d|2472|3(?:20\\d|470)|4(?:2[04]\\d|472)|7(?:3\\d\\d|4[67]0|8(?:[01459]\\d|8))))\\d{4}|5(?:2(?:2\\d{5,6}|47[02]\\d{4})|(?:3472|4(?:2(?:1|86)|470)|522\\d|6(?:20\\d|483)|7(?:20\\d|48[01])|8(?:20\\d|47[02])|9(?:20\\d|470))\\d{4})|7(?:(?:0470|4(?:25\\d|470)|5(?:202|470|96\\d))\\d{4}|1(?:20\\d{4,5}|4(?:70|83)\\d{4}))|8(?:1(?:2\\d{5,6}|4(?:10|7[01]\\d)\\d{3})|2(?:2\\d{5,6}|(?:320|490\\d)\\d{3})|(?:3(?:2\\d\\d|470)|4[24-7]|5(?:(?:2\\d|51)\\d|4(?:[1-35-9]\\d|4[0-57-9]))|6[23])\\d{4})|(?:1[2-6]\\d|4(?:2[24-8]|3[2-7]|[46][2-6]|5[3-5])|5(?:[27][2-8]|3[2-68]|4[24-8]|5[23]|6[2-4]|8[24-7]|9[2-7])|6(?:[19]20|42[03-6]|(?:52|7[45])\\d)|7(?:[04][24-8]|[15][2-7]|22|3[2-4])|8(?:1[2-689]|2[2-8]|(?:[35]2|64)\\d))\\d{4}|25\\d{5,6}|(?:2[2-9]|6(?:1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7[235-7]|8[245]|9[24])|8(?:3[24]|5[245]))\\d{4}", [
						6,
						7,
						8,
						9
					]],
					["(?:17[01]|9(?:2(?:[0-4]|[56]\\d\\d)|(?:3(?:[0-36]|4\\d)|(?:6\\d|8[89]|9[4-8])\\d|7(?:3|40|[5-9]\\d))\\d|4(?:(?:[0245]\\d|[1379])\\d|88)|5[0-6])\\d)\\d{4}|9[69]1\\d{6}|9(?:[68]\\d|9[089])\\d{5}", [
						7,
						8,
						9,
						10
					]],
					["80080(?:0[1-9]|2\\d)\\d{3}", [10]],
					0,
					0,
					0,
					0,
					0,
					["1333\\d{4}", [8]]
				]
			],
			"MN": [
				"976",
				"001",
				"[12]\\d{7,9}|[5-9]\\d{7}",
				[
					8,
					9,
					10
				],
				[
					[
						"(\\d{2})(\\d{2})(\\d{4})",
						"$1 $2 $3",
						["[12]1"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						["[5-9]"]
					],
					[
						"(\\d{3})(\\d{5,6})",
						"$1 $2",
						["[12]2[1-3]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{5,6})",
						"$1 $2",
						["[12](?:27|3[2-8]|4[2-68]|5[1-4689])", "[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"],
						"0$1"
					],
					[
						"(\\d{5})(\\d{4,5})",
						"$1 $2",
						["[12]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["[12]2[1-3]\\d{5,6}|(?:(?:[12](?:1|27)|5[368])\\d\\d|7(?:0(?:[0-5]\\d|7[078]|80)|128))\\d{4}|[12](?:3[2-8]|4[2-68]|5[1-4689])\\d{6,7}"],
					["(?:83[01]|92[0139])\\d{5}|(?:5[05]|6[069]|72|8[015689]|9[013-9])\\d{6}", [8]],
					0,
					0,
					0,
					0,
					0,
					0,
					["712[0-79]\\d{4}|7(?:1[013-9]|[5-9]\\d)\\d{5}", [8]]
				]
			],
			"MO": [
				"853",
				"00",
				"0800\\d{3}|(?:28|[68]\\d)\\d{6}",
				[7, 8],
				[[
					"(\\d{4})(\\d{3})",
					"$1 $2",
					["0"]
				], [
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["[268]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:28[2-9]|8(?:11|[2-57-9]\\d))\\d{5}", [8]],
					["6800[0-79]\\d{3}|6(?:[235]\\d\\d|6(?:0[0-5]|[1-9]\\d)|8(?:0[1-9]|[14-8]\\d|2[5-9]|[39][0-4]))\\d{4}", [8]],
					["0800\\d{3}", [7]]
				]
			],
			"MP": [
				"1",
				"011",
				"[58]\\d{9}|(?:67|90)0\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-9]\\d{6})$|1",
				"670$1",
				0,
				"670",
				[
					["670(?:2(?:3[3-7]|56|8[4-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\d{4}"],
					[""],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"MQ": [
				"596",
				"00",
				"(?:596\\d|7091)\\d{5}|(?:69|[89]\\d)\\d{7}",
				[9],
				[[
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[5-79]|8(?:0[6-9]|[36])"],
					"0$1"
				], [
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["8"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:596(?:[03-7]\\d|1[05]|2[7-9]|8[0-39]|9[04-9])|80[6-9]\\d\\d|9(?:477[6-9]|767[4589]))\\d{4}"],
					["(?:69[67]\\d\\d|7091[0-3])\\d{4}"],
					["80[0-5]\\d{6}"],
					["8[129]\\d{7}"],
					0,
					0,
					0,
					0,
					["9(?:397[0-3]|477[0-5]|76(?:6\\d|7[0-367]))\\d{4}"]
				]
			],
			"MR": [
				"222",
				"00",
				"(?:[2-4]\\d\\d|800)\\d{5}",
				[8],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[2-48]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:25[08]|35\\d|45[1-7])\\d{5}"],
					["[2-4][0-46-9]\\d{6}"],
					["800\\d{5}"]
				]
			],
			"MS": [
				"1",
				"011",
				"(?:[58]\\d\\d|664|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([34]\\d{6})$|1",
				"664$1",
				0,
				"664",
				[
					["6644(?:1[0-3]|91)\\d{4}"],
					["664(?:3(?:49|9[1-6])|49[2-6])\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"MT": [
				"356",
				"00",
				"3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}",
				[8],
				[[
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["[2357-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["20(?:3[1-4]|6[059])\\d{4}|2(?:0[19]|[1-357]\\d|60)\\d{5}"],
					["(?:7(?:210|[79]\\d\\d)|9(?:[29]\\d\\d|69[67]|8(?:1[1-3]|89|97)))\\d{4}"],
					["800(?:02|[3467]\\d)\\d{3}"],
					["5(?:0(?:0(?:37|43)|(?:6\\d|70|9[0168])\\d)|[12]\\d0[1-5])\\d{3}"],
					0,
					0,
					["501\\d{5}"],
					["7117\\d{4}"],
					["3550\\d{4}"]
				]
			],
			"MU": [
				"230",
				"0(?:0|[24-7]0|3[03])",
				"(?:[57]|8\\d\\d)\\d{7}|[2-468]\\d{6}",
				[
					7,
					8,
					10
				],
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						["[2-46]|8[013]"]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						["[57]"]
					],
					[
						"(\\d{5})(\\d{5})",
						"$1 $2",
						["8"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:[0346-8]\\d|1[0-8])|4(?:[013568]\\d|2[4-8]|71|90)|54(?:[3-5]\\d|71)|6\\d\\d|8(?:14|3[129]))\\d{4}", [7, 8]],
					["5(?:4(?:2[1-389]|7[1-9])|87[15-8])\\d{4}|(?:5(?:2[5-9]|4[3-689]|[57]\\d|8[0-689]|9[0-8])|7(?:0[0-6]|3[013]))\\d{5}", [8]],
					["802\\d{7}|80[0-2]\\d{4}", [7, 10]],
					["30\\d{5}", [7]],
					0,
					0,
					0,
					["219\\d{4}", [7]],
					["3(?:20|9\\d)\\d{4}", [7]]
				],
				"020"
			],
			"MV": [
				"960",
				"0(?:0|19)",
				"(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}",
				[7, 10],
				[[
					"(\\d{3})(\\d{4})",
					"$1-$2",
					["[34679]"]
				], [
					"(\\d{3})(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["[89]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:3(?:0[0-4]|3[0-59])|6(?:[58][024689]|6[024-68]|7[02468]))\\d{4}", [7]],
					["(?:46[46]|[79]\\d\\d)\\d{4}", [7]],
					["800\\d{7}", [10]],
					["900\\d{7}", [10]],
					0,
					0,
					["4(?:0[01]|50)\\d{4}", [7]]
				],
				"00"
			],
			"MW": [
				"265",
				"00",
				"(?:[1289]\\d|31|77)\\d{7}|1\\d{6}",
				[7, 9],
				[
					[
						"(\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["1[2-9]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["2"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[137-9]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["(?:1[2-9]|2[12]\\d\\d)\\d{5}"], ["111\\d{6}|(?:31|77|[89][89])\\d{7}", [9]]]
			],
			"MX": [
				"52",
				"0[09]",
				"[2-9]\\d{9}",
				[10],
				[[
					"(\\d{2})(\\d{4})(\\d{4})",
					"$1 $2 $3",
					["33|5[56]|81"]
				], [
					"(\\d{3})(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["[2-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:0[01]|2\\d|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[267][1-9]|3[1-8]|[45]\\d|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-36-9]|6[0-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1346][1-9]|[27]\\d|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[0-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69]\\d|7[12]|8[1-8]))\\d{7}"],
					["(?:2(?:2\\d|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[267][1-9]|3[1-8]|[45]\\d|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-36-9]|6[0-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1346][1-9]|[27]\\d|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[0-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69]\\d|7[12]|8[1-8]))\\d{7}"],
					["8(?:00|88)\\d{7}"],
					["900\\d{7}"],
					["500\\d{7}"],
					0,
					0,
					0,
					0,
					["300\\d{7}"]
				],
				"00"
			],
			"MY": [
				"60",
				"00",
				"1\\d{8,9}|(?:3\\d|[4-9])\\d{7}",
				[
					8,
					9,
					10
				],
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1-$2 $3",
						["[4-79]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1-$2 $3",
						["1(?:[02469]|[378][1-9]|53)|8", "1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8"],
						"0$1"
					],
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1-$2 $3",
						["3"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{2})(\\d{4})",
						"$1-$2-$3-$4",
						["1(?:[367]|80)"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1-$2 $3",
						["15"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1-$2 $3",
						["1"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["427[01]\\d{4}|(?:3(?:2[0-36-9]|3[0-368]|4[0-278]|5[0-24-8]|6[0-467]|7[1246-9]|8\\d|9[0-57])\\d|4(?:2[0-689]|[3-79]\\d|8[1-35689])|5(?:2[0-589]|[3468]\\d|5[0-489]|7[1-9]|9[23])|6(?:2[2-9]|3[1357-9]|[46]\\d|5[0-6]|7[0-35-9]|85|9[015-8])|7(?:[2579]\\d|3[03-68]|4[0-8]|6[5-9]|8[0-35-9])|8(?:[24][2-8]|3[2-5]|5[2-7]|6[2-589]|7[2-578]|[89][2-9])|9(?:0[57]|13|[25-7]\\d|[3489][0-8]))\\d{5}", [8, 9]],
					["1(?:1888[689]|4400|8(?:47|8[27])[0-4])\\d{4}|1(?:0(?:[23568]\\d|4[0-6]|7[016-9]|9[0-8])|1(?:[1-5]\\d\\d|6(?:0[5-9]|[1-9]\\d)|7(?:[0-4]\\d|5[0-7]))|(?:[269]\\d|[37][1-9]|4[235-9])\\d|5(?:31|9\\d\\d)|8(?:1[23]|[236]\\d|4[06]|5(?:46|[7-9])|7[016-9]|8[01]|9[0-8]))\\d{5}", [9, 10]],
					["1[378]00\\d{6}", [10]],
					["1600\\d{6}", [10]],
					0,
					0,
					0,
					0,
					["15(?:4(?:6[0-4]\\d|8(?:0[125]|[17]\\d|21|3[01]|4[01589]|5[014]|6[02]))|6(?:32[0-6]|78\\d))\\d{4}", [10]]
				]
			],
			"MZ": [
				"258",
				"00",
				"(?:2|8\\d)\\d{7}",
				[8, 9],
				[[
					"(\\d{2})(\\d{3})(\\d{3,4})",
					"$1 $2 $3",
					["2|8[2-79]"]
				], [
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["8"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:[1346]\\d|5[0-2]|[78][12]|93)\\d{5}", [8]],
					["8[2-79]\\d{7}", [9]],
					["800\\d{6}", [9]]
				]
			],
			"NA": [
				"264",
				"00",
				"[68]\\d{7,8}",
				[8, 9],
				[
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["88"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["6"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["87"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["8"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["64426\\d{3}|6(?:1(?:2[2-7]|3[01378]|4[0-4])|254|32[0237]|4(?:27|41|5[25])|52[236-8]|626|7(?:2[2-4]|30))\\d{4,5}|6(?:1(?:(?:0\\d|2[0189]|3[24-69]|4[5-9])\\d|17|69|7[014])|2(?:17|5[0-36-8]|69|70)|3(?:17|2[14-689]|34|6[289]|7[01]|81)|4(?:17|2[0-2]|4[06]|5[0137]|69|7[01])|5(?:17|2[0459]|69|7[01])|6(?:17|25|38|42|69|7[01])|7(?:17|2[569]|3[13]|6[89]|7[01]))\\d{4}"],
					["(?:60|8[1245])\\d{7}", [9]],
					["80\\d{7}", [9]],
					["8701\\d{5}", [9]],
					0,
					0,
					0,
					0,
					["8(?:3\\d\\d|86)\\d{5}"]
				]
			],
			"NC": [
				"687",
				"00",
				"(?:050|[2-57-9]\\d\\d)\\d{3}",
				[6],
				[[
					"(\\d{2})(\\d{2})(\\d{2})",
					"$1.$2.$3",
					["[02-57-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2[03-9]|3[0-5]|4[1-7]|88)\\d{4}"],
					["(?:[579]\\d|8[0-79])\\d{4}"],
					["050\\d{3}"],
					["36\\d{4}"]
				]
			],
			"NE": [
				"227",
				"00",
				"[027-9]\\d{7}",
				[8],
				[[
					"(\\d{2})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["08"]
				], [
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[089]|2[013]|7[0467]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:0(?:20|3[1-8]|4[13-5]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\d{4}"],
					["(?:23|7[0467]|[89]\\d)\\d{6}"],
					["08\\d{6}"],
					["09\\d{6}"]
				]
			],
			"NF": [
				"672",
				"00",
				"[13]\\d{5}",
				[6],
				[[
					"(\\d{2})(\\d{4})",
					"$1 $2",
					["1[0-3]"]
				], [
					"(\\d)(\\d{5})",
					"$1 $2",
					["[13]"]
				]],
				0,
				0,
				"([0-258]\\d{4})$",
				"3$1",
				0,
				0,
				[["(?:1(?:06|17|28|39)|3[0-2]\\d)\\d{3}"], ["(?:14|3[58])\\d{4}"]]
			],
			"NG": [
				"234",
				"009",
				"(?:20|9\\d)\\d{8}|[78]\\d{9,13}",
				[
					10,
					11,
					12,
					13,
					14
				],
				[
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[7-9]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["20[129]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{2})(\\d{4})",
						"$1 $2 $3",
						["2"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{4})(\\d{4,5})",
						"$1 $2 $3",
						["[78]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{5})(\\d{5,6})",
						"$1 $2 $3",
						["[78]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["20(?:[1259]\\d|3[013-9]|4[1-8]|6[024-689]|7[1-79]|8[2-9])\\d{6}", [10]],
					["(?:702[0-24-9]|819[01])\\d{6}|(?:7(?:0[13-9]|[12]\\d)|8(?:0[1-9]|1[0-8])|9(?:0[1-9]|1[1-6]))\\d{7}", [10]],
					["800\\d{7,11}"],
					0,
					0,
					0,
					["700\\d{7,11}"]
				]
			],
			"NI": [
				"505",
				"00",
				"(?:1800|[25-8]\\d{3})\\d{4}",
				[8],
				[[
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["[125-8]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2\\d{7}"],
					["(?:5(?:5[0-7]|[78]\\d)|6(?:20|3[035]|4[045]|5[05]|77|8[1-9]|9[059])|(?:7[5-8]|8\\d)\\d)\\d{5}"],
					["1800\\d{4}"]
				]
			],
			"NL": [
				"31",
				"00",
				"(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|8\\d{6,9}|9\\d{6,10}|1\\d{4,5}",
				[
					5,
					6,
					7,
					8,
					9,
					10,
					11
				],
				[
					[
						"(\\d{3})(\\d{4,7})",
						"$1 $2",
						["[89]0"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{7})",
						"$1 $2",
						["66"],
						"0$1"
					],
					[
						"(\\d)(\\d{8})",
						"$1 $2",
						["6"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[1-578]|91"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{5})",
						"$1 $2 $3",
						["9"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1(?:[035]\\d|1[13-578]|6[124-8]|7[24]|8[0-467])|2(?:[0346]\\d|2[2-46-9]|5[125]|9[479])|3(?:[03568]\\d|1[3-8]|2[01]|4[1-8])|4(?:[0356]\\d|1[1-368]|7[58]|8[15-8]|9[23579])|5(?:[0358]\\d|[19][1-9]|2[1-57-9]|4[13-8]|6[126]|7[0-3578])|7\\d\\d)\\d{6}", [9]],
					["(?:6[1-58]|970\\d)\\d{7}", [9, 11]],
					["800\\d{4,7}", [
						7,
						8,
						9,
						10
					]],
					["90[069]\\d{4,7}", [
						7,
						8,
						9,
						10
					]],
					0,
					0,
					["140(?:1[035]|2[0346]|3[03568]|4[0356]|5[0358]|8[458])|(?:140(?:1[16-8]|2[259]|3[124]|4[17-9]|5[124679]|7)|8[478]\\d{6})\\d", [
						5,
						6,
						9
					]],
					["66\\d{7}", [9]],
					["(?:85|91)\\d{7}", [9]]
				]
			],
			"NO": [
				"47",
				"00",
				"(?:0|[2-9]\\d{3})\\d{4}",
				[5, 8],
				[[
					"(\\d{3})(\\d{2})(\\d{3})",
					"$1 $2 $3",
					["8"]
				], [
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[2-79]"]
				]],
				0,
				0,
				0,
				0,
				0,
				"[02-689]|7[0-8]",
				[
					["(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\d{6}", [8]],
					["(?:4[015-8]|9\\d)\\d{6}", [8]],
					["80[01]\\d{5}", [8]],
					["82[09]\\d{5}", [8]],
					["880\\d{5}", [8]],
					["81[23]\\d{5}", [8]],
					["(?:0[235-9]|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}"],
					0,
					["85[0-5]\\d{5}", [8]],
					["810(?:0[0-6]|[2-8]\\d)\\d{3}", [8]]
				]
			],
			"NP": [
				"977",
				"00",
				"(?:1\\d|9)\\d{9}|[1-9]\\d{7}",
				[
					8,
					10,
					11
				],
				[
					[
						"(\\d)(\\d{7})",
						"$1-$2",
						["1[2-6]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{6})",
						"$1-$2",
						["1[01]|[2-8]|9(?:[1-59]|[67][2-6])"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{7})",
						"$1-$2",
						["9"]
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1[0-6]\\d|99[02-6])\\d{5}|(?:2[13-79]|3[135-8]|4[146-9]|5[135-7]|6[13-9]|7[15-9]|8[1-46-9]|9[1-7])[2-6]\\d{5}", [8]],
					["9(?:00|6[0-3]|7[024-6]|8[0-24-68])\\d{7}", [10]],
					["1(?:66001|800\\d\\d)\\d{5}", [11]]
				]
			],
			"NR": [
				"674",
				"00",
				"(?:222|444|(?:55|8\\d)\\d|666|777|999)\\d{4}",
				[7],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[24-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["444\\d{4}"], ["(?:222|55[3-9]|666|777|8\\d\\d|999)\\d{4}"]]
			],
			"NU": [
				"683",
				"00",
				"(?:[4-7]|888\\d)\\d{3}",
				[4, 7],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["8"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["[47]\\d{3}", [4]], ["(?:[56]|888[1-9])\\d{3}"]]
			],
			"NZ": [
				"64",
				"0(?:0|161)",
				"[1289]\\d{9}|50\\d{5}(?:\\d{2,3})?|[27-9]\\d{7,8}|(?:[34]\\d|6[0-35-9])\\d{6}|8\\d{4,6}",
				[
					5,
					6,
					7,
					8,
					9,
					10
				],
				[
					[
						"(\\d{2})(\\d{3,8})",
						"$1 $2",
						["8[1-79]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2,3})",
						"$1 $2 $3",
						["50[036-8]|8|90", "50(?:[0367]|88)|8|90"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["24|[346]|7[2-57-9]|9[2-9]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["2(?:10|74)|[589]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						["1|2[028]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,5})",
						"$1 $2 $3",
						["2(?:[169]|7[0-35-9])|7"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["240\\d{5}|(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\d{6}", [8]],
					["2(?:[0-27-9]\\d|6)\\d{6,7}|2(?:1\\d|75)\\d{5}", [
						8,
						9,
						10
					]],
					["508\\d{6,7}|80\\d{6,8}", [
						8,
						9,
						10
					]],
					["(?:1[13-57-9]\\d{5}|50(?:0[08]|30|66|77|88))\\d{3}|90\\d{6,8}", [
						7,
						8,
						9,
						10
					]],
					["70\\d{7}", [9]],
					0,
					["8(?:1[16-9]|22|3\\d|4[045]|5[459]|6[235-9]|7[0-3579]|90)\\d{2,7}"]
				],
				"00"
			],
			"OM": [
				"968",
				"00",
				"(?:1505|[279]\\d{3}|500)\\d{4}|800\\d{5,6}",
				[
					7,
					8,
					9
				],
				[
					[
						"(\\d{3})(\\d{4,6})",
						"$1 $2",
						["[58]"]
					],
					[
						"(\\d{2})(\\d{6})",
						"$1 $2",
						["2"]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						["[179]"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2[1-6]\\d{6}", [8]],
					["(?:1505|90[1-9]\\d)\\d{4}|(?:7[126-9]|9[1-9])\\d{6}", [8]],
					["8007\\d{4,5}|(?:500|800[05])\\d{4}"],
					["900\\d{5}", [8]]
				]
			],
			"PA": [
				"507",
				"00",
				"(?:00800|8\\d{3})\\d{6}|[68]\\d{7}|[1-57-9]\\d{6}",
				[
					7,
					8,
					10,
					11
				],
				[
					[
						"(\\d{3})(\\d{4})",
						"$1-$2",
						["[1-57-9]"]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1-$2",
						["[68]"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["8"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1(?:0\\d|1[479]|2[37]|3[0137]|4[17]|5[05]|6[058]|7[0167]|8[2358]|9[1389])|2(?:[0235-79]\\d|1[0-7]|4[013-9]|8[02-9])|3(?:[047-9]\\d|1[0-8]|2[0-5]|33|5[0-35]|6[068])|4(?:00|3[0-579]|4\\d|7[0-57-9])|5(?:[01]\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-26-8]|3[03]|4[04]|5[05-9]|6[0156]|7[0-24-9]|8[4-9]|90)|8(?:09|2[89]|3\\d|4[0-24-689]|5[014]|8[02])|9(?:0[5-9]|1[0135-8]|2[036-9]|3[35-79]|40|5[0457-9]|6[05-9]|7[04-9]|8[35-8]|9\\d))\\d{4}", [7]],
					["(?:1[16]1|21[89]|6\\d{3}|8(?:1[01]|7[23]))\\d{4}", [7, 8]],
					["800\\d{4,5}|(?:00800|800\\d)\\d{6}"],
					["(?:8(?:22|55|60|7[78]|86)|9(?:00|81))\\d{4}", [7]]
				]
			],
			"PE": [
				"51",
				"00|19(?:1[124]|77|90)00",
				"(?:[14-8]|9\\d)\\d{7}",
				[8, 9],
				[
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						["80"],
						"(0$1)"
					],
					[
						"(\\d)(\\d{7})",
						"$1 $2",
						["1"],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{6})",
						"$1 $2",
						["[4-8]"],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["9"]
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:(?:(?:4[34]|5[14])[0-8]|687)\\d|7(?:173|(?:3[0-8]|55)\\d)|8(?:10[05689]|6(?:0[06-9]|1[6-9]|29)|7(?:0[0569]|[56]0)))\\d{4}|(?:1[0-8]|4[12]|5[236]|6[1-7]|7[246]|8[2-4])\\d{6}", [8]],
					["9\\d{8}", [9]],
					["800\\d{5}", [8]],
					["805\\d{5}", [8]],
					["80[24]\\d{5}", [8]],
					0,
					0,
					0,
					0,
					["801\\d{5}", [8]]
				],
				"00",
				" Anexo "
			],
			"PF": [
				"689",
				"00",
				"4\\d{5}(?:\\d{2})?|8\\d{7,8}",
				[
					6,
					8,
					9
				],
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3",
						["44"]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["4|8[7-9]"]
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["8"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["4(?:0[4-689]|9[4-68])\\d{5}", [8]],
					["8[7-9]\\d{6}", [8]],
					["80[0-5]\\d{6}", [9]],
					0,
					0,
					0,
					["44\\d{4}", [6]],
					0,
					["499\\d{5}", [8]]
				]
			],
			"PG": [
				"675",
				"00|140[1-3]",
				"(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}",
				[7, 8],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["18|[2-69]|85"]
				], [
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["[78]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:(?:3[0-2]|4[257]|5[34]|9[78])\\d|64[1-9]|85[02-46-9])\\d{4}", [7]],
					["(?:7\\d|8[1-38])\\d{6}", [8]],
					["180\\d{4}", [7]],
					0,
					0,
					0,
					0,
					["27[01]\\d{4}", [7]],
					["2(?:0[0-57]|7[568])\\d{4}", [7]]
				],
				"00"
			],
			"PH": [
				"63",
				"00",
				"(?:[2-7]|9\\d)\\d{8}|2\\d{5}|(?:1800|8)\\d{7,9}",
				[
					6,
					8,
					9,
					10,
					11,
					12,
					13
				],
				[
					[
						"(\\d)(\\d{5})",
						"$1 $2",
						["2"],
						"(0$1)"
					],
					[
						"(\\d{4})(\\d{4,6})",
						"$1 $2",
						["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2", "3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"],
						"(0$1)"
					],
					[
						"(\\d{5})(\\d{4})",
						"$1 $2",
						["346|4(?:27|9[35])|883", "3469|4(?:279|9(?:30|56))|8834"],
						"(0$1)"
					],
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["2"],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[3-7]|8[2-8]"],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[89]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["1"]
					],
					[
						"(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})",
						"$1 $2 $3 $4",
						["1"]
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:(?:2[3-8]|3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578])\\d{3}|88(?:22\\d\\d|42))\\d{4}|(?:2|8[2-8]\\d\\d)\\d{5}", [
						6,
						8,
						9,
						10
					]],
					["(?:8(?:1[37]|9[5-8])|9(?:0[5-9]|1[0-24-9]|[235-7]\\d|4[2-9]|8[135-9]|9[1-9]))\\d{7}", [10]],
					["1800\\d{7,9}", [
						11,
						12,
						13
					]]
				]
			],
			"PK": [
				"92",
				"00",
				"122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}",
				[
					8,
					9,
					10,
					11,
					12
				],
				[
					[
						"(\\d{3})(\\d{3})(\\d{2,7})",
						"$1 $2 $3",
						["[89]0"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{5})",
						"$1 $2",
						["1"]
					],
					[
						"(\\d{3})(\\d{6,7})",
						"$1 $2",
						["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])", "9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{7,8})",
						"$1 $2",
						["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"],
						"(0$1)"
					],
					[
						"(\\d{5})(\\d{5})",
						"$1 $2",
						["58"],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{7})",
						"$1 $2",
						["3"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["[24-9]"],
						"(0$1)"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:(?:21|42)[2-9]|58[126])\\d{7}|(?:2[25]|4[0146-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\\d{6,7}|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8]))[2-9]\\d{5,6}", [9, 10]],
					["3(?:[0-247]\\d|3[0-79]|55|64)\\d{7}", [10]],
					["800\\d{5}(?:\\d{3})?", [8, 11]],
					["900\\d{5}", [8]],
					["122\\d{6}", [9]],
					0,
					["(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:0[468]|[1-8])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\d{6}", [11, 12]]
				]
			],
			"PL": [
				"48",
				"00",
				"(?:6|8\\d\\d)\\d{7}|[1-9]\\d{6}(?:\\d{2})?|[26]\\d{5}",
				[
					6,
					7,
					8,
					9,
					10
				],
				[
					[
						"(\\d{5})",
						"$1",
						["19"]
					],
					[
						"(\\d{3})(\\d{3})",
						"$1 $2",
						["11|20|64"]
					],
					[
						"(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1", "(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]
					],
					[
						"(\\d{3})(\\d{2})(\\d{2,3})",
						"$1 $2 $3",
						["64"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)"]
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["1[2-8]|[2-7]|8[1-79]|9[145]"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["8"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["47\\d{7}|(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])(?:[02-9]\\d{6}|1(?:[0-8]\\d{5}|9\\d{3}(?:\\d{2})?))", [7, 9]],
					["2131[89]\\d{4}|21(?:1[013-5]|2\\d|3[2-9])\\d{5}|(?:45|5[0137]|6[069]|7[2389]|88)\\d{7}", [9]],
					["800\\d{6,7}", [9, 10]],
					["70[01346-8]\\d{6}", [9]],
					0,
					0,
					["804\\d{6}", [9]],
					["64\\d{4,7}", [
						6,
						7,
						8,
						9
					]],
					["39\\d{7}", [9]],
					["801\\d{6}", [9]]
				]
			],
			"PM": [
				"508",
				"00",
				"[45]\\d{5}|(?:708|8\\d\\d)\\d{6}",
				[6, 9],
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3",
						["[45]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["7"]
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["8"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:4[1-35-9]|5[0-47-9]|80[6-9]\\d\\d)\\d{4}"],
					["(?:4[02-489]|5[02-9]|708(?:4[0-5]|5[0-6]))\\d{4}"],
					["80[0-5]\\d{6}", [9]],
					["8[129]\\d{7}", [9]]
				]
			],
			"PR": [
				"1",
				"011",
				"(?:[589]\\d\\d|787)\\d{7}",
				[10],
				0,
				"1",
				0,
				0,
				0,
				0,
				"787|939",
				[
					["(?:787|939)[2-9]\\d{6}"],
					[""],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"PS": [
				"970",
				"00",
				"[2489]2\\d{6}|(?:1\\d|5)\\d{8}",
				[
					8,
					9,
					10
				],
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[2489]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["5"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["1"]
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:22[2-47-9]|42[45]|82[014-68]|92[3569])\\d{5}", [8]],
					["5[69]\\d{7}", [9]],
					["1800\\d{6}", [10]],
					0,
					0,
					0,
					0,
					0,
					0,
					["1700\\d{6}", [10]]
				]
			],
			"PT": [
				"351",
				"00",
				"1693\\d{5}|(?:[26-9]\\d|30)\\d{7}",
				[9],
				[[
					"(\\d{2})(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["2[12]"]
				], [
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["16|[236-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:[12]\\d|3[1-689]|4[1-59]|[57][1-9]|6[1-35689]|8[1-69]|9[1256])\\d{6}"],
					["6(?:[06]92(?:30|9\\d)|[35]92(?:[049]\\d|3[034]))\\d{3}|(?:(?:16|6[0356])93|9(?:[1-36]\\d\\d|480))\\d{5}"],
					["80[02]\\d{6}"],
					["(?:6(?:0[178]|4[68])\\d|76(?:0[1-57]|1[2-47]|2[237]))\\d{5}"],
					["884[0-4689]\\d{5}"],
					["600\\d{6}|6[06]92(?:0\\d|3[349]|49)\\d{3}"],
					["70(?:38[01]|596|(?:7\\d|8[17])\\d)\\d{4}"],
					["6(?:222\\d|89(?:00|88|99))\\d{4}"],
					["30\\d{7}"],
					["80(?:8\\d|9[1579])\\d{5}"]
				]
			],
			"PW": [
				"680",
				"01[12]",
				"(?:[24-8]\\d\\d|345|900)\\d{4}",
				[7],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[2-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["(?:2(?:55|77)|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76)|900)\\d{4}"], ["(?:(?:46|83)[0-5]|(?:6[2-4689]|78)0)\\d{4}|(?:45|77|88)\\d{5}"]]
			],
			"PY": [
				"595",
				"00",
				"59\\d{4,6}|9\\d{5,10}|(?:[2-46-8]\\d|5[0-8])\\d{4,7}",
				[
					6,
					7,
					8,
					9,
					10,
					11
				],
				[
					[
						"(\\d{3})(\\d{3,6})",
						"$1 $2",
						["[2-9]0"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{4,5})",
						"$1 $2",
						["2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85"],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]"],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["87"]
					],
					[
						"(\\d{3})(\\d{6})",
						"$1 $2",
						["9(?:[5-79]|8[1-7])"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[2-8]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["9"]
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36])\\d{5,7}|(?:2(?:2[4-68]|[4-68]\\d|7[15]|9[1-5])|3(?:18|3[167]|4[2357]|51|[67]\\d)|4(?:3[12]|5[13]|9[1-47])|5(?:[1-4]\\d|5[02-4])|6(?:3[1-3]|44|7[1-8])|7(?:4[0-4]|5\\d|6[1-578]|75|8[0-8])|858)\\d{5,6}", [
						7,
						8,
						9
					]],
					["9(?:51|6[129]|7[1-6]|8[1-7]|9[1-5])\\d{6}", [9]],
					["9800\\d{5,7}", [
						9,
						10,
						11
					]],
					0,
					0,
					0,
					["[2-9]0\\d{4,7}", [
						6,
						7,
						8,
						9
					]],
					0,
					["8700[0-4]\\d{4}", [9]]
				]
			],
			"QA": [
				"974",
				"00",
				"800\\d{4}|(?:2|800)\\d{6}|(?:0080|[3-7])\\d{7}",
				[
					7,
					8,
					9,
					11
				],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["2[136]|8"]
				], [
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["[3-7]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["4(?:1111|2022)\\d{3}|4(?:[04]\\d\\d|14[0-6]|999)\\d{4}", [8]],
					["[35-7]\\d{7}", [8]],
					["800\\d{4}|(?:0080[01]|800)\\d{6}", [
						7,
						9,
						11
					]],
					0,
					0,
					0,
					0,
					["2[136]\\d{5}", [7]]
				]
			],
			"RE": [
				"262",
				"00",
				"709\\d{6}|(?:26|[689]\\d)\\d{7}",
				[9],
				[[
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[26-9]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["26(?:2\\d\\d|3(?:0\\d|1[0-6]))\\d{4}"],
					["(?:69(?:2\\d\\d|3(?:[06][0-6]|1[0-3]|2[0-2]|3[0-39]|4\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))|7092[0-3])\\d{4}"],
					["80\\d{7}"],
					["89[1-37-9]\\d{6}"],
					0,
					0,
					0,
					0,
					["9(?:399[0-3]|479[0-6]|76(?:2[278]|3[0-37]))\\d{4}"],
					["8(?:1[019]|2[0156]|84|90)\\d{6}"]
				]
			],
			"RO": [
				"40",
				"00",
				"(?:[236-8]\\d|90)\\d{7}|[23]\\d{5}",
				[6, 9],
				[
					[
						"(\\d{3})(\\d{3})",
						"$1 $2",
						["2[3-6]", "2[3-6]\\d9"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4})",
						"$1 $2",
						["219|31"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[23]1"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[236-9]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["[23][13-6]\\d{7}|(?:2(?:19\\d|[3-6]\\d9)|31\\d\\d)\\d\\d"],
					["(?:630|702)0\\d{5}|(?:6(?:00|2\\d)|7(?:0[013-9]|1[0-3]|[2-7]\\d|8[03-8]|9[0-39]))\\d{6}", [9]],
					["800\\d{6}", [9]],
					["90[0136]\\d{6}", [9]],
					0,
					0,
					["(?:37\\d|80[578])\\d{6}", [9]],
					0,
					0,
					["801\\d{6}", [9]]
				],
				0,
				" int "
			],
			"RS": [
				"381",
				"00",
				"38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}",
				[
					6,
					7,
					8,
					9,
					10,
					11,
					12
				],
				[[
					"(\\d{3})(\\d{3,9})",
					"$1 $2",
					["(?:2[389]|39)0|[7-9]"],
					"0$1"
				], [
					"(\\d{2})(\\d{5,10})",
					"$1 $2",
					["[1-36]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:11[1-9]\\d|(?:2[389]|39)(?:0[2-9]|[2-9]\\d))\\d{3,8}|(?:1[02-9]|2[0-24-7]|3[0-8])[2-9]\\d{4,9}", [
						7,
						8,
						9,
						10,
						11,
						12
					]],
					["6(?:[0-689]|7\\d)\\d{6,7}", [
						8,
						9,
						10
					]],
					["800\\d{3,9}"],
					["(?:78\\d|90[0169])\\d{3,7}", [
						6,
						7,
						8,
						9,
						10
					]],
					0,
					0,
					["7[06]\\d{4,10}"]
				]
			],
			"RU": [
				"7",
				"810",
				"8\\d{13}|[347-9]\\d{9}",
				[10, 14],
				[
					[
						"(\\d{4})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"7(?:1[0-8]|2[1-9])",
							"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))",
							"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"
						],
						"8 ($1)",
						1
					],
					[
						"(\\d{5})(\\d)(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"7(?:1[0-68]|2[1-9])",
							"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))",
							"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"
						],
						"8 ($1)",
						1
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["7"],
						"8 ($1)",
						1
					],
					[
						"(\\d{3})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2-$3-$4",
						["[349]|8(?:[02-7]|1[1-8])"],
						"8 ($1)",
						1
					],
					[
						"(\\d{4})(\\d{4})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["8"],
						"8 ($1)"
					]
				],
				"8",
				0,
				0,
				0,
				0,
				"3[04-689]|[489]",
				[
					["(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\d{7}", [10]],
					["9\\d{9}", [10]],
					["8(?:0[04]|108\\d{3})\\d{7}"],
					["80[39]\\d{7}", [10]],
					["808\\d{7}", [10]]
				],
				"8~10"
			],
			"RW": [
				"250",
				"00",
				"(?:06|[27]\\d\\d|[89]00)\\d{6}",
				[8, 9],
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["0"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["2"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[7-9]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:06|2[23568]\\d)\\d{6}"],
					["7[237-9]\\d{7}", [9]],
					["800\\d{6}", [9]],
					["900\\d{6}", [9]]
				]
			],
			"SA": [
				"966",
				"00",
				"(?:[15]\\d|800|92)\\d{7}",
				[9, 10],
				[
					[
						"(\\d{4})(\\d{5})",
						"$1 $2",
						["9"]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["1"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["5"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["8"]
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["1(?:1\\d|2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\d{6}", [9]],
					["579[01]\\d{5}|5(?:[013-689]\\d|7[0-8])\\d{6}", [9]],
					["800\\d{7}", [10]],
					["925\\d{6}", [9]],
					0,
					0,
					0,
					0,
					0,
					["920\\d{6}", [9]]
				]
			],
			"SB": [
				"677",
				"0[01]",
				"[6-9]\\d{6}|[1-6]\\d{4}",
				[5, 7],
				[[
					"(\\d{2})(\\d{5})",
					"$1 $2",
					["6[89]|7|8[4-9]|9(?:[1-8]|9[0-8])"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1[4-79]|[23]\\d|4[0-2]|5[03]|6[0-37])\\d{3}", [5]],
					["48\\d{3}|(?:(?:6[89]|7[1-9]|8[4-9])\\d|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8]))\\d{4}"],
					["1[38]\\d{3}", [5]],
					0,
					0,
					0,
					0,
					0,
					["5[12]\\d{3}", [5]]
				]
			],
			"SC": [
				"248",
				"010|0[0-2]",
				"(?:[2489]\\d|64)\\d{5}",
				[7],
				[[
					"(\\d)(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[246]|9[57]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["4[2-46]\\d{5}"],
					["2[125-8]\\d{5}"],
					["800[08]\\d{3}"],
					["85\\d{5}"],
					0,
					0,
					0,
					0,
					["971\\d{4}|(?:64|95)\\d{5}"]
				],
				"00"
			],
			"SD": [
				"249",
				"00",
				"[19]\\d{8}",
				[9],
				[[
					"(\\d{2})(\\d{3})(\\d{4})",
					"$1 $2 $3",
					["[19]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["1(?:5\\d|8[35-7])\\d{6}"], ["(?:1[0-2]|9[0-3569])\\d{7}"]]
			],
			"SE": [
				"46",
				"00",
				"(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}",
				[
					6,
					7,
					8,
					9,
					10,
					12
				],
				[
					[
						"(\\d{2})(\\d{2,3})(\\d{2})",
						"$1-$2 $3",
						["20"],
						"0$1",
						0,
						"$1 $2 $3"
					],
					[
						"(\\d{3})(\\d{4})",
						"$1-$2",
						["9(?:00|39|44|9)"],
						"0$1",
						0,
						"$1 $2"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})",
						"$1-$2 $3",
						["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"],
						"0$1",
						0,
						"$1 $2 $3"
					],
					[
						"(\\d)(\\d{2,3})(\\d{2})(\\d{2})",
						"$1-$2 $3 $4",
						["8"],
						"0$1",
						0,
						"$1 $2 $3 $4"
					],
					[
						"(\\d{3})(\\d{2,3})(\\d{2})",
						"$1-$2 $3",
						["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],
						"0$1",
						0,
						"$1 $2 $3"
					],
					[
						"(\\d{3})(\\d{2,3})(\\d{3})",
						"$1-$2 $3",
						["9(?:00|39|44)"],
						"0$1",
						0,
						"$1 $2 $3"
					],
					[
						"(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})",
						"$1-$2 $3 $4",
						["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"],
						"0$1",
						0,
						"$1 $2 $3 $4"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1-$2 $3 $4",
						["10|7"],
						"0$1",
						0,
						"$1 $2 $3 $4"
					],
					[
						"(\\d)(\\d{3})(\\d{3})(\\d{2})",
						"$1-$2 $3 $4",
						["8"],
						"0$1",
						0,
						"$1 $2 $3 $4"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1-$2 $3 $4",
						["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],
						"0$1",
						0,
						"$1 $2 $3 $4"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{3})",
						"$1-$2 $3 $4",
						["9"],
						"0$1",
						0,
						"$1 $2 $3 $4"
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1-$2 $3 $4 $5",
						["[26]"],
						"0$1",
						0,
						"$1 $2 $3 $4 $5"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:(?:[12][136]|3[356]|4[0246]|6[03]|8\\d)\\d|90[1-9])\\d{4,6}|(?:1(?:2[0-35]|4[0-4]|5[0-25-9]|7[13-6]|[89]\\d)|2(?:2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])|3(?:0[0-4]|1\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])|4(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\d|6[03-5]|7[013]|8[0-79]|9[01])|6(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])|9(?:1[0-68]|2\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8]))\\d{5,6}", [
						7,
						8,
						9
					]],
					["7[02369]\\d{7}", [9]],
					["20\\d{4,7}", [
						6,
						7,
						8,
						9
					]],
					["649\\d{6}|99[1-59]\\d{4}(?:\\d{3})?|9(?:00|39|44)[1-8]\\d{3,6}", [
						7,
						8,
						9,
						10
					]],
					["75[1-8]\\d{6}", [9]],
					["(?:25[245]|67[3-68])\\d{9}", [12]],
					["10[1-8]\\d{6}", [9]],
					["74[02-9]\\d{6}", [9]],
					0,
					["77[0-7]\\d{6}", [9]]
				]
			],
			"SG": [
				"65",
				"0[0-3]\\d",
				"(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}",
				[
					8,
					10,
					11
				],
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						["[369]|8(?:0[1-9]|[1-9])"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["8"]
					],
					[
						"(\\d{4})(\\d{4})(\\d{3})",
						"$1 $2 $3",
						["7"]
					],
					[
						"(\\d{4})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["1"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["662[0-24-9]\\d{4}|6(?:[0-578]\\d|6[013-57-9]|9[0-35-9])\\d{5}", [8]],
					["897[0-5]\\d{4}|(?:8(?:0[1-9]|[1-8]\\d|9[0-6])|9[0-8]\\d)\\d{5}", [8]],
					["(?:18|8)00\\d{7}", [10, 11]],
					["1900\\d{7}", [11]],
					0,
					0,
					["7000\\d{7}", [11]],
					0,
					["(?:3[12]\\d|666)\\d{5}", [8]]
				]
			],
			"SH": [
				"290",
				"00",
				"(?:[256]\\d|8)\\d{3}",
				[4, 5],
				0,
				0,
				0,
				0,
				0,
				0,
				"[256]",
				[
					["2(?:[0-57-9]\\d|6[4-9])\\d\\d"],
					["[56]\\d{4}", [5]],
					0,
					0,
					0,
					0,
					0,
					0,
					["262\\d\\d", [5]]
				]
			],
			"SI": [
				"386",
				"00|10(?:22|66|88|99)",
				"[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}",
				[
					5,
					6,
					7,
					8
				],
				[
					[
						"(\\d{2})(\\d{3,6})",
						"$1 $2",
						["8[09]|9"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						["59|8"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[37][01]|4[0139]|51|6"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[1-57]"],
						"(0$1)"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:[1-357][2-8]|4[24-8])\\d{6}", [8]],
					["65(?:[178]\\d|5[56]|6[01])\\d{4}|(?:[37][01]|4[0139]|51|6[489])\\d{6}", [8]],
					["80\\d{4,6}", [
						6,
						7,
						8
					]],
					["89[1-3]\\d{2,5}|90\\d{4,6}"],
					0,
					0,
					0,
					0,
					["(?:59\\d\\d|8(?:1(?:[67]\\d|8[0-589])|2(?:0\\d|2[0-37-9]|8[0-2489])|3[389]\\d))\\d{4}", [8]]
				],
				"00"
			],
			"SJ": [
				"47",
				"00",
				"0\\d{4}|(?:[489]\\d|79)\\d{6}",
				[5, 8],
				0,
				0,
				0,
				0,
				0,
				0,
				"79",
				[
					["79\\d{6}", [8]],
					["(?:4[015-8]|9\\d)\\d{6}", [8]],
					["80[01]\\d{5}", [8]],
					["82[09]\\d{5}", [8]],
					["880\\d{5}", [8]],
					["81[23]\\d{5}", [8]],
					["(?:0[235-9]|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}"],
					0,
					["85[0-5]\\d{5}", [8]],
					["810(?:0[0-6]|[2-8]\\d)\\d{3}", [8]]
				]
			],
			"SK": [
				"421",
				"00",
				"[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}",
				[
					6,
					7,
					9
				],
				[
					[
						"(\\d)(\\d{2})(\\d{3,4})",
						"$1 $2 $3",
						["21"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{2})(\\d{2,3})",
						"$1 $2 $3",
						["[3-5][1-8]1", "[3-5][1-8]1[67]"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{3})(\\d{2})",
						"$1/$2 $3 $4",
						["2"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[689]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1/$2 $3 $4",
						["[3-5]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:16|[2-9]\\d{3})|(?:(?:[3-5][1-8]\\d|819)\\d|601[1-5])\\d)\\d{4}|(?:2|[3-5][1-8])1[67]\\d{3}|[3-5][1-8]16\\d\\d"],
					["909[1-9]\\d{5}|9(?:0[1-8]|1[0-24-9]|4[03-57-9]|5\\d)\\d{6}", [9]],
					["800\\d{6}", [9]],
					["9(?:00|[78]\\d)\\d{6}", [9]],
					0,
					0,
					["96\\d{7}", [9]],
					["9090\\d{3}", [7]],
					["6(?:02|5[0-4]|9[0-6])\\d{6}", [9]],
					["8[5-9]\\d{7}", [9]]
				]
			],
			"SL": [
				"232",
				"00",
				"(?:[237-9]\\d|66)\\d{6}",
				[8],
				[[
					"(\\d{2})(\\d{6})",
					"$1 $2",
					["[236-9]"],
					"(0$1)"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["22[2-4][2-9]\\d{4}"], ["(?:25|3[0-5]|66|7[1-9]|8[08]|9[09])\\d{6}"]]
			],
			"SM": [
				"378",
				"00",
				"(?:0549|[5-7]\\d)\\d{6}",
				[8, 10],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[5-7]"]
				], [
					"(\\d{4})(\\d{6})",
					"$1 $2",
					["0"]
				]],
				0,
				0,
				"([89]\\d{5})$",
				"0549$1",
				0,
				0,
				[
					["0549(?:8[0157-9]|9\\d)\\d{4}", [10]],
					["6[16]\\d{6}", [8]],
					0,
					["7[178]\\d{6}", [8]],
					0,
					0,
					0,
					0,
					["5[158]\\d{6}", [8]]
				]
			],
			"SN": [
				"221",
				"00",
				"(?:[378]\\d|93)\\d{7}",
				[9],
				[[
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["8"]
				], [
					"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[379]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611)\\d{5}"],
					["7(?:(?:[06-8]\\d|[19]0|21)\\d|5(?:0[01]|[19]0|2[25]|3[356]|[4-7]\\d|8[35]))\\d{5}"],
					["800\\d{6}"],
					["88[4689]\\d{6}"],
					0,
					0,
					0,
					0,
					["(?:3(?:392|9[01]\\d)\\d|93(?:3[13]0|929))\\d{4}"],
					["81[02468]\\d{6}"]
				]
			],
			"SO": [
				"252",
				"00",
				"[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}",
				[
					6,
					7,
					8,
					9
				],
				[
					[
						"(\\d{2})(\\d{4})",
						"$1 $2",
						["8[125]"]
					],
					[
						"(\\d{6})",
						"$1",
						["[134]"]
					],
					[
						"(\\d)(\\d{6})",
						"$1 $2",
						["[15]|2[0-79]|3[0-46-8]|4[0-7]"]
					],
					[
						"(\\d)(\\d{7})",
						"$1 $2",
						["(?:2|90)4|[67]"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[348]|64|79|90"]
					],
					[
						"(\\d{2})(\\d{5,7})",
						"$1 $2",
						["1|28|6[0-35-9]|7[67]|9[2-9]"]
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["(?:1\\d|2[0-79]|3[0-46-8]|4[0-7]|5[57-9])\\d{5}|(?:[134]\\d|8[125])\\d{4}", [6, 7]], ["(?:(?:15|(?:3[59]|4[89]|6\\d|7[679]|8[08])\\d|9(?:0\\d|[2-9]))\\d|2(?:4\\d|8))\\d{5}|(?:[67]\\d\\d|904)\\d{5}", [
					7,
					8,
					9
				]]]
			],
			"SR": [
				"597",
				"00",
				"(?:[2-5]|68|[78]\\d|90)\\d{5}",
				[6, 7],
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})",
						"$1-$2-$3",
						["56"]
					],
					[
						"(\\d{3})(\\d{3})",
						"$1-$2",
						["[2-5]"]
					],
					[
						"(\\d{3})(\\d{4})",
						"$1-$2",
						["[6-9]"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2[1-3]|3[0-7]|(?:4|68)\\d|5[2-58])\\d{4}"],
					["(?:7[124-7]|8[1-9])\\d{5}", [7]],
					["80\\d{5}", [7]],
					["90\\d{5}", [7]],
					0,
					0,
					0,
					0,
					["56\\d{4}", [6]]
				]
			],
			"SS": [
				"211",
				"00",
				"[19]\\d{8}",
				[9],
				[[
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[19]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["1[89]\\d{7}"], ["(?:12|9[1257-9])\\d{7}"]]
			],
			"ST": [
				"239",
				"00",
				"(?:22|9\\d)\\d{5}",
				[7],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[29]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["22\\d{5}"], ["900[5-9]\\d{3}|9(?:0[1-9]|[89]\\d)\\d{4}"]]
			],
			"SV": [
				"503",
				"00",
				"[267]\\d{7}|(?:80\\d|900)\\d{4}(?:\\d{4})?",
				[
					7,
					8,
					11
				],
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						["[89]"]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						["[267]"]
					],
					[
						"(\\d{3})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["[89]"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:79(?:0[0347-9]|[1-9]\\d)|89(?:0[024589]|[1-9]\\d))\\d{3}|2(?:[1-69]\\d|[78][0-8])\\d{5}", [8]],
					["[67]\\d{7}", [8]],
					["800\\d{8}|80[01]\\d{4}", [7, 11]],
					["900\\d{4}(?:\\d{4})?", [7, 11]]
				]
			],
			"SX": [
				"1",
				"011",
				"7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"(5\\d{6})$|1",
				"721$1",
				0,
				"721",
				[
					["7215(?:4[2-8]|8[239]|9[056])\\d{4}"],
					["7215(?:1[02]|2\\d|5[034679]|8[014-8])\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"SY": [
				"963",
				"00",
				"[1-39]\\d{8}|[1-5]\\d{7}",
				[8, 9],
				[[
					"(\\d{2})(\\d{3})(\\d{3,4})",
					"$1 $2 $3",
					["[1-5]"],
					"0$1",
					1
				], [
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["9"],
					"0$1",
					1
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["21\\d{6,7}|(?:1(?:[14]\\d|[2356])|2[235]|3(?:[13]\\d|4)|4[134]|5[1-3])\\d{6}"], ["9[1-9]\\d{7}", [9]]]
			],
			"SZ": [
				"268",
				"00",
				"0800\\d{4}|(?:[237]\\d|900)\\d{6}",
				[8, 9],
				[[
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["[0237]"]
				], [
					"(\\d{5})(\\d{4})",
					"$1 $2",
					["9"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["[23][2-5]\\d{6}", [8]],
					["7[6-9]\\d{6}", [8]],
					["0800\\d{4}", [8]],
					["900\\d{6}", [9]],
					0,
					0,
					0,
					0,
					["70\\d{6}", [8]]
				]
			],
			"TA": [
				"290",
				"00",
				"8\\d{3}",
				[4],
				0,
				0,
				0,
				0,
				0,
				0,
				"8",
				[["8\\d{3}"]]
			],
			"TC": [
				"1",
				"011",
				"(?:[58]\\d\\d|649|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-479]\\d{6})$|1",
				"649$1",
				0,
				"649",
				[
					["649(?:266|712|9(?:4\\d|50))\\d{4}"],
					["649(?:2(?:3[129]|4[1-79])|3\\d\\d|4[34][1-3])\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"],
					0,
					0,
					0,
					["649(?:71[01]|966)\\d{4}"]
				]
			],
			"TD": [
				"235",
				"00|16",
				"(?:22|[689]\\d|77)\\d{6}",
				[8],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[26-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["22(?:[37-9]0|5[0-5]|6[89])\\d{4}"], ["(?:[69]\\d|77|8[56])\\d{6}"]],
				"00"
			],
			"TG": [
				"228",
				"00",
				"[279]\\d{7}",
				[8],
				[[
					"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[279]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["2(?:2[2-7]|3[23]|4[45]|55|6[67]|77)\\d{5}"], ["(?:7[0-29]|9[0-36-9])\\d{6}"]]
			],
			"TH": [
				"66",
				"00[1-9]",
				"(?:001800|[2-57]|[689]\\d)\\d{7}|1\\d{7,9}",
				[
					8,
					9,
					10,
					13
				],
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["2"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[13-9]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["1"]
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1[0689]|2\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\d{6}", [8]],
					["67(?:1[0-8]|2[4-7])\\d{5}|(?:14|6[1-6]|[89]\\d)\\d{7}", [9]],
					["(?:001800\\d|1800)\\d{6}", [10, 13]],
					["1900\\d{6}", [10]],
					0,
					0,
					0,
					0,
					["6[08]\\d{7}", [9]]
				]
			],
			"TJ": [
				"992",
				"810",
				"[0-57-9]\\d{8}",
				[9],
				[
					[
						"(\\d{6})(\\d)(\\d{2})",
						"$1 $2 $3",
						["331", "3317"]
					],
					[
						"(\\d{3})(\\d{2})(\\d{4})",
						"$1 $2 $3",
						["44[02-479]|[34]7"]
					],
					[
						"(\\d{4})(\\d)(\\d{4})",
						"$1 $2 $3",
						["3(?:[1245]|3[12])"]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[0-57-9]"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[["(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\d{6}"], ["(?:33[03-9]|4(?:1[18]|4[02-479])|81[1-9])\\d{6}|(?:[09]\\d|1[0-27-9]|2[0-27]|[34]0|5[05]|7[01578]|8[078])\\d{7}"]],
				"8~10"
			],
			"TK": [
				"690",
				"00",
				"[2-47]\\d{3,6}",
				[
					4,
					5,
					6,
					7
				],
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				[["(?:2[2-4]|[34]\\d)\\d{2,5}"], ["7[2-4]\\d{2,5}"]]
			],
			"TL": [
				"670",
				"00",
				"7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}",
				[7, 8],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[2-489]|70"]
				], [
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["7"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2[1-5]|3[1-9]|4[1-4])\\d{5}", [7]],
					["7[2-8]\\d{6}", [8]],
					["80\\d{5}", [7]],
					["90\\d{5}", [7]],
					["70\\d{5}", [7]]
				]
			],
			"TM": [
				"993",
				"810",
				"(?:[1-6]\\d|71)\\d{6}",
				[8],
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2-$3-$4",
						["12"],
						"(8 $1)"
					],
					[
						"(\\d{3})(\\d)(\\d{2})(\\d{2})",
						"$1 $2-$3-$4",
						["[1-5]"],
						"(8 $1)"
					],
					[
						"(\\d{2})(\\d{6})",
						"$1 $2",
						["[67]"],
						"8 $1"
					]
				],
				"8",
				0,
				0,
				0,
				0,
				0,
				[["(?:1(?:2\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\d{5}"], ["(?:6\\d|71)\\d{6}"]],
				"8~10"
			],
			"TN": [
				"216",
				"00",
				"[2-57-9]\\d{7}",
				[8],
				[[
					"(\\d{2})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[2-57-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["81200\\d{3}|(?:3[0-2]|7\\d)\\d{6}"],
					["3(?:001|[12]40)\\d{4}|(?:(?:[259]\\d|4[0-8])\\d|3(?:1[1-35]|6[0-4]|91))\\d{5}"],
					["8010\\d{4}"],
					["88\\d{6}"],
					0,
					0,
					0,
					0,
					0,
					["8[12]10\\d{4}"]
				]
			],
			"TO": [
				"676",
				"00",
				"(?:0800|(?:[5-8]\\d\\d|999)\\d)\\d{3}|[2-8]\\d{4}",
				[5, 7],
				[
					[
						"(\\d{2})(\\d{3})",
						"$1-$2",
						["[2-4]|50|6[09]|7[0-24-69]|8[05]"]
					],
					[
						"(\\d{4})(\\d{3})",
						"$1 $2",
						["0"]
					],
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						["[5-9]"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2\\d|3[0-8]|4[0-4]|50|6[09]|7[0-24-69]|8[05])\\d{3}", [5]],
					["(?:5(?:4[0-5]|5[4-6])|6(?:[09]\\d|3[02]|8[15-9])|(?:7\\d|8[46-9])\\d|999)\\d{4}", [7]],
					["0800\\d{3}", [7]],
					0,
					0,
					0,
					0,
					0,
					["55[0-37-9]\\d{4}", [7]]
				]
			],
			"TR": [
				"90",
				"00",
				"4\\d{6}|8\\d{11,12}|(?:[2-58]\\d\\d|900)\\d{7}",
				[
					7,
					10,
					12,
					13
				],
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["512|8[01589]|90"],
						"0$1",
						1
					],
					[
						"(\\d{3})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"5(?:[0-59]|61)",
							"5(?:[0-59]|61[06])",
							"5(?:[0-59]|61[06]1)"
						],
						"0$1",
						1
					],
					[
						"(\\d{3})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["[24][1-8]|3[1-9]"],
						"(0$1)",
						1
					],
					[
						"(\\d{3})(\\d{3})(\\d{6,7})",
						"$1 $2 $3",
						["80"],
						"0$1",
						1
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\d{7}", [10]],
					["561(?:011|61\\d)\\d{4}|5(?:0[15-7]|1[06]|24|[34]\\d|5[1-59]|9[46])\\d{7}", [10]],
					["8(?:00\\d{7}(?:\\d{2,3})?|11\\d{7})", [
						10,
						12,
						13
					]],
					["(?:8[89]8|900)\\d{7}", [10]],
					["592(?:21[12]|461)\\d{4}", [10]],
					0,
					["444\\d{4}", [7]],
					["512\\d{7}", [10]],
					["850\\d{7}", [10]]
				]
			],
			"TT": [
				"1",
				"011",
				"(?:[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-46-8]\\d{6})$|1",
				"868$1",
				0,
				"868",
				[
					["868(?:2(?:01|1[5-9]|[23]\\d|4[0-2])|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\d|7[0-79])|82[124])\\d{4}"],
					["868(?:(?:2[5-9]|3\\d)\\d|4(?:3[0-6]|[6-9]\\d)|6(?:20|78|8\\d)|7(?:0[1-9]|1[02-9]|[2-9]\\d))\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"],
					["868619\\d{4}"]
				]
			],
			"TV": [
				"688",
				"00",
				"(?:2|7\\d\\d|90)\\d{4}",
				[
					5,
					6,
					7
				],
				[
					[
						"(\\d{2})(\\d{3})",
						"$1 $2",
						["2"]
					],
					[
						"(\\d{2})(\\d{4})",
						"$1 $2",
						["90"]
					],
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						["7"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[["2[02-9]\\d{3}", [5]], ["(?:7[01]\\d|90)\\d{4}", [6, 7]]]
			],
			"TW": [
				"886",
				"0(?:0[25-79]|19)",
				"[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}",
				[
					7,
					8,
					9,
					10,
					11
				],
				[
					[
						"(\\d{2})(\\d)(\\d{4})",
						"$1 $2 $3",
						["202"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[258]0"],
						"0$1"
					],
					[
						"(\\d)(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						["[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]", "[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[49]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4})(\\d{4,5})",
						"$1 $2 $3",
						["7"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2[2-8]\\d|370|55[01]|7[1-9])\\d{6}|4(?:(?:0(?:0[1-9]|[2-48]\\d)|1[023]\\d)\\d{4,5}|(?:[239]\\d\\d|4(?:0[56]|12|49))\\d{5})|6(?:[01]\\d{7}|4(?:0[56]|12|24|4[09])\\d{4,5})|8(?:(?:2(?:3\\d|4[0-269]|[578]0|66)|36[24-9]|90\\d\\d)\\d{4}|4(?:0[56]|12|24|4[09])\\d{4,5})|(?:2(?:2(?:0\\d\\d|4(?:0[68]|[249]0|3[0-467]|5[0-25-9]|6[0235689]))|(?:3(?:[09]\\d|1[0-4])|(?:4\\d|5[0-49]|6[0-29]|7[0-5])\\d)\\d)|(?:(?:3[2-9]|5[2-8]|6[0-35-79]|8[7-9])\\d\\d|4(?:2(?:[089]\\d|7[1-9])|(?:3[0-4]|[78]\\d|9[01])\\d))\\d)\\d{3}", [8, 9]],
					["(?:40001[0-2]|9[0-8]\\d{4})\\d{3}", [9]],
					["80[0-79]\\d{6}|800\\d{5}", [8, 9]],
					["20(?:[013-9]\\d\\d|2)\\d{4}", [7, 9]],
					["99\\d{7}", [9]],
					0,
					["50[0-46-9]\\d{6}", [9]],
					0,
					["7010(?:[0-2679]\\d|3[0-7]|8[0-5])\\d{5}|70\\d{8}", [10, 11]]
				],
				0,
				"#"
			],
			"TZ": [
				"255",
				"00[056]",
				"(?:[25-8]\\d|41|90)\\d{7}",
				[9],
				[
					[
						"(\\d{3})(\\d{2})(\\d{4})",
						"$1 $2 $3",
						["[89]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[24]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{7})",
						"$1 $2",
						["5"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[67]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["2[2-8]\\d{7}"],
					["(?:6[125-9]|7[13-9])\\d{7}"],
					["80[08]\\d{6}"],
					["90\\d{7}"],
					0,
					0,
					0,
					0,
					["41\\d{7}"],
					["8(?:40|6[01])\\d{6}"]
				]
			],
			"UA": [
				"380",
				"00",
				"[89]\\d{9}|[3-9]\\d{8}",
				[9, 10],
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]", "6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{5})",
						"$1 $2",
						["3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])", "3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[3-7]|89|9[1-9]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["[89]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\d{7}", [9]],
					["790\\d{6}|(?:39|50|6[36-8]|7[1-357]|9[1-9])\\d{7}", [9]],
					["800[1-8]\\d{5,6}"],
					["900[239]\\d{5,6}"],
					0,
					0,
					0,
					0,
					["89[1-579]\\d{6}", [9]]
				],
				"0~0"
			],
			"UG": [
				"256",
				"00[057]",
				"800\\d{6}|(?:[29]0|[347]\\d)\\d{7}",
				[9],
				[
					[
						"(\\d{4})(\\d{5})",
						"$1 $2",
						["202", "2024"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{6})",
						"$1 $2",
						["[27-9]|4(?:6[45]|[7-9])"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{7})",
						"$1 $2",
						["[34]"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["20(?:(?:240|30[67])\\d|6(?:00[0-2]|30[0-4]))\\d{3}|(?:20(?:[017]\\d|2[5-9]|3[1-4]|5[0-4]|6[15-9])|[34]\\d{3})\\d{5}"],
					["72[48]0\\d{5}|7(?:[015-8]\\d|2[067]|36|4[0-8]|9[0189])\\d{6}"],
					["800[1-3]\\d{5}"],
					["90[1-3]\\d{6}"]
				]
			],
			"US": [
				"1",
				"011",
				"[2-9]\\d{9}|3\\d{6}",
				[10],
				[[
					"(\\d{3})(\\d{4})",
					"$1-$2",
					["310"],
					0,
					1
				], [
					"(\\d{3})(\\d{3})(\\d{4})",
					"($1) $2-$3",
					["[2-9]"],
					0,
					1,
					"$1-$2-$3"
				]],
				"1",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:3052(?:0[0-8]|[1-9]\\d)|5056(?:[0-35-9]\\d|4[0-68]))\\d{4}|(?:2742|305[3-9]|472[247-9]|505[2-57-9]|983[2-47-9])\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[1459]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-47-9]|1[02-9]|2[0135-79]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[0-247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[0168]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}"],
					[""],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"],
					0,
					0,
					0,
					["305209\\d{4}"]
				]
			],
			"UY": [
				"598",
				"0(?:0|1[3-9]\\d)",
				"0004\\d{2,9}|[1249]\\d{7}|(?:[49]\\d|80)\\d{5}",
				[
					6,
					7,
					8,
					9,
					10,
					11,
					12,
					13
				],
				[
					[
						"(\\d{3})(\\d{3,4})",
						"$1 $2",
						["0"]
					],
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						["[49]0|8"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["9"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						["[124]"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{2,4})",
						"$1 $2 $3",
						["0"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})(\\d{2,4})",
						"$1 $2 $3 $4",
						["0"]
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1(?:770|9(?:20|[89]7))|(?:2\\d|4[2-7])\\d\\d)\\d{4}", [8]],
					["9[1-9]\\d{6}", [8]],
					["0004\\d{2,9}|(?:405|80[05])\\d{4}"],
					["90[0-8]\\d{4}", [7]]
				],
				"00",
				" int. "
			],
			"UZ": [
				"998",
				"00",
				"(?:20|33|[5-9]\\d)\\d{7}",
				[9],
				[[
					"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["[235-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[["(?:55\\d\\d|6(?:1(?:22|3[124]|4[1-4]|5[1-3578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|[69]\\d\\d|7(?:[23]\\d|7[69]))|7(?:0(?:5[4-9]|6[0146]|7[124-6]|9[135-8])|[168]\\d\\d|2(?:22|3[13-57-9]|4[1-3579]|5[14])|3(?:2\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|9(?:22|5[1-9])))\\d{5}"], ["(?:(?:[25]0|33|8[78]|9[0-57-9])\\d{3}|6(?:1(?:2(?:2[01]|98)|35[0-4]|50\\d|61[23]|7(?:[01][017]|4\\d|55|9[5-9]))|2(?:(?:11|7\\d)\\d|2(?:[12]1|9[01379])|5(?:[126]\\d|3[0-4]))|5(?:19[01]|2(?:27|9[26])|(?:30|59|7\\d)\\d)|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|(?:3[79]|9[0-3])\\d|4(?:56|83)|7(?:[07]\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79]))|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\d|[39][07])|9(?:0\\d|7[079])))|7(?:[07]\\d{3}|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\d|7(?:0\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|(?:33|9[4-6])\\d|5(?:0[0-4]|5[579]|9\\d)|7(?:[0-3579]\\d|4[0467]|6[67]|8[078]))|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\d|9[5-9])|7(?:0\\d|1[024589]|2[0-27]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\d))|5(?:112|2(?:0\\d|2[29]|[49]4)|3[1568]\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\d|8[78]|9[079]))|9(?:22[128]|3(?:2[0-4]|7\\d)|57[02569]|7(?:2[05-9]|3[37]|4\\d|60|7[2579]|87|9[07]))))\\d{4}"]]
			],
			"VA": [
				"39",
				"00",
				"0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}",
				[
					6,
					7,
					8,
					9,
					10,
					11,
					12
				],
				0,
				0,
				0,
				0,
				0,
				0,
				"06698",
				[
					["06698\\d{1,6}", [
						6,
						7,
						8,
						9,
						10,
						11
					]],
					["3[1-9]\\d{8}|3[2-9]\\d{7}", [9, 10]],
					["80(?:0\\d{3}|3)\\d{3}", [6, 9]],
					["(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}", [
						6,
						8,
						9,
						10
					]],
					["1(?:78\\d|99)\\d{6}", [9, 10]],
					["3[2-8]\\d{9,10}", [11, 12]],
					0,
					0,
					["55\\d{8}", [10]],
					["84(?:[08]\\d{3}|[17])\\d{3}", [6, 9]]
				]
			],
			"VC": [
				"1",
				"011",
				"(?:[58]\\d\\d|784|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-7]\\d{6})$|1",
				"784$1",
				0,
				"784",
				[
					["784(?:266|3(?:6[6-9]|7\\d|8[0-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\d{4}"],
					["784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4])|720)\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"],
					0,
					0,
					0,
					["78451[0-2]\\d{4}"]
				]
			],
			"VE": [
				"58",
				"00",
				"[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}",
				[10],
				[[
					"(\\d{3})(\\d{7})",
					"$1-$2",
					["[24-689]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:12|3[457-9]|[467]\\d|[58][1-9]|9[1-6])|[4-6]00)\\d{7}"],
					["4(?:1[24-8]|2[246])\\d{7}"],
					["800\\d{7}"],
					["90[01]\\d{7}"],
					0,
					0,
					["501\\d{7}"]
				]
			],
			"VG": [
				"1",
				"011",
				"(?:284|[58]\\d\\d|900)\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-578]\\d{6})$|1",
				"284$1",
				0,
				"284",
				[
					["284(?:229|4(?:22|9[45])|774|8(?:52|6[459]))\\d{4}"],
					["284(?:245|3(?:0[0-3]|4[0-7]|68|9[34])|4(?:4[0-6]|68|9[69])|5(?:4[0-7]|68|9[69]))\\d{4}"],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"VI": [
				"1",
				"011",
				"[58]\\d{9}|(?:34|90)0\\d{7}",
				[10],
				0,
				"1",
				0,
				"([2-9]\\d{6})$|1",
				"340$1",
				0,
				"340",
				[
					["340(?:2(?:0\\d|10|2[06-8]|4[49]|77)|3(?:32|44)|4(?:2[23]|44|7[34]|89)|5(?:1[34]|55)|6(?:2[56]|4[23]|77|9[023])|7(?:1[2-57-9]|2[57]|7\\d)|884|998)\\d{4}"],
					[""],
					["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
					["900[2-9]\\d{6}"],
					["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]
				]
			],
			"VN": [
				"84",
				"00",
				"[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}",
				[
					7,
					8,
					9,
					10
				],
				[
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						["80"],
						"0$1",
						1
					],
					[
						"(\\d{4})(\\d{4,6})",
						"$1 $2",
						["1"],
						0,
						1
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						["6"],
						"0$1",
						1
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[357-9]"],
						"0$1",
						1
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["2[48]"],
						"0$1",
						1
					],
					[
						"(\\d{3})(\\d{4})(\\d{3})",
						"$1 $2 $3",
						["2"],
						"0$1",
						1
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["2(?:0[3-9]|1[0-689]|2[0-25-9]|[38][2-9]|4[2-8]|5[124-9]|6[0-39]|7[0-7]|9[0-4679])\\d{7}", [10]],
					["(?:5(?:2[238]|59)|89[6-9]|99[013-9])\\d{6}|(?:3\\d|5[1689]|7[06-9]|8[1-8]|9[0-8])\\d{7}", [9]],
					["1800\\d{4,6}|12(?:0[13]|28)\\d{4}", [
						8,
						9,
						10
					]],
					["1900\\d{4,6}", [
						8,
						9,
						10
					]],
					0,
					0,
					["(?:[17]99|80\\d)\\d{4}|69\\d{5,6}", [7, 8]],
					0,
					["672\\d{6}", [9]]
				]
			],
			"VU": [
				"678",
				"00",
				"[57-9]\\d{6}|(?:[238]\\d|48)\\d{3}",
				[5, 7],
				[[
					"(\\d{3})(\\d{4})",
					"$1 $2",
					["[57-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["(?:38[0-8]|48[4-9])\\d\\d|(?:2[02-9]|3[4-7]|88)\\d{3}", [5]],
					["(?:[58]\\d|7[013-7])\\d{5}", [7]],
					["81[18]\\d\\d", [5]],
					0,
					0,
					0,
					["(?:3[03]|900\\d)\\d{3}"],
					0,
					["9(?:0[1-9]|1[01])\\d{4}", [7]]
				]
			],
			"WF": [
				"681",
				"00",
				"(?:40|72|8\\d{4})\\d{4}|[89]\\d{5}",
				[6, 9],
				[[
					"(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3",
					["[47-9]"]
				], [
					"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
					"$1 $2 $3 $4",
					["8"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["72\\d{4}", [6]],
					["(?:72|8[23])\\d{4}", [6]],
					["80[0-5]\\d{6}", [9]],
					0,
					0,
					["[48]0\\d{4}", [6]],
					0,
					0,
					["9[23]\\d{4}", [6]]
				]
			],
			"WS": [
				"685",
				"0",
				"(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}",
				[
					5,
					6,
					7,
					10
				],
				[
					[
						"(\\d{5})",
						"$1",
						["[2-5]|6[1-9]"]
					],
					[
						"(\\d{3})(\\d{3,7})",
						"$1 $2",
						["[68]"]
					],
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						["7"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					["6[1-9]\\d{3}|(?:[2-5]|60)\\d{4}", [5, 6]],
					["(?:7[1-35-7]|8(?:[3-7]|9\\d{3}))\\d{5}", [7, 10]],
					["800\\d{3}", [6]]
				]
			],
			"XK": [
				"383",
				"00",
				"2\\d{7,8}|3\\d{7,11}|(?:4\\d\\d|[89]00)\\d{5}",
				[
					8,
					9,
					10,
					11,
					12
				],
				[
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						["[89]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["[2-4]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["2|39"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{7,10})",
						"$1 $2",
						["3"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["38\\d{6,10}|(?:2[89]|39)(?:0\\d{5,6}|[1-9]\\d{5})"],
					["4[3-9]\\d{6}", [8]],
					["800\\d{5}", [8]],
					["900\\d{5}", [8]]
				]
			],
			"YE": [
				"967",
				"00",
				"(?:1|7\\d)\\d{7}|[1-7]\\d{6}",
				[
					7,
					8,
					9
				],
				[[
					"(\\d)(\\d{3})(\\d{3,4})",
					"$1 $2 $3",
					["[1-6]|7(?:[24-6]|8[0-7])"],
					"0$1"
				], [
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["7"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[["78[0-7]\\d{4}|17\\d{6}|(?:[12][2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-6])\\d{5}", [7, 8]], ["7[01378]\\d{7}", [9]]]
			],
			"YT": [
				"262",
				"00",
				"7093\\d{5}|(?:80|9\\d)\\d{7}|(?:26|63)9\\d{6}",
				[9],
				0,
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["269(?:0[0-467]|15|5[0-4]|6\\d|[78]0)\\d{4}"],
					["(?:639(?:0[0-79]|1[019]|[267]\\d|3[09]|40|5[05-9]|9[04-79])|7093[5-7])\\d{4}"],
					["80\\d{7}"],
					0,
					0,
					0,
					0,
					0,
					["9(?:(?:39|47)8[01]|769\\d)\\d{4}"]
				]
			],
			"ZA": [
				"27",
				"00",
				"[1-79]\\d{8}|8\\d{4,9}",
				[
					5,
					6,
					7,
					8,
					9,
					10
				],
				[
					[
						"(\\d{2})(\\d{3,4})",
						"$1 $2",
						["8[1-4]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{2,3})",
						"$1 $2 $3",
						["8[1-4]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["860"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["[1-9]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["8"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:2(?:0330|4302)|52087)0\\d{3}|(?:1[0-8]|2[1-378]|3[1-69]|4\\d|5[1346-8])\\d{7}", [9]],
					["(?:1(?:3492[0-25]|4495[0235]|549(?:20|5[01]))|4[34]492[01])\\d{3}|8[1-4]\\d{3,7}|(?:2[27]|47|54)4950\\d{3}|(?:1(?:049[2-4]|9[12]\\d\\d)|(?:50[0-2]|6\\d\\d|7(?:[0-46-9]\\d|5[0-4]))\\d\\d|8(?:5\\d{3}|7(?:08[67]|158|28[5-9]|310)))\\d{4}|(?:1[6-8]|28|3[2-69]|4[025689]|5[36-8])4920\\d{3}|(?:12|[2-5]1)492\\d{4}", [
						5,
						6,
						7,
						8,
						9
					]],
					["80\\d{7}", [9]],
					["(?:86[2-9]|9[0-2]\\d)\\d{6}", [9]],
					0,
					0,
					["861\\d{6,7}", [9, 10]],
					0,
					["87(?:08[0-589]|15[0-79]|28[0-4]|31[1-9])\\d{4}|87(?:[02][0-79]|1[0-46-9]|3[02-9]|[4-9]\\d)\\d{5}", [9]],
					["860\\d{6}", [9]]
				]
			],
			"ZM": [
				"260",
				"00",
				"800\\d{6}|(?:21|[579]\\d|63)\\d{7}",
				[9],
				[[
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[28]"],
					"0$1"
				], [
					"(\\d{2})(\\d{7})",
					"$1 $2",
					["[579]"],
					"0$1"
				]],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["21[1-8]\\d{6}"],
					["(?:[59][5-8]|7[5-9])\\d{7}"],
					["800\\d{6}"],
					0,
					0,
					0,
					0,
					0,
					["63\\d{7}"]
				]
			],
			"ZW": [
				"263",
				"00",
				"2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}",
				[
					5,
					6,
					7,
					8,
					9,
					10
				],
				[
					[
						"(\\d{3})(\\d{3,5})",
						"$1 $2",
						["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"],
						"0$1"
					],
					[
						"(\\d)(\\d{3})(\\d{2,4})",
						"$1 $2 $3",
						["[49]"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						["80"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{7})",
						"$1 $2",
						["24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2", "2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["7"],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)", "2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{6})",
						"$1 $2",
						["8"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3,5})",
						"$1 $2",
						["1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						["29[013-9]|39|54"],
						"0$1"
					],
					[
						"(\\d{4})(\\d{3,5})",
						"$1 $2",
						["(?:25|54)8", "258|5483"],
						"0$1"
					]
				],
				"0",
				0,
				0,
				0,
				0,
				0,
				[
					["(?:1(?:(?:3\\d|9)\\d|[4-8])|2(?:(?:(?:0(?:2[014]|5)|(?:2[0157]|31|84|9)\\d\\d|[56](?:[14]\\d\\d|20)|7(?:[089]|2[03]|[35]\\d\\d))\\d|4(?:2\\d\\d|8))\\d|1(?:2|[39]\\d{4}))|3(?:(?:123|(?:29\\d|92)\\d)\\d\\d|7(?:[19]|[56]\\d))|5(?:0|1[2-478]|26|[37]2|4(?:2\\d{3}|83)|5(?:25\\d\\d|[78])|[689]\\d)|6(?:(?:[16-8]21|28|52[013])\\d\\d|[39])|8(?:[1349]28|523)\\d\\d)\\d{3}|(?:4\\d\\d|9[2-9])\\d{4,5}|(?:(?:2(?:(?:(?:0|8[146])\\d|7[1-7])\\d|2(?:[278]\\d|92)|58(?:2\\d|3))|3(?:[26]|9\\d{3})|5(?:4\\d|5)\\d\\d)\\d|6(?:(?:(?:[0-246]|[78]\\d)\\d|37)\\d|5[2-8]))\\d\\d|(?:2(?:[569]\\d|8[2-57-9])|3(?:[013-59]\\d|8[37])|6[89]8)\\d{3}"],
					["7(?:[1278]\\d|3[1-9])\\d{6}", [9]],
					["80(?:[01]\\d|20|8[0-8])\\d{3}", [7]],
					0,
					0,
					0,
					0,
					0,
					["86(?:1[12]|22|30|44|55|77|8[368])\\d{6}", [10]]
				]
			]
		},
		"nonGeographic": {
			"800": [
				"800",
				0,
				"(?:00|[1-9]\\d)\\d{6}",
				[8],
				[[
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["\\d"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					0,
					0,
					["(?:00|[1-9]\\d)\\d{6}"]
				]
			],
			"808": [
				"808",
				0,
				"[1-9]\\d{7}",
				[8],
				[[
					"(\\d{4})(\\d{4})",
					"$1 $2",
					["[1-9]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					["[1-9]\\d{7}"]
				]
			],
			"870": [
				"870",
				0,
				"7\\d{11}|[235-7]\\d{8}",
				[9, 12],
				[[
					"(\\d{3})(\\d{3})(\\d{3})",
					"$1 $2 $3",
					["[235-7]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					0,
					["(?:[356]|774[45])\\d{8}|7[6-8]\\d{7}"],
					0,
					0,
					0,
					0,
					0,
					0,
					["2\\d{8}", [9]]
				]
			],
			"878": [
				"878",
				0,
				"10\\d{10}",
				[12],
				[[
					"(\\d{2})(\\d{5})(\\d{5})",
					"$1 $2 $3",
					["1"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					["10\\d{10}"]
				]
			],
			"881": [
				"881",
				0,
				"6\\d{9}|[0-36-9]\\d{8}",
				[9, 10],
				[[
					"(\\d)(\\d{3})(\\d{5})",
					"$1 $2 $3",
					["[0-37-9]"]
				], [
					"(\\d)(\\d{3})(\\d{5,6})",
					"$1 $2 $3",
					["6"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[0, ["6\\d{9}|[0-36-9]\\d{8}"]]
			],
			"882": [
				"882",
				0,
				"[13]\\d{6}(?:\\d{2,5})?|[19]\\d{7}|(?:[25]\\d\\d|4)\\d{7}(?:\\d{2})?",
				[
					7,
					8,
					9,
					10,
					11,
					12
				],
				[
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						["16|342"]
					],
					[
						"(\\d{2})(\\d{6})",
						"$1 $2",
						["49"]
					],
					[
						"(\\d{2})(\\d{2})(\\d{4})",
						"$1 $2 $3",
						["1[36]|9"]
					],
					[
						"(\\d{2})(\\d{4})(\\d{3})",
						"$1 $2 $3",
						["3[23]"]
					],
					[
						"(\\d{2})(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						["16"]
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["10|23|3(?:[15]|4[57])|4|51"]
					],
					[
						"(\\d{3})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["34"]
					],
					[
						"(\\d{2})(\\d{4,5})(\\d{5})",
						"$1 $2 $3",
						["[1-35]"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					0,
					["342\\d{4}|(?:337|49)\\d{6}|(?:3(?:2|47|7\\d{3})|50\\d{3})\\d{7}", [
						7,
						8,
						9,
						10,
						12
					]],
					0,
					0,
					0,
					["348[57]\\d{7}", [11]],
					0,
					0,
					["1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\d{4}|6\\d{5,10})|(?:345\\d|9[89])\\d{6}|(?:10|2(?:3|85\\d)|3(?:[15]|[69]\\d\\d)|4[15-8]|51)\\d{8}"]
				]
			],
			"883": [
				"883",
				0,
				"(?:[1-4]\\d|51)\\d{6,10}",
				[
					8,
					9,
					10,
					11,
					12
				],
				[
					[
						"(\\d{3})(\\d{3})(\\d{2,8})",
						"$1 $2 $3",
						["[14]|2[24-689]|3[02-689]|51[24-9]"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						["510"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						["21"]
					],
					[
						"(\\d{4})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						["51[13]"]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						["[235]"]
					]
				],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					["(?:2(?:00\\d\\d|10)|(?:370[1-9]|51\\d0)\\d)\\d{7}|51(?:00\\d{5}|[24-9]0\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\d{5,9}"]
				]
			],
			"888": [
				"888",
				0,
				"\\d{11}",
				[11],
				[["(\\d{3})(\\d{3})(\\d{5})", "$1 $2 $3"]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					0,
					0,
					0,
					0,
					0,
					0,
					["\\d{11}"]
				]
			],
			"979": [
				"979",
				0,
				"[1359]\\d{8}",
				[9],
				[[
					"(\\d)(\\d{4})(\\d{4})",
					"$1 $2 $3",
					["[1359]"]
				]],
				0,
				0,
				0,
				0,
				0,
				0,
				[
					0,
					0,
					0,
					["[1359]\\d{8}"]
				]
			]
		}
	};
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/isObject.js
var require_isObject = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/isObject.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = isObject$1;
	var objectConstructor = {}.constructor;
	function isObject$1(object) {
		return object !== void 0 && object !== null && object.constructor === objectConstructor;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/normalizeArguments.js
var require_normalizeArguments = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/normalizeArguments.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = normalizeArguments;
	var _isObject$3 = _interopRequireDefault$105(require_isObject());
	function _interopRequireDefault$105(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function ownKeys$9(object, enumerableOnly) {
		var keys = Object.keys(object);
		if (Object.getOwnPropertySymbols) {
			var symbols = Object.getOwnPropertySymbols(object);
			enumerableOnly && (symbols = symbols.filter(function(sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			})), keys.push.apply(keys, symbols);
		}
		return keys;
	}
	function _objectSpread$13(target) {
		for (var i$1 = 1; i$1 < arguments.length; i$1++) {
			var source = null != arguments[i$1] ? arguments[i$1] : {};
			i$1 % 2 ? ownKeys$9(Object(source), !0).forEach(function(key) {
				_defineProperty$10(target, key, source[key]);
			}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$9(Object(source)).forEach(function(key) {
				Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
			});
		}
		return target;
	}
	function _defineProperty$10(obj, key, value) {
		if (key in obj) Object.defineProperty(obj, key, {
			value,
			enumerable: true,
			configurable: true,
			writable: true
		});
		else obj[key] = value;
		return obj;
	}
	function _slicedToArray$5(arr, i$1) {
		return _arrayWithHoles$5(arr) || _iterableToArrayLimit$5(arr, i$1) || _unsupportedIterableToArray$16(arr, i$1) || _nonIterableRest$5();
	}
	function _nonIterableRest$5() {
		throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$16(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$16(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$16(o, minLen);
	}
	function _arrayLikeToArray$16(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	function _iterableToArrayLimit$5(arr, i$1) {
		var _i$1 = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
		if (_i$1 == null) return;
		var _arr = [];
		var _n = true;
		var _d = false;
		var _s, _e;
		try {
			for (_i$1 = _i$1.call(arr); !(_n = (_s = _i$1.next()).done); _n = true) {
				_arr.push(_s.value);
				if (i$1 && _arr.length === i$1) break;
			}
		} catch (err) {
			_d = true;
			_e = err;
		} finally {
			try {
				if (!_n && _i$1["return"] != null) _i$1["return"]();
			} finally {
				if (_d) throw _e;
			}
		}
		return _arr;
	}
	function _arrayWithHoles$5(arr) {
		if (Array.isArray(arr)) return arr;
	}
	function normalizeArguments(args) {
		var _Array$prototype$slic = Array.prototype.slice.call(args), _Array$prototype$slic2 = _slicedToArray$5(_Array$prototype$slic, 4), arg_1 = _Array$prototype$slic2[0], arg_2 = _Array$prototype$slic2[1], arg_3 = _Array$prototype$slic2[2], arg_4 = _Array$prototype$slic2[3];
		var text;
		var options;
		var metadata$1;
		if (typeof arg_1 === "string") text = arg_1;
		else throw new TypeError("A text for parsing must be a string.");
		if (!arg_2 || typeof arg_2 === "string") {
			if (arg_4) {
				options = arg_3;
				metadata$1 = arg_4;
			} else {
				options = void 0;
				metadata$1 = arg_3;
			}
			if (arg_2) options = _objectSpread$13({ defaultCountry: arg_2 }, options);
		} else if ((0, _isObject$3["default"])(arg_2)) if (arg_3) {
			options = arg_2;
			metadata$1 = arg_3;
		} else metadata$1 = arg_2;
		else throw new Error("Invalid second argument: ".concat(arg_2));
		return {
			text,
			options,
			metadata: metadata$1
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/constants.js
var require_constants = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/constants.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.WHITESPACE = exports.VALID_PUNCTUATION = exports.VALID_DIGITS = exports.PLUS_CHARS = exports.MIN_LENGTH_FOR_NSN = exports.MAX_LENGTH_FOR_NSN = exports.MAX_LENGTH_COUNTRY_CODE = void 0;
	var MIN_LENGTH_FOR_NSN = 2;
	exports.MIN_LENGTH_FOR_NSN = MIN_LENGTH_FOR_NSN;
	var MAX_LENGTH_FOR_NSN = 17;
	exports.MAX_LENGTH_FOR_NSN = MAX_LENGTH_FOR_NSN;
	var MAX_LENGTH_COUNTRY_CODE = 3;
	exports.MAX_LENGTH_COUNTRY_CODE = MAX_LENGTH_COUNTRY_CODE;
	var VALID_DIGITS = "0-9０-９٠-٩۰-۹";
	exports.VALID_DIGITS = VALID_DIGITS;
	var DASHES = "-‐-―−ー－";
	var SLASHES = "／/";
	var DOTS = "．.";
	var WHITESPACE = " \xA0­​⁠　";
	exports.WHITESPACE = WHITESPACE;
	var BRACKETS = "()（）［］\\[\\]";
	var TILDES = "~⁓∼～";
	var VALID_PUNCTUATION = "".concat(DASHES).concat(SLASHES).concat(DOTS).concat(WHITESPACE).concat(BRACKETS).concat(TILDES);
	exports.VALID_PUNCTUATION = VALID_PUNCTUATION;
	var PLUS_CHARS = "+＋";
	exports.PLUS_CHARS = PLUS_CHARS;
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/ParseError.js
var require_ParseError = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/ParseError.js"(exports) {
	function _typeof$15(obj) {
		"@babel/helpers - typeof";
		return _typeof$15 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj$1) {
			return typeof obj$1;
		} : function(obj$1) {
			return obj$1 && "function" == typeof Symbol && obj$1.constructor === Symbol && obj$1 !== Symbol.prototype ? "symbol" : typeof obj$1;
		}, _typeof$15(obj);
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = void 0;
	function _defineProperties$11(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass$11(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties$11(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties$11(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	function _classCallCheck$11(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
		subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
			value: subClass,
			writable: true,
			configurable: true
		} });
		Object.defineProperty(subClass, "prototype", { writable: false });
		if (superClass) _setPrototypeOf(subClass, superClass);
	}
	function _createSuper(Derived) {
		var hasNativeReflectConstruct = _isNativeReflectConstruct();
		return function _createSuperInternal() {
			var Super = _getPrototypeOf(Derived), result$1;
			if (hasNativeReflectConstruct) {
				var NewTarget = _getPrototypeOf(this).constructor;
				result$1 = Reflect.construct(Super, arguments, NewTarget);
			} else result$1 = Super.apply(this, arguments);
			return _possibleConstructorReturn(this, result$1);
		};
	}
	function _possibleConstructorReturn(self$1, call$1) {
		if (call$1 && (_typeof$15(call$1) === "object" || typeof call$1 === "function")) return call$1;
		else if (call$1 !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
		return _assertThisInitialized(self$1);
	}
	function _assertThisInitialized(self$1) {
		if (self$1 === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return self$1;
	}
	function _wrapNativeSuper(Class) {
		var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
		_wrapNativeSuper = function _wrapNativeSuper$1(Class$1) {
			if (Class$1 === null || !_isNativeFunction(Class$1)) return Class$1;
			if (typeof Class$1 !== "function") throw new TypeError("Super expression must either be null or a function");
			if (typeof _cache !== "undefined") {
				if (_cache.has(Class$1)) return _cache.get(Class$1);
				_cache.set(Class$1, Wrapper);
			}
			function Wrapper() {
				return _construct(Class$1, arguments, _getPrototypeOf(this).constructor);
			}
			Wrapper.prototype = Object.create(Class$1.prototype, { constructor: {
				value: Wrapper,
				enumerable: false,
				writable: true,
				configurable: true
			} });
			return _setPrototypeOf(Wrapper, Class$1);
		};
		return _wrapNativeSuper(Class);
	}
	function _construct(Parent, args, Class) {
		if (_isNativeReflectConstruct()) _construct = Reflect.construct;
		else _construct = function _construct$1(Parent$1, args$1, Class$1) {
			var a = [null];
			a.push.apply(a, args$1);
			var Constructor = Function.bind.apply(Parent$1, a);
			var instance = new Constructor();
			if (Class$1) _setPrototypeOf(instance, Class$1.prototype);
			return instance;
		};
		return _construct.apply(null, arguments);
	}
	function _isNativeReflectConstruct() {
		if (typeof Reflect === "undefined" || !Reflect.construct) return false;
		if (Reflect.construct.sham) return false;
		if (typeof Proxy === "function") return true;
		try {
			Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
			return true;
		} catch (e) {
			return false;
		}
	}
	function _isNativeFunction(fn) {
		return Function.toString.call(fn).indexOf("[native code]") !== -1;
	}
	function _setPrototypeOf(o, p) {
		_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf$1(o$1, p$1) {
			o$1.__proto__ = p$1;
			return o$1;
		};
		return _setPrototypeOf(o, p);
	}
	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf$1(o$1) {
			return o$1.__proto__ || Object.getPrototypeOf(o$1);
		};
		return _getPrototypeOf(o);
	}
	var ParseError = /* @__PURE__ */ function(_Error) {
		_inherits(ParseError$1, _Error);
		var _super = _createSuper(ParseError$1);
		function ParseError$1(code) {
			var _this;
			_classCallCheck$11(this, ParseError$1);
			_this = _super.call(this, code);
			Object.setPrototypeOf(_assertThisInitialized(_this), ParseError$1.prototype);
			_this.name = _this.constructor.name;
			return _this;
		}
		return _createClass$11(ParseError$1);
	}(/* @__PURE__ */ _wrapNativeSuper(Error));
	exports["default"] = ParseError;
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/tools/semver-compare.js
var require_semver_compare = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/tools/semver-compare.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = _default$2;
	function _default$2(a, b) {
		a = a.split("-");
		b = b.split("-");
		var pa = a[0].split(".");
		var pb = b[0].split(".");
		for (var i$1 = 0; i$1 < 3; i$1++) {
			var na = Number(pa[i$1]);
			var nb = Number(pb[i$1]);
			if (na > nb) return 1;
			if (nb > na) return -1;
			if (!isNaN(na) && isNaN(nb)) return 1;
			if (isNaN(na) && !isNaN(nb)) return -1;
		}
		if (a[1] && b[1]) return a[1] > b[1] ? 1 : a[1] < b[1] ? -1 : 0;
		return !a[1] && b[1] ? 1 : a[1] && !b[1] ? -1 : 0;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/metadata.js
var require_metadata = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/metadata.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = void 0;
	exports.getCountryCallingCode = getCountryCallingCode;
	exports.getExtPrefix = getExtPrefix;
	exports.isSupportedCountry = isSupportedCountry;
	exports.validateMetadata = validateMetadata;
	var _semverCompare = _interopRequireDefault$104(require_semver_compare());
	var _isObject$2 = _interopRequireDefault$104(require_isObject());
	function _interopRequireDefault$104(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _typeof$14(obj) {
		"@babel/helpers - typeof";
		return _typeof$14 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj$1) {
			return typeof obj$1;
		} : function(obj$1) {
			return obj$1 && "function" == typeof Symbol && obj$1.constructor === Symbol && obj$1 !== Symbol.prototype ? "symbol" : typeof obj$1;
		}, _typeof$14(obj);
	}
	function _classCallCheck$10(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _defineProperties$10(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass$10(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties$10(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties$10(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	var V3 = "1.2.0";
	var V4 = "1.7.35";
	var DEFAULT_EXT_PREFIX = " ext. ";
	var CALLING_CODE_REG_EXP = /^\d+$/;
	/**
	
	* See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md
	
	*/
	var Metadata = /* @__PURE__ */ function() {
		function Metadata$1(metadata$1) {
			_classCallCheck$10(this, Metadata$1);
			validateMetadata(metadata$1);
			this.metadata = metadata$1;
			setVersion.call(this, metadata$1);
		}
		_createClass$10(Metadata$1, [
			{
				key: "getCountries",
				value: function getCountries$1() {
					return Object.keys(this.metadata.countries).filter(function(_) {
						return _ !== "001";
					});
				}
			},
			{
				key: "getCountryMetadata",
				value: function getCountryMetadata(countryCode) {
					return this.metadata.countries[countryCode];
				}
			},
			{
				key: "nonGeographic",
				value: function nonGeographic() {
					if (this.v1 || this.v2 || this.v3) return;
					return this.metadata.nonGeographic || this.metadata.nonGeographical;
				}
			},
			{
				key: "hasCountry",
				value: function hasCountry(country$1) {
					return this.getCountryMetadata(country$1) !== void 0;
				}
			},
			{
				key: "hasCallingCode",
				value: function hasCallingCode(callingCode) {
					if (this.getCountryCodesForCallingCode(callingCode)) return true;
					if (this.nonGeographic()) {
						if (this.nonGeographic()[callingCode]) return true;
					} else {
						var countryCodes = this.countryCallingCodes()[callingCode];
						if (countryCodes && countryCodes.length === 1 && countryCodes[0] === "001") return true;
					}
				}
			},
			{
				key: "isNonGeographicCallingCode",
				value: function isNonGeographicCallingCode(callingCode) {
					if (this.nonGeographic()) return this.nonGeographic()[callingCode] ? true : false;
					else return this.getCountryCodesForCallingCode(callingCode) ? false : true;
				}
			},
			{
				key: "country",
				value: function country$1(countryCode) {
					return this.selectNumberingPlan(countryCode);
				}
			},
			{
				key: "selectNumberingPlan",
				value: function selectNumberingPlan(countryCode, callingCode) {
					if (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {
						callingCode = countryCode;
						countryCode = null;
					}
					if (countryCode && countryCode !== "001") {
						if (!this.hasCountry(countryCode)) throw new Error("Unknown country: ".concat(countryCode));
						this.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this);
					} else if (callingCode) {
						if (!this.hasCallingCode(callingCode)) throw new Error("Unknown calling code: ".concat(callingCode));
						this.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this);
					} else this.numberingPlan = void 0;
					return this;
				}
			},
			{
				key: "getCountryCodesForCallingCode",
				value: function getCountryCodesForCallingCode(callingCode) {
					var countryCodes = this.countryCallingCodes()[callingCode];
					if (countryCodes) {
						if (countryCodes.length === 1 && countryCodes[0].length === 3) return;
						return countryCodes;
					}
				}
			},
			{
				key: "getCountryCodeForCallingCode",
				value: function getCountryCodeForCallingCode(callingCode) {
					var countryCodes = this.getCountryCodesForCallingCode(callingCode);
					if (countryCodes) return countryCodes[0];
				}
			},
			{
				key: "getNumberingPlanMetadata",
				value: function getNumberingPlanMetadata(callingCode) {
					var countryCode = this.getCountryCodeForCallingCode(callingCode);
					if (countryCode) return this.getCountryMetadata(countryCode);
					if (this.nonGeographic()) {
						var metadata$1 = this.nonGeographic()[callingCode];
						if (metadata$1) return metadata$1;
					} else {
						var countryCodes = this.countryCallingCodes()[callingCode];
						if (countryCodes && countryCodes.length === 1 && countryCodes[0] === "001") return this.metadata.countries["001"];
					}
				}
			},
			{
				key: "countryCallingCode",
				value: function countryCallingCode() {
					return this.numberingPlan.callingCode();
				}
			},
			{
				key: "IDDPrefix",
				value: function IDDPrefix() {
					return this.numberingPlan.IDDPrefix();
				}
			},
			{
				key: "defaultIDDPrefix",
				value: function defaultIDDPrefix() {
					return this.numberingPlan.defaultIDDPrefix();
				}
			},
			{
				key: "nationalNumberPattern",
				value: function nationalNumberPattern() {
					return this.numberingPlan.nationalNumberPattern();
				}
			},
			{
				key: "possibleLengths",
				value: function possibleLengths() {
					return this.numberingPlan.possibleLengths();
				}
			},
			{
				key: "formats",
				value: function formats$1() {
					return this.numberingPlan.formats();
				}
			},
			{
				key: "nationalPrefixForParsing",
				value: function nationalPrefixForParsing() {
					return this.numberingPlan.nationalPrefixForParsing();
				}
			},
			{
				key: "nationalPrefixTransformRule",
				value: function nationalPrefixTransformRule() {
					return this.numberingPlan.nationalPrefixTransformRule();
				}
			},
			{
				key: "leadingDigits",
				value: function leadingDigits() {
					return this.numberingPlan.leadingDigits();
				}
			},
			{
				key: "hasTypes",
				value: function hasTypes() {
					return this.numberingPlan.hasTypes();
				}
			},
			{
				key: "type",
				value: function type(_type) {
					return this.numberingPlan.type(_type);
				}
			},
			{
				key: "ext",
				value: function ext() {
					return this.numberingPlan.ext();
				}
			},
			{
				key: "countryCallingCodes",
				value: function countryCallingCodes() {
					if (this.v1) return this.metadata.country_phone_code_to_countries;
					return this.metadata.country_calling_codes;
				}
			},
			{
				key: "chooseCountryByCountryCallingCode",
				value: function chooseCountryByCountryCallingCode(callingCode) {
					return this.selectNumberingPlan(callingCode);
				}
			},
			{
				key: "hasSelectedNumberingPlan",
				value: function hasSelectedNumberingPlan() {
					return this.numberingPlan !== void 0;
				}
			}
		]);
		return Metadata$1;
	}();
	exports["default"] = Metadata;
	var NumberingPlan = /* @__PURE__ */ function() {
		function NumberingPlan$1(metadata$1, globalMetadataObject) {
			_classCallCheck$10(this, NumberingPlan$1);
			this.globalMetadataObject = globalMetadataObject;
			this.metadata = metadata$1;
			setVersion.call(this, globalMetadataObject.metadata);
		}
		_createClass$10(NumberingPlan$1, [
			{
				key: "callingCode",
				value: function callingCode() {
					return this.metadata[0];
				}
			},
			{
				key: "getDefaultCountryMetadataForRegion",
				value: function getDefaultCountryMetadataForRegion() {
					return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());
				}
			},
			{
				key: "IDDPrefix",
				value: function IDDPrefix() {
					if (this.v1 || this.v2) return;
					return this.metadata[1];
				}
			},
			{
				key: "defaultIDDPrefix",
				value: function defaultIDDPrefix() {
					if (this.v1 || this.v2) return;
					return this.metadata[12];
				}
			},
			{
				key: "nationalNumberPattern",
				value: function nationalNumberPattern() {
					if (this.v1 || this.v2) return this.metadata[1];
					return this.metadata[2];
				}
			},
			{
				key: "possibleLengths",
				value: function possibleLengths() {
					if (this.v1) return;
					return this.metadata[this.v2 ? 2 : 3];
				}
			},
			{
				key: "_getFormats",
				value: function _getFormats(metadata$1) {
					return metadata$1[this.v1 ? 2 : this.v2 ? 3 : 4];
				}
			},
			{
				key: "formats",
				value: function formats$1() {
					var _this = this;
					var formats$2 = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];
					return formats$2.map(function(_) {
						return new Format(_, _this);
					});
				}
			},
			{
				key: "nationalPrefix",
				value: function nationalPrefix() {
					return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];
				}
			},
			{
				key: "_getNationalPrefixFormattingRule",
				value: function _getNationalPrefixFormattingRule(metadata$1) {
					return metadata$1[this.v1 ? 4 : this.v2 ? 5 : 6];
				}
			},
			{
				key: "nationalPrefixFormattingRule",
				value: function nationalPrefixFormattingRule() {
					return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());
				}
			},
			{
				key: "_nationalPrefixForParsing",
				value: function _nationalPrefixForParsing() {
					return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];
				}
			},
			{
				key: "nationalPrefixForParsing",
				value: function nationalPrefixForParsing() {
					return this._nationalPrefixForParsing() || this.nationalPrefix();
				}
			},
			{
				key: "nationalPrefixTransformRule",
				value: function nationalPrefixTransformRule() {
					return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];
				}
			},
			{
				key: "_getNationalPrefixIsOptionalWhenFormatting",
				value: function _getNationalPrefixIsOptionalWhenFormatting() {
					return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];
				}
			},
			{
				key: "nationalPrefixIsOptionalWhenFormattingInNationalFormat",
				value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {
					return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());
				}
			},
			{
				key: "leadingDigits",
				value: function leadingDigits() {
					return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];
				}
			},
			{
				key: "types",
				value: function types() {
					return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];
				}
			},
			{
				key: "hasTypes",
				value: function hasTypes() {
					/* istanbul ignore next */
					if (this.types() && this.types().length === 0) return false;
					return !!this.types();
				}
			},
			{
				key: "type",
				value: function type(_type2) {
					if (this.hasTypes() && getType(this.types(), _type2)) return new Type$1(getType(this.types(), _type2), this);
				}
			},
			{
				key: "ext",
				value: function ext() {
					if (this.v1 || this.v2) return DEFAULT_EXT_PREFIX;
					return this.metadata[13] || DEFAULT_EXT_PREFIX;
				}
			}
		]);
		return NumberingPlan$1;
	}();
	var Format = /* @__PURE__ */ function() {
		function Format$1(format, metadata$1) {
			_classCallCheck$10(this, Format$1);
			this._format = format;
			this.metadata = metadata$1;
		}
		_createClass$10(Format$1, [
			{
				key: "pattern",
				value: function pattern() {
					return this._format[0];
				}
			},
			{
				key: "format",
				value: function format() {
					return this._format[1];
				}
			},
			{
				key: "leadingDigitsPatterns",
				value: function leadingDigitsPatterns() {
					return this._format[2] || [];
				}
			},
			{
				key: "nationalPrefixFormattingRule",
				value: function nationalPrefixFormattingRule() {
					return this._format[3] || this.metadata.nationalPrefixFormattingRule();
				}
			},
			{
				key: "nationalPrefixIsOptionalWhenFormattingInNationalFormat",
				value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {
					return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();
				}
			},
			{
				key: "nationalPrefixIsMandatoryWhenFormattingInNationalFormat",
				value: function nationalPrefixIsMandatoryWhenFormattingInNationalFormat() {
					return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();
				}
			},
			{
				key: "usesNationalPrefix",
				value: function usesNationalPrefix() {
					return this.nationalPrefixFormattingRule() && !FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule()) ? true : false;
				}
			},
			{
				key: "internationalFormat",
				value: function internationalFormat() {
					return this._format[5] || this.format();
				}
			}
		]);
		return Format$1;
	}();
	/**
	
	* A pattern that is used to determine if the national prefix formatting rule
	
	* has the first group only, i.e., does not start with the national prefix.
	
	* Note that the pattern explicitly allows for unbalanced parentheses.
	
	*/
	var FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\(?\$1\)?$/;
	var Type$1 = /* @__PURE__ */ function() {
		function Type$2(type, metadata$1) {
			_classCallCheck$10(this, Type$2);
			this.type = type;
			this.metadata = metadata$1;
		}
		_createClass$10(Type$2, [{
			key: "pattern",
			value: function pattern() {
				if (this.metadata.v1) return this.type;
				return this.type[0];
			}
		}, {
			key: "possibleLengths",
			value: function possibleLengths() {
				if (this.metadata.v1) return;
				return this.type[1] || this.metadata.possibleLengths();
			}
		}]);
		return Type$2;
	}();
	function getType(types, type) {
		switch (type) {
			case "FIXED_LINE": return types[0];
			case "MOBILE": return types[1];
			case "TOLL_FREE": return types[2];
			case "PREMIUM_RATE": return types[3];
			case "PERSONAL_NUMBER": return types[4];
			case "VOICEMAIL": return types[5];
			case "UAN": return types[6];
			case "PAGER": return types[7];
			case "VOIP": return types[8];
			case "SHARED_COST": return types[9];
		}
	}
	function validateMetadata(metadata$1) {
		if (!metadata$1) throw new Error("[libphonenumber-js] `metadata` argument not passed. Check your arguments.");
		if (!(0, _isObject$2["default"])(metadata$1) || !(0, _isObject$2["default"])(metadata$1.countries)) throw new Error("[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got ".concat((0, _isObject$2["default"])(metadata$1) ? "an object of shape: { " + Object.keys(metadata$1).join(", ") + " }" : "a " + typeOf(metadata$1) + ": " + metadata$1, "."));
	}
	/* istanbul ignore next */
	var typeOf = function typeOf$1(_) {
		return _typeof$14(_);
	};
	/**
	
	* Returns extension prefix for a country.
	
	* @param  {string} country
	
	* @param  {object} metadata
	
	* @return {string?}
	
	* @example
	
	* // Returns " ext. "
	
	* getExtPrefix("US")
	
	*/
	function getExtPrefix(country$1, metadata$1) {
		metadata$1 = new Metadata(metadata$1);
		if (metadata$1.hasCountry(country$1)) return metadata$1.country(country$1).ext();
		return DEFAULT_EXT_PREFIX;
	}
	/**
	
	* Returns "country calling code" for a country.
	
	* Throws an error if the country doesn't exist or isn't supported by this library.
	
	* @param  {string} country
	
	* @param  {object} metadata
	
	* @return {string}
	
	* @example
	
	* // Returns "44"
	
	* getCountryCallingCode("GB")
	
	*/
	function getCountryCallingCode(country$1, metadata$1) {
		metadata$1 = new Metadata(metadata$1);
		if (metadata$1.hasCountry(country$1)) return metadata$1.country(country$1).countryCallingCode();
		throw new Error("Unknown country: ".concat(country$1));
	}
	function isSupportedCountry(country$1, metadata$1) {
		return metadata$1.countries.hasOwnProperty(country$1);
	}
	function setVersion(metadata$1) {
		var version$1 = metadata$1.version;
		if (typeof version$1 === "number") {
			this.v1 = version$1 === 1;
			this.v2 = version$1 === 2;
			this.v3 = version$1 === 3;
			this.v4 = version$1 === 4;
		} else if (!version$1) this.v1 = true;
		else if ((0, _semverCompare["default"])(version$1, V3) === -1) this.v2 = true;
		else if ((0, _semverCompare["default"])(version$1, V4) === -1) this.v3 = true;
		else this.v4 = true;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extension/createExtensionPattern.js
var require_createExtensionPattern = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extension/createExtensionPattern.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = createExtensionPattern;
	var _constants$10 = require_constants();
	var RFC3966_EXTN_PREFIX = ";ext=";
	/**
	
	* Helper method for constructing regular expressions for parsing. Creates
	
	* an expression that captures up to max_length digits.
	
	* @return {string} RegEx pattern to capture extension digits.
	
	*/
	var getExtensionDigitsPattern = function getExtensionDigitsPattern$1(maxLength$1) {
		return "([".concat(_constants$10.VALID_DIGITS, "]{1,").concat(maxLength$1, "})");
	};
	/**
	
	* Helper initialiser method to create the regular-expression pattern to match
	
	* extensions.
	
	* Copy-pasted from Google's `libphonenumber`:
	
	* https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766
	
	* @return {string} RegEx pattern to capture extensions.
	
	*/
	function createExtensionPattern(purpose) {
		/** @type {string} */
		var extLimitAfterExplicitLabel = "20";
		/** @type {string} */
		var extLimitAfterLikelyLabel = "15";
		/** @type {string} */
		var extLimitAfterAmbiguousChar = "9";
		/** @type {string} */
		var extLimitWhenNotSure = "6";
		/** @type {string} */
		var possibleSeparatorsBetweenNumberAndExtLabel = "[ \xA0\\t,]*";
		/** @type {string} */
		var possibleCharsAfterExtLabel = "[:\\.．]?[ \xA0\\t,-]*";
		/** @type {string} */
		var optionalExtnSuffix = "#?";
		/** @type {string} */
		var explicitExtLabels = "(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|anexo)";
		/** @type {string} */
		var ambiguousExtLabels = "(?:[xｘ#＃~～]|int|ｉｎｔ)";
		/** @type {string} */
		var ambiguousSeparator = "[- ]+";
		/** @type {string} */
		var possibleSeparatorsNumberExtLabelNoComma = "[ \xA0\\t]*";
		/** @type {string} */
		var autoDiallingAndExtLabelsFound = "(?:,{2}|;)";
		/** @type {string} */
		var rfcExtn = RFC3966_EXTN_PREFIX + getExtensionDigitsPattern(extLimitAfterExplicitLabel);
		/** @type {string} */
		var explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterExplicitLabel) + optionalExtnSuffix;
		/** @type {string} */
		var ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix;
		/** @type {string} */
		var americanStyleExtnWithSuffix = ambiguousSeparator + getExtensionDigitsPattern(extLimitWhenNotSure) + "#";
		/** @type {string} */
		var autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterLikelyLabel) + optionalExtnSuffix;
		/** @type {string} */
		var onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma + "(?:,)+" + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix;
		return rfcExtn + "|" + explicitExtn + "|" + ambiguousExtn + "|" + americanStyleExtnWithSuffix + "|" + autoDiallingExtn + "|" + onlyCommasExtn;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/isViablePhoneNumber.js
var require_isViablePhoneNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/isViablePhoneNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.VALID_PHONE_NUMBER_WITH_EXTENSION = exports.VALID_PHONE_NUMBER = void 0;
	exports["default"] = isViablePhoneNumber;
	exports.isViablePhoneNumberStart = isViablePhoneNumberStart;
	var _constants$9 = require_constants();
	var _createExtensionPattern$2 = _interopRequireDefault$103(require_createExtensionPattern());
	function _interopRequireDefault$103(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	var MIN_LENGTH_PHONE_NUMBER_PATTERN = "[" + _constants$9.VALID_DIGITS + "]{" + _constants$9.MIN_LENGTH_FOR_NSN + "}";
	var VALID_PHONE_NUMBER = "[" + _constants$9.PLUS_CHARS + "]{0,1}(?:[" + _constants$9.VALID_PUNCTUATION + "]*[" + _constants$9.VALID_DIGITS + "]){3,}[" + _constants$9.VALID_PUNCTUATION + _constants$9.VALID_DIGITS + "]*";
	exports.VALID_PHONE_NUMBER = VALID_PHONE_NUMBER;
	var VALID_PHONE_NUMBER_START_REG_EXP = new RegExp("^[" + _constants$9.PLUS_CHARS + "]{0,1}(?:[" + _constants$9.VALID_PUNCTUATION + "]*[" + _constants$9.VALID_DIGITS + "]){1,2}$", "i");
	var VALID_PHONE_NUMBER_WITH_EXTENSION = VALID_PHONE_NUMBER + "(?:" + (0, _createExtensionPattern$2["default"])() + ")?";
	exports.VALID_PHONE_NUMBER_WITH_EXTENSION = VALID_PHONE_NUMBER_WITH_EXTENSION;
	var VALID_PHONE_NUMBER_PATTERN = new RegExp("^" + MIN_LENGTH_PHONE_NUMBER_PATTERN + "$|^" + VALID_PHONE_NUMBER_WITH_EXTENSION + "$", "i");
	function isViablePhoneNumber(number) {
		return number.length >= _constants$9.MIN_LENGTH_FOR_NSN && VALID_PHONE_NUMBER_PATTERN.test(number);
	}
	function isViablePhoneNumberStart(number) {
		return VALID_PHONE_NUMBER_START_REG_EXP.test(number);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extension/extractExtension.js
var require_extractExtension = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extension/extractExtension.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = extractExtension;
	var _createExtensionPattern$1 = _interopRequireDefault$102(require_createExtensionPattern());
	function _interopRequireDefault$102(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	var EXTN_PATTERN = new RegExp("(?:" + (0, _createExtensionPattern$1["default"])() + ")$", "i");
	function extractExtension(number) {
		var start = number.search(EXTN_PATTERN);
		if (start < 0) return {};
		var numberWithoutExtension = number.slice(0, start);
		var matches$2 = number.match(EXTN_PATTERN);
		var i$1 = 1;
		while (i$1 < matches$2.length) {
			if (matches$2[i$1]) return {
				number: numberWithoutExtension,
				ext: matches$2[i$1]
			};
			i$1++;
		}
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/parseDigits.js
var require_parseDigits = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/parseDigits.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.DIGITS = void 0;
	exports["default"] = parseDigits;
	exports.parseDigit = parseDigit;
	function _createForOfIteratorHelperLoose$10(o, allowArrayLike) {
		var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
		if (it) return (it = it.call(o)).next.bind(it);
		if (Array.isArray(o) || (it = _unsupportedIterableToArray$15(o)) || allowArrayLike && o && typeof o.length === "number") {
			if (it) o = it;
			var i$1 = 0;
			return function() {
				if (i$1 >= o.length) return { done: true };
				return {
					done: false,
					value: o[i$1++]
				};
			};
		}
		throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$15(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$15(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$15(o, minLen);
	}
	function _arrayLikeToArray$15(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	var DIGITS = {
		"0": "0",
		"1": "1",
		"2": "2",
		"3": "3",
		"4": "4",
		"5": "5",
		"6": "6",
		"7": "7",
		"8": "8",
		"9": "9",
		"０": "0",
		"１": "1",
		"２": "2",
		"３": "3",
		"４": "4",
		"５": "5",
		"６": "6",
		"７": "7",
		"８": "8",
		"９": "9",
		"٠": "0",
		"١": "1",
		"٢": "2",
		"٣": "3",
		"٤": "4",
		"٥": "5",
		"٦": "6",
		"٧": "7",
		"٨": "8",
		"٩": "9",
		"۰": "0",
		"۱": "1",
		"۲": "2",
		"۳": "3",
		"۴": "4",
		"۵": "5",
		"۶": "6",
		"۷": "7",
		"۸": "8",
		"۹": "9"
	};
	exports.DIGITS = DIGITS;
	function parseDigit(character) {
		return DIGITS[character];
	}
	/**
	
	* Parses phone number digits from a string.
	
	* Drops all punctuation leaving only digits.
	
	* Also converts wide-ascii and arabic-indic numerals to conventional numerals.
	
	* E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.
	
	* @param  {string} string
	
	* @return {string}
	
	* @example
	
	* ```js
	
	* parseDigits('8 (800) 555')
	
	* // Outputs '8800555'.
	
	* ```
	
	*/
	function parseDigits(string) {
		var result$1 = "";
		for (var _iterator = _createForOfIteratorHelperLoose$10(string.split("")), _step; !(_step = _iterator()).done;) {
			var character = _step.value;
			var digit = parseDigit(character);
			if (digit) result$1 += digit;
		}
		return result$1;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parseIncompletePhoneNumber.js
var require_parseIncompletePhoneNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parseIncompletePhoneNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = parseIncompletePhoneNumber;
	exports.parsePhoneNumberCharacter = parsePhoneNumberCharacter;
	var _parseDigits$4 = require_parseDigits();
	function _createForOfIteratorHelperLoose$9(o, allowArrayLike) {
		var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
		if (it) return (it = it.call(o)).next.bind(it);
		if (Array.isArray(o) || (it = _unsupportedIterableToArray$14(o)) || allowArrayLike && o && typeof o.length === "number") {
			if (it) o = it;
			var i$1 = 0;
			return function() {
				if (i$1 >= o.length) return { done: true };
				return {
					done: false,
					value: o[i$1++]
				};
			};
		}
		throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$14(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$14(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$14(o, minLen);
	}
	function _arrayLikeToArray$14(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	/**
	
	* Parses phone number characters from a string.
	
	* Drops all punctuation leaving only digits and the leading `+` sign (if any).
	
	* Also converts wide-ascii and arabic-indic numerals to conventional numerals.
	
	* E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.
	
	* @param  {string} string
	
	* @return {string}
	
	* @example
	
	* ```js
	
	* // Outputs '8800555'.
	
	* parseIncompletePhoneNumber('8 (800) 555')
	
	* // Outputs '+7800555'.
	
	* parseIncompletePhoneNumber('+7 800 555')
	
	* ```
	
	*/
	function parseIncompletePhoneNumber(string) {
		var result$1 = "";
		for (var _iterator = _createForOfIteratorHelperLoose$9(string.split("")), _step; !(_step = _iterator()).done;) {
			var character = _step.value;
			result$1 += parsePhoneNumberCharacter(character, result$1) || "";
		}
		return result$1;
	}
	/**
	
	* Parses next character while parsing phone number digits (including a `+`)
	
	* from text: discards everything except `+` and digits, and `+` is only allowed
	
	* at the start of a phone number.
	
	* For example, is used in `react-phone-number-input` where it uses
	
	* [`input-format`](https://gitlab.com/catamphetamine/input-format).
	
	* @param  {string} character - Yet another character from raw input string.
	
	* @param  {string?} prevParsedCharacters - Previous parsed characters.
	
	* @param  {function?} emitEvent - An optional "emit event" function.
	
	* @return {string?} The parsed character.
	
	*/
	function parsePhoneNumberCharacter(character, prevParsedCharacters, emitEvent) {
		if (character === "+") {
			if (prevParsedCharacters) {
				if (typeof emitEvent === "function") emitEvent("end");
				return;
			}
			return "+";
		}
		return (0, _parseDigits$4.parseDigit)(character);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/getCountryCallingCode.js
var require_getCountryCallingCode = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/getCountryCallingCode.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	Object.defineProperty(exports, "default", {
		enumerable: true,
		get: function get() {
			return _metadata$16.getCountryCallingCode;
		}
	});
	var _metadata$16 = require_metadata();
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/mergeArrays.js
var require_mergeArrays = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/mergeArrays.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = mergeArrays;
	function _createForOfIteratorHelperLoose$8(o, allowArrayLike) {
		var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
		if (it) return (it = it.call(o)).next.bind(it);
		if (Array.isArray(o) || (it = _unsupportedIterableToArray$13(o)) || allowArrayLike && o && typeof o.length === "number") {
			if (it) o = it;
			var i$1 = 0;
			return function() {
				if (i$1 >= o.length) return { done: true };
				return {
					done: false,
					value: o[i$1++]
				};
			};
		}
		throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$13(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$13(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$13(o, minLen);
	}
	function _arrayLikeToArray$13(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	/**
	
	* Merges two arrays.
	
	* @param  {*} a
	
	* @param  {*} b
	
	* @return {*}
	
	*/
	function mergeArrays(a, b) {
		var merged = a.slice();
		for (var _iterator = _createForOfIteratorHelperLoose$8(b), _step; !(_step = _iterator()).done;) {
			var element = _step.value;
			if (a.indexOf(element) < 0) merged.push(element);
		}
		return merged.sort(function(a$1, b$1) {
			return a$1 - b$1;
		});
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/checkNumberLength.js
var require_checkNumberLength = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/checkNumberLength.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.checkNumberLengthForType = checkNumberLengthForType;
	exports["default"] = checkNumberLength;
	var _mergeArrays = _interopRequireDefault$101(require_mergeArrays());
	function _interopRequireDefault$101(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function checkNumberLength(nationalNumber, metadata$1) {
		return checkNumberLengthForType(nationalNumber, void 0, metadata$1);
	}
	function checkNumberLengthForType(nationalNumber, type, metadata$1) {
		var type_info = metadata$1.type(type);
		var possible_lengths = type_info && type_info.possibleLengths() || metadata$1.possibleLengths();
		if (!possible_lengths) return "IS_POSSIBLE";
		if (type === "FIXED_LINE_OR_MOBILE") {
			/* istanbul ignore next */
			if (!metadata$1.type("FIXED_LINE")) return checkNumberLengthForType(nationalNumber, "MOBILE", metadata$1);
			var mobile_type = metadata$1.type("MOBILE");
			if (mobile_type) possible_lengths = (0, _mergeArrays["default"])(possible_lengths, mobile_type.possibleLengths());
		} else if (type && !type_info) return "INVALID_LENGTH";
		var actual_length = nationalNumber.length;
		var minimum_length = possible_lengths[0];
		if (minimum_length === actual_length) return "IS_POSSIBLE";
		if (minimum_length > actual_length) return "TOO_SHORT";
		if (possible_lengths[possible_lengths.length - 1] < actual_length) return "TOO_LONG";
		return possible_lengths.indexOf(actual_length, 1) >= 0 ? "IS_POSSIBLE" : "INVALID_LENGTH";
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/isPossible.js
var require_isPossible = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/isPossible.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = isPossiblePhoneNumber$1;
	exports.isPossibleNumber = isPossibleNumber;
	var _metadata$15 = _interopRequireDefault$100(require_metadata());
	var _checkNumberLength$4 = _interopRequireDefault$100(require_checkNumberLength());
	function _interopRequireDefault$100(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	/**
	
	* Checks if a phone number is "possible" (basically just checks its length).
	
	*
	
	* isPossible(phoneNumberInstance, { ..., v2: true }, metadata)
	
	*
	
	* isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)
	
	* isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)
	
	*
	
	* @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.
	
	* @param  {object} [options]
	
	* @param  {object} metadata
	
	* @return {string}
	
	*/
	function isPossiblePhoneNumber$1(input, options, metadata$1) {
		/* istanbul ignore if */
		if (options === void 0) options = {};
		metadata$1 = new _metadata$15["default"](metadata$1);
		if (options.v2) {
			if (!input.countryCallingCode) throw new Error("Invalid phone number object passed");
			metadata$1.selectNumberingPlan(input.countryCallingCode);
		} else {
			if (!input.phone) return false;
			if (input.country) {
				if (!metadata$1.hasCountry(input.country)) throw new Error("Unknown country: ".concat(input.country));
				metadata$1.country(input.country);
			} else {
				if (!input.countryCallingCode) throw new Error("Invalid phone number object passed");
				metadata$1.selectNumberingPlan(input.countryCallingCode);
			}
		}
		if (metadata$1.possibleLengths()) return isPossibleNumber(input.phone || input.nationalNumber, metadata$1);
		else if (input.countryCallingCode && metadata$1.isNonGeographicCallingCode(input.countryCallingCode)) return true;
		else throw new Error("Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.");
	}
	function isPossibleNumber(nationalNumber, metadata$1) {
		switch ((0, _checkNumberLength$4["default"])(nationalNumber, metadata$1)) {
			case "IS_POSSIBLE": return true;
			default: return false;
		}
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/matchesEntirely.js
var require_matchesEntirely = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/matchesEntirely.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = matchesEntirely;
	/**
	
	* Checks whether the entire input sequence can be matched
	
	* against the regular expression.
	
	* @return {boolean}
	
	*/
	function matchesEntirely(text, regular_expression) {
		text = text || "";
		return (/* @__PURE__ */ new RegExp("^(?:" + regular_expression + ")$")).test(text);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/getNumberType.js
var require_getNumberType = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/getNumberType.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = getNumberType;
	exports.isNumberTypeEqualTo = isNumberTypeEqualTo;
	var _metadata$14 = _interopRequireDefault$99(require_metadata());
	var _matchesEntirely$5 = _interopRequireDefault$99(require_matchesEntirely());
	function _interopRequireDefault$99(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _createForOfIteratorHelperLoose$7(o, allowArrayLike) {
		var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
		if (it) return (it = it.call(o)).next.bind(it);
		if (Array.isArray(o) || (it = _unsupportedIterableToArray$12(o)) || allowArrayLike && o && typeof o.length === "number") {
			if (it) o = it;
			var i$1 = 0;
			return function() {
				if (i$1 >= o.length) return { done: true };
				return {
					done: false,
					value: o[i$1++]
				};
			};
		}
		throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$12(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$12(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$12(o, minLen);
	}
	function _arrayLikeToArray$12(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	var NON_FIXED_LINE_PHONE_TYPES = [
		"MOBILE",
		"PREMIUM_RATE",
		"TOLL_FREE",
		"SHARED_COST",
		"VOIP",
		"PERSONAL_NUMBER",
		"PAGER",
		"UAN",
		"VOICEMAIL"
	];
	function getNumberType(input, options, metadata$1) {
		options = options || {};
		if (!input.country && !input.countryCallingCode) return;
		metadata$1 = new _metadata$14["default"](metadata$1);
		metadata$1.selectNumberingPlan(input.country, input.countryCallingCode);
		var nationalNumber = options.v2 ? input.nationalNumber : input.phone;
		if (!(0, _matchesEntirely$5["default"])(nationalNumber, metadata$1.nationalNumberPattern())) return;
		if (isNumberTypeEqualTo(nationalNumber, "FIXED_LINE", metadata$1)) {
			if (metadata$1.type("MOBILE") && metadata$1.type("MOBILE").pattern() === "") return "FIXED_LINE_OR_MOBILE";
			if (!metadata$1.type("MOBILE")) return "FIXED_LINE_OR_MOBILE";
			/* istanbul ignore if */
			if (isNumberTypeEqualTo(nationalNumber, "MOBILE", metadata$1)) return "FIXED_LINE_OR_MOBILE";
			return "FIXED_LINE";
		}
		for (var _iterator = _createForOfIteratorHelperLoose$7(NON_FIXED_LINE_PHONE_TYPES), _step; !(_step = _iterator()).done;) {
			var type = _step.value;
			if (isNumberTypeEqualTo(nationalNumber, type, metadata$1)) return type;
		}
	}
	function isNumberTypeEqualTo(nationalNumber, type, metadata$1) {
		type = metadata$1.type(type);
		if (!type || !type.pattern()) return false;
		if (type.possibleLengths() && type.possibleLengths().indexOf(nationalNumber.length) < 0) return false;
		return (0, _matchesEntirely$5["default"])(nationalNumber, type.pattern());
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/isValid.js
var require_isValid = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/isValid.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = isValidNumber;
	var _metadata$13 = _interopRequireDefault$98(require_metadata());
	var _matchesEntirely$4 = _interopRequireDefault$98(require_matchesEntirely());
	var _getNumberType$2 = _interopRequireDefault$98(require_getNumberType());
	function _interopRequireDefault$98(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	/**
	
	* Checks if a given phone number is valid.
	
	*
	
	* isValid(phoneNumberInstance, { ..., v2: true }, metadata)
	
	*
	
	* isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)
	
	* isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)
	
	*
	
	* If the `number` is a string, it will be parsed to an object,
	
	* but only if it contains only valid phone number characters (including punctuation).
	
	* If the `number` is an object, it is used as is.
	
	*
	
	* The optional `defaultCountry` argument is the default country.
	
	* I.e. it does not restrict to just that country,
	
	* e.g. in those cases where several countries share
	
	* the same phone numbering rules (NANPA, Britain, etc).
	
	* For example, even though the number `07624 369230`
	
	* belongs to the Isle of Man ("IM" country code)
	
	* calling `isValidNumber('07624369230', 'GB', metadata)`
	
	* still returns `true` because the country is not restricted to `GB`,
	
	* it's just that `GB` is the default one for the phone numbering rules.
	
	* For restricting the country see `isValidNumberForRegion()`
	
	* though restricting a country might not be a good idea.
	
	* https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion
	
	*
	
	* Examples:
	
	*
	
	* ```js
	
	* isValidNumber('+78005553535', metadata)
	
	* isValidNumber('8005553535', 'RU', metadata)
	
	* isValidNumber('88005553535', 'RU', metadata)
	
	* isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)
	
	* ```
	
	*/
	function isValidNumber(input, options, metadata$1) {
		options = options || {};
		metadata$1 = new _metadata$13["default"](metadata$1);
		metadata$1.selectNumberingPlan(input.country, input.countryCallingCode);
		if (metadata$1.hasTypes()) return (0, _getNumberType$2["default"])(input, options, metadata$1.metadata) !== void 0;
		var nationalNumber = options.v2 ? input.nationalNumber : input.phone;
		return (0, _matchesEntirely$4["default"])(nationalNumber, metadata$1.nationalNumberPattern());
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/getPossibleCountriesForNumber.js
var require_getPossibleCountriesForNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/getPossibleCountriesForNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = getPossibleCountriesForNumber;
	var _metadata2$1 = _interopRequireDefault$97(require_metadata());
	function _interopRequireDefault$97(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	/**
	
	* Returns a list of countries that the phone number could potentially belong to.
	
	* @param  {string} callingCode — Calling code.
	
	* @param  {string} nationalNumber — National (significant) number.
	
	* @param  {object} metadata — Metadata.
	
	* @return {string[]} A list of possible countries.
	
	*/
	function getPossibleCountriesForNumber(callingCode, nationalNumber, metadata$1) {
		var _metadata$17 = new _metadata2$1["default"](metadata$1);
		var possibleCountries = _metadata$17.getCountryCodesForCallingCode(callingCode);
		if (!possibleCountries) return [];
		return possibleCountries.filter(function(country$1) {
			return couldNationalNumberBelongToCountry(nationalNumber, country$1, metadata$1);
		});
	}
	function couldNationalNumberBelongToCountry(nationalNumber, country$1, metadata$1) {
		var _metadata$17 = new _metadata2$1["default"](metadata$1);
		_metadata$17.selectNumberingPlan(country$1);
		if (_metadata$17.numberingPlan.possibleLengths().indexOf(nationalNumber.length) >= 0) return true;
		return false;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/stripIddPrefix.js
var require_stripIddPrefix = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/stripIddPrefix.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = stripIddPrefix;
	var _metadata$12 = _interopRequireDefault$96(require_metadata());
	var _constants$8 = require_constants();
	function _interopRequireDefault$96(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	var CAPTURING_DIGIT_PATTERN = /* @__PURE__ */ new RegExp("([" + _constants$8.VALID_DIGITS + "])");
	function stripIddPrefix(number, country$1, callingCode, metadata$1) {
		if (!country$1) return;
		var countryMetadata = new _metadata$12["default"](metadata$1);
		countryMetadata.selectNumberingPlan(country$1, callingCode);
		var IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix());
		if (number.search(IDDPrefixPattern) !== 0) return;
		number = number.slice(number.match(IDDPrefixPattern)[0].length);
		var matchedGroups = number.match(CAPTURING_DIGIT_PATTERN);
		if (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {
			if (matchedGroups[1] === "0") return;
		}
		return number;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js
var require_extractNationalNumberFromPossiblyIncompleteNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = extractNationalNumberFromPossiblyIncompleteNumber;
	/**
	
	* Strips any national prefix (such as 0, 1) present in a
	
	* (possibly incomplete) number provided.
	
	* "Carrier codes" are only used  in Colombia and Brazil,
	
	* and only when dialing within those countries from a mobile phone to a fixed line number.
	
	* Sometimes it won't actually strip national prefix
	
	* and will instead prepend some digits to the `number`:
	
	* for example, when number `2345678` is passed with `VI` country selected,
	
	* it will return `{ number: "3402345678" }`, because `340` area code is prepended.
	
	* @param {string} number — National number digits.
	
	* @param {object} metadata — Metadata with country selected.
	
	* @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`. Even if a national prefix was extracted, it's not necessarily present in the returned object, so don't rely on its presence in the returned object in order to find out whether a national prefix has been extracted or not.
	
	*/
	function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata$1) {
		if (number && metadata$1.numberingPlan.nationalPrefixForParsing()) {
			var prefixPattern = /* @__PURE__ */ new RegExp("^(?:" + metadata$1.numberingPlan.nationalPrefixForParsing() + ")");
			var prefixMatch = prefixPattern.exec(number);
			if (prefixMatch) {
				var nationalNumber;
				var carrierCode;
				var capturedGroupsCount = prefixMatch.length - 1;
				var hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount];
				if (metadata$1.nationalPrefixTransformRule() && hasCapturedGroups) {
					nationalNumber = number.replace(prefixPattern, metadata$1.nationalPrefixTransformRule());
					if (capturedGroupsCount > 1) carrierCode = prefixMatch[1];
				} else {
					var prefixBeforeNationalNumber = prefixMatch[0];
					nationalNumber = number.slice(prefixBeforeNationalNumber.length);
					if (hasCapturedGroups) carrierCode = prefixMatch[1];
				}
				var nationalPrefix;
				if (hasCapturedGroups) {
					var possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1]);
					var possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup);
					if (possibleNationalPrefix === metadata$1.numberingPlan.nationalPrefix()) nationalPrefix = metadata$1.numberingPlan.nationalPrefix();
				} else nationalPrefix = prefixMatch[0];
				return {
					nationalNumber,
					nationalPrefix,
					carrierCode
				};
			}
		}
		return { nationalNumber: number };
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractNationalNumber.js
var require_extractNationalNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractNationalNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = extractNationalNumber;
	var _extractNationalNumberFromPossiblyIncompleteNumber$1 = _interopRequireDefault$95(require_extractNationalNumberFromPossiblyIncompleteNumber());
	var _matchesEntirely$3 = _interopRequireDefault$95(require_matchesEntirely());
	var _checkNumberLength$3 = _interopRequireDefault$95(require_checkNumberLength());
	function _interopRequireDefault$95(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	/**
	
	* Strips national prefix and carrier code from a complete phone number.
	
	* The difference from the non-"FromCompleteNumber" function is that
	
	* it won't extract national prefix if the resultant number is too short
	
	* to be a complete number for the selected phone numbering plan.
	
	* @param  {string} number — Complete phone number digits.
	
	* @param  {Metadata} metadata — Metadata with a phone numbering plan selected.
	
	* @return {object} `{ nationalNumber: string, carrierCode: string? }`.
	
	*/
	function extractNationalNumber(number, metadata$1) {
		var _extractNationalNumbe = (0, _extractNationalNumberFromPossiblyIncompleteNumber$1["default"])(number, metadata$1), carrierCode = _extractNationalNumbe.carrierCode, nationalNumber = _extractNationalNumbe.nationalNumber;
		if (nationalNumber !== number) {
			if (!shouldHaveExtractedNationalPrefix(number, nationalNumber, metadata$1)) return { nationalNumber: number };
			if (metadata$1.possibleLengths()) {
				if (!isPossibleIncompleteNationalNumber(nationalNumber, metadata$1)) return { nationalNumber: number };
			}
		}
		return {
			nationalNumber,
			carrierCode
		};
	}
	function shouldHaveExtractedNationalPrefix(nationalNumberBefore, nationalNumberAfter, metadata$1) {
		if ((0, _matchesEntirely$3["default"])(nationalNumberBefore, metadata$1.nationalNumberPattern()) && !(0, _matchesEntirely$3["default"])(nationalNumberAfter, metadata$1.nationalNumberPattern())) return false;
		return true;
	}
	function isPossibleIncompleteNationalNumber(nationalNumber, metadata$1) {
		switch ((0, _checkNumberLength$3["default"])(nationalNumber, metadata$1)) {
			case "TOO_SHORT":
			case "INVALID_LENGTH": return false;
			default: return true;
		}
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js
var require_extractCountryCallingCodeFromInternationalNumberWithoutPlusSign = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign;
	var _metadata$11 = _interopRequireDefault$94(require_metadata());
	var _matchesEntirely$2 = _interopRequireDefault$94(require_matchesEntirely());
	var _extractNationalNumber$1 = _interopRequireDefault$94(require_extractNationalNumber());
	var _checkNumberLength$2 = _interopRequireDefault$94(require_checkNumberLength());
	var _getCountryCallingCode$1 = _interopRequireDefault$94(require_getCountryCallingCode());
	function _interopRequireDefault$94(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	/**
	
	* Sometimes some people incorrectly input international phone numbers
	
	* without the leading `+`. This function corrects such input.
	
	* @param  {string} number — Phone number digits.
	
	* @param  {string?} country
	
	* @param  {string?} callingCode
	
	* @param  {object} metadata
	
	* @return {object} `{ countryCallingCode: string?, number: string }`.
	
	*/
	function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country$1, callingCode, metadata$1) {
		var countryCallingCode = country$1 ? (0, _getCountryCallingCode$1["default"])(country$1, metadata$1) : callingCode;
		if (number.indexOf(countryCallingCode) === 0) {
			metadata$1 = new _metadata$11["default"](metadata$1);
			metadata$1.selectNumberingPlan(country$1, callingCode);
			var possibleShorterNumber = number.slice(countryCallingCode.length);
			var _extractNationalNumbe = (0, _extractNationalNumber$1["default"])(possibleShorterNumber, metadata$1), possibleShorterNationalNumber = _extractNationalNumbe.nationalNumber;
			var _extractNationalNumbe2 = (0, _extractNationalNumber$1["default"])(number, metadata$1), nationalNumber = _extractNationalNumbe2.nationalNumber;
			if (!(0, _matchesEntirely$2["default"])(nationalNumber, metadata$1.nationalNumberPattern()) && (0, _matchesEntirely$2["default"])(possibleShorterNationalNumber, metadata$1.nationalNumberPattern()) || (0, _checkNumberLength$2["default"])(nationalNumber, metadata$1) === "TOO_LONG") return {
				countryCallingCode,
				number: possibleShorterNumber
			};
		}
		return { number };
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractCountryCallingCode.js
var require_extractCountryCallingCode = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractCountryCallingCode.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = extractCountryCallingCode;
	var _stripIddPrefix$2 = _interopRequireDefault$93(require_stripIddPrefix());
	var _extractCountryCallingCodeFromInternationalNumberWithoutPlusSign$1 = _interopRequireDefault$93(require_extractCountryCallingCodeFromInternationalNumberWithoutPlusSign());
	var _metadata$10 = _interopRequireDefault$93(require_metadata());
	var _constants$7 = require_constants();
	function _interopRequireDefault$93(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	/**
	
	* Converts a phone number digits (possibly with a `+`)
	
	* into a calling code and the rest phone number digits.
	
	* The "rest phone number digits" could include
	
	* a national prefix, carrier code, and national
	
	* (significant) number.
	
	* @param  {string} number — Phone number digits (possibly with a `+`).
	
	* @param  {string} [country] — Default country.
	
	* @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).
	
	* @param  {object} metadata
	
	* @return {object} `{ countryCallingCodeSource: string?, countryCallingCode: string?, number: string }`
	
	* @example
	
	* // Returns `{ countryCallingCode: "1", number: "2133734253" }`.
	
	* extractCountryCallingCode('2133734253', 'US', null, metadata)
	
	* extractCountryCallingCode('2133734253', null, '1', metadata)
	
	* extractCountryCallingCode('+12133734253', null, null, metadata)
	
	* extractCountryCallingCode('+12133734253', 'RU', null, metadata)
	
	*/
	function extractCountryCallingCode(number, country$1, callingCode, metadata$1) {
		if (!number) return {};
		var isNumberWithIddPrefix;
		if (number[0] !== "+") {
			var numberWithoutIDD = (0, _stripIddPrefix$2["default"])(number, country$1, callingCode, metadata$1);
			if (numberWithoutIDD && numberWithoutIDD !== number) {
				isNumberWithIddPrefix = true;
				number = "+" + numberWithoutIDD;
			} else {
				if (country$1 || callingCode) {
					var _extractCountryCallin = (0, _extractCountryCallingCodeFromInternationalNumberWithoutPlusSign$1["default"])(number, country$1, callingCode, metadata$1), countryCallingCode = _extractCountryCallin.countryCallingCode, shorterNumber = _extractCountryCallin.number;
					if (countryCallingCode) return {
						countryCallingCodeSource: "FROM_NUMBER_WITHOUT_PLUS_SIGN",
						countryCallingCode,
						number: shorterNumber
					};
				}
				return { number };
			}
		}
		if (number[1] === "0") return {};
		metadata$1 = new _metadata$10["default"](metadata$1);
		var i$1 = 2;
		while (i$1 - 1 <= _constants$7.MAX_LENGTH_COUNTRY_CODE && i$1 <= number.length) {
			var _countryCallingCode = number.slice(1, i$1);
			if (metadata$1.hasCallingCode(_countryCallingCode)) {
				metadata$1.selectNumberingPlan(_countryCallingCode);
				return {
					countryCallingCodeSource: isNumberWithIddPrefix ? "FROM_NUMBER_WITH_IDD" : "FROM_NUMBER_WITH_PLUS_SIGN",
					countryCallingCode: _countryCallingCode,
					number: number.slice(i$1)
				};
			}
			i$1++;
		}
		return {};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/applyInternationalSeparatorStyle.js
var require_applyInternationalSeparatorStyle = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/applyInternationalSeparatorStyle.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = applyInternationalSeparatorStyle;
	var _constants$6 = require_constants();
	function applyInternationalSeparatorStyle(formattedNumber) {
		return formattedNumber.replace(new RegExp("[".concat(_constants$6.VALID_PUNCTUATION, "]+"), "g"), " ").trim();
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/formatNationalNumberUsingFormat.js
var require_formatNationalNumberUsingFormat = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/formatNationalNumberUsingFormat.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.FIRST_GROUP_PATTERN = void 0;
	exports["default"] = formatNationalNumberUsingFormat;
	var _applyInternationalSeparatorStyle$1 = _interopRequireDefault$92(require_applyInternationalSeparatorStyle());
	function _interopRequireDefault$92(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	var FIRST_GROUP_PATTERN = new RegExp("(\\$\\d)", "");
	exports.FIRST_GROUP_PATTERN = FIRST_GROUP_PATTERN;
	function formatNationalNumberUsingFormat(number, format, _ref) {
		var useInternationalFormat = _ref.useInternationalFormat, withNationalPrefix = _ref.withNationalPrefix, carrierCode = _ref.carrierCode, metadata$1 = _ref.metadata;
		var formattedNumber = number.replace(new RegExp(format.pattern()), useInternationalFormat ? format.internationalFormat() : withNationalPrefix && format.nationalPrefixFormattingRule() ? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()) : format.format());
		if (useInternationalFormat) return (0, _applyInternationalSeparatorStyle$1["default"])(formattedNumber);
		return formattedNumber;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/getIddPrefix.js
var require_getIddPrefix = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/getIddPrefix.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = getIddPrefix;
	var _metadata$9 = _interopRequireDefault$91(require_metadata());
	function _interopRequireDefault$91(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	/**
	
	* Pattern that makes it easy to distinguish whether a region has a single
	
	* international dialing prefix or not. If a region has a single international
	
	* prefix (e.g. 011 in USA), it will be represented as a string that contains
	
	* a sequence of ASCII digits, and possibly a tilde, which signals waiting for
	
	* the tone. If there are multiple available international prefixes in a
	
	* region, they will be represented as a regex string that always contains one
	
	* or more characters that are not ASCII digits or a tilde.
	
	*/
	var SINGLE_IDD_PREFIX_REG_EXP = /^[\d]+(?:[~\u2053\u223C\uFF5E][\d]+)?$/;
	function getIddPrefix(country$1, callingCode, metadata$1) {
		var countryMetadata = new _metadata$9["default"](metadata$1);
		countryMetadata.selectNumberingPlan(country$1, callingCode);
		if (countryMetadata.defaultIDDPrefix()) return countryMetadata.defaultIDDPrefix();
		if (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) return countryMetadata.IDDPrefix();
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/RFC3966.js
var require_RFC3966 = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/RFC3966.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.formatRFC3966 = formatRFC3966;
	exports.parseRFC3966 = parseRFC3966;
	var _isViablePhoneNumber$1 = _interopRequireDefault$90(require_isViablePhoneNumber());
	function _interopRequireDefault$90(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _slicedToArray$4(arr, i$1) {
		return _arrayWithHoles$4(arr) || _iterableToArrayLimit$4(arr, i$1) || _unsupportedIterableToArray$11(arr, i$1) || _nonIterableRest$4();
	}
	function _nonIterableRest$4() {
		throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _iterableToArrayLimit$4(arr, i$1) {
		var _i$1 = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
		if (_i$1 == null) return;
		var _arr = [];
		var _n = true;
		var _d = false;
		var _s, _e;
		try {
			for (_i$1 = _i$1.call(arr); !(_n = (_s = _i$1.next()).done); _n = true) {
				_arr.push(_s.value);
				if (i$1 && _arr.length === i$1) break;
			}
		} catch (err) {
			_d = true;
			_e = err;
		} finally {
			try {
				if (!_n && _i$1["return"] != null) _i$1["return"]();
			} finally {
				if (_d) throw _e;
			}
		}
		return _arr;
	}
	function _arrayWithHoles$4(arr) {
		if (Array.isArray(arr)) return arr;
	}
	function _createForOfIteratorHelperLoose$6(o, allowArrayLike) {
		var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
		if (it) return (it = it.call(o)).next.bind(it);
		if (Array.isArray(o) || (it = _unsupportedIterableToArray$11(o)) || allowArrayLike && o && typeof o.length === "number") {
			if (it) o = it;
			var i$1 = 0;
			return function() {
				if (i$1 >= o.length) return { done: true };
				return {
					done: false,
					value: o[i$1++]
				};
			};
		}
		throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$11(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$11(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$11(o, minLen);
	}
	function _arrayLikeToArray$11(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	/**
	
	* @param  {string} text - Phone URI (RFC 3966).
	
	* @return {object} `{ ?number, ?ext }`.
	
	*/
	function parseRFC3966(text) {
		var number;
		var ext;
		text = text.replace(/^tel:/, "tel=");
		for (var _iterator = _createForOfIteratorHelperLoose$6(text.split(";")), _step; !(_step = _iterator()).done;) {
			var part = _step.value;
			var _part$split = part.split("="), _part$split2 = _slicedToArray$4(_part$split, 2), name = _part$split2[0], value = _part$split2[1];
			switch (name) {
				case "tel":
					number = value;
					break;
				case "ext":
					ext = value;
					break;
				case "phone-context":
					if (value[0] === "+") number = value + number;
					break;
			}
		}
		if (!(0, _isViablePhoneNumber$1["default"])(number)) return {};
		var result$1 = { number };
		if (ext) result$1.ext = ext;
		return result$1;
	}
	/**
	
	* @param  {object} - `{ ?number, ?extension }`.
	
	* @return {string} Phone URI (RFC 3966).
	
	*/
	function formatRFC3966(_ref) {
		var number = _ref.number, ext = _ref.ext;
		if (!number) return "";
		if (number[0] !== "+") throw new Error("\"formatRFC3966()\" expects \"number\" to be in E.164 format.");
		return "tel:".concat(number).concat(ext ? ";ext=" + ext : "");
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/format.js
var require_format = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/format.js"(exports) {
	function _typeof$13(obj) {
		"@babel/helpers - typeof";
		return _typeof$13 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj$1) {
			return typeof obj$1;
		} : function(obj$1) {
			return obj$1 && "function" == typeof Symbol && obj$1.constructor === Symbol && obj$1 !== Symbol.prototype ? "symbol" : typeof obj$1;
		}, _typeof$13(obj);
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.chooseFormatForNumber = chooseFormatForNumber;
	exports["default"] = formatNumber;
	var _matchesEntirely$1 = _interopRequireDefault$89(require_matchesEntirely());
	var _formatNationalNumberUsingFormat$2 = _interopRequireDefault$89(require_formatNationalNumberUsingFormat());
	var _metadata$8 = _interopRequireWildcard$9(require_metadata());
	var _getIddPrefix = _interopRequireDefault$89(require_getIddPrefix());
	var _RFC = require_RFC3966();
	function _getRequireWildcardCache$6(nodeInterop) {
		if (typeof WeakMap !== "function") return null;
		var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
		var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
		return (_getRequireWildcardCache$6 = function _getRequireWildcardCache$7(nodeInterop$1) {
			return nodeInterop$1 ? cacheNodeInterop : cacheBabelInterop;
		})(nodeInterop);
	}
	function _interopRequireWildcard$9(obj, nodeInterop) {
		if (!nodeInterop && obj && obj.__esModule) return obj;
		if (obj === null || _typeof$13(obj) !== "object" && typeof obj !== "function") return { "default": obj };
		var cache = _getRequireWildcardCache$6(nodeInterop);
		if (cache && cache.has(obj)) return cache.get(obj);
		var newObj = {};
		var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
		for (var key in obj) if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
			var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
			if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
			else newObj[key] = obj[key];
		}
		newObj["default"] = obj;
		if (cache) cache.set(obj, newObj);
		return newObj;
	}
	function _interopRequireDefault$89(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _createForOfIteratorHelperLoose$5(o, allowArrayLike) {
		var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
		if (it) return (it = it.call(o)).next.bind(it);
		if (Array.isArray(o) || (it = _unsupportedIterableToArray$10(o)) || allowArrayLike && o && typeof o.length === "number") {
			if (it) o = it;
			var i$1 = 0;
			return function() {
				if (i$1 >= o.length) return { done: true };
				return {
					done: false,
					value: o[i$1++]
				};
			};
		}
		throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$10(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$10(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$10(o, minLen);
	}
	function _arrayLikeToArray$10(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	function ownKeys$8(object, enumerableOnly) {
		var keys = Object.keys(object);
		if (Object.getOwnPropertySymbols) {
			var symbols = Object.getOwnPropertySymbols(object);
			enumerableOnly && (symbols = symbols.filter(function(sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			})), keys.push.apply(keys, symbols);
		}
		return keys;
	}
	function _objectSpread$12(target) {
		for (var i$1 = 1; i$1 < arguments.length; i$1++) {
			var source = null != arguments[i$1] ? arguments[i$1] : {};
			i$1 % 2 ? ownKeys$8(Object(source), !0).forEach(function(key) {
				_defineProperty$9(target, key, source[key]);
			}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$8(Object(source)).forEach(function(key) {
				Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
			});
		}
		return target;
	}
	function _defineProperty$9(obj, key, value) {
		if (key in obj) Object.defineProperty(obj, key, {
			value,
			enumerable: true,
			configurable: true,
			writable: true
		});
		else obj[key] = value;
		return obj;
	}
	var DEFAULT_OPTIONS = { formatExtension: function formatExtension(formattedNumber, extension$1, metadata$1) {
		return "".concat(formattedNumber).concat(metadata$1.ext()).concat(extension$1);
	} };
	/**
	
	* Formats a phone number.
	
	*
	
	* format(phoneNumberInstance, 'INTERNATIONAL', { ..., v2: true }, metadata)
	
	* format(phoneNumberInstance, 'NATIONAL', { ..., v2: true }, metadata)
	
	*
	
	* format({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', { ... }, metadata)
	
	* format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', undefined, metadata)
	
	*
	
	* @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.
	
	* @param  {string} format
	
	* @param  {object} [options]
	
	* @param  {object} metadata
	
	* @return {string}
	
	*/
	function formatNumber(input, format, options, metadata$1) {
		if (options) options = _objectSpread$12(_objectSpread$12({}, DEFAULT_OPTIONS), options);
		else options = DEFAULT_OPTIONS;
		metadata$1 = new _metadata$8["default"](metadata$1);
		if (input.country && input.country !== "001") {
			if (!metadata$1.hasCountry(input.country)) throw new Error("Unknown country: ".concat(input.country));
			metadata$1.country(input.country);
		} else if (input.countryCallingCode) metadata$1.selectNumberingPlan(input.countryCallingCode);
		else return input.phone || "";
		var countryCallingCode = metadata$1.countryCallingCode();
		var nationalNumber = options.v2 ? input.nationalNumber : input.phone;
		var number;
		switch (format) {
			case "NATIONAL":
				if (!nationalNumber) return "";
				number = formatNationalNumber$1(nationalNumber, input.carrierCode, "NATIONAL", metadata$1, options);
				return addExtension(number, input.ext, metadata$1, options.formatExtension);
			case "INTERNATIONAL":
				if (!nationalNumber) return "+".concat(countryCallingCode);
				number = formatNationalNumber$1(nationalNumber, null, "INTERNATIONAL", metadata$1, options);
				number = "+".concat(countryCallingCode, " ").concat(number);
				return addExtension(number, input.ext, metadata$1, options.formatExtension);
			case "E.164": return "+".concat(countryCallingCode).concat(nationalNumber);
			case "RFC3966": return (0, _RFC.formatRFC3966)({
				number: "+".concat(countryCallingCode).concat(nationalNumber),
				ext: input.ext
			});
			case "IDD":
				if (!options.fromCountry) return;
				var formattedNumber = formatIDD(nationalNumber, input.carrierCode, countryCallingCode, options.fromCountry, metadata$1);
				return addExtension(formattedNumber, input.ext, metadata$1, options.formatExtension);
			default: throw new Error("Unknown \"format\" argument passed to \"formatNumber()\": \"".concat(format, "\""));
		}
	}
	function formatNationalNumber$1(number, carrierCode, formatAs, metadata$1, options) {
		var format = chooseFormatForNumber(metadata$1.formats(), number);
		if (!format) return number;
		return (0, _formatNationalNumberUsingFormat$2["default"])(number, format, {
			useInternationalFormat: formatAs === "INTERNATIONAL",
			withNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && options && options.nationalPrefix === false ? false : true,
			carrierCode,
			metadata: metadata$1
		});
	}
	function chooseFormatForNumber(availableFormats, nationalNnumber) {
		for (var _iterator = _createForOfIteratorHelperLoose$5(availableFormats), _step; !(_step = _iterator()).done;) {
			var format = _step.value;
			if (format.leadingDigitsPatterns().length > 0) {
				var lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1];
				if (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) continue;
			}
			if ((0, _matchesEntirely$1["default"])(nationalNnumber, format.pattern())) return format;
		}
	}
	function addExtension(formattedNumber, ext, metadata$1, formatExtension) {
		return ext ? formatExtension(formattedNumber, ext, metadata$1) : formattedNumber;
	}
	function formatIDD(nationalNumber, carrierCode, countryCallingCode, fromCountry, metadata$1) {
		var fromCountryCallingCode = (0, _metadata$8.getCountryCallingCode)(fromCountry, metadata$1.metadata);
		if (fromCountryCallingCode === countryCallingCode) {
			var formattedNumber = formatNationalNumber$1(nationalNumber, carrierCode, "NATIONAL", metadata$1);
			if (countryCallingCode === "1") return countryCallingCode + " " + formattedNumber;
			return formattedNumber;
		}
		var iddPrefix = (0, _getIddPrefix["default"])(fromCountry, void 0, metadata$1.metadata);
		if (iddPrefix) return "".concat(iddPrefix, " ").concat(countryCallingCode, " ").concat(formatNationalNumber$1(nationalNumber, null, "INTERNATIONAL", metadata$1));
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/PhoneNumber.js
var require_PhoneNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/PhoneNumber.js"(exports) {
	function _typeof$12(obj) {
		"@babel/helpers - typeof";
		return _typeof$12 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj$1) {
			return typeof obj$1;
		} : function(obj$1) {
			return obj$1 && "function" == typeof Symbol && obj$1.constructor === Symbol && obj$1 !== Symbol.prototype ? "symbol" : typeof obj$1;
		}, _typeof$12(obj);
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = void 0;
	var _metadata$7 = _interopRequireWildcard$8(require_metadata());
	var _isPossible$1 = _interopRequireDefault$88(require_isPossible());
	var _isValid$1 = _interopRequireDefault$88(require_isValid());
	var _getNumberType$1 = _interopRequireDefault$88(require_getNumberType());
	var _getPossibleCountriesForNumber = _interopRequireDefault$88(require_getPossibleCountriesForNumber());
	var _extractCountryCallingCode$1 = _interopRequireDefault$88(require_extractCountryCallingCode());
	var _isObject$1 = _interopRequireDefault$88(require_isObject());
	var _format2 = _interopRequireDefault$88(require_format());
	function _interopRequireDefault$88(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _getRequireWildcardCache$5(nodeInterop) {
		if (typeof WeakMap !== "function") return null;
		var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
		var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
		return (_getRequireWildcardCache$5 = function _getRequireWildcardCache$7(nodeInterop$1) {
			return nodeInterop$1 ? cacheNodeInterop : cacheBabelInterop;
		})(nodeInterop);
	}
	function _interopRequireWildcard$8(obj, nodeInterop) {
		if (!nodeInterop && obj && obj.__esModule) return obj;
		if (obj === null || _typeof$12(obj) !== "object" && typeof obj !== "function") return { "default": obj };
		var cache = _getRequireWildcardCache$5(nodeInterop);
		if (cache && cache.has(obj)) return cache.get(obj);
		var newObj = {};
		var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
		for (var key in obj) if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
			var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
			if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
			else newObj[key] = obj[key];
		}
		newObj["default"] = obj;
		if (cache) cache.set(obj, newObj);
		return newObj;
	}
	function ownKeys$7(object, enumerableOnly) {
		var keys = Object.keys(object);
		if (Object.getOwnPropertySymbols) {
			var symbols = Object.getOwnPropertySymbols(object);
			enumerableOnly && (symbols = symbols.filter(function(sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			})), keys.push.apply(keys, symbols);
		}
		return keys;
	}
	function _objectSpread$11(target) {
		for (var i$1 = 1; i$1 < arguments.length; i$1++) {
			var source = null != arguments[i$1] ? arguments[i$1] : {};
			i$1 % 2 ? ownKeys$7(Object(source), !0).forEach(function(key) {
				_defineProperty$8(target, key, source[key]);
			}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$7(Object(source)).forEach(function(key) {
				Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
			});
		}
		return target;
	}
	function _defineProperty$8(obj, key, value) {
		if (key in obj) Object.defineProperty(obj, key, {
			value,
			enumerable: true,
			configurable: true,
			writable: true
		});
		else obj[key] = value;
		return obj;
	}
	function _classCallCheck$9(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _defineProperties$9(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass$9(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties$9(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties$9(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	var USE_NON_GEOGRAPHIC_COUNTRY_CODE$4 = false;
	var PhoneNumber = /* @__PURE__ */ function() {
		/**
		
		* @param  {string} countryOrCountryCallingCode
		
		* @param  {string} nationalNumber
		
		* @param  {object} metadata — Metadata JSON
		
		* @return {PhoneNumber}
		
		*/
		function PhoneNumber$1(countryOrCountryCallingCode, nationalNumber, metadata$1) {
			_classCallCheck$9(this, PhoneNumber$1);
			if (!countryOrCountryCallingCode) throw new TypeError("First argument is required");
			if (typeof countryOrCountryCallingCode !== "string") throw new TypeError("First argument must be a string");
			if (typeof countryOrCountryCallingCode === "string") {
				if (countryOrCountryCallingCode[0] === "+" && !nationalNumber) throw new TypeError("`metadata` argument not passed");
				if ((0, _isObject$1["default"])(nationalNumber) && (0, _isObject$1["default"])(nationalNumber.countries)) {
					metadata$1 = nationalNumber;
					var e164Number = countryOrCountryCallingCode;
					if (!E164_NUMBER_REGEXP.test(e164Number)) throw new Error("Invalid `number` argument passed: must consist of a \"+\" followed by digits");
					var _extractCountryCallin = (0, _extractCountryCallingCode$1["default"])(e164Number, void 0, void 0, metadata$1), _countryCallingCode = _extractCountryCallin.countryCallingCode, number = _extractCountryCallin.number;
					nationalNumber = number;
					countryOrCountryCallingCode = _countryCallingCode;
					if (!nationalNumber) throw new Error("Invalid `number` argument passed: too short");
				}
			}
			if (!nationalNumber) throw new TypeError("`nationalNumber` argument is required");
			if (typeof nationalNumber !== "string") throw new TypeError("`nationalNumber` argument must be a string");
			(0, _metadata$7.validateMetadata)(metadata$1);
			var _getCountryAndCountry = getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadata$1), country$1 = _getCountryAndCountry.country, countryCallingCode = _getCountryAndCountry.countryCallingCode;
			this.country = country$1;
			this.countryCallingCode = countryCallingCode;
			this.nationalNumber = nationalNumber;
			this.number = "+" + this.countryCallingCode + this.nationalNumber;
			this.getMetadata = function() {
				return metadata$1;
			};
		}
		_createClass$9(PhoneNumber$1, [
			{
				key: "setExt",
				value: function setExt(ext) {
					this.ext = ext;
				}
			},
			{
				key: "getPossibleCountries",
				value: function getPossibleCountries() {
					if (this.country) return [this.country];
					return (0, _getPossibleCountriesForNumber["default"])(this.countryCallingCode, this.nationalNumber, this.getMetadata());
				}
			},
			{
				key: "isPossible",
				value: function isPossible() {
					return (0, _isPossible$1["default"])(this, { v2: true }, this.getMetadata());
				}
			},
			{
				key: "isValid",
				value: function isValid() {
					return (0, _isValid$1["default"])(this, { v2: true }, this.getMetadata());
				}
			},
			{
				key: "isNonGeographic",
				value: function isNonGeographic() {
					var metadata$1 = new _metadata$7["default"](this.getMetadata());
					return metadata$1.isNonGeographicCallingCode(this.countryCallingCode);
				}
			},
			{
				key: "isEqual",
				value: function isEqual(phoneNumber) {
					return this.number === phoneNumber.number && this.ext === phoneNumber.ext;
				}
			},
			{
				key: "getType",
				value: function getType$1() {
					return (0, _getNumberType$1["default"])(this, { v2: true }, this.getMetadata());
				}
			},
			{
				key: "format",
				value: function format(_format$1, options) {
					return (0, _format2["default"])(this, _format$1, options ? _objectSpread$11(_objectSpread$11({}, options), {}, { v2: true }) : { v2: true }, this.getMetadata());
				}
			},
			{
				key: "formatNational",
				value: function formatNational(options) {
					return this.format("NATIONAL", options);
				}
			},
			{
				key: "formatInternational",
				value: function formatInternational(options) {
					return this.format("INTERNATIONAL", options);
				}
			},
			{
				key: "getURI",
				value: function getURI(options) {
					return this.format("RFC3966", options);
				}
			}
		]);
		return PhoneNumber$1;
	}();
	exports["default"] = PhoneNumber;
	var isCountryCode = function isCountryCode$1(value) {
		return /^[A-Z]{2}$/.test(value);
	};
	function getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadataJson) {
		var country$1;
		var countryCallingCode;
		var metadata$1 = new _metadata$7["default"](metadataJson);
		if (isCountryCode(countryOrCountryCallingCode)) {
			country$1 = countryOrCountryCallingCode;
			metadata$1.selectNumberingPlan(country$1);
			countryCallingCode = metadata$1.countryCallingCode();
		} else {
			countryCallingCode = countryOrCountryCallingCode;
			/* istanbul ignore if */
			if (USE_NON_GEOGRAPHIC_COUNTRY_CODE$4) {
				if (metadata$1.isNonGeographicCallingCode(countryCallingCode)) country$1 = "001";
			}
		}
		return {
			country: country$1,
			countryCallingCode
		};
	}
	var E164_NUMBER_REGEXP = /^\+\d+$/;
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/getCountryByNationalNumber.js
var require_getCountryByNationalNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/getCountryByNationalNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = getCountryByNationalNumber;
	var _metadata$6 = _interopRequireDefault$87(require_metadata());
	var _getNumberType = _interopRequireDefault$87(require_getNumberType());
	function _interopRequireDefault$87(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _createForOfIteratorHelperLoose$4(o, allowArrayLike) {
		var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
		if (it) return (it = it.call(o)).next.bind(it);
		if (Array.isArray(o) || (it = _unsupportedIterableToArray$9(o)) || allowArrayLike && o && typeof o.length === "number") {
			if (it) o = it;
			var i$1 = 0;
			return function() {
				if (i$1 >= o.length) return { done: true };
				return {
					done: false,
					value: o[i$1++]
				};
			};
		}
		throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$9(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$9(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$9(o, minLen);
	}
	function _arrayLikeToArray$9(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	function getCountryByNationalNumber(nationalPhoneNumber, _ref) {
		var countries = _ref.countries, defaultCountry = _ref.defaultCountry, metadata$1 = _ref.metadata;
		metadata$1 = new _metadata$6["default"](metadata$1);
		for (var _iterator = _createForOfIteratorHelperLoose$4(countries), _step; !(_step = _iterator()).done;) {
			var country$1 = _step.value;
			metadata$1.country(country$1);
			if (metadata$1.leadingDigits()) {
				if (nationalPhoneNumber && nationalPhoneNumber.search(metadata$1.leadingDigits()) === 0) return country$1;
			} else if ((0, _getNumberType["default"])({
				phone: nationalPhoneNumber,
				country: country$1
			}, void 0, metadata$1.metadata)) return country$1;
		}
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/getCountryByCallingCode.js
var require_getCountryByCallingCode = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/getCountryByCallingCode.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = getCountryByCallingCode;
	var _getCountryByNationalNumber$1 = _interopRequireDefault$86(require_getCountryByNationalNumber());
	function _interopRequireDefault$86(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	var USE_NON_GEOGRAPHIC_COUNTRY_CODE$3 = false;
	function getCountryByCallingCode(callingCode, _ref) {
		var nationalPhoneNumber = _ref.nationalNumber, defaultCountry = _ref.defaultCountry, metadata$1 = _ref.metadata;
		/* istanbul ignore if */
		if (USE_NON_GEOGRAPHIC_COUNTRY_CODE$3) {
			if (metadata$1.isNonGeographicCallingCode(callingCode)) return "001";
		}
		var possibleCountries = metadata$1.getCountryCodesForCallingCode(callingCode);
		if (!possibleCountries) return;
		if (possibleCountries.length === 1) return possibleCountries[0];
		return (0, _getCountryByNationalNumber$1["default"])(nationalPhoneNumber, {
			countries: possibleCountries,
			defaultCountry,
			metadata: metadata$1.metadata
		});
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractPhoneContext.js
var require_extractPhoneContext = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractPhoneContext.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.RFC3966_PREFIX_ = exports.RFC3966_PHONE_CONTEXT_ = exports.RFC3966_ISDN_SUBADDRESS_ = exports.PLUS_SIGN = void 0;
	exports["default"] = extractPhoneContext;
	exports.isPhoneContextValid = isPhoneContextValid;
	var _constants$5 = require_constants();
	var PLUS_SIGN = "+";
	exports.PLUS_SIGN = PLUS_SIGN;
	var RFC3966_VISUAL_SEPARATOR_ = "[\\-\\.\\(\\)]?";
	var RFC3966_PHONE_DIGIT_ = "([" + _constants$5.VALID_DIGITS + "]|" + RFC3966_VISUAL_SEPARATOR_ + ")";
	var RFC3966_GLOBAL_NUMBER_DIGITS_ = "^\\" + PLUS_SIGN + RFC3966_PHONE_DIGIT_ + "*[" + _constants$5.VALID_DIGITS + "]" + RFC3966_PHONE_DIGIT_ + "*$";
	/**
	
	* Regular expression of valid global-number-digits for the phone-context
	
	* parameter, following the syntax defined in RFC3966.
	
	*/
	var RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_ = new RegExp(RFC3966_GLOBAL_NUMBER_DIGITS_, "g");
	var ALPHANUM_ = _constants$5.VALID_DIGITS;
	var RFC3966_DOMAINLABEL_ = "[" + ALPHANUM_ + "]+((\\-)*[" + ALPHANUM_ + "])*";
	var VALID_ALPHA_ = "a-zA-Z";
	var RFC3966_TOPLABEL_ = "[" + VALID_ALPHA_ + "]+((\\-)*[" + ALPHANUM_ + "])*";
	var RFC3966_DOMAINNAME_ = "^(" + RFC3966_DOMAINLABEL_ + "\\.)*" + RFC3966_TOPLABEL_ + "\\.?$";
	/**
	
	* Regular expression of valid domainname for the phone-context parameter,
	
	* following the syntax defined in RFC3966.
	
	*/
	var RFC3966_DOMAINNAME_PATTERN_ = new RegExp(RFC3966_DOMAINNAME_, "g");
	var RFC3966_PREFIX_ = "tel:";
	exports.RFC3966_PREFIX_ = RFC3966_PREFIX_;
	var RFC3966_PHONE_CONTEXT_ = ";phone-context=";
	exports.RFC3966_PHONE_CONTEXT_ = RFC3966_PHONE_CONTEXT_;
	var RFC3966_ISDN_SUBADDRESS_ = ";isub=";
	/**
	
	* Extracts the value of the phone-context parameter of `numberToExtractFrom`,
	
	* following the syntax defined in RFC3966.
	
	*
	
	* @param {string} numberToExtractFrom
	
	* @return {string|null} the extracted string (possibly empty), or `null` if no phone-context parameter is found.
	
	*/
	exports.RFC3966_ISDN_SUBADDRESS_ = RFC3966_ISDN_SUBADDRESS_;
	function extractPhoneContext(numberToExtractFrom) {
		var indexOfPhoneContext = numberToExtractFrom.indexOf(RFC3966_PHONE_CONTEXT_);
		if (indexOfPhoneContext < 0) return null;
		var phoneContextStart = indexOfPhoneContext + RFC3966_PHONE_CONTEXT_.length;
		if (phoneContextStart >= numberToExtractFrom.length) return "";
		var phoneContextEnd = numberToExtractFrom.indexOf(";", phoneContextStart);
		if (phoneContextEnd >= 0) return numberToExtractFrom.substring(phoneContextStart, phoneContextEnd);
		else return numberToExtractFrom.substring(phoneContextStart);
	}
	/**
	
	* Returns whether the value of phoneContext follows the syntax defined in RFC3966.
	
	*
	
	* @param {string|null} phoneContext
	
	* @return {boolean}
	
	*/
	function isPhoneContextValid(phoneContext) {
		if (phoneContext === null) return true;
		if (phoneContext.length === 0) return false;
		return RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_.test(phoneContext) || RFC3966_DOMAINNAME_PATTERN_.test(phoneContext);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js
var require_extractFormattedPhoneNumberFromPossibleRfc3966NumberUri = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js"(exports) {
	function _typeof$11(obj) {
		"@babel/helpers - typeof";
		return _typeof$11 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj$1) {
			return typeof obj$1;
		} : function(obj$1) {
			return obj$1 && "function" == typeof Symbol && obj$1.constructor === Symbol && obj$1 !== Symbol.prototype ? "symbol" : typeof obj$1;
		}, _typeof$11(obj);
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = extractFormattedPhoneNumberFromPossibleRfc3966NumberUri;
	var _extractPhoneContext = _interopRequireWildcard$7(require_extractPhoneContext());
	var _ParseError$3 = _interopRequireDefault$85(require_ParseError());
	function _interopRequireDefault$85(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _getRequireWildcardCache$4(nodeInterop) {
		if (typeof WeakMap !== "function") return null;
		var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
		var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
		return (_getRequireWildcardCache$4 = function _getRequireWildcardCache$7(nodeInterop$1) {
			return nodeInterop$1 ? cacheNodeInterop : cacheBabelInterop;
		})(nodeInterop);
	}
	function _interopRequireWildcard$7(obj, nodeInterop) {
		if (!nodeInterop && obj && obj.__esModule) return obj;
		if (obj === null || _typeof$11(obj) !== "object" && typeof obj !== "function") return { "default": obj };
		var cache = _getRequireWildcardCache$4(nodeInterop);
		if (cache && cache.has(obj)) return cache.get(obj);
		var newObj = {};
		var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
		for (var key in obj) if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
			var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
			if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
			else newObj[key] = obj[key];
		}
		newObj["default"] = obj;
		if (cache) cache.set(obj, newObj);
		return newObj;
	}
	/**
	
	* @param  {string} numberToParse
	
	* @param  {string} nationalNumber
	
	* @return {}
	
	*/
	function extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(numberToParse, _ref) {
		var extractFormattedPhoneNumber$1 = _ref.extractFormattedPhoneNumber;
		var phoneContext = (0, _extractPhoneContext["default"])(numberToParse);
		if (!(0, _extractPhoneContext.isPhoneContextValid)(phoneContext)) throw new _ParseError$3["default"]("NOT_A_NUMBER");
		var phoneNumberString;
		if (phoneContext === null) phoneNumberString = extractFormattedPhoneNumber$1(numberToParse) || "";
		else {
			phoneNumberString = "";
			if (phoneContext.charAt(0) === _extractPhoneContext.PLUS_SIGN) phoneNumberString += phoneContext;
			var indexOfRfc3966Prefix = numberToParse.indexOf(_extractPhoneContext.RFC3966_PREFIX_);
			var indexOfNationalNumber;
			/* istanbul ignore else */
			if (indexOfRfc3966Prefix >= 0) indexOfNationalNumber = indexOfRfc3966Prefix + _extractPhoneContext.RFC3966_PREFIX_.length;
			else indexOfNationalNumber = 0;
			var indexOfPhoneContext = numberToParse.indexOf(_extractPhoneContext.RFC3966_PHONE_CONTEXT_);
			phoneNumberString += numberToParse.substring(indexOfNationalNumber, indexOfPhoneContext);
		}
		var indexOfIsdn = phoneNumberString.indexOf(_extractPhoneContext.RFC3966_ISDN_SUBADDRESS_);
		if (indexOfIsdn > 0) phoneNumberString = phoneNumberString.substring(0, indexOfIsdn);
		if (phoneNumberString !== "") return phoneNumberString;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parse.js
var require_parse = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parse.js"(exports) {
	function _typeof$10(obj) {
		"@babel/helpers - typeof";
		return _typeof$10 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj$1) {
			return typeof obj$1;
		} : function(obj$1) {
			return obj$1 && "function" == typeof Symbol && obj$1.constructor === Symbol && obj$1 !== Symbol.prototype ? "symbol" : typeof obj$1;
		}, _typeof$10(obj);
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = parse;
	var _constants$4 = require_constants();
	var _ParseError$2 = _interopRequireDefault$84(require_ParseError());
	var _metadata$5 = _interopRequireDefault$84(require_metadata());
	var _isViablePhoneNumber = _interopRequireWildcard$6(require_isViablePhoneNumber());
	var _extractExtension = _interopRequireDefault$84(require_extractExtension());
	var _parseIncompletePhoneNumber = _interopRequireDefault$84(require_parseIncompletePhoneNumber());
	var _getCountryCallingCode = _interopRequireDefault$84(require_getCountryCallingCode());
	var _isPossible = require_isPossible();
	var _PhoneNumber$3 = _interopRequireDefault$84(require_PhoneNumber());
	var _matchesEntirely = _interopRequireDefault$84(require_matchesEntirely());
	var _extractCountryCallingCode = _interopRequireDefault$84(require_extractCountryCallingCode());
	var _extractNationalNumber = _interopRequireDefault$84(require_extractNationalNumber());
	var _stripIddPrefix$1 = _interopRequireDefault$84(require_stripIddPrefix());
	var _getCountryByCallingCode$2 = _interopRequireDefault$84(require_getCountryByCallingCode());
	var _extractFormattedPhoneNumberFromPossibleRfc3966NumberUri = _interopRequireDefault$84(require_extractFormattedPhoneNumberFromPossibleRfc3966NumberUri());
	function _getRequireWildcardCache$3(nodeInterop) {
		if (typeof WeakMap !== "function") return null;
		var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
		var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
		return (_getRequireWildcardCache$3 = function _getRequireWildcardCache$7(nodeInterop$1) {
			return nodeInterop$1 ? cacheNodeInterop : cacheBabelInterop;
		})(nodeInterop);
	}
	function _interopRequireWildcard$6(obj, nodeInterop) {
		if (!nodeInterop && obj && obj.__esModule) return obj;
		if (obj === null || _typeof$10(obj) !== "object" && typeof obj !== "function") return { "default": obj };
		var cache = _getRequireWildcardCache$3(nodeInterop);
		if (cache && cache.has(obj)) return cache.get(obj);
		var newObj = {};
		var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
		for (var key in obj) if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
			var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
			if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
			else newObj[key] = obj[key];
		}
		newObj["default"] = obj;
		if (cache) cache.set(obj, newObj);
		return newObj;
	}
	function _interopRequireDefault$84(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	var MAX_INPUT_STRING_LENGTH = 250;
	var PHONE_NUMBER_START_PATTERN = /* @__PURE__ */ new RegExp("[" + _constants$4.PLUS_CHARS + _constants$4.VALID_DIGITS + "]");
	var AFTER_PHONE_NUMBER_END_PATTERN = /* @__PURE__ */ new RegExp("[^" + _constants$4.VALID_DIGITS + "#]+$");
	var USE_NON_GEOGRAPHIC_COUNTRY_CODE$2 = false;
	/**
	
	* Parses a phone number.
	
	*
	
	* parse('123456789', { defaultCountry: 'RU', v2: true }, metadata)
	
	* parse('123456789', { defaultCountry: 'RU' }, metadata)
	
	* parse('123456789', undefined, metadata)
	
	*
	
	* @param  {string} input
	
	* @param  {object} [options]
	
	* @param  {object} metadata
	
	* @return {object|PhoneNumber?} If `options.v2: true` flag is passed, it returns a `PhoneNumber?` instance. Otherwise, returns an object of shape `{ phone: '...', country: '...' }` (or just `{}` if no phone number was parsed).
	
	*/
	function parse(text, options, metadata$1) {
		options = options || {};
		metadata$1 = new _metadata$5["default"](metadata$1);
		if (options.defaultCountry && !metadata$1.hasCountry(options.defaultCountry)) {
			if (options.v2) throw new _ParseError$2["default"]("INVALID_COUNTRY");
			throw new Error("Unknown country: ".concat(options.defaultCountry));
		}
		var _parseInput = parseInput(text, options.v2, options.extract), formattedPhoneNumber = _parseInput.number, ext = _parseInput.ext, error = _parseInput.error;
		if (!formattedPhoneNumber) {
			if (options.v2) {
				if (error === "TOO_SHORT") throw new _ParseError$2["default"]("TOO_SHORT");
				throw new _ParseError$2["default"]("NOT_A_NUMBER");
			}
			return {};
		}
		var _parsePhoneNumber$2 = parsePhoneNumber$2(formattedPhoneNumber, options.defaultCountry, options.defaultCallingCode, metadata$1), country$1 = _parsePhoneNumber$2.country, nationalNumber = _parsePhoneNumber$2.nationalNumber, countryCallingCode = _parsePhoneNumber$2.countryCallingCode, countryCallingCodeSource = _parsePhoneNumber$2.countryCallingCodeSource, carrierCode = _parsePhoneNumber$2.carrierCode;
		if (!metadata$1.hasSelectedNumberingPlan()) {
			if (options.v2) throw new _ParseError$2["default"]("INVALID_COUNTRY");
			return {};
		}
		if (!nationalNumber || nationalNumber.length < _constants$4.MIN_LENGTH_FOR_NSN) {
			/* istanbul ignore if */
			if (options.v2) throw new _ParseError$2["default"]("TOO_SHORT");
			return {};
		}
		if (nationalNumber.length > _constants$4.MAX_LENGTH_FOR_NSN) {
			if (options.v2) throw new _ParseError$2["default"]("TOO_LONG");
			return {};
		}
		if (options.v2) {
			var phoneNumber = new _PhoneNumber$3["default"](countryCallingCode, nationalNumber, metadata$1.metadata);
			if (country$1) phoneNumber.country = country$1;
			if (carrierCode) phoneNumber.carrierCode = carrierCode;
			if (ext) phoneNumber.ext = ext;
			phoneNumber.__countryCallingCodeSource = countryCallingCodeSource;
			return phoneNumber;
		}
		var valid = (options.extended ? metadata$1.hasSelectedNumberingPlan() : country$1) ? (0, _matchesEntirely["default"])(nationalNumber, metadata$1.nationalNumberPattern()) : false;
		if (!options.extended) return valid ? result(country$1, nationalNumber, ext) : {};
		return {
			country: country$1,
			countryCallingCode,
			carrierCode,
			valid,
			possible: valid ? true : options.extended === true && metadata$1.possibleLengths() && (0, _isPossible.isPossibleNumber)(nationalNumber, metadata$1) ? true : false,
			phone: nationalNumber,
			ext
		};
	}
	/**
	
	* Extracts a formatted phone number from text.
	
	* Doesn't guarantee that the extracted phone number
	
	* is a valid phone number (for example, doesn't validate its length).
	
	* @param  {string} text
	
	* @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.
	
	* @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.
	
	* @return {string}
	
	* @example
	
	* // Returns "(213) 373-4253".
	
	* extractFormattedPhoneNumber("Call (213) 373-4253 for assistance.")
	
	*/
	function _extractFormattedPhoneNumber(text, extract, throwOnError) {
		if (!text) return;
		if (text.length > MAX_INPUT_STRING_LENGTH) {
			if (throwOnError) throw new _ParseError$2["default"]("TOO_LONG");
			return;
		}
		if (extract === false) return text;
		var startsAt = text.search(PHONE_NUMBER_START_PATTERN);
		if (startsAt < 0) return;
		return text.slice(startsAt).replace(AFTER_PHONE_NUMBER_END_PATTERN, "");
	}
	/**
	
	* @param  {string} text - Input.
	
	* @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.
	
	* @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.
	
	* @return {object} `{ ?number, ?ext }`.
	
	*/
	function parseInput(text, v2, extract) {
		var number = (0, _extractFormattedPhoneNumberFromPossibleRfc3966NumberUri["default"])(text, { extractFormattedPhoneNumber: function extractFormattedPhoneNumber$1(text$1) {
			return _extractFormattedPhoneNumber(text$1, extract, v2);
		} });
		if (!number) return {};
		if (!(0, _isViablePhoneNumber["default"])(number)) {
			if ((0, _isViablePhoneNumber.isViablePhoneNumberStart)(number)) return { error: "TOO_SHORT" };
			return {};
		}
		var withExtensionStripped = (0, _extractExtension["default"])(number);
		if (withExtensionStripped.ext) return withExtensionStripped;
		return { number };
	}
	/**
	
	* Creates `parse()` result object.
	
	*/
	function result(country$1, nationalNumber, ext) {
		var result$1 = {
			country: country$1,
			phone: nationalNumber
		};
		if (ext) result$1.ext = ext;
		return result$1;
	}
	/**
	
	* Parses a viable phone number.
	
	* @param {string} formattedPhoneNumber — Example: "(213) 373-4253".
	
	* @param {string} [defaultCountry]
	
	* @param {string} [defaultCallingCode]
	
	* @param {Metadata} metadata
	
	* @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.
	
	*/
	function parsePhoneNumber$2(formattedPhoneNumber, defaultCountry, defaultCallingCode, metadata$1) {
		var _extractCountryCallin = (0, _extractCountryCallingCode["default"])((0, _parseIncompletePhoneNumber["default"])(formattedPhoneNumber), defaultCountry, defaultCallingCode, metadata$1.metadata), countryCallingCodeSource = _extractCountryCallin.countryCallingCodeSource, countryCallingCode = _extractCountryCallin.countryCallingCode, number = _extractCountryCallin.number;
		var country$1;
		if (countryCallingCode) metadata$1.selectNumberingPlan(countryCallingCode);
		else if (number && (defaultCountry || defaultCallingCode)) {
			metadata$1.selectNumberingPlan(defaultCountry, defaultCallingCode);
			if (defaultCountry) country$1 = defaultCountry;
			else if (USE_NON_GEOGRAPHIC_COUNTRY_CODE$2) {
				if (metadata$1.isNonGeographicCallingCode(defaultCallingCode)) country$1 = "001";
			}
			countryCallingCode = defaultCallingCode || (0, _getCountryCallingCode["default"])(defaultCountry, metadata$1.metadata);
		} else return {};
		if (!number) return {
			countryCallingCodeSource,
			countryCallingCode
		};
		var _extractNationalNumbe = (0, _extractNationalNumber["default"])((0, _parseIncompletePhoneNumber["default"])(number), metadata$1), nationalNumber = _extractNationalNumbe.nationalNumber, carrierCode = _extractNationalNumbe.carrierCode;
		var exactCountry = (0, _getCountryByCallingCode$2["default"])(countryCallingCode, {
			nationalNumber,
			defaultCountry,
			metadata: metadata$1
		});
		if (exactCountry) {
			country$1 = exactCountry;
			/* istanbul ignore if */
			if (exactCountry === "001") {} else metadata$1.country(country$1);
		}
		return {
			country: country$1,
			countryCallingCode,
			countryCallingCodeSource,
			nationalNumber,
			carrierCode
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parsePhoneNumberWithError_.js
var require_parsePhoneNumberWithError_ = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parsePhoneNumberWithError_.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = parsePhoneNumberWithError$3;
	var _parse = _interopRequireDefault$83(require_parse());
	function _interopRequireDefault$83(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function ownKeys$6(object, enumerableOnly) {
		var keys = Object.keys(object);
		if (Object.getOwnPropertySymbols) {
			var symbols = Object.getOwnPropertySymbols(object);
			enumerableOnly && (symbols = symbols.filter(function(sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			})), keys.push.apply(keys, symbols);
		}
		return keys;
	}
	function _objectSpread$10(target) {
		for (var i$1 = 1; i$1 < arguments.length; i$1++) {
			var source = null != arguments[i$1] ? arguments[i$1] : {};
			i$1 % 2 ? ownKeys$6(Object(source), !0).forEach(function(key) {
				_defineProperty$7(target, key, source[key]);
			}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$6(Object(source)).forEach(function(key) {
				Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
			});
		}
		return target;
	}
	function _defineProperty$7(obj, key, value) {
		if (key in obj) Object.defineProperty(obj, key, {
			value,
			enumerable: true,
			configurable: true,
			writable: true
		});
		else obj[key] = value;
		return obj;
	}
	function parsePhoneNumberWithError$3(text, options, metadata$1) {
		return (0, _parse["default"])(text, _objectSpread$10(_objectSpread$10({}, options), {}, { v2: true }), metadata$1);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parsePhoneNumber_.js
var require_parsePhoneNumber_ = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parsePhoneNumber_.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = parsePhoneNumber$1;
	var _parsePhoneNumberWithError_$2 = _interopRequireDefault$82(require_parsePhoneNumberWithError_());
	var _ParseError$1 = _interopRequireDefault$82(require_ParseError());
	var _metadata$4 = require_metadata();
	function _interopRequireDefault$82(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function ownKeys$5(object, enumerableOnly) {
		var keys = Object.keys(object);
		if (Object.getOwnPropertySymbols) {
			var symbols = Object.getOwnPropertySymbols(object);
			enumerableOnly && (symbols = symbols.filter(function(sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			})), keys.push.apply(keys, symbols);
		}
		return keys;
	}
	function _objectSpread$9(target) {
		for (var i$1 = 1; i$1 < arguments.length; i$1++) {
			var source = null != arguments[i$1] ? arguments[i$1] : {};
			i$1 % 2 ? ownKeys$5(Object(source), !0).forEach(function(key) {
				_defineProperty$6(target, key, source[key]);
			}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$5(Object(source)).forEach(function(key) {
				Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
			});
		}
		return target;
	}
	function _defineProperty$6(obj, key, value) {
		if (key in obj) Object.defineProperty(obj, key, {
			value,
			enumerable: true,
			configurable: true,
			writable: true
		});
		else obj[key] = value;
		return obj;
	}
	function parsePhoneNumber$1(text, options, metadata$1) {
		if (options && options.defaultCountry && !(0, _metadata$4.isSupportedCountry)(options.defaultCountry, metadata$1)) options = _objectSpread$9(_objectSpread$9({}, options), {}, { defaultCountry: void 0 });
		try {
			return (0, _parsePhoneNumberWithError_$2["default"])(text, options, metadata$1);
		} catch (error) {
			/* istanbul ignore else */
			if (error instanceof _ParseError$1["default"]) {} else throw error;
		}
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parsePhoneNumber.js
var require_parsePhoneNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parsePhoneNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = parsePhoneNumber;
	var _normalizeArguments2$8 = _interopRequireDefault$81(require_normalizeArguments());
	var _parsePhoneNumber_$2 = _interopRequireDefault$81(require_parsePhoneNumber_());
	function _interopRequireDefault$81(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function parsePhoneNumber() {
		var _normalizeArguments = (0, _normalizeArguments2$8["default"])(arguments), text = _normalizeArguments.text, options = _normalizeArguments.options, metadata$1 = _normalizeArguments.metadata;
		return (0, _parsePhoneNumber_$2["default"])(text, options, metadata$1);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parsePhoneNumberWithError.js
var require_parsePhoneNumberWithError = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/parsePhoneNumberWithError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = parsePhoneNumberWithError$2;
	var _parsePhoneNumberWithError_$1 = _interopRequireDefault$80(require_parsePhoneNumberWithError_());
	var _normalizeArguments2$7 = _interopRequireDefault$80(require_normalizeArguments());
	function _interopRequireDefault$80(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function parsePhoneNumberWithError$2() {
		var _normalizeArguments = (0, _normalizeArguments2$7["default"])(arguments), text = _normalizeArguments.text, options = _normalizeArguments.options, metadata$1 = _normalizeArguments.metadata;
		return (0, _parsePhoneNumberWithError_$1["default"])(text, options, metadata$1);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/isValidPhoneNumber.js
var require_isValidPhoneNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/isValidPhoneNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = isValidPhoneNumber;
	var _normalizeArguments2$6 = _interopRequireDefault$79(require_normalizeArguments());
	var _parsePhoneNumber_$1 = _interopRequireDefault$79(require_parsePhoneNumber_());
	function _interopRequireDefault$79(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function ownKeys$4(object, enumerableOnly) {
		var keys = Object.keys(object);
		if (Object.getOwnPropertySymbols) {
			var symbols = Object.getOwnPropertySymbols(object);
			enumerableOnly && (symbols = symbols.filter(function(sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			})), keys.push.apply(keys, symbols);
		}
		return keys;
	}
	function _objectSpread$8(target) {
		for (var i$1 = 1; i$1 < arguments.length; i$1++) {
			var source = null != arguments[i$1] ? arguments[i$1] : {};
			i$1 % 2 ? ownKeys$4(Object(source), !0).forEach(function(key) {
				_defineProperty$5(target, key, source[key]);
			}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function(key) {
				Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
			});
		}
		return target;
	}
	function _defineProperty$5(obj, key, value) {
		if (key in obj) Object.defineProperty(obj, key, {
			value,
			enumerable: true,
			configurable: true,
			writable: true
		});
		else obj[key] = value;
		return obj;
	}
	function isValidPhoneNumber() {
		var _normalizeArguments = (0, _normalizeArguments2$6["default"])(arguments), text = _normalizeArguments.text, options = _normalizeArguments.options, metadata$1 = _normalizeArguments.metadata;
		options = _objectSpread$8(_objectSpread$8({}, options), {}, { extract: false });
		var phoneNumber = (0, _parsePhoneNumber_$1["default"])(text, options, metadata$1);
		return phoneNumber && phoneNumber.isValid() || false;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/isPossiblePhoneNumber.js
var require_isPossiblePhoneNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/isPossiblePhoneNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = isPossiblePhoneNumber;
	var _normalizeArguments2$5 = _interopRequireDefault$78(require_normalizeArguments());
	var _parsePhoneNumber_ = _interopRequireDefault$78(require_parsePhoneNumber_());
	function _interopRequireDefault$78(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function ownKeys$3(object, enumerableOnly) {
		var keys = Object.keys(object);
		if (Object.getOwnPropertySymbols) {
			var symbols = Object.getOwnPropertySymbols(object);
			enumerableOnly && (symbols = symbols.filter(function(sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			})), keys.push.apply(keys, symbols);
		}
		return keys;
	}
	function _objectSpread$7(target) {
		for (var i$1 = 1; i$1 < arguments.length; i$1++) {
			var source = null != arguments[i$1] ? arguments[i$1] : {};
			i$1 % 2 ? ownKeys$3(Object(source), !0).forEach(function(key) {
				_defineProperty$4(target, key, source[key]);
			}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function(key) {
				Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
			});
		}
		return target;
	}
	function _defineProperty$4(obj, key, value) {
		if (key in obj) Object.defineProperty(obj, key, {
			value,
			enumerable: true,
			configurable: true,
			writable: true
		});
		else obj[key] = value;
		return obj;
	}
	function isPossiblePhoneNumber() {
		var _normalizeArguments = (0, _normalizeArguments2$5["default"])(arguments), text = _normalizeArguments.text, options = _normalizeArguments.options, metadata$1 = _normalizeArguments.metadata;
		options = _objectSpread$7(_objectSpread$7({}, options), {}, { extract: false });
		var phoneNumber = (0, _parsePhoneNumber_["default"])(text, options, metadata$1);
		return phoneNumber && phoneNumber.isPossible() || false;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/validatePhoneNumberLength.js
var require_validatePhoneNumberLength = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/validatePhoneNumberLength.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = validatePhoneNumberLength;
	var _normalizeArguments2$4 = _interopRequireDefault$77(require_normalizeArguments());
	var _parsePhoneNumberWithError_ = _interopRequireDefault$77(require_parsePhoneNumberWithError_());
	var _ParseError = _interopRequireDefault$77(require_ParseError());
	var _metadata$3 = _interopRequireDefault$77(require_metadata());
	var _checkNumberLength$1 = _interopRequireDefault$77(require_checkNumberLength());
	function _interopRequireDefault$77(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function ownKeys$2(object, enumerableOnly) {
		var keys = Object.keys(object);
		if (Object.getOwnPropertySymbols) {
			var symbols = Object.getOwnPropertySymbols(object);
			enumerableOnly && (symbols = symbols.filter(function(sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			})), keys.push.apply(keys, symbols);
		}
		return keys;
	}
	function _objectSpread$6(target) {
		for (var i$1 = 1; i$1 < arguments.length; i$1++) {
			var source = null != arguments[i$1] ? arguments[i$1] : {};
			i$1 % 2 ? ownKeys$2(Object(source), !0).forEach(function(key) {
				_defineProperty$3(target, key, source[key]);
			}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function(key) {
				Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
			});
		}
		return target;
	}
	function _defineProperty$3(obj, key, value) {
		if (key in obj) Object.defineProperty(obj, key, {
			value,
			enumerable: true,
			configurable: true,
			writable: true
		});
		else obj[key] = value;
		return obj;
	}
	function validatePhoneNumberLength() {
		var _normalizeArguments = (0, _normalizeArguments2$4["default"])(arguments), text = _normalizeArguments.text, options = _normalizeArguments.options, metadata$1 = _normalizeArguments.metadata;
		options = _objectSpread$6(_objectSpread$6({}, options), {}, { extract: false });
		try {
			var phoneNumber = (0, _parsePhoneNumberWithError_["default"])(text, options, metadata$1);
			metadata$1 = new _metadata$3["default"](metadata$1);
			metadata$1.selectNumberingPlan(phoneNumber.countryCallingCode);
			var result$1 = (0, _checkNumberLength$1["default"])(phoneNumber.nationalNumber, metadata$1);
			if (result$1 !== "IS_POSSIBLE") return result$1;
		} catch (error) {
			/* istanbul ignore else */
			if (error instanceof _ParseError["default"]) return error.message;
			else throw error;
		}
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/LRUCache.js
var require_LRUCache = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/LRUCache.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = void 0;
	function _defineProperties$8(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass$8(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties$8(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties$8(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	function _classCallCheck$8(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	var Node = /* @__PURE__ */ _createClass$8(function Node$1(key, value) {
		var next = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
		var prev = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
		_classCallCheck$8(this, Node$1);
		this.key = key;
		this.value = value;
		this.next = next;
		this.prev = prev;
	});
	var LRUCache = /* @__PURE__ */ function() {
		function LRUCache$1() {
			var limit$1 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;
			_classCallCheck$8(this, LRUCache$1);
			this.size = 0;
			this.limit = limit$1;
			this.head = null;
			this.tail = null;
			this.cache = {};
		}
		_createClass$8(LRUCache$1, [
			{
				key: "put",
				value: function put(key, value) {
					this.ensureLimit();
					if (!this.head) this.head = this.tail = new Node(key, value);
					else {
						var node = new Node(key, value, this.head);
						this.head.prev = node;
						this.head = node;
					}
					this.cache[key] = this.head;
					this.size++;
				}
			},
			{
				key: "get",
				value: function get(key) {
					if (this.cache[key]) {
						var value = this.cache[key].value;
						this.remove(key);
						this.put(key, value);
						return value;
					}
					console.log("Item not available in cache for key ".concat(key));
				}
			},
			{
				key: "ensureLimit",
				value: function ensureLimit() {
					if (this.size === this.limit) this.remove(this.tail.key);
				}
			},
			{
				key: "remove",
				value: function remove(key) {
					var node = this.cache[key];
					if (node.prev !== null) node.prev.next = node.next;
					else this.head = node.next;
					if (node.next !== null) node.next.prev = node.prev;
					else this.tail = node.prev;
					delete this.cache[key];
					this.size--;
				}
			},
			{
				key: "clear",
				value: function clear() {
					this.head = null;
					this.tail = null;
					this.size = 0;
					this.cache = {};
				}
			}
		]);
		return LRUCache$1;
	}();
	exports["default"] = LRUCache;
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/RegExpCache.js
var require_RegExpCache = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/RegExpCache.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = void 0;
	var _LRUCache = _interopRequireDefault$76(require_LRUCache());
	function _interopRequireDefault$76(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _classCallCheck$7(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _defineProperties$7(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass$7(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties$7(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties$7(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	var RegExpCache = /* @__PURE__ */ function() {
		function RegExpCache$1(size) {
			_classCallCheck$7(this, RegExpCache$1);
			this.cache = new _LRUCache["default"](size);
		}
		_createClass$7(RegExpCache$1, [{
			key: "getPatternForRegExp",
			value: function getPatternForRegExp(pattern) {
				var regExp = this.cache.get(pattern);
				if (!regExp) {
					regExp = /* @__PURE__ */ new RegExp("^" + pattern);
					this.cache.put(pattern, regExp);
				}
				return regExp;
			}
		}]);
		return RegExpCache$1;
	}();
	exports["default"] = RegExpCache;
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/util.js
var require_util = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.endsWith = endsWith;
	exports.limit = limit;
	exports.startsWith = startsWith;
	exports.trimAfterFirstMatch = trimAfterFirstMatch;
	/** Returns a regular expression quantifier with an upper and lower limit. */
	function limit(lower, upper) {
		if (lower < 0 || upper <= 0 || upper < lower) throw new TypeError();
		return "{".concat(lower, ",").concat(upper, "}");
	}
	/**
	
	* Trims away any characters after the first match of {@code pattern} in {@code candidate},
	
	* returning the trimmed version.
	
	*/
	function trimAfterFirstMatch(regexp, string) {
		var index = string.search(regexp);
		if (index >= 0) return string.slice(0, index);
		return string;
	}
	function startsWith(string, substring) {
		return string.indexOf(substring) === 0;
	}
	function endsWith(string, substring) {
		return string.indexOf(substring, string.length - substring.length) === string.length - substring.length;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/utf-8.js
var require_utf_8 = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/utf-8.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports._pN = exports._pL = exports.PZ = void 0;
	exports.isInvalidPunctuationSymbol = isInvalidPunctuationSymbol;
	exports.isLatinLetter = isLatinLetter;
	exports.pZ = exports.pNd = void 0;
	/**
	
	* "\p{Z}" is any kind of whitespace or invisible separator ("Separator").
	
	* http://www.regular-expressions.info/unicode.html
	
	* "\P{Z}" is the reverse of "\p{Z}".
	
	* "\p{N}" is any kind of numeric character in any script ("Number").
	
	* "\p{Nd}" is a digit zero through nine in any script except "ideographic scripts" ("Decimal_Digit_Number").
	
	* "\p{Sc}" is a currency symbol ("Currency_Symbol").
	
	* "\p{L}" is any kind of letter from any language ("Letter").
	
	* "\p{Mn}" is "non-spacing mark".
	
	*
	
	* Javascript doesn't support Unicode Regular Expressions
	
	* so substituting it with this explicit set of characters.
	
	*
	
	* https://stackoverflow.com/questions/13210194/javascript-regex-equivalent-of-a-za-z-using-pl
	
	* https://github.com/danielberndt/babel-plugin-utf-8-regex/blob/master/src/transformer.js
	
	*/
	var _pZ = " \xA0 ᠎ - \u2028\u2029  　";
	var pZ = "[".concat(_pZ, "]");
	exports.pZ = pZ;
	var PZ = "[^".concat(_pZ, "]");
	exports.PZ = PZ;
	var _pN = "0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９";
	exports._pN = _pN;
	var _pNd = "0-9٠-٩۰-۹߀-߉०-९০-৯੦-੯૦-૯୦-୯௦-௯౦-౯೦-೯൦-൯๐-๙໐-໙༠-༩၀-၉႐-႙០-៩᠐-᠙᥆-᥏᧐-᧙᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙꘠-꘩꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９";
	var pNd = "[".concat(_pNd, "]");
	exports.pNd = pNd;
	var _pL = "A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ";
	exports._pL = _pL;
	var pL = "[".concat(_pL, "]");
	var pL_regexp = new RegExp(pL);
	var _pSc = "$¢-¥֏؋৲৳৻૱௹฿៛₠-₹꠸﷼﹩＄￠￡￥￦";
	var pSc = "[".concat(_pSc, "]");
	var pSc_regexp = new RegExp(pSc);
	var _pMn = "̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣤ-ࣾऀ-ंऺ़ु-ै्॑-ॗॢॣঁ়ু-ৄ্ৢৣਁਂ਼ੁੂੇੈੋ-੍ੑੰੱੵઁં઼ુ-ૅેૈ્ૢૣଁ଼ିୁ-ୄ୍ୖୢୣஂீ்ా-ీె-ైొ-్ౕౖౢౣ಼ಿೆೌ್ೢೣു-ൄ്ൢൣ්ි-ුූัิ-ฺ็-๎ັິ-ູົຼ່-ໍཱ༹༘༙༵༷-ཾྀ-྄྆྇ྍ-ྗྙ-ྼ࿆ိ-ူဲ-့္်ွှၘၙၞ-ၠၱ-ၴႂႅႆႍႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴឵ិ-ួំ៉-៓៝᠋-᠍ᢩᤠ-ᤢᤧᤨᤲ᤹-᤻ᨘᨗᩖᩘ-ᩞ᩠ᩢᩥ-ᩬᩳ-᩿᩼ᬀ-ᬃ᬴ᬶ-ᬺᬼᭂ᭫-᭳ᮀᮁᮢ-ᮥᮨᮩ᯦᮫ᯨᯩᯭᯯ-ᯱᰬ-ᰳᰶ᰷᳐-᳔᳒-᳢᳠-᳨᳭᳴᷀-ᷦ᷼-᷿⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〭꙯ꙴ-꙽ꚟ꛰꛱ꠂ꠆ꠋꠥꠦ꣄꣠-꣱ꤦ-꤭ꥇ-ꥑꦀ-ꦂ꦳ꦶ-ꦹꦼꨩ-ꨮꨱꨲꨵꨶꩃꩌꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫬꫭ꫶ꯥꯨ꯭ﬞ︀-️︠-︦";
	var pMn = "[".concat(_pMn, "]");
	var pMn_regexp = new RegExp(pMn);
	var _InBasic_Latin = "\0-";
	var _InLatin_1_Supplement = "-ÿ";
	var _InLatin_Extended_A = "Ā-ſ";
	var _InLatin_Extended_Additional = "Ḁ-ỿ";
	var _InLatin_Extended_B = "ƀ-ɏ";
	var _InCombining_Diacritical_Marks = "̀-ͯ";
	var latinLetterRegexp = /* @__PURE__ */ new RegExp("[" + _InBasic_Latin + _InLatin_1_Supplement + _InLatin_Extended_A + _InLatin_Extended_Additional + _InLatin_Extended_B + _InCombining_Diacritical_Marks + "]");
	/**
	
	* Helper method to determine if a character is a Latin-script letter or not.
	
	* For our purposes, combining marks should also return true since we assume
	
	* they have been added to a preceding Latin character.
	
	*/
	function isLatinLetter(letter) {
		if (!pL_regexp.test(letter) && !pMn_regexp.test(letter)) return false;
		return latinLetterRegexp.test(letter);
	}
	function isInvalidPunctuationSymbol(character) {
		return character === "%" || pSc_regexp.test(character);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/matchPhoneNumberStringAgainstPhoneNumber.js
var require_matchPhoneNumberStringAgainstPhoneNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/matchPhoneNumberStringAgainstPhoneNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = matchPhoneNumberStringAgainstPhoneNumber;
	var _parsePhoneNumber$1 = _interopRequireDefault$75(require_parsePhoneNumber());
	function _interopRequireDefault$75(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	/**
	
	* Matches a phone number object against a phone number string.
	
	* @param  {string} phoneNumberString
	
	* @param  {PhoneNumber} phoneNumber
	
	* @param  {object} metadata — Metadata JSON
	
	* @return {'INVALID_NUMBER'|'NO_MATCH'|'SHORT_NSN_MATCH'|'NSN_MATCH'|'EXACT_MATCH'}
	
	*/
	function matchPhoneNumberStringAgainstPhoneNumber(phoneNumberString, phoneNumber, metadata$1) {
		var phoneNumberStringContainsCallingCode = true;
		var parsedPhoneNumber = (0, _parsePhoneNumber$1["default"])(phoneNumberString, metadata$1);
		if (!parsedPhoneNumber) {
			phoneNumberStringContainsCallingCode = false;
			parsedPhoneNumber = (0, _parsePhoneNumber$1["default"])(phoneNumberString, { defaultCallingCode: phoneNumber.countryCallingCode }, metadata$1);
		}
		if (!parsedPhoneNumber) return "INVALID_NUMBER";
		if (phoneNumber.ext) {
			if (parsedPhoneNumber.ext !== phoneNumber.ext) return "NO_MATCH";
		} else if (parsedPhoneNumber.ext) return "NO_MATCH";
		if (phoneNumberStringContainsCallingCode) {
			if (phoneNumber.countryCallingCode !== parsedPhoneNumber.countryCallingCode) return "NO_MATCH";
		}
		if (phoneNumber.number === parsedPhoneNumber.number) if (phoneNumberStringContainsCallingCode) return "EXACT_MATCH";
		else return "NSN_MATCH";
		if (phoneNumber.nationalNumber.indexOf(parsedPhoneNumber.nationalNumber) === 0 || parsedPhoneNumber.nationalNumber.indexOf(phoneNumber.nationalNumber) === 0) return "SHORT_NSN_MATCH";
		return "NO_MATCH";
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/Leniency.js
var require_Leniency = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/Leniency.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.containsMoreThanOneSlashInNationalNumber = containsMoreThanOneSlashInNationalNumber;
	exports["default"] = void 0;
	var _isValid = _interopRequireDefault$74(require_isValid());
	var _parseDigits$3 = _interopRequireDefault$74(require_parseDigits());
	var _matchPhoneNumberStringAgainstPhoneNumber = _interopRequireDefault$74(require_matchPhoneNumberStringAgainstPhoneNumber());
	var _metadata2 = _interopRequireDefault$74(require_metadata());
	var _getCountryByCallingCode$1 = _interopRequireDefault$74(require_getCountryByCallingCode());
	var _format = require_format();
	var _util$3 = require_util();
	function _interopRequireDefault$74(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	/**
	
	* Leniency when finding potential phone numbers in text segments
	
	* The levels here are ordered in increasing strictness.
	
	*/
	var _default$1 = {
		POSSIBLE: function POSSIBLE(phoneNumber, _ref) {
			var candidate = _ref.candidate, metadata$1 = _ref.metadata;
			return true;
		},
		VALID: function VALID(phoneNumber, _ref2) {
			var candidate = _ref2.candidate, defaultCountry = _ref2.defaultCountry, metadata$1 = _ref2.metadata;
			if (!phoneNumber.isValid() || !containsOnlyValidXChars(phoneNumber, candidate, metadata$1)) return false;
			return true;
		},
		STRICT_GROUPING: function STRICT_GROUPING(phoneNumber, _ref3) {
			var candidate = _ref3.candidate, defaultCountry = _ref3.defaultCountry, metadata$1 = _ref3.metadata, regExpCache = _ref3.regExpCache;
			if (!phoneNumber.isValid() || !containsOnlyValidXChars(phoneNumber, candidate, metadata$1) || containsMoreThanOneSlashInNationalNumber(phoneNumber, candidate) || !isNationalPrefixPresentIfRequired(phoneNumber, {
				defaultCountry,
				metadata: metadata$1
			})) return false;
			return checkNumberGroupingIsValid(phoneNumber, candidate, metadata$1, allNumberGroupsRemainGrouped, regExpCache);
		},
		EXACT_GROUPING: function EXACT_GROUPING(phoneNumber, _ref4) {
			var candidate = _ref4.candidate, defaultCountry = _ref4.defaultCountry, metadata$1 = _ref4.metadata, regExpCache = _ref4.regExpCache;
			if (!phoneNumber.isValid() || !containsOnlyValidXChars(phoneNumber, candidate, metadata$1) || containsMoreThanOneSlashInNationalNumber(phoneNumber, candidate) || !isNationalPrefixPresentIfRequired(phoneNumber, {
				defaultCountry,
				metadata: metadata$1
			})) return false;
			return checkNumberGroupingIsValid(phoneNumber, candidate, metadata$1, allNumberGroupsAreExactlyPresent, regExpCache);
		}
	};
	exports["default"] = _default$1;
	function containsOnlyValidXChars(phoneNumber, candidate, metadata$1) {
		for (var index = 0; index < candidate.length - 1; index++) {
			var charAtIndex = candidate.charAt(index);
			if (charAtIndex === "x" || charAtIndex === "X") {
				var charAtNextIndex = candidate.charAt(index + 1);
				if (charAtNextIndex === "x" || charAtNextIndex === "X") {
					index++;
					if ((0, _matchPhoneNumberStringAgainstPhoneNumber["default"])(candidate.substring(index), phoneNumber, metadata$1) !== "NSN_MATCH") return false;
				} else {
					var ext = (0, _parseDigits$3["default"])(candidate.substring(index));
					if (ext) {
						if (phoneNumber.ext !== ext) return false;
					} else if (phoneNumber.ext) return false;
				}
			}
		}
		return true;
	}
	function isNationalPrefixPresentIfRequired(phoneNumber, _ref5) {
		var defaultCountry = _ref5.defaultCountry, _metadata$17 = _ref5.metadata;
		if (phoneNumber.__countryCallingCodeSource !== "FROM_DEFAULT_COUNTRY") return true;
		var metadata$1 = new _metadata2["default"](_metadata$17);
		metadata$1.selectNumberingPlan(phoneNumber.countryCallingCode);
		var phoneNumberRegion = phoneNumber.country || (0, _getCountryByCallingCode$1["default"])(phoneNumber.countryCallingCode, {
			nationalNumber: phoneNumber.nationalNumber,
			defaultCountry,
			metadata: metadata$1
		});
		var nationalNumber = phoneNumber.nationalNumber;
		var format = (0, _format.chooseFormatForNumber)(metadata$1.numberingPlan.formats(), nationalNumber);
		if (format.nationalPrefixFormattingRule()) {
			if (metadata$1.numberingPlan.nationalPrefixIsOptionalWhenFormattingInNationalFormat()) return true;
			if (!format.usesNationalPrefix()) return true;
			return Boolean(phoneNumber.nationalPrefix);
		}
		return true;
	}
	function containsMoreThanOneSlashInNationalNumber(phoneNumber, candidate) {
		var firstSlashInBodyIndex = candidate.indexOf("/");
		if (firstSlashInBodyIndex < 0) return false;
		var secondSlashInBodyIndex = candidate.indexOf("/", firstSlashInBodyIndex + 1);
		if (secondSlashInBodyIndex < 0) return false;
		var candidateHasCountryCode = phoneNumber.__countryCallingCodeSource === "FROM_NUMBER_WITH_PLUS_SIGN" || phoneNumber.__countryCallingCodeSource === "FROM_NUMBER_WITHOUT_PLUS_SIGN";
		if (candidateHasCountryCode && (0, _parseDigits$3["default"])(candidate.substring(0, firstSlashInBodyIndex)) === phoneNumber.countryCallingCode) return candidate.slice(secondSlashInBodyIndex + 1).indexOf("/") >= 0;
		return true;
	}
	function checkNumberGroupingIsValid(number, candidate, metadata$1, checkGroups, regExpCache) {
		throw new Error("This part of code hasn't been ported");
		var normalizedCandidate, formattedNumberGroups, alternateFormats, nationalSignificantNumber, _iterator, _step, alternateFormat, leadingDigitsRegExp;
	}
	function allNumberGroupsAreExactlyPresent(metadata$1, number, normalizedCandidate, formattedNumberGroups) {
		throw new Error("This part of code hasn't been ported");
		var candidateGroups, candidateNumberGroupIndex, formattedNumberGroupIndex;
	}
	function allNumberGroupsRemainGrouped(metadata$1, number, normalizedCandidate, formattedNumberGroups) {
		throw new Error("This part of code hasn't been ported");
		var fromIndex, countryCode, i$1, region$1, nationalSignificantNumber;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/parsePreCandidate.js
var require_parsePreCandidate = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/parsePreCandidate.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = parsePreCandidate;
	var _util$2 = require_util();
	var SECOND_NUMBER_START_PATTERN = /[\\/] *x/;
	function parsePreCandidate(candidate) {
		return (0, _util$2.trimAfterFirstMatch)(SECOND_NUMBER_START_PATTERN, candidate);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/isValidPreCandidate.js
var require_isValidPreCandidate = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/isValidPreCandidate.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = isValidPreCandidate;
	var SLASH_SEPARATED_DATES = /(?:(?:[0-3]?\d\/[01]?\d)|(?:[01]?\d\/[0-3]?\d))\/(?:[12]\d)?\d{2}/;
	var TIME_STAMPS = /[12]\d{3}[-/]?[01]\d[-/]?[0-3]\d +[0-2]\d$/;
	var TIME_STAMPS_SUFFIX_LEADING = /^:[0-5]\d/;
	function isValidPreCandidate(candidate, offset, text) {
		if (SLASH_SEPARATED_DATES.test(candidate)) return false;
		if (TIME_STAMPS.test(candidate)) {
			var followingText = text.slice(offset + candidate.length);
			if (TIME_STAMPS_SUFFIX_LEADING.test(followingText)) return false;
		}
		return true;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/isValidCandidate.js
var require_isValidCandidate = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findNumbers/isValidCandidate.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.LEAD_CLASS = void 0;
	exports["default"] = isValidCandidate;
	var _constants$3 = require_constants();
	var _util$1 = require_util();
	var _utf$1 = require_utf_8();
	var OPENING_PARENS = "(\\[（［";
	var CLOSING_PARENS = ")\\]）］";
	var NON_PARENS = "[^".concat(OPENING_PARENS).concat(CLOSING_PARENS, "]");
	var LEAD_CLASS = "[".concat(OPENING_PARENS).concat(_constants$3.PLUS_CHARS, "]");
	exports.LEAD_CLASS = LEAD_CLASS;
	var LEAD_CLASS_LEADING = /* @__PURE__ */ new RegExp("^" + LEAD_CLASS);
	var BRACKET_PAIR_LIMIT = (0, _util$1.limit)(0, 3);
	/**
	
	* Pattern to check that brackets match. Opening brackets should be closed within a phone number.
	
	* This also checks that there is something inside the brackets. Having no brackets at all is also
	
	* fine.
	
	*
	
	* An opening bracket at the beginning may not be closed, but subsequent ones should be.  It's
	
	* also possible that the leading bracket was dropped, so we shouldn't be surprised if we see a
	
	* closing bracket first. We limit the sets of brackets in a phone number to four.
	
	*/
	var MATCHING_BRACKETS_ENTIRE = /* @__PURE__ */ new RegExp("^(?:[" + OPENING_PARENS + "])?(?:" + NON_PARENS + "+[" + CLOSING_PARENS + "])?" + NON_PARENS + "+(?:[" + OPENING_PARENS + "]" + NON_PARENS + "+[" + CLOSING_PARENS + "])" + BRACKET_PAIR_LIMIT + NON_PARENS + "*$");
	/**
	
	* Matches strings that look like publication pages. Example:
	
	* <pre>Computing Complete Answers to Queries in the Presence of Limited Access Patterns.
	
	* Chen Li. VLDB J. 12(3): 211-227 (2003).</pre>
	
	*
	
	* The string "211-227 (2003)" is not a telephone number.
	
	*/
	var PUB_PAGES = /\d{1,5}-+\d{1,5}\s{0,4}\(\d{1,4}/;
	function isValidCandidate(candidate, offset, text, leniency) {
		if (!MATCHING_BRACKETS_ENTIRE.test(candidate) || PUB_PAGES.test(candidate)) return;
		if (leniency !== "POSSIBLE") {
			if (offset > 0 && !LEAD_CLASS_LEADING.test(candidate)) {
				var previousChar = text[offset - 1];
				if ((0, _utf$1.isInvalidPunctuationSymbol)(previousChar) || (0, _utf$1.isLatinLetter)(previousChar)) return false;
			}
			var lastCharIndex = offset + candidate.length;
			if (lastCharIndex < text.length) {
				var nextChar = text[lastCharIndex];
				if ((0, _utf$1.isInvalidPunctuationSymbol)(nextChar) || (0, _utf$1.isLatinLetter)(nextChar)) return false;
			}
		}
		return true;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/PhoneNumberMatcher.js
var require_PhoneNumberMatcher = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/PhoneNumberMatcher.js"(exports) {
	function _typeof$9(obj) {
		"@babel/helpers - typeof";
		return _typeof$9 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj$1) {
			return typeof obj$1;
		} : function(obj$1) {
			return obj$1 && "function" == typeof Symbol && obj$1.constructor === Symbol && obj$1 !== Symbol.prototype ? "symbol" : typeof obj$1;
		}, _typeof$9(obj);
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = void 0;
	var _PhoneNumber$2 = _interopRequireDefault$73(require_PhoneNumber());
	var _constants$2 = require_constants();
	var _createExtensionPattern = _interopRequireDefault$73(require_createExtensionPattern());
	var _RegExpCache = _interopRequireDefault$73(require_RegExpCache());
	var _util = require_util();
	var _utf = require_utf_8();
	var _Leniency = _interopRequireDefault$73(require_Leniency());
	var _parsePreCandidate = _interopRequireDefault$73(require_parsePreCandidate());
	var _isValidPreCandidate = _interopRequireDefault$73(require_isValidPreCandidate());
	var _isValidCandidate = _interopRequireWildcard$5(require_isValidCandidate());
	var _metadata$2 = require_metadata();
	var _parsePhoneNumber = _interopRequireDefault$73(require_parsePhoneNumber());
	function _getRequireWildcardCache$2(nodeInterop) {
		if (typeof WeakMap !== "function") return null;
		var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
		var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
		return (_getRequireWildcardCache$2 = function _getRequireWildcardCache$7(nodeInterop$1) {
			return nodeInterop$1 ? cacheNodeInterop : cacheBabelInterop;
		})(nodeInterop);
	}
	function _interopRequireWildcard$5(obj, nodeInterop) {
		if (!nodeInterop && obj && obj.__esModule) return obj;
		if (obj === null || _typeof$9(obj) !== "object" && typeof obj !== "function") return { "default": obj };
		var cache = _getRequireWildcardCache$2(nodeInterop);
		if (cache && cache.has(obj)) return cache.get(obj);
		var newObj = {};
		var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
		for (var key in obj) if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
			var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
			if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
			else newObj[key] = obj[key];
		}
		newObj["default"] = obj;
		if (cache) cache.set(obj, newObj);
		return newObj;
	}
	function _interopRequireDefault$73(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _createForOfIteratorHelperLoose$3(o, allowArrayLike) {
		var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
		if (it) return (it = it.call(o)).next.bind(it);
		if (Array.isArray(o) || (it = _unsupportedIterableToArray$8(o)) || allowArrayLike && o && typeof o.length === "number") {
			if (it) o = it;
			var i$1 = 0;
			return function() {
				if (i$1 >= o.length) return { done: true };
				return {
					done: false,
					value: o[i$1++]
				};
			};
		}
		throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$8(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$8(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$8(o, minLen);
	}
	function _arrayLikeToArray$8(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	function _classCallCheck$6(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _defineProperties$6(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass$6(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties$6(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties$6(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	var USE_NON_GEOGRAPHIC_COUNTRY_CODE$1 = false;
	var EXTN_PATTERNS_FOR_MATCHING = (0, _createExtensionPattern["default"])("matching");
	/**
	
	* Patterns used to extract phone numbers from a larger phone-number-like pattern. These are
	
	* ordered according to specificity. For example, white-space is last since that is frequently
	
	* used in numbers, not just to separate two numbers. We have separate patterns since we don't
	
	* want to break up the phone-number-like text on more than one different kind of symbol at one
	
	* time, although symbols of the same type (e.g. space) can be safely grouped together.
	
	*
	
	* Note that if there is a match, we will always check any text found up to the first match as
	
	* well.
	
	*/
	var INNER_MATCHES = [
		"\\/+(.*)/",
		"(\\([^(]*)",
		"(?:".concat(_utf.pZ, "-|-").concat(_utf.pZ, ")").concat(_utf.pZ, "*(.+)"),
		"[‒-―－]".concat(_utf.pZ, "*(.+)"),
		"\\.+".concat(_utf.pZ, "*([^.]+)"),
		"".concat(_utf.pZ, "+(").concat(_utf.PZ, "+)")
	];
	var leadLimit = (0, _util.limit)(0, 2);
	var punctuationLimit = (0, _util.limit)(0, 4);
	var digitBlockLimit = _constants$2.MAX_LENGTH_FOR_NSN + _constants$2.MAX_LENGTH_COUNTRY_CODE;
	var blockLimit = (0, _util.limit)(0, digitBlockLimit);
	var punctuation = "[".concat(_constants$2.VALID_PUNCTUATION, "]") + punctuationLimit;
	var digitSequence = _utf.pNd + (0, _util.limit)(1, digitBlockLimit);
	/**
	
	* Phone number pattern allowing optional punctuation.
	
	* The phone number pattern used by `find()`, similar to
	
	* VALID_PHONE_NUMBER, but with the following differences:
	
	* <ul>
	
	*   <li>All captures are limited in order to place an upper bound to the text matched by the
	
	*       pattern.
	
	* <ul>
	
	*   <li>Leading punctuation / plus signs are limited.
	
	*   <li>Consecutive occurrences of punctuation are limited.
	
	*   <li>Number of digits is limited.
	
	* </ul>
	
	*   <li>No whitespace is allowed at the start or end.
	
	*   <li>No alpha digits (vanity numbers such as 1-800-SIX-FLAGS) are currently supported.
	
	* </ul>
	
	*/
	var PATTERN = "(?:" + _isValidCandidate.LEAD_CLASS + punctuation + ")" + leadLimit + digitSequence + "(?:" + punctuation + digitSequence + ")" + blockLimit + "(?:" + EXTN_PATTERNS_FOR_MATCHING + ")?";
	var UNWANTED_END_CHAR_PATTERN = new RegExp("[^".concat(_utf._pN).concat(_utf._pL, "#]+$"));
	var NON_DIGITS_PATTERN = new RegExp("(\\D+)", "");
	var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;
	/**
	
	* A stateful class that finds and extracts telephone numbers from {@linkplain CharSequence text}.
	
	* Instances can be created using the {@linkplain PhoneNumberUtil#findNumbers factory methods} in
	
	* {@link PhoneNumberUtil}.
	
	*
	
	* <p>Vanity numbers (phone numbers using alphabetic digits such as <tt>1-800-SIX-FLAGS</tt> are
	
	* not found.
	
	*
	
	* <p>This class is not thread-safe.
	
	*/
	var PhoneNumberMatcher = /* @__PURE__ */ function() {
		/**
		
		* @param {string} text — the character sequence that we will search, null for no text.
		
		* @param {'POSSIBLE'|'VALID'|'STRICT_GROUPING'|'EXACT_GROUPING'} [options.leniency] — The leniency to use when evaluating candidate phone numbers. See `source/findNumbers/Leniency.js` for more details.
		
		* @param {number} [options.maxTries] — The maximum number of invalid numbers to try before giving up on the text. This is to cover degenerate cases where the text has a lot of false positives in it. Must be >= 0.
		
		*/
		function PhoneNumberMatcher$1() {
			var text = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
			var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
			var metadata$1 = arguments.length > 2 ? arguments[2] : void 0;
			_classCallCheck$6(this, PhoneNumberMatcher$1);
			options = {
				v2: options.v2,
				defaultCallingCode: options.defaultCallingCode,
				defaultCountry: options.defaultCountry && (0, _metadata$2.isSupportedCountry)(options.defaultCountry, metadata$1) ? options.defaultCountry : void 0,
				leniency: options.leniency || (options.extended ? "POSSIBLE" : "VALID"),
				maxTries: options.maxTries || MAX_SAFE_INTEGER
			};
			if (!options.leniency) throw new TypeError("`leniency` is required");
			if (options.leniency !== "POSSIBLE" && options.leniency !== "VALID") throw new TypeError("Invalid `leniency`: \"".concat(options.leniency, "\". Supported values: \"POSSIBLE\", \"VALID\"."));
			if (options.maxTries < 0) throw new TypeError("`maxTries` must be `>= 0`");
			this.text = text;
			this.options = options;
			this.metadata = metadata$1;
			this.leniency = _Leniency["default"][options.leniency];
			if (!this.leniency) throw new TypeError("Unknown leniency: \"".concat(options.leniency, "\""));
			/** The maximum number of retries after matching an invalid number. */
			this.maxTries = options.maxTries;
			this.PATTERN = new RegExp(PATTERN, "ig");
			/** The iteration tristate. */
			this.state = "NOT_READY";
			/** The next index to start searching at. Undefined in {@link State#DONE}. */
			this.searchIndex = 0;
			this.regExpCache = new _RegExpCache["default"](32);
		}
		/**
		
		* Attempts to find the next subsequence in the searched sequence on or after {@code searchIndex}
		
		* that represents a phone number. Returns the next match, null if none was found.
		
		*
		
		* @param index  the search index to start searching at
		
		* @return  the phone number match found, null if none can be found
		
		*/
		_createClass$6(PhoneNumberMatcher$1, [
			{
				key: "find",
				value: function find$1() {
					var matches$2;
					while (this.maxTries > 0 && (matches$2 = this.PATTERN.exec(this.text)) !== null) {
						var candidate = matches$2[0];
						var offset = matches$2.index;
						candidate = (0, _parsePreCandidate["default"])(candidate);
						if ((0, _isValidPreCandidate["default"])(candidate, offset, this.text)) {
							var match = this.parseAndVerify(candidate, offset, this.text) || this.extractInnerMatch(candidate, offset, this.text);
							if (match) if (this.options.v2) return {
								startsAt: match.startsAt,
								endsAt: match.endsAt,
								number: match.phoneNumber
							};
							else {
								var phoneNumber = match.phoneNumber;
								var result$1 = {
									startsAt: match.startsAt,
									endsAt: match.endsAt,
									phone: phoneNumber.nationalNumber
								};
								if (phoneNumber.country)
 /* istanbul ignore if */
								if (USE_NON_GEOGRAPHIC_COUNTRY_CODE$1 && country === "001") result$1.countryCallingCode = phoneNumber.countryCallingCode;
								else result$1.country = phoneNumber.country;
								else result$1.countryCallingCode = phoneNumber.countryCallingCode;
								if (phoneNumber.ext) result$1.ext = phoneNumber.ext;
								return result$1;
							}
						}
						this.maxTries--;
					}
				}
			},
			{
				key: "extractInnerMatch",
				value: function extractInnerMatch(substring, offset, text) {
					for (var _iterator = _createForOfIteratorHelperLoose$3(INNER_MATCHES), _step; !(_step = _iterator()).done;) {
						var innerMatchPattern = _step.value;
						var isFirstMatch = true;
						var candidateMatch = void 0;
						var innerMatchRegExp = new RegExp(innerMatchPattern, "g");
						while (this.maxTries > 0 && (candidateMatch = innerMatchRegExp.exec(substring)) !== null) {
							if (isFirstMatch) {
								var _candidate = (0, _util.trimAfterFirstMatch)(UNWANTED_END_CHAR_PATTERN, substring.slice(0, candidateMatch.index));
								var _match$1 = this.parseAndVerify(_candidate, offset, text);
								if (_match$1) return _match$1;
								this.maxTries--;
								isFirstMatch = false;
							}
							var candidate = (0, _util.trimAfterFirstMatch)(UNWANTED_END_CHAR_PATTERN, candidateMatch[1]);
							var candidateIndexGuess = substring.indexOf(candidate, candidateMatch.index);
							var match = this.parseAndVerify(candidate, offset + candidateIndexGuess, text);
							if (match) return match;
							this.maxTries--;
						}
					}
				}
			},
			{
				key: "parseAndVerify",
				value: function parseAndVerify(candidate, offset, text) {
					if (!(0, _isValidCandidate["default"])(candidate, offset, text, this.options.leniency)) return;
					var phoneNumber = (0, _parsePhoneNumber["default"])(candidate, {
						extended: true,
						defaultCountry: this.options.defaultCountry,
						defaultCallingCode: this.options.defaultCallingCode
					}, this.metadata);
					if (!phoneNumber) return;
					if (!phoneNumber.isPossible()) return;
					if (this.leniency(phoneNumber, {
						candidate,
						defaultCountry: this.options.defaultCountry,
						metadata: this.metadata,
						regExpCache: this.regExpCache
					})) return {
						startsAt: offset,
						endsAt: offset + candidate.length,
						phoneNumber
					};
				}
			},
			{
				key: "hasNext",
				value: function hasNext() {
					if (this.state === "NOT_READY") {
						this.lastMatch = this.find();
						if (this.lastMatch) this.state = "READY";
						else this.state = "DONE";
					}
					return this.state === "READY";
				}
			},
			{
				key: "next",
				value: function next() {
					if (!this.hasNext()) throw new Error("No next element");
					var result$1 = this.lastMatch;
					this.lastMatch = null;
					this.state = "NOT_READY";
					return result$1;
				}
			}
		]);
		return PhoneNumberMatcher$1;
	}();
	exports["default"] = PhoneNumberMatcher;
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/legacy/findNumbers.js
var require_findNumbers = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/legacy/findNumbers.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = findNumbers;
	var _PhoneNumberMatcher$3 = _interopRequireDefault$72(require_PhoneNumberMatcher());
	var _normalizeArguments2$3 = _interopRequireDefault$72(require_normalizeArguments());
	function _interopRequireDefault$72(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function findNumbers() {
		var _normalizeArguments = (0, _normalizeArguments2$3["default"])(arguments), text = _normalizeArguments.text, options = _normalizeArguments.options, metadata$1 = _normalizeArguments.metadata;
		var matcher = new _PhoneNumberMatcher$3["default"](text, options, metadata$1);
		var results = [];
		while (matcher.hasNext()) results.push(matcher.next());
		return results;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/legacy/searchNumbers.js
var require_searchNumbers = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/legacy/searchNumbers.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = searchNumbers;
	var _normalizeArguments2$2 = _interopRequireDefault$71(require_normalizeArguments());
	var _PhoneNumberMatcher$2 = _interopRequireDefault$71(require_PhoneNumberMatcher());
	function _interopRequireDefault$71(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _defineProperty$2(obj, key, value) {
		if (key in obj) Object.defineProperty(obj, key, {
			value,
			enumerable: true,
			configurable: true,
			writable: true
		});
		else obj[key] = value;
		return obj;
	}
	/**
	
	* @return ES6 `for ... of` iterator.
	
	*/
	function searchNumbers() {
		var _normalizeArguments = (0, _normalizeArguments2$2["default"])(arguments), text = _normalizeArguments.text, options = _normalizeArguments.options, metadata$1 = _normalizeArguments.metadata;
		var matcher = new _PhoneNumberMatcher$2["default"](text, options, metadata$1);
		return _defineProperty$2({}, Symbol.iterator, function() {
			return { next: function next() {
				if (matcher.hasNext()) return {
					done: false,
					value: matcher.next()
				};
				return { done: true };
			} };
		});
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findPhoneNumbersInText.js
var require_findPhoneNumbersInText = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/findPhoneNumbersInText.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = findPhoneNumbersInText;
	var _PhoneNumberMatcher$1 = _interopRequireDefault$70(require_PhoneNumberMatcher());
	var _normalizeArguments2$1 = _interopRequireDefault$70(require_normalizeArguments());
	function _interopRequireDefault$70(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function ownKeys$1(object, enumerableOnly) {
		var keys = Object.keys(object);
		if (Object.getOwnPropertySymbols) {
			var symbols = Object.getOwnPropertySymbols(object);
			enumerableOnly && (symbols = symbols.filter(function(sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			})), keys.push.apply(keys, symbols);
		}
		return keys;
	}
	function _objectSpread$5(target) {
		for (var i$1 = 1; i$1 < arguments.length; i$1++) {
			var source = null != arguments[i$1] ? arguments[i$1] : {};
			i$1 % 2 ? ownKeys$1(Object(source), !0).forEach(function(key) {
				_defineProperty$1(target, key, source[key]);
			}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function(key) {
				Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
			});
		}
		return target;
	}
	function _defineProperty$1(obj, key, value) {
		if (key in obj) Object.defineProperty(obj, key, {
			value,
			enumerable: true,
			configurable: true,
			writable: true
		});
		else obj[key] = value;
		return obj;
	}
	function findPhoneNumbersInText() {
		var _normalizeArguments = (0, _normalizeArguments2$1["default"])(arguments), text = _normalizeArguments.text, options = _normalizeArguments.options, metadata$1 = _normalizeArguments.metadata;
		var matcher = new _PhoneNumberMatcher$1["default"](text, _objectSpread$5(_objectSpread$5({}, options), {}, { v2: true }), metadata$1);
		var results = [];
		while (matcher.hasNext()) results.push(matcher.next());
		return results;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/searchPhoneNumbersInText.js
var require_searchPhoneNumbersInText = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/searchPhoneNumbersInText.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = searchPhoneNumbersInText;
	var _PhoneNumberMatcher = _interopRequireDefault$69(require_PhoneNumberMatcher());
	var _normalizeArguments2 = _interopRequireDefault$69(require_normalizeArguments());
	function _interopRequireDefault$69(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function ownKeys(object, enumerableOnly) {
		var keys = Object.keys(object);
		if (Object.getOwnPropertySymbols) {
			var symbols = Object.getOwnPropertySymbols(object);
			enumerableOnly && (symbols = symbols.filter(function(sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			})), keys.push.apply(keys, symbols);
		}
		return keys;
	}
	function _objectSpread$4(target) {
		for (var i$1 = 1; i$1 < arguments.length; i$1++) {
			var source = null != arguments[i$1] ? arguments[i$1] : {};
			i$1 % 2 ? ownKeys(Object(source), !0).forEach(function(key) {
				_defineProperty(target, key, source[key]);
			}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
				Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
			});
		}
		return target;
	}
	function _defineProperty(obj, key, value) {
		if (key in obj) Object.defineProperty(obj, key, {
			value,
			enumerable: true,
			configurable: true,
			writable: true
		});
		else obj[key] = value;
		return obj;
	}
	function searchPhoneNumbersInText() {
		var _normalizeArguments = (0, _normalizeArguments2["default"])(arguments), text = _normalizeArguments.text, options = _normalizeArguments.options, metadata$1 = _normalizeArguments.metadata;
		var matcher = new _PhoneNumberMatcher["default"](text, _objectSpread$4(_objectSpread$4({}, options), {}, { v2: true }), metadata$1);
		return _defineProperty({}, Symbol.iterator, function() {
			return { next: function next() {
				if (matcher.hasNext()) return {
					done: false,
					value: matcher.next()
				};
				return { done: true };
			} };
		});
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeState.js
var require_AsYouTypeState = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeState.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = void 0;
	function _classCallCheck$5(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _defineProperties$5(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass$5(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties$5(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties$5(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	var AsYouTypeState = /* @__PURE__ */ function() {
		function AsYouTypeState$1(_ref) {
			var onCountryChange = _ref.onCountryChange, onCallingCodeChange = _ref.onCallingCodeChange;
			_classCallCheck$5(this, AsYouTypeState$1);
			this.onCountryChange = onCountryChange;
			this.onCallingCodeChange = onCallingCodeChange;
		}
		_createClass$5(AsYouTypeState$1, [
			{
				key: "reset",
				value: function reset(_ref2) {
					var country$1 = _ref2.country, callingCode = _ref2.callingCode;
					this.international = false;
					this.missingPlus = false;
					this.IDDPrefix = void 0;
					this.callingCode = void 0;
					this.digits = "";
					this.resetNationalSignificantNumber();
					this.initCountryAndCallingCode(country$1, callingCode);
				}
			},
			{
				key: "resetNationalSignificantNumber",
				value: function resetNationalSignificantNumber() {
					this.nationalSignificantNumber = this.getNationalDigits();
					this.nationalSignificantNumberMatchesInput = true;
					this.nationalPrefix = void 0;
					this.carrierCode = void 0;
					this.complexPrefixBeforeNationalSignificantNumber = void 0;
				}
			},
			{
				key: "update",
				value: function update(properties) {
					for (var _i$1 = 0, _Object$keys = Object.keys(properties); _i$1 < _Object$keys.length; _i$1++) {
						var key = _Object$keys[_i$1];
						this[key] = properties[key];
					}
				}
			},
			{
				key: "initCountryAndCallingCode",
				value: function initCountryAndCallingCode(country$1, callingCode) {
					this.setCountry(country$1);
					this.setCallingCode(callingCode);
				}
			},
			{
				key: "setCountry",
				value: function setCountry(country$1) {
					this.country = country$1;
					this.onCountryChange(country$1);
				}
			},
			{
				key: "setCallingCode",
				value: function setCallingCode(callingCode) {
					this.callingCode = callingCode;
					this.onCallingCodeChange(callingCode, this.country);
				}
			},
			{
				key: "startInternationalNumber",
				value: function startInternationalNumber(country$1, callingCode) {
					this.international = true;
					this.initCountryAndCallingCode(country$1, callingCode);
				}
			},
			{
				key: "appendDigits",
				value: function appendDigits(nextDigits) {
					this.digits += nextDigits;
				}
			},
			{
				key: "appendNationalSignificantNumberDigits",
				value: function appendNationalSignificantNumberDigits(nextDigits) {
					this.nationalSignificantNumber += nextDigits;
				}
			},
			{
				key: "getNationalDigits",
				value: function getNationalDigits() {
					if (this.international) return this.digits.slice((this.IDDPrefix ? this.IDDPrefix.length : 0) + (this.callingCode ? this.callingCode.length : 0));
					return this.digits;
				}
			},
			{
				key: "getDigitsWithoutInternationalPrefix",
				value: function getDigitsWithoutInternationalPrefix() {
					if (this.international) {
						if (this.IDDPrefix) return this.digits.slice(this.IDDPrefix.length);
					}
					return this.digits;
				}
			}
		]);
		return AsYouTypeState$1;
	}();
	exports["default"] = AsYouTypeState;
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeFormatter.util.js
var require_AsYouTypeFormatter_util = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeFormatter.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.DIGIT_PLACEHOLDER = void 0;
	exports.closeNonPairedParens = closeNonPairedParens;
	exports.countOccurences = countOccurences;
	exports.cutAndStripNonPairedParens = cutAndStripNonPairedParens;
	exports.populateTemplateWithDigits = populateTemplateWithDigits;
	exports.repeat = repeat$1;
	exports.stripNonPairedParens = stripNonPairedParens;
	function _createForOfIteratorHelperLoose$2(o, allowArrayLike) {
		var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
		if (it) return (it = it.call(o)).next.bind(it);
		if (Array.isArray(o) || (it = _unsupportedIterableToArray$7(o)) || allowArrayLike && o && typeof o.length === "number") {
			if (it) o = it;
			var i$1 = 0;
			return function() {
				if (i$1 >= o.length) return { done: true };
				return {
					done: false,
					value: o[i$1++]
				};
			};
		}
		throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$7(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$7(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$7(o, minLen);
	}
	function _arrayLikeToArray$7(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	var DIGIT_PLACEHOLDER = "x";
	exports.DIGIT_PLACEHOLDER = DIGIT_PLACEHOLDER;
	var DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER);
	function countOccurences(symbol, string) {
		var count$1 = 0;
		for (var _iterator = _createForOfIteratorHelperLoose$2(string.split("")), _step; !(_step = _iterator()).done;) {
			var character = _step.value;
			if (character === symbol) count$1++;
		}
		return count$1;
	}
	function repeat$1(string, times) {
		if (times < 1) return "";
		var result$1 = "";
		while (times > 1) {
			if (times & 1) result$1 += string;
			times >>= 1;
			string += string;
		}
		return result$1 + string;
	}
	function cutAndStripNonPairedParens(string, cutBeforeIndex) {
		if (string[cutBeforeIndex] === ")") cutBeforeIndex++;
		return stripNonPairedParens(string.slice(0, cutBeforeIndex));
	}
	function closeNonPairedParens(template, cut_before) {
		var retained_template = template.slice(0, cut_before);
		var opening_braces = countOccurences("(", retained_template);
		var closing_braces = countOccurences(")", retained_template);
		var dangling_braces = opening_braces - closing_braces;
		while (dangling_braces > 0 && cut_before < template.length) {
			if (template[cut_before] === ")") dangling_braces--;
			cut_before++;
		}
		return template.slice(0, cut_before);
	}
	function stripNonPairedParens(string) {
		var dangling_braces = [];
		var i$1 = 0;
		while (i$1 < string.length) {
			if (string[i$1] === "(") dangling_braces.push(i$1);
			else if (string[i$1] === ")") dangling_braces.pop();
			i$1++;
		}
		var start = 0;
		var cleared_string = "";
		dangling_braces.push(string.length);
		for (var _i$1 = 0, _dangling_braces = dangling_braces; _i$1 < _dangling_braces.length; _i$1++) {
			var index = _dangling_braces[_i$1];
			cleared_string += string.slice(start, index);
			start = index + 1;
		}
		return cleared_string;
	}
	function populateTemplateWithDigits(template, position, digits) {
		for (var _iterator2 = _createForOfIteratorHelperLoose$2(digits.split("")), _step2; !(_step2 = _iterator2()).done;) {
			var digit = _step2.value;
			if (template.slice(position + 1).search(DIGIT_PLACEHOLDER_MATCHER) < 0) return;
			position = template.search(DIGIT_PLACEHOLDER_MATCHER);
			template = template.replace(DIGIT_PLACEHOLDER_MATCHER, digit);
		}
		return [template, position];
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeFormatter.complete.js
var require_AsYouTypeFormatter_complete = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeFormatter.complete.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.canFormatCompleteNumber = canFormatCompleteNumber;
	exports["default"] = formatCompleteNumber;
	var _checkNumberLength = _interopRequireDefault$68(require_checkNumberLength());
	var _parseDigits$2 = _interopRequireDefault$68(require_parseDigits());
	var _formatNationalNumberUsingFormat$1 = _interopRequireDefault$68(require_formatNationalNumberUsingFormat());
	function _interopRequireDefault$68(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function formatCompleteNumber(state, format, _ref) {
		var metadata$1 = _ref.metadata, shouldTryNationalPrefixFormattingRule = _ref.shouldTryNationalPrefixFormattingRule, getSeparatorAfterNationalPrefix = _ref.getSeparatorAfterNationalPrefix;
		var matcher = new RegExp("^(?:".concat(format.pattern(), ")$"));
		if (matcher.test(state.nationalSignificantNumber)) return formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(state, format, {
			metadata: metadata$1,
			shouldTryNationalPrefixFormattingRule,
			getSeparatorAfterNationalPrefix
		});
	}
	function canFormatCompleteNumber(nationalSignificantNumber, metadata$1) {
		return (0, _checkNumberLength["default"])(nationalSignificantNumber, metadata$1) === "IS_POSSIBLE";
	}
	function formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(state, format, _ref2) {
		var metadata$1 = _ref2.metadata, shouldTryNationalPrefixFormattingRule = _ref2.shouldTryNationalPrefixFormattingRule, getSeparatorAfterNationalPrefix = _ref2.getSeparatorAfterNationalPrefix;
		var nationalSignificantNumber = state.nationalSignificantNumber, international = state.international, nationalPrefix = state.nationalPrefix, carrierCode = state.carrierCode;
		if (shouldTryNationalPrefixFormattingRule(format)) {
			var formattedNumber = formatNationalNumber(state, format, {
				useNationalPrefixFormattingRule: true,
				getSeparatorAfterNationalPrefix,
				metadata: metadata$1
			});
			if (formattedNumber) return formattedNumber;
		}
		return formatNationalNumber(state, format, {
			useNationalPrefixFormattingRule: false,
			getSeparatorAfterNationalPrefix,
			metadata: metadata$1
		});
	}
	function formatNationalNumber(state, format, _ref3) {
		var metadata$1 = _ref3.metadata, useNationalPrefixFormattingRule = _ref3.useNationalPrefixFormattingRule, getSeparatorAfterNationalPrefix = _ref3.getSeparatorAfterNationalPrefix;
		var formattedNationalNumber = (0, _formatNationalNumberUsingFormat$1["default"])(state.nationalSignificantNumber, format, {
			carrierCode: state.carrierCode,
			useInternationalFormat: state.international,
			withNationalPrefix: useNationalPrefixFormattingRule,
			metadata: metadata$1
		});
		if (!useNationalPrefixFormattingRule) {
			if (state.nationalPrefix) formattedNationalNumber = state.nationalPrefix + getSeparatorAfterNationalPrefix(format) + formattedNationalNumber;
			else if (state.complexPrefixBeforeNationalSignificantNumber) formattedNationalNumber = state.complexPrefixBeforeNationalSignificantNumber + " " + formattedNationalNumber;
		}
		if (isValidFormattedNationalNumber(formattedNationalNumber, state)) return formattedNationalNumber;
	}
	function isValidFormattedNationalNumber(formattedNationalNumber, state) {
		return (0, _parseDigits$2["default"])(formattedNationalNumber) === state.getNationalDigits();
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeFormatter.PatternParser.js
var require_AsYouTypeFormatter_PatternParser = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeFormatter.PatternParser.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = void 0;
	function _classCallCheck$4(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _defineProperties$4(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass$4(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties$4(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties$4(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	var PatternParser = /* @__PURE__ */ function() {
		function PatternParser$1() {
			_classCallCheck$4(this, PatternParser$1);
		}
		_createClass$4(PatternParser$1, [
			{
				key: "parse",
				value: function parse$1(pattern) {
					this.context = [{
						or: true,
						instructions: []
					}];
					this.parsePattern(pattern);
					if (this.context.length !== 1) throw new Error("Non-finalized contexts left when pattern parse ended");
					var _this$context$ = this.context[0], branches = _this$context$.branches, instructions = _this$context$.instructions;
					if (branches) return {
						op: "|",
						args: branches.concat([expandSingleElementArray(instructions)])
					};
					/* istanbul ignore if */
					if (instructions.length === 0) throw new Error("Pattern is required");
					if (instructions.length === 1) return instructions[0];
					return instructions;
				}
			},
			{
				key: "startContext",
				value: function startContext(context$1) {
					this.context.push(context$1);
				}
			},
			{
				key: "endContext",
				value: function endContext() {
					this.context.pop();
				}
			},
			{
				key: "getContext",
				value: function getContext() {
					return this.context[this.context.length - 1];
				}
			},
			{
				key: "parsePattern",
				value: function parsePattern(pattern) {
					if (!pattern) throw new Error("Pattern is required");
					var match = pattern.match(OPERATOR);
					if (!match) {
						if (ILLEGAL_CHARACTER_REGEXP.test(pattern)) throw new Error("Illegal characters found in a pattern: ".concat(pattern));
						this.getContext().instructions = this.getContext().instructions.concat(pattern.split(""));
						return;
					}
					var operator = match[1];
					var before = pattern.slice(0, match.index);
					var rightPart = pattern.slice(match.index + operator.length);
					switch (operator) {
						case "(?:":
							if (before) this.parsePattern(before);
							this.startContext({
								or: true,
								instructions: [],
								branches: []
							});
							break;
						case ")":
							if (!this.getContext().or) throw new Error("\")\" operator must be preceded by \"(?:\" operator");
							if (before) this.parsePattern(before);
							if (this.getContext().instructions.length === 0) throw new Error("No instructions found after \"|\" operator in an \"or\" group");
							var _this$getContext = this.getContext(), branches = _this$getContext.branches;
							branches.push(expandSingleElementArray(this.getContext().instructions));
							this.endContext();
							this.getContext().instructions.push({
								op: "|",
								args: branches
							});
							break;
						case "|":
							if (!this.getContext().or) throw new Error("\"|\" operator can only be used inside \"or\" groups");
							if (before) this.parsePattern(before);
							if (!this.getContext().branches)
 /* istanbul ignore else */
							if (this.context.length === 1) this.getContext().branches = [];
							else throw new Error("\"branches\" not found in an \"or\" group context");
							this.getContext().branches.push(expandSingleElementArray(this.getContext().instructions));
							this.getContext().instructions = [];
							break;
						case "[":
							if (before) this.parsePattern(before);
							this.startContext({ oneOfSet: true });
							break;
						case "]":
							if (!this.getContext().oneOfSet) throw new Error("\"]\" operator must be preceded by \"[\" operator");
							this.endContext();
							this.getContext().instructions.push({
								op: "[]",
								args: parseOneOfSet(before)
							});
							break;
						default: throw new Error("Unknown operator: ".concat(operator));
					}
					if (rightPart) this.parsePattern(rightPart);
				}
			}
		]);
		return PatternParser$1;
	}();
	exports["default"] = PatternParser;
	function parseOneOfSet(pattern) {
		var values = [];
		var i$1 = 0;
		while (i$1 < pattern.length) {
			if (pattern[i$1] === "-") {
				if (i$1 === 0 || i$1 === pattern.length - 1) throw new Error("Couldn't parse a one-of set pattern: ".concat(pattern));
				var prevValue = pattern[i$1 - 1].charCodeAt(0) + 1;
				var nextValue = pattern[i$1 + 1].charCodeAt(0) - 1;
				var value = prevValue;
				while (value <= nextValue) {
					values.push(String.fromCharCode(value));
					value++;
				}
			} else values.push(pattern[i$1]);
			i$1++;
		}
		return values;
	}
	var ILLEGAL_CHARACTER_REGEXP = /[\(\)\[\]\?\:\|]/;
	var OPERATOR = /* @__PURE__ */ new RegExp("(\\||\\(\\?\\:|\\)|\\[|\\])");
	function expandSingleElementArray(array) {
		if (array.length === 1) return array[0];
		return array;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeFormatter.PatternMatcher.js
var require_AsYouTypeFormatter_PatternMatcher = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeFormatter.PatternMatcher.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = void 0;
	var _AsYouTypeFormatterPatternParser = _interopRequireDefault$67(require_AsYouTypeFormatter_PatternParser());
	function _interopRequireDefault$67(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _createForOfIteratorHelperLoose$1(o, allowArrayLike) {
		var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
		if (it) return (it = it.call(o)).next.bind(it);
		if (Array.isArray(o) || (it = _unsupportedIterableToArray$6(o)) || allowArrayLike && o && typeof o.length === "number") {
			if (it) o = it;
			var i$1 = 0;
			return function() {
				if (i$1 >= o.length) return { done: true };
				return {
					done: false,
					value: o[i$1++]
				};
			};
		}
		throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$6(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$6(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$6(o, minLen);
	}
	function _arrayLikeToArray$6(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	function _classCallCheck$3(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _defineProperties$3(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass$3(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties$3(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties$3(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	var PatternMatcher = /* @__PURE__ */ function() {
		function PatternMatcher$1(pattern) {
			_classCallCheck$3(this, PatternMatcher$1);
			this.matchTree = new _AsYouTypeFormatterPatternParser["default"]().parse(pattern);
		}
		_createClass$3(PatternMatcher$1, [{
			key: "match",
			value: function match(string) {
				var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, allowOverflow = _ref.allowOverflow;
				if (!string) throw new Error("String is required");
				var result$1 = _match(string.split(""), this.matchTree, true);
				if (result$1 && result$1.match) delete result$1.matchedChars;
				if (result$1 && result$1.overflow) {
					if (!allowOverflow) return;
				}
				return result$1;
			}
		}]);
		return PatternMatcher$1;
	}();
	/**
	
	* Matches `characters` against a pattern compiled into a `tree`.
	
	* @param  {string[]} characters
	
	* @param  {Tree} tree — A pattern compiled into a `tree`. See the `*.d.ts` file for the description of the `tree` structure.
	
	* @param  {boolean} last — Whether it's the last (rightmost) subtree on its level of the match tree.
	
	* @return {object} See the `*.d.ts` file for the description of the result object.
	
	*/
	exports["default"] = PatternMatcher;
	function _match(characters, tree, last$2) {
		if (typeof tree === "string") {
			var characterString = characters.join("");
			if (tree.indexOf(characterString) === 0) {
				/* istanbul ignore else */
				if (characters.length === tree.length) return {
					match: true,
					matchedChars: characters
				};
				/* istanbul ignore next */
				return { partialMatch: true };
			}
			if (characterString.indexOf(tree) === 0) {
				if (last$2) {
					/* istanbul ignore else */
					if (characters.length > tree.length) return { overflow: true };
				}
				return {
					match: true,
					matchedChars: characters.slice(0, tree.length)
				};
			}
			return;
		}
		if (Array.isArray(tree)) {
			var restCharacters = characters.slice();
			var i$1 = 0;
			while (i$1 < tree.length) {
				var subtree = tree[i$1];
				var result$1 = _match(restCharacters, subtree, last$2 && i$1 === tree.length - 1);
				if (!result$1) return;
				else if (result$1.overflow) return result$1;
				else if (result$1.match) {
					restCharacters = restCharacters.slice(result$1.matchedChars.length);
					if (restCharacters.length === 0) if (i$1 === tree.length - 1) return {
						match: true,
						matchedChars: characters
					};
					else return { partialMatch: true };
				} else if (result$1.partialMatch) return { partialMatch: true };
				else throw new Error("Unsupported match result:\n".concat(JSON.stringify(result$1, null, 2)));
				i$1++;
			}
			/* istanbul ignore if */
			if (last$2) return { overflow: true };
			return {
				match: true,
				matchedChars: characters.slice(0, characters.length - restCharacters.length)
			};
		}
		switch (tree.op) {
			case "|":
				var partialMatch;
				for (var _iterator = _createForOfIteratorHelperLoose$1(tree.args), _step; !(_step = _iterator()).done;) {
					var branch = _step.value;
					var _result = _match(characters, branch, last$2);
					if (_result) if (_result.overflow) return _result;
					else if (_result.match) return {
						match: true,
						matchedChars: _result.matchedChars
					};
					else if (_result.partialMatch) partialMatch = true;
					else throw new Error("Unsupported match result:\n".concat(JSON.stringify(_result, null, 2)));
				}
				if (partialMatch) return { partialMatch: true };
				return;
			case "[]":
				for (var _iterator2 = _createForOfIteratorHelperLoose$1(tree.args), _step2; !(_step2 = _iterator2()).done;) {
					var _char = _step2.value;
					if (characters[0] === _char) {
						if (characters.length === 1) return {
							match: true,
							matchedChars: characters
						};
						if (last$2) return { overflow: true };
						return {
							match: true,
							matchedChars: [_char]
						};
					}
				}
				return;
			default: throw new Error("Unsupported instruction tree: ".concat(tree));
		}
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeFormatter.js
var require_AsYouTypeFormatter = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeFormatter.js"(exports) {
	function _typeof$8(obj) {
		"@babel/helpers - typeof";
		return _typeof$8 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj$1) {
			return typeof obj$1;
		} : function(obj$1) {
			return obj$1 && "function" == typeof Symbol && obj$1.constructor === Symbol && obj$1 !== Symbol.prototype ? "symbol" : typeof obj$1;
		}, _typeof$8(obj);
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	Object.defineProperty(exports, "DIGIT_PLACEHOLDER", {
		enumerable: true,
		get: function get() {
			return _AsYouTypeFormatterUtil.DIGIT_PLACEHOLDER;
		}
	});
	exports["default"] = void 0;
	var _AsYouTypeFormatterUtil = require_AsYouTypeFormatter_util();
	var _AsYouTypeFormatterComplete = _interopRequireWildcard$4(require_AsYouTypeFormatter_complete());
	var _AsYouTypeFormatterPatternMatcher = _interopRequireDefault$66(require_AsYouTypeFormatter_PatternMatcher());
	var _parseDigits$1 = _interopRequireDefault$66(require_parseDigits());
	var _formatNationalNumberUsingFormat = require_formatNationalNumberUsingFormat();
	var _constants$1 = require_constants();
	var _applyInternationalSeparatorStyle = _interopRequireDefault$66(require_applyInternationalSeparatorStyle());
	function _interopRequireDefault$66(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _getRequireWildcardCache$1(nodeInterop) {
		if (typeof WeakMap !== "function") return null;
		var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
		var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
		return (_getRequireWildcardCache$1 = function _getRequireWildcardCache$7(nodeInterop$1) {
			return nodeInterop$1 ? cacheNodeInterop : cacheBabelInterop;
		})(nodeInterop);
	}
	function _interopRequireWildcard$4(obj, nodeInterop) {
		if (!nodeInterop && obj && obj.__esModule) return obj;
		if (obj === null || _typeof$8(obj) !== "object" && typeof obj !== "function") return { "default": obj };
		var cache = _getRequireWildcardCache$1(nodeInterop);
		if (cache && cache.has(obj)) return cache.get(obj);
		var newObj = {};
		var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
		for (var key in obj) if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
			var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
			if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
			else newObj[key] = obj[key];
		}
		newObj["default"] = obj;
		if (cache) cache.set(obj, newObj);
		return newObj;
	}
	function _createForOfIteratorHelperLoose(o, allowArrayLike) {
		var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
		if (it) return (it = it.call(o)).next.bind(it);
		if (Array.isArray(o) || (it = _unsupportedIterableToArray$5(o)) || allowArrayLike && o && typeof o.length === "number") {
			if (it) o = it;
			var i$1 = 0;
			return function() {
				if (i$1 >= o.length) return { done: true };
				return {
					done: false,
					value: o[i$1++]
				};
			};
		}
		throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$5(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$5(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$5(o, minLen);
	}
	function _arrayLikeToArray$5(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	function _classCallCheck$2(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _defineProperties$2(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass$2(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties$2(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties$2(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	var DUMMY_DIGIT = "9";
	var LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15;
	var LONGEST_DUMMY_PHONE_NUMBER = (0, _AsYouTypeFormatterUtil.repeat)(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH);
	var NATIONAL_PREFIX_SEPARATORS_PATTERN = /[- ]/;
	var SUPPORT_LEGACY_FORMATTING_PATTERNS = true;
	var CREATE_CHARACTER_CLASS_PATTERN = SUPPORT_LEGACY_FORMATTING_PATTERNS && function() {
		return new RegExp("\\[([^\\[\\]])*\\]", "g");
	};
	var CREATE_STANDALONE_DIGIT_PATTERN = SUPPORT_LEGACY_FORMATTING_PATTERNS && function() {
		return /\d(?=[^,}][^,}])/g;
	};
	var NON_ALTERING_FORMAT_REG_EXP = /* @__PURE__ */ new RegExp("[" + _constants$1.VALID_PUNCTUATION + "]*\\$1[" + _constants$1.VALID_PUNCTUATION + "]*(\\$\\d[" + _constants$1.VALID_PUNCTUATION + "]*)*$");
	var MIN_LEADING_DIGITS_LENGTH = 3;
	var AsYouTypeFormatter = /* @__PURE__ */ function() {
		function AsYouTypeFormatter$1(_ref) {
			var state = _ref.state, metadata$1 = _ref.metadata;
			_classCallCheck$2(this, AsYouTypeFormatter$1);
			this.metadata = metadata$1;
			this.resetFormat();
		}
		_createClass$2(AsYouTypeFormatter$1, [
			{
				key: "resetFormat",
				value: function resetFormat() {
					this.chosenFormat = void 0;
					this.template = void 0;
					this.nationalNumberTemplate = void 0;
					this.populatedNationalNumberTemplate = void 0;
					this.populatedNationalNumberTemplatePosition = -1;
				}
			},
			{
				key: "reset",
				value: function reset(numberingPlan, state) {
					this.resetFormat();
					if (numberingPlan) {
						this.isNANP = numberingPlan.callingCode() === "1";
						this.matchingFormats = numberingPlan.formats();
						if (state.nationalSignificantNumber) this.narrowDownMatchingFormats(state);
					} else {
						this.isNANP = void 0;
						this.matchingFormats = [];
					}
				}
			},
			{
				key: "format",
				value: function format(nextDigits, state) {
					var _this = this;
					if ((0, _AsYouTypeFormatterComplete.canFormatCompleteNumber)(state.nationalSignificantNumber, this.metadata)) for (var _iterator = _createForOfIteratorHelperLoose(this.matchingFormats), _step; !(_step = _iterator()).done;) {
						var format$1 = _step.value;
						var formattedCompleteNumber = (0, _AsYouTypeFormatterComplete["default"])(state, format$1, {
							metadata: this.metadata,
							shouldTryNationalPrefixFormattingRule: function shouldTryNationalPrefixFormattingRule(format$2) {
								return _this.shouldTryNationalPrefixFormattingRule(format$2, {
									international: state.international,
									nationalPrefix: state.nationalPrefix
								});
							},
							getSeparatorAfterNationalPrefix: function getSeparatorAfterNationalPrefix(format$2) {
								return _this.getSeparatorAfterNationalPrefix(format$2);
							}
						});
						if (formattedCompleteNumber) {
							this.resetFormat();
							this.chosenFormat = format$1;
							this.setNationalNumberTemplate(formattedCompleteNumber.replace(/\d/g, _AsYouTypeFormatterUtil.DIGIT_PLACEHOLDER), state);
							this.populatedNationalNumberTemplate = formattedCompleteNumber;
							this.populatedNationalNumberTemplatePosition = this.template.lastIndexOf(_AsYouTypeFormatterUtil.DIGIT_PLACEHOLDER);
							return formattedCompleteNumber;
						}
					}
					return this.formatNationalNumberWithNextDigits(nextDigits, state);
				}
			},
			{
				key: "formatNationalNumberWithNextDigits",
				value: function formatNationalNumberWithNextDigits(nextDigits, state) {
					var previouslyChosenFormat = this.chosenFormat;
					var newlyChosenFormat = this.chooseFormat(state);
					if (newlyChosenFormat) if (newlyChosenFormat === previouslyChosenFormat) return this.formatNextNationalNumberDigits(nextDigits);
					else return this.formatNextNationalNumberDigits(state.getNationalDigits());
				}
			},
			{
				key: "narrowDownMatchingFormats",
				value: function narrowDownMatchingFormats(_ref2) {
					var _this2 = this;
					var nationalSignificantNumber = _ref2.nationalSignificantNumber, nationalPrefix = _ref2.nationalPrefix, international = _ref2.international;
					var leadingDigits = nationalSignificantNumber;
					var leadingDigitsPatternIndex = leadingDigits.length - MIN_LEADING_DIGITS_LENGTH;
					if (leadingDigitsPatternIndex < 0) leadingDigitsPatternIndex = 0;
					this.matchingFormats = this.matchingFormats.filter(function(format) {
						return _this2.formatSuits(format, international, nationalPrefix) && _this2.formatMatches(format, leadingDigits, leadingDigitsPatternIndex);
					});
					if (this.chosenFormat && this.matchingFormats.indexOf(this.chosenFormat) === -1) this.resetFormat();
				}
			},
			{
				key: "formatSuits",
				value: function formatSuits(format, international, nationalPrefix) {
					if (nationalPrefix && !format.usesNationalPrefix() && !format.nationalPrefixIsOptionalWhenFormattingInNationalFormat()) return false;
					if (!international && !nationalPrefix && format.nationalPrefixIsMandatoryWhenFormattingInNationalFormat()) return false;
					return true;
				}
			},
			{
				key: "formatMatches",
				value: function formatMatches(format, leadingDigits, leadingDigitsPatternIndex) {
					var leadingDigitsPatternsCount = format.leadingDigitsPatterns().length;
					if (leadingDigitsPatternsCount === 0) return true;
					leadingDigitsPatternIndex = Math.min(leadingDigitsPatternIndex, leadingDigitsPatternsCount - 1);
					var leadingDigitsPattern = format.leadingDigitsPatterns()[leadingDigitsPatternIndex];
					if (leadingDigits.length < MIN_LEADING_DIGITS_LENGTH) try {
						return new _AsYouTypeFormatterPatternMatcher["default"](leadingDigitsPattern).match(leadingDigits, { allowOverflow: true }) !== void 0;
					} catch (error) {
						console.error(error);
						return true;
					}
					return new RegExp("^(".concat(leadingDigitsPattern, ")")).test(leadingDigits);
				}
			},
			{
				key: "getFormatFormat",
				value: function getFormatFormat(format, international) {
					return international ? format.internationalFormat() : format.format();
				}
			},
			{
				key: "chooseFormat",
				value: function chooseFormat(state) {
					var _this3 = this;
					var _loop = function _loop$1() {
						var format = _step2.value;
						if (_this3.chosenFormat === format) return "break";
						/* istanbul ignore if */
						if (!NON_ALTERING_FORMAT_REG_EXP.test(_this3.getFormatFormat(format, state.international))) return "continue";
						if (!_this3.createTemplateForFormat(format, state)) {
							_this3.matchingFormats = _this3.matchingFormats.filter(function(_) {
								return _ !== format;
							});
							return "continue";
						}
						_this3.chosenFormat = format;
						return "break";
					};
					/* istanbul ignore next */
					for (var _iterator2 = _createForOfIteratorHelperLoose(this.matchingFormats.slice()), _step2; !(_step2 = _iterator2()).done;) {
						var _ret = _loop();
						if (_ret === "break") break;
						if (_ret === "continue") continue;
					}
					if (!this.chosenFormat) this.resetFormat();
					return this.chosenFormat;
				}
			},
			{
				key: "createTemplateForFormat",
				value: function createTemplateForFormat(format, state) {
					/* istanbul ignore if */
					if (SUPPORT_LEGACY_FORMATTING_PATTERNS && format.pattern().indexOf("|") >= 0) return;
					var template = this.getTemplateForFormat(format, state);
					if (template) {
						this.setNationalNumberTemplate(template, state);
						return true;
					}
				}
			},
			{
				key: "getSeparatorAfterNationalPrefix",
				value: function getSeparatorAfterNationalPrefix(format) {
					if (this.isNANP) return " ";
					if (format && format.nationalPrefixFormattingRule() && NATIONAL_PREFIX_SEPARATORS_PATTERN.test(format.nationalPrefixFormattingRule())) return " ";
					return "";
				}
			},
			{
				key: "getInternationalPrefixBeforeCountryCallingCode",
				value: function getInternationalPrefixBeforeCountryCallingCode(_ref3, options) {
					var IDDPrefix = _ref3.IDDPrefix, missingPlus = _ref3.missingPlus;
					if (IDDPrefix) return options && options.spacing === false ? IDDPrefix : IDDPrefix + " ";
					if (missingPlus) return "";
					return "+";
				}
			},
			{
				key: "getTemplate",
				value: function getTemplate(state) {
					if (!this.template) return;
					var index = -1;
					var i$1 = 0;
					var internationalPrefix = state.international ? this.getInternationalPrefixBeforeCountryCallingCode(state, { spacing: false }) : "";
					while (i$1 < internationalPrefix.length + state.getDigitsWithoutInternationalPrefix().length) {
						index = this.template.indexOf(_AsYouTypeFormatterUtil.DIGIT_PLACEHOLDER, index + 1);
						i$1++;
					}
					return (0, _AsYouTypeFormatterUtil.cutAndStripNonPairedParens)(this.template, index + 1);
				}
			},
			{
				key: "setNationalNumberTemplate",
				value: function setNationalNumberTemplate(template, state) {
					this.nationalNumberTemplate = template;
					this.populatedNationalNumberTemplate = template;
					this.populatedNationalNumberTemplatePosition = -1;
					if (state.international) this.template = this.getInternationalPrefixBeforeCountryCallingCode(state).replace(/[\d\+]/g, _AsYouTypeFormatterUtil.DIGIT_PLACEHOLDER) + (0, _AsYouTypeFormatterUtil.repeat)(_AsYouTypeFormatterUtil.DIGIT_PLACEHOLDER, state.callingCode.length) + " " + template;
					else this.template = template;
				}
			},
			{
				key: "getTemplateForFormat",
				value: function getTemplateForFormat(format, _ref4) {
					var nationalSignificantNumber = _ref4.nationalSignificantNumber, international = _ref4.international, nationalPrefix = _ref4.nationalPrefix, complexPrefixBeforeNationalSignificantNumber = _ref4.complexPrefixBeforeNationalSignificantNumber;
					var pattern = format.pattern();
					/* istanbul ignore else */
					if (SUPPORT_LEGACY_FORMATTING_PATTERNS) pattern = pattern.replace(CREATE_CHARACTER_CLASS_PATTERN(), "\\d").replace(CREATE_STANDALONE_DIGIT_PATTERN(), "\\d");
					var digits = LONGEST_DUMMY_PHONE_NUMBER.match(pattern)[0];
					if (nationalSignificantNumber.length > digits.length) return;
					var strictPattern = /* @__PURE__ */ new RegExp("^" + pattern + "$");
					var nationalNumberDummyDigits = nationalSignificantNumber.replace(/\d/g, DUMMY_DIGIT);
					if (strictPattern.test(nationalNumberDummyDigits)) digits = nationalNumberDummyDigits;
					var numberFormat = this.getFormatFormat(format, international);
					var nationalPrefixIncludedInTemplate;
					if (this.shouldTryNationalPrefixFormattingRule(format, {
						international,
						nationalPrefix
					})) {
						var numberFormatWithNationalPrefix = numberFormat.replace(_formatNationalNumberUsingFormat.FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule());
						/* istanbul ignore else */
						if ((0, _parseDigits$1["default"])(format.nationalPrefixFormattingRule()) === (nationalPrefix || "") + (0, _parseDigits$1["default"])("$1")) {
							numberFormat = numberFormatWithNationalPrefix;
							nationalPrefixIncludedInTemplate = true;
							if (nationalPrefix) {
								var i$1 = nationalPrefix.length;
								while (i$1 > 0) {
									numberFormat = numberFormat.replace(/\d/, _AsYouTypeFormatterUtil.DIGIT_PLACEHOLDER);
									i$1--;
								}
							}
						}
					}
					var template = digits.replace(new RegExp(pattern), numberFormat).replace(new RegExp(DUMMY_DIGIT, "g"), _AsYouTypeFormatterUtil.DIGIT_PLACEHOLDER);
					if (!nationalPrefixIncludedInTemplate) {
						if (complexPrefixBeforeNationalSignificantNumber) template = (0, _AsYouTypeFormatterUtil.repeat)(_AsYouTypeFormatterUtil.DIGIT_PLACEHOLDER, complexPrefixBeforeNationalSignificantNumber.length) + " " + template;
						else if (nationalPrefix) template = (0, _AsYouTypeFormatterUtil.repeat)(_AsYouTypeFormatterUtil.DIGIT_PLACEHOLDER, nationalPrefix.length) + this.getSeparatorAfterNationalPrefix(format) + template;
					}
					if (international) template = (0, _applyInternationalSeparatorStyle["default"])(template);
					return template;
				}
			},
			{
				key: "formatNextNationalNumberDigits",
				value: function formatNextNationalNumberDigits(digits) {
					var result$1 = (0, _AsYouTypeFormatterUtil.populateTemplateWithDigits)(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition, digits);
					if (!result$1) {
						this.resetFormat();
						return;
					}
					this.populatedNationalNumberTemplate = result$1[0];
					this.populatedNationalNumberTemplatePosition = result$1[1];
					return (0, _AsYouTypeFormatterUtil.cutAndStripNonPairedParens)(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition + 1);
				}
			},
			{
				key: "shouldTryNationalPrefixFormattingRule",
				value: function shouldTryNationalPrefixFormattingRule(format, _ref5) {
					var international = _ref5.international, nationalPrefix = _ref5.nationalPrefix;
					if (format.nationalPrefixFormattingRule()) {
						var usesNationalPrefix = format.usesNationalPrefix();
						if (usesNationalPrefix && nationalPrefix || !usesNationalPrefix && !international) return true;
					}
				}
			}
		]);
		return AsYouTypeFormatter$1;
	}();
	exports["default"] = AsYouTypeFormatter;
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeParser.js
var require_AsYouTypeParser = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouTypeParser.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = void 0;
	exports.extractFormattedDigitsAndPlus = extractFormattedDigitsAndPlus;
	var _extractCountryCallingCode2 = _interopRequireDefault$65(require_extractCountryCallingCode());
	var _extractCountryCallingCodeFromInternationalNumberWithoutPlusSign = _interopRequireDefault$65(require_extractCountryCallingCodeFromInternationalNumberWithoutPlusSign());
	var _extractNationalNumberFromPossiblyIncompleteNumber = _interopRequireDefault$65(require_extractNationalNumberFromPossiblyIncompleteNumber());
	var _stripIddPrefix = _interopRequireDefault$65(require_stripIddPrefix());
	var _parseDigits = _interopRequireDefault$65(require_parseDigits());
	var _constants = require_constants();
	function _interopRequireDefault$65(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _slicedToArray$3(arr, i$1) {
		return _arrayWithHoles$3(arr) || _iterableToArrayLimit$3(arr, i$1) || _unsupportedIterableToArray$4(arr, i$1) || _nonIterableRest$3();
	}
	function _nonIterableRest$3() {
		throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$4(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$4(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen);
	}
	function _arrayLikeToArray$4(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	function _iterableToArrayLimit$3(arr, i$1) {
		var _i$1 = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
		if (_i$1 == null) return;
		var _arr = [];
		var _n = true;
		var _d = false;
		var _s, _e;
		try {
			for (_i$1 = _i$1.call(arr); !(_n = (_s = _i$1.next()).done); _n = true) {
				_arr.push(_s.value);
				if (i$1 && _arr.length === i$1) break;
			}
		} catch (err) {
			_d = true;
			_e = err;
		} finally {
			try {
				if (!_n && _i$1["return"] != null) _i$1["return"]();
			} finally {
				if (_d) throw _e;
			}
		}
		return _arr;
	}
	function _arrayWithHoles$3(arr) {
		if (Array.isArray(arr)) return arr;
	}
	function _classCallCheck$1(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _defineProperties$1(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass$1(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties$1(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties$1(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	var VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART = "[" + _constants.VALID_PUNCTUATION + _constants.VALID_DIGITS + "]+";
	var VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN = new RegExp("^" + VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART + "$", "i");
	var VALID_FORMATTED_PHONE_NUMBER_PART = "(?:[" + _constants.PLUS_CHARS + "][" + _constants.VALID_PUNCTUATION + _constants.VALID_DIGITS + "]*|[" + _constants.VALID_PUNCTUATION + _constants.VALID_DIGITS + "]+)";
	var AFTER_PHONE_NUMBER_DIGITS_END_PATTERN = /* @__PURE__ */ new RegExp("[^" + _constants.VALID_PUNCTUATION + _constants.VALID_DIGITS + "]+.*$");
	var COMPLEX_NATIONAL_PREFIX = /[^\d\[\]]/;
	var AsYouTypeParser = /* @__PURE__ */ function() {
		function AsYouTypeParser$1(_ref) {
			var defaultCountry = _ref.defaultCountry, defaultCallingCode = _ref.defaultCallingCode, metadata$1 = _ref.metadata, onNationalSignificantNumberChange = _ref.onNationalSignificantNumberChange;
			_classCallCheck$1(this, AsYouTypeParser$1);
			this.defaultCountry = defaultCountry;
			this.defaultCallingCode = defaultCallingCode;
			this.metadata = metadata$1;
			this.onNationalSignificantNumberChange = onNationalSignificantNumberChange;
		}
		_createClass$1(AsYouTypeParser$1, [
			{
				key: "input",
				value: function input(text, state) {
					var _extractFormattedDigi = extractFormattedDigitsAndPlus(text), _extractFormattedDigi2 = _slicedToArray$3(_extractFormattedDigi, 2), formattedDigits = _extractFormattedDigi2[0], hasPlus = _extractFormattedDigi2[1];
					var digits = (0, _parseDigits["default"])(formattedDigits);
					var justLeadingPlus;
					if (hasPlus) {
						if (!state.digits) {
							state.startInternationalNumber();
							if (!digits) justLeadingPlus = true;
						}
					}
					if (digits) this.inputDigits(digits, state);
					return {
						digits,
						justLeadingPlus
					};
				}
			},
			{
				key: "inputDigits",
				value: function inputDigits(nextDigits, state) {
					var digits = state.digits;
					var hasReceivedThreeLeadingDigits = digits.length < 3 && digits.length + nextDigits.length >= 3;
					state.appendDigits(nextDigits);
					if (hasReceivedThreeLeadingDigits) this.extractIddPrefix(state);
					if (this.isWaitingForCountryCallingCode(state)) {
						if (!this.extractCountryCallingCode(state)) return;
					} else state.appendNationalSignificantNumberDigits(nextDigits);
					if (!state.international) {
						if (!this.hasExtractedNationalSignificantNumber) this.extractNationalSignificantNumber(state.getNationalDigits(), function(stateUpdate) {
							return state.update(stateUpdate);
						});
					}
				}
			},
			{
				key: "isWaitingForCountryCallingCode",
				value: function isWaitingForCountryCallingCode(_ref2) {
					var international = _ref2.international, callingCode = _ref2.callingCode;
					return international && !callingCode;
				}
			},
			{
				key: "extractCountryCallingCode",
				value: function extractCountryCallingCode$1(state) {
					var _extractCountryCallin = (0, _extractCountryCallingCode2["default"])("+" + state.getDigitsWithoutInternationalPrefix(), this.defaultCountry, this.defaultCallingCode, this.metadata.metadata), countryCallingCode = _extractCountryCallin.countryCallingCode, number = _extractCountryCallin.number;
					if (countryCallingCode) {
						state.setCallingCode(countryCallingCode);
						state.update({ nationalSignificantNumber: number });
						return true;
					}
				}
			},
			{
				key: "reset",
				value: function reset(numberingPlan) {
					if (numberingPlan) {
						this.hasSelectedNumberingPlan = true;
						var nationalPrefixForParsing = numberingPlan._nationalPrefixForParsing();
						this.couldPossiblyExtractAnotherNationalSignificantNumber = nationalPrefixForParsing && COMPLEX_NATIONAL_PREFIX.test(nationalPrefixForParsing);
					} else {
						this.hasSelectedNumberingPlan = void 0;
						this.couldPossiblyExtractAnotherNationalSignificantNumber = void 0;
					}
				}
			},
			{
				key: "extractNationalSignificantNumber",
				value: function extractNationalSignificantNumber(nationalDigits, setState) {
					if (!this.hasSelectedNumberingPlan) return;
					var _extractNationalNumbe = (0, _extractNationalNumberFromPossiblyIncompleteNumber["default"])(nationalDigits, this.metadata), nationalPrefix = _extractNationalNumbe.nationalPrefix, nationalNumber = _extractNationalNumbe.nationalNumber, carrierCode = _extractNationalNumbe.carrierCode;
					if (nationalNumber === nationalDigits) return;
					this.onExtractedNationalNumber(nationalPrefix, carrierCode, nationalNumber, nationalDigits, setState);
					return true;
				}
			},
			{
				key: "extractAnotherNationalSignificantNumber",
				value: function extractAnotherNationalSignificantNumber(nationalDigits, prevNationalSignificantNumber, setState) {
					if (!this.hasExtractedNationalSignificantNumber) return this.extractNationalSignificantNumber(nationalDigits, setState);
					if (!this.couldPossiblyExtractAnotherNationalSignificantNumber) return;
					var _extractNationalNumbe2 = (0, _extractNationalNumberFromPossiblyIncompleteNumber["default"])(nationalDigits, this.metadata), nationalPrefix = _extractNationalNumbe2.nationalPrefix, nationalNumber = _extractNationalNumbe2.nationalNumber, carrierCode = _extractNationalNumbe2.carrierCode;
					/* istanbul ignore if */
					if (nationalNumber === prevNationalSignificantNumber) return;
					this.onExtractedNationalNumber(nationalPrefix, carrierCode, nationalNumber, nationalDigits, setState);
					return true;
				}
			},
			{
				key: "onExtractedNationalNumber",
				value: function onExtractedNationalNumber(nationalPrefix, carrierCode, nationalSignificantNumber, nationalDigits, setState) {
					var complexPrefixBeforeNationalSignificantNumber;
					var nationalSignificantNumberMatchesInput;
					var nationalSignificantNumberIndex = nationalDigits.lastIndexOf(nationalSignificantNumber);
					if (nationalSignificantNumberIndex >= 0 && nationalSignificantNumberIndex === nationalDigits.length - nationalSignificantNumber.length) {
						nationalSignificantNumberMatchesInput = true;
						var prefixBeforeNationalNumber = nationalDigits.slice(0, nationalSignificantNumberIndex);
						if (prefixBeforeNationalNumber !== nationalPrefix) complexPrefixBeforeNationalSignificantNumber = prefixBeforeNationalNumber;
					}
					setState({
						nationalPrefix,
						carrierCode,
						nationalSignificantNumber,
						nationalSignificantNumberMatchesInput,
						complexPrefixBeforeNationalSignificantNumber
					});
					this.hasExtractedNationalSignificantNumber = true;
					this.onNationalSignificantNumberChange();
				}
			},
			{
				key: "reExtractNationalSignificantNumber",
				value: function reExtractNationalSignificantNumber(state) {
					if (this.extractAnotherNationalSignificantNumber(state.getNationalDigits(), state.nationalSignificantNumber, function(stateUpdate) {
						return state.update(stateUpdate);
					})) return true;
					if (this.extractIddPrefix(state)) {
						this.extractCallingCodeAndNationalSignificantNumber(state);
						return true;
					}
					if (this.fixMissingPlus(state)) {
						this.extractCallingCodeAndNationalSignificantNumber(state);
						return true;
					}
				}
			},
			{
				key: "extractIddPrefix",
				value: function extractIddPrefix(state) {
					var international = state.international, IDDPrefix = state.IDDPrefix, digits = state.digits, nationalSignificantNumber = state.nationalSignificantNumber;
					if (international || IDDPrefix) return;
					var numberWithoutIDD = (0, _stripIddPrefix["default"])(digits, this.defaultCountry, this.defaultCallingCode, this.metadata.metadata);
					if (numberWithoutIDD !== void 0 && numberWithoutIDD !== digits) {
						state.update({ IDDPrefix: digits.slice(0, digits.length - numberWithoutIDD.length) });
						this.startInternationalNumber(state, {
							country: void 0,
							callingCode: void 0
						});
						return true;
					}
				}
			},
			{
				key: "fixMissingPlus",
				value: function fixMissingPlus(state) {
					if (!state.international) {
						var _extractCountryCallin2 = (0, _extractCountryCallingCodeFromInternationalNumberWithoutPlusSign["default"])(state.digits, this.defaultCountry, this.defaultCallingCode, this.metadata.metadata), newCallingCode = _extractCountryCallin2.countryCallingCode, number = _extractCountryCallin2.number;
						if (newCallingCode) {
							state.update({ missingPlus: true });
							this.startInternationalNumber(state, {
								country: state.country,
								callingCode: newCallingCode
							});
							return true;
						}
					}
				}
			},
			{
				key: "startInternationalNumber",
				value: function startInternationalNumber(state, _ref3) {
					var country$1 = _ref3.country, callingCode = _ref3.callingCode;
					state.startInternationalNumber(country$1, callingCode);
					if (state.nationalSignificantNumber) {
						state.resetNationalSignificantNumber();
						this.onNationalSignificantNumberChange();
						this.hasExtractedNationalSignificantNumber = void 0;
					}
				}
			},
			{
				key: "extractCallingCodeAndNationalSignificantNumber",
				value: function extractCallingCodeAndNationalSignificantNumber(state) {
					if (this.extractCountryCallingCode(state)) this.extractNationalSignificantNumber(state.getNationalDigits(), function(stateUpdate) {
						return state.update(stateUpdate);
					});
				}
			}
		]);
		return AsYouTypeParser$1;
	}();
	/**
	
	* Extracts formatted phone number from text (if there's any).
	
	* @param  {string} text
	
	* @return {string} [formattedPhoneNumber]
	
	*/
	exports["default"] = AsYouTypeParser;
	function extractFormattedPhoneNumber(text) {
		var startsAt = text.search(VALID_FORMATTED_PHONE_NUMBER_PART);
		if (startsAt < 0) return;
		text = text.slice(startsAt);
		var hasPlus;
		if (text[0] === "+") {
			hasPlus = true;
			text = text.slice(1);
		}
		text = text.replace(AFTER_PHONE_NUMBER_DIGITS_END_PATTERN, "");
		if (hasPlus) text = "+" + text;
		return text;
	}
	/**
	
	* Extracts formatted phone number digits (and a `+`) from text (if there're any).
	
	* @param  {string} text
	
	* @return {any[]}
	
	*/
	function _extractFormattedDigitsAndPlus(text) {
		var extractedNumber = extractFormattedPhoneNumber(text) || "";
		if (extractedNumber[0] === "+") return [extractedNumber.slice(1), true];
		return [extractedNumber];
	}
	/**
	
	* Extracts formatted phone number digits (and a `+`) from text (if there're any).
	
	* @param  {string} text
	
	* @return {any[]}
	
	*/
	function extractFormattedDigitsAndPlus(text) {
		var _extractFormattedDigi3 = _extractFormattedDigitsAndPlus(text), _extractFormattedDigi4 = _slicedToArray$3(_extractFormattedDigi3, 2), formattedDigits = _extractFormattedDigi4[0], hasPlus = _extractFormattedDigi4[1];
		if (!VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN.test(formattedDigits)) formattedDigits = "";
		return [formattedDigits, hasPlus];
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouType.js
var require_AsYouType = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/AsYouType.js"(exports) {
	function _typeof$7(obj) {
		"@babel/helpers - typeof";
		return _typeof$7 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj$1) {
			return typeof obj$1;
		} : function(obj$1) {
			return obj$1 && "function" == typeof Symbol && obj$1.constructor === Symbol && obj$1 !== Symbol.prototype ? "symbol" : typeof obj$1;
		}, _typeof$7(obj);
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = void 0;
	var _metadata$1 = _interopRequireDefault$64(require_metadata());
	var _PhoneNumber$1 = _interopRequireDefault$64(require_PhoneNumber());
	var _AsYouTypeState = _interopRequireDefault$64(require_AsYouTypeState());
	var _AsYouTypeFormatter = _interopRequireWildcard$3(require_AsYouTypeFormatter());
	var _AsYouTypeParser = _interopRequireWildcard$3(require_AsYouTypeParser());
	var _getCountryByCallingCode = _interopRequireDefault$64(require_getCountryByCallingCode());
	var _getCountryByNationalNumber = _interopRequireDefault$64(require_getCountryByNationalNumber());
	var _isObject = _interopRequireDefault$64(require_isObject());
	function _getRequireWildcardCache(nodeInterop) {
		if (typeof WeakMap !== "function") return null;
		var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
		var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
		return (_getRequireWildcardCache = function _getRequireWildcardCache$7(nodeInterop$1) {
			return nodeInterop$1 ? cacheNodeInterop : cacheBabelInterop;
		})(nodeInterop);
	}
	function _interopRequireWildcard$3(obj, nodeInterop) {
		if (!nodeInterop && obj && obj.__esModule) return obj;
		if (obj === null || _typeof$7(obj) !== "object" && typeof obj !== "function") return { "default": obj };
		var cache = _getRequireWildcardCache(nodeInterop);
		if (cache && cache.has(obj)) return cache.get(obj);
		var newObj = {};
		var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
		for (var key in obj) if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
			var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
			if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
			else newObj[key] = obj[key];
		}
		newObj["default"] = obj;
		if (cache) cache.set(obj, newObj);
		return newObj;
	}
	function _interopRequireDefault$64(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function _slicedToArray$2(arr, i$1) {
		return _arrayWithHoles$2(arr) || _iterableToArrayLimit$2(arr, i$1) || _unsupportedIterableToArray$3(arr, i$1) || _nonIterableRest$2();
	}
	function _nonIterableRest$2() {
		throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$3(o, minLen) {
		if (!o) return;
		if (typeof o === "string") return _arrayLikeToArray$3(o, minLen);
		var n = Object.prototype.toString.call(o).slice(8, -1);
		if (n === "Object" && o.constructor) n = o.constructor.name;
		if (n === "Map" || n === "Set") return Array.from(o);
		if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen);
	}
	function _arrayLikeToArray$3(arr, len) {
		if (len == null || len > arr.length) len = arr.length;
		for (var i$1 = 0, arr2 = new Array(len); i$1 < len; i$1++) arr2[i$1] = arr[i$1];
		return arr2;
	}
	function _iterableToArrayLimit$2(arr, i$1) {
		var _i$1 = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
		if (_i$1 == null) return;
		var _arr = [];
		var _n = true;
		var _d = false;
		var _s, _e;
		try {
			for (_i$1 = _i$1.call(arr); !(_n = (_s = _i$1.next()).done); _n = true) {
				_arr.push(_s.value);
				if (i$1 && _arr.length === i$1) break;
			}
		} catch (err) {
			_d = true;
			_e = err;
		} finally {
			try {
				if (!_n && _i$1["return"] != null) _i$1["return"]();
			} finally {
				if (_d) throw _e;
			}
		}
		return _arr;
	}
	function _arrayWithHoles$2(arr) {
		if (Array.isArray(arr)) return arr;
	}
	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
	}
	function _defineProperties(target, props) {
		for (var i$1 = 0; i$1 < props.length; i$1++) {
			var descriptor = props[i$1];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps);
		if (staticProps) _defineProperties(Constructor, staticProps);
		Object.defineProperty(Constructor, "prototype", { writable: false });
		return Constructor;
	}
	var USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;
	var AsYouType = /* @__PURE__ */ function() {
		/**
		
		* @param {(string|object)?} [optionsOrDefaultCountry] - The default country used for parsing non-international phone numbers. Can also be an `options` object.
		
		* @param {Object} metadata
		
		*/
		function AsYouType$1(optionsOrDefaultCountry, metadata$1) {
			_classCallCheck(this, AsYouType$1);
			this.metadata = new _metadata$1["default"](metadata$1);
			var _this$getCountryAndCa = this.getCountryAndCallingCode(optionsOrDefaultCountry), _this$getCountryAndCa2 = _slicedToArray$2(_this$getCountryAndCa, 2), defaultCountry = _this$getCountryAndCa2[0], defaultCallingCode = _this$getCountryAndCa2[1];
			this.defaultCountry = defaultCountry;
			this.defaultCallingCode = defaultCallingCode;
			this.reset();
		}
		_createClass(AsYouType$1, [
			{
				key: "getCountryAndCallingCode",
				value: function getCountryAndCallingCode(optionsOrDefaultCountry) {
					var defaultCountry;
					var defaultCallingCode;
					if (optionsOrDefaultCountry) if ((0, _isObject["default"])(optionsOrDefaultCountry)) {
						defaultCountry = optionsOrDefaultCountry.defaultCountry;
						defaultCallingCode = optionsOrDefaultCountry.defaultCallingCode;
					} else defaultCountry = optionsOrDefaultCountry;
					if (defaultCountry && !this.metadata.hasCountry(defaultCountry)) defaultCountry = void 0;
					if (defaultCallingCode) {
						/* istanbul ignore if */
						if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {
							if (this.metadata.isNonGeographicCallingCode(defaultCallingCode)) defaultCountry = "001";
						}
					}
					return [defaultCountry, defaultCallingCode];
				}
			},
			{
				key: "input",
				value: function input(text) {
					var _this$parser$input = this.parser.input(text, this.state), digits = _this$parser$input.digits, justLeadingPlus = _this$parser$input.justLeadingPlus;
					if (justLeadingPlus) this.formattedOutput = "+";
					else if (digits) {
						this.determineTheCountryIfNeeded();
						if (this.state.nationalSignificantNumber) this.formatter.narrowDownMatchingFormats(this.state);
						var formattedNationalNumber;
						if (this.metadata.hasSelectedNumberingPlan()) formattedNationalNumber = this.formatter.format(digits, this.state);
						if (formattedNationalNumber === void 0) {
							if (this.parser.reExtractNationalSignificantNumber(this.state)) {
								this.determineTheCountryIfNeeded();
								var nationalDigits = this.state.getNationalDigits();
								if (nationalDigits) formattedNationalNumber = this.formatter.format(nationalDigits, this.state);
							}
						}
						this.formattedOutput = formattedNationalNumber ? this.getFullNumber(formattedNationalNumber) : this.getNonFormattedNumber();
					}
					return this.formattedOutput;
				}
			},
			{
				key: "reset",
				value: function reset() {
					var _this = this;
					this.state = new _AsYouTypeState["default"]({
						onCountryChange: function onCountryChange(country$1) {
							_this.country = country$1;
						},
						onCallingCodeChange: function onCallingCodeChange(callingCode, country$1) {
							_this.metadata.selectNumberingPlan(country$1, callingCode);
							_this.formatter.reset(_this.metadata.numberingPlan, _this.state);
							_this.parser.reset(_this.metadata.numberingPlan);
						}
					});
					this.formatter = new _AsYouTypeFormatter["default"]({
						state: this.state,
						metadata: this.metadata
					});
					this.parser = new _AsYouTypeParser["default"]({
						defaultCountry: this.defaultCountry,
						defaultCallingCode: this.defaultCallingCode,
						metadata: this.metadata,
						state: this.state,
						onNationalSignificantNumberChange: function onNationalSignificantNumberChange() {
							_this.determineTheCountryIfNeeded();
							_this.formatter.reset(_this.metadata.numberingPlan, _this.state);
						}
					});
					this.state.reset({
						country: this.defaultCountry,
						callingCode: this.defaultCallingCode
					});
					this.formattedOutput = "";
					return this;
				}
			},
			{
				key: "isInternational",
				value: function isInternational() {
					return this.state.international;
				}
			},
			{
				key: "getCallingCode",
				value: function getCallingCode() {
					if (this.isInternational()) return this.state.callingCode;
				}
			},
			{
				key: "getCountryCallingCode",
				value: function getCountryCallingCode$1() {
					return this.getCallingCode();
				}
			},
			{
				key: "getCountry",
				value: function getCountry() {
					var digits = this.state.digits;
					if (digits) return this._getCountry();
				}
			},
			{
				key: "_getCountry",
				value: function _getCountry() {
					var country$1 = this.state.country;
					/* istanbul ignore if */
					if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {
						if (country$1 === "001") return;
					}
					return country$1;
				}
			},
			{
				key: "determineTheCountryIfNeeded",
				value: function determineTheCountryIfNeeded() {
					if (!this.state.country || this.isCountryCallingCodeAmbiguous()) this.determineTheCountry();
				}
			},
			{
				key: "getFullNumber",
				value: function getFullNumber(formattedNationalNumber) {
					var _this2 = this;
					if (this.isInternational()) {
						var prefix = function prefix$1(text) {
							return _this2.formatter.getInternationalPrefixBeforeCountryCallingCode(_this2.state, { spacing: text ? true : false }) + text;
						};
						var callingCode = this.state.callingCode;
						if (!callingCode) return prefix("".concat(this.state.getDigitsWithoutInternationalPrefix()));
						if (!formattedNationalNumber) return prefix(callingCode);
						return prefix("".concat(callingCode, " ").concat(formattedNationalNumber));
					}
					return formattedNationalNumber;
				}
			},
			{
				key: "getNonFormattedNationalNumberWithPrefix",
				value: function getNonFormattedNationalNumberWithPrefix() {
					var _this$state = this.state, nationalSignificantNumber = _this$state.nationalSignificantNumber, complexPrefixBeforeNationalSignificantNumber = _this$state.complexPrefixBeforeNationalSignificantNumber, nationalPrefix = _this$state.nationalPrefix;
					var number = nationalSignificantNumber;
					var prefix = complexPrefixBeforeNationalSignificantNumber || nationalPrefix;
					if (prefix) number = prefix + number;
					return number;
				}
			},
			{
				key: "getNonFormattedNumber",
				value: function getNonFormattedNumber() {
					var nationalSignificantNumberMatchesInput = this.state.nationalSignificantNumberMatchesInput;
					return this.getFullNumber(nationalSignificantNumberMatchesInput ? this.getNonFormattedNationalNumberWithPrefix() : this.state.getNationalDigits());
				}
			},
			{
				key: "getNonFormattedTemplate",
				value: function getNonFormattedTemplate() {
					var number = this.getNonFormattedNumber();
					if (number) return number.replace(/[\+\d]/g, _AsYouTypeFormatter.DIGIT_PLACEHOLDER);
				}
			},
			{
				key: "isCountryCallingCodeAmbiguous",
				value: function isCountryCallingCodeAmbiguous() {
					var callingCode = this.state.callingCode;
					var countryCodes = this.metadata.getCountryCodesForCallingCode(callingCode);
					return countryCodes && countryCodes.length > 1;
				}
			},
			{
				key: "determineTheCountry",
				value: function determineTheCountry() {
					this.state.setCountry((0, _getCountryByCallingCode["default"])(this.isInternational() ? this.state.callingCode : this.defaultCallingCode, {
						nationalNumber: this.state.nationalSignificantNumber,
						defaultCountry: this.defaultCountry,
						metadata: this.metadata
					}));
				}
			},
			{
				key: "getNumberValue",
				value: function getNumberValue() {
					var _this$state2 = this.state, digits = _this$state2.digits, callingCode = _this$state2.callingCode, country$1 = _this$state2.country, nationalSignificantNumber = _this$state2.nationalSignificantNumber;
					if (!digits) return;
					if (this.isInternational()) if (callingCode) return "+" + callingCode + nationalSignificantNumber;
					else return "+" + digits;
					else if (country$1 || callingCode) {
						var callingCode_ = country$1 ? this.metadata.countryCallingCode() : callingCode;
						return "+" + callingCode_ + nationalSignificantNumber;
					}
				}
			},
			{
				key: "getNumber",
				value: function getNumber() {
					var _this$state3 = this.state, nationalSignificantNumber = _this$state3.nationalSignificantNumber, carrierCode = _this$state3.carrierCode, callingCode = _this$state3.callingCode;
					var country$1 = this._getCountry();
					if (!nationalSignificantNumber) return;
					if (!country$1 && !callingCode) return;
					if (country$1) {
						if (country$1 === this.defaultCountry) {
							var metadata$1 = new _metadata$1["default"](this.metadata.metadata);
							metadata$1.selectNumberingPlan(country$1);
							var _callingCode = metadata$1.numberingPlan.callingCode();
							var ambiguousCountries = this.metadata.getCountryCodesForCallingCode(_callingCode);
							if (ambiguousCountries.length > 1) {
								var exactCountry = (0, _getCountryByNationalNumber["default"])(nationalSignificantNumber, {
									countries: ambiguousCountries,
									defaultCountry: this.defaultCountry,
									metadata: this.metadata.metadata
								});
								if (exactCountry) country$1 = exactCountry;
							}
						}
					}
					var phoneNumber = new _PhoneNumber$1["default"](country$1 || callingCode, nationalSignificantNumber, this.metadata.metadata);
					if (carrierCode) phoneNumber.carrierCode = carrierCode;
					return phoneNumber;
				}
			},
			{
				key: "isPossible",
				value: function isPossible() {
					var phoneNumber = this.getNumber();
					if (!phoneNumber) return false;
					return phoneNumber.isPossible();
				}
			},
			{
				key: "isValid",
				value: function isValid() {
					var phoneNumber = this.getNumber();
					if (!phoneNumber) return false;
					return phoneNumber.isValid();
				}
			},
			{
				key: "getNationalNumber",
				value: function getNationalNumber() {
					return this.state.nationalSignificantNumber;
				}
			},
			{
				key: "getChars",
				value: function getChars() {
					return (this.state.international ? "+" : "") + this.state.digits;
				}
			},
			{
				key: "getTemplate",
				value: function getTemplate() {
					return this.formatter.getTemplate(this.state) || this.getNonFormattedTemplate() || "";
				}
			}
		]);
		return AsYouType$1;
	}();
	exports["default"] = AsYouType;
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/getCountries.js
var require_getCountries = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/getCountries.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = getCountries;
	var _metadata = _interopRequireDefault$63(require_metadata());
	function _interopRequireDefault$63(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function getCountries(metadata$1) {
		return new _metadata["default"](metadata$1).getCountries();
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/getExampleNumber.js
var require_getExampleNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/getExampleNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = getExampleNumber;
	var _PhoneNumber = _interopRequireDefault$62(require_PhoneNumber());
	function _interopRequireDefault$62(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	function getExampleNumber(country$1, examples, metadata$1) {
		if (examples[country$1]) return new _PhoneNumber["default"](country$1, examples[country$1], metadata$1);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/formatIncompletePhoneNumber.js
var require_formatIncompletePhoneNumber = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/build/formatIncompletePhoneNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports["default"] = formatIncompletePhoneNumber;
	var _AsYouType = _interopRequireDefault$61(require_AsYouType());
	function _interopRequireDefault$61(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}
	/**
	
	* Formats a (possibly incomplete) phone number.
	
	* The phone number can be either in E.164 format
	
	* or in a form of national number digits.
	
	* @param {string} value - A possibly incomplete phone number. Either in E.164 format or in a form of national number digits.
	
	* @param {string|object} [optionsOrDefaultCountry] - A two-letter ("ISO 3166-1 alpha-2") country code, or an object of shape `{ defaultCountry?: string, defaultCallingCode?: string }`.
	
	* @return {string} Formatted (possibly incomplete) phone number.
	
	*/
	function formatIncompletePhoneNumber(value, optionsOrDefaultCountry, metadata$1) {
		if (!metadata$1) {
			metadata$1 = optionsOrDefaultCountry;
			optionsOrDefaultCountry = void 0;
		}
		return new _AsYouType["default"](optionsOrDefaultCountry, metadata$1).input(value);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/core/index.cjs
var require_core = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/core/index.cjs"(exports, module) {
	var parsePhoneNumberFromString$1 = require_parsePhoneNumber().default;
	exports = module.exports = parsePhoneNumberFromString$1;
	exports["default"] = parsePhoneNumberFromString$1;
	exports.PhoneNumber = require_PhoneNumber().default;
	exports.ParseError = require_ParseError().default;
	var parsePhoneNumberWithError$1 = require_parsePhoneNumberWithError().default;
	exports.parsePhoneNumberWithError = parsePhoneNumberWithError$1;
	exports.parsePhoneNumber = parsePhoneNumberWithError$1;
	exports.parsePhoneNumberFromString = parsePhoneNumberFromString$1;
	exports.isValidPhoneNumber = require_isValidPhoneNumber().default;
	exports.isPossiblePhoneNumber = require_isPossiblePhoneNumber().default;
	exports.validatePhoneNumberLength = require_validatePhoneNumberLength().default;
	exports.findNumbers = require_findNumbers().default;
	exports.searchNumbers = require_searchNumbers().default;
	exports.findPhoneNumbersInText = require_findPhoneNumbersInText().default;
	exports.searchPhoneNumbersInText = require_searchPhoneNumbersInText().default;
	exports.PhoneNumberMatcher = require_PhoneNumberMatcher().default;
	exports.AsYouType = require_AsYouType().default;
	exports.Metadata = require_metadata().default;
	exports.isSupportedCountry = require_metadata().isSupportedCountry;
	exports.getCountries = require_getCountries().default;
	exports.getCountryCallingCode = require_metadata().getCountryCallingCode;
	exports.getExtPrefix = require_metadata().getExtPrefix;
	exports.getExampleNumber = require_getExampleNumber().default;
	exports.formatIncompletePhoneNumber = require_formatIncompletePhoneNumber().default;
	exports.parseIncompletePhoneNumber = require_parseIncompletePhoneNumber().default;
	exports.parsePhoneNumberCharacter = require_parseIncompletePhoneNumber().parsePhoneNumberCharacter;
	exports.parseDigits = require_parseDigits().default;
	exports.DIGIT_PLACEHOLDER = require_AsYouTypeFormatter().DIGIT_PLACEHOLDER;
	exports.parseRFC3966 = require_RFC3966().parseRFC3966;
	exports.formatRFC3966 = require_RFC3966().formatRFC3966;
} });

//#endregion
//#region ../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/max/index.cjs
var require_max$1 = __commonJS({ "../../node_modules/.pnpm/libphonenumber-js@1.12.9/node_modules/libphonenumber-js/max/index.cjs"(exports, module) {
	var metadata = require_metadata_max();
	var core = require_core();
	function call(func, _arguments) {
		var args = Array.prototype.slice.call(_arguments);
		args.push(metadata);
		return func.apply(this, args);
	}
	function parsePhoneNumberFromString() {
		return call(core.parsePhoneNumberFromString, arguments);
	}
	exports = module.exports = parsePhoneNumberFromString;
	exports["default"] = parsePhoneNumberFromString;
	exports.PhoneNumber = core.PhoneNumber;
	exports.ParseError = core.ParseError;
	function parsePhoneNumberWithError() {
		return call(core.parsePhoneNumberWithError, arguments);
	}
	exports.parsePhoneNumber = parsePhoneNumberWithError;
	exports.parsePhoneNumberWithError = parsePhoneNumberWithError;
	exports.parsePhoneNumberFromString = parsePhoneNumberFromString;
	exports.isValidPhoneNumber = function isValidPhoneNumber$1() {
		return call(core.isValidPhoneNumber, arguments);
	};
	exports.isPossiblePhoneNumber = function isPossiblePhoneNumber$2() {
		return call(core.isPossiblePhoneNumber, arguments);
	};
	exports.validatePhoneNumberLength = function validatePhoneNumberLength$1() {
		return call(core.validatePhoneNumberLength, arguments);
	};
	exports.findNumbers = function findNumbers$1() {
		return call(core.findNumbers, arguments);
	};
	exports.searchNumbers = function searchNumbers$1() {
		return call(core.searchNumbers, arguments);
	};
	exports.findPhoneNumbersInText = function findPhoneNumbersInText$1() {
		return call(core.findPhoneNumbersInText, arguments);
	};
	exports.searchPhoneNumbersInText = function searchPhoneNumbersInText$1() {
		return call(core.searchPhoneNumbersInText, arguments);
	};
	exports.PhoneNumberMatcher = function PhoneNumberMatcher$1(text, options) {
		return core.PhoneNumberMatcher.call(this, text, options, metadata);
	};
	exports.PhoneNumberMatcher.prototype = Object.create(core.PhoneNumberMatcher.prototype, {});
	exports.PhoneNumberMatcher.prototype.constructor = exports.PhoneNumberMatcher;
	exports.AsYouType = function AsYouType$1(country$1) {
		return core.AsYouType.call(this, country$1, metadata);
	};
	exports.AsYouType.prototype = Object.create(core.AsYouType.prototype, {});
	exports.AsYouType.prototype.constructor = exports.AsYouType;
	exports.isSupportedCountry = function isSupportedCountry$1(country$1) {
		return call(core.isSupportedCountry, arguments);
	};
	exports.getCountries = function getCountries$1() {
		return call(core.getCountries, arguments);
	};
	exports.getCountryCallingCode = function getCountryCallingCode$1() {
		return call(core.getCountryCallingCode, arguments);
	};
	exports.getExtPrefix = function getExtPrefix$1(country$1) {
		return call(core.getExtPrefix, arguments);
	};
	exports.getExampleNumber = function getExampleNumber$1() {
		return call(core.getExampleNumber, arguments);
	};
	exports.formatIncompletePhoneNumber = function formatIncompletePhoneNumber$1() {
		return call(core.formatIncompletePhoneNumber, arguments);
	};
	exports.parseIncompletePhoneNumber = core.parseIncompletePhoneNumber;
	exports.parsePhoneNumberCharacter = core.parsePhoneNumberCharacter;
	exports.parseDigits = core.parseDigits;
	exports.DIGIT_PLACEHOLDER = core.DIGIT_PLACEHOLDER;
	exports.parseRFC3966 = core.parseRFC3966;
	exports.formatRFC3966 = core.formatRFC3966;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsPhoneNumber.js
var require_IsPhoneNumber = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsPhoneNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsPhoneNumber = exports.isPhoneNumber = exports.IS_PHONE_NUMBER = void 0;
	const ValidateBy_1$46 = require_ValidateBy();
	const max_1$1 = require_max$1();
	exports.IS_PHONE_NUMBER = "isPhoneNumber";
	/**
	* Checks if the string is a valid phone number. To successfully validate any phone number the text must include
	* the intl. calling code, if the calling code wont be provided then the region must be set.
	*
	* @param value the potential phone number string to test
	* @param region 2 characters uppercase country code (e.g. DE, US, CH) for country specific validation.
	* If text doesn't start with the international calling code (e.g. +41), then you must set this parameter.
	*/
	function isPhoneNumber(value, region$1) {
		if (typeof value !== "string" || value.trim() !== value) return false;
		try {
			const phoneNumber = (0, max_1$1.parsePhoneNumber)(value, region$1);
			/**
			* We fail the validation if the user provided a region code
			* and it doesn't match with the country code of the parsed number.
			**/
			if (region$1 && phoneNumber.country !== region$1) return false;
			return phoneNumber.isValid();
		} catch (error) {
			return false;
		}
	}
	exports.isPhoneNumber = isPhoneNumber;
	/**
	* Checks if the string is a valid phone number. To successfully validate any phone number the text must include
	* the intl. calling code, if the calling code wont be provided then the region must be set.
	*
	* @param region 2 characters uppercase country code (e.g. DE, US, CH) for country specific validation.
	* If text doesn't start with the international calling code (e.g. +41), then you must set this parameter.
	*/
	function IsPhoneNumber(region$1, validationOptions) {
		return (0, ValidateBy_1$46.ValidateBy)({
			name: exports.IS_PHONE_NUMBER,
			constraints: [region$1],
			validator: {
				validate: function(value, args) {
					return isPhoneNumber(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$46.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a valid phone number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsPhoneNumber = IsPhoneNumber;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMilitaryTime.js
var require_IsMilitaryTime = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMilitaryTime.js"(exports) {
	var __importDefault$26 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsMilitaryTime = exports.isMilitaryTime = exports.IS_MILITARY_TIME = void 0;
	const ValidateBy_1$45 = require_ValidateBy();
	const matches_1 = __importDefault$26(require_matches());
	exports.IS_MILITARY_TIME = "isMilitaryTime";
	/**
	* Checks if the string represents a time without a given timezone in the format HH:MM (military)
	* If the given value does not match the pattern HH:MM, then it returns false.
	*/
	function isMilitaryTime(value) {
		const militaryTimeRegex = new RegExp("^([01]\\d|2[0-3]):?([0-5]\\d)$", "");
		return typeof value === "string" && (0, matches_1.default)(value, militaryTimeRegex);
	}
	exports.isMilitaryTime = isMilitaryTime;
	/**
	* Checks if the string represents a time without a given timezone in the format HH:MM (military)
	* If the given value does not match the pattern HH:MM, then it returns false.
	*/
	function IsMilitaryTime(validationOptions) {
		return (0, ValidateBy_1$45.ValidateBy)({
			name: exports.IS_MILITARY_TIME,
			validator: {
				validate: function(value, args) {
					return isMilitaryTime(value);
				},
				defaultMessage: (0, ValidateBy_1$45.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a valid representation of military time in the format HH:MM";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsMilitaryTime = IsMilitaryTime;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isHash.js
var require_isHash = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isHash.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isHash$1;
	var _assertString$53 = _interopRequireDefault$60(require_assertString());
	function _interopRequireDefault$60(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var lengths = {
		md5: 32,
		md4: 32,
		sha1: 40,
		sha256: 64,
		sha384: 96,
		sha512: 128,
		ripemd128: 32,
		ripemd160: 40,
		tiger128: 32,
		tiger160: 40,
		tiger192: 48,
		crc32: 8,
		crc32b: 8
	};
	function isHash$1(str, algorithm) {
		(0, _assertString$53.default)(str);
		var hash = new RegExp("^[a-fA-F0-9]{".concat(lengths[algorithm], "}$"));
		return hash.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsHash.js
var require_IsHash = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsHash.js"(exports) {
	var __importDefault$25 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsHash = exports.isHash = exports.IS_HASH = void 0;
	const ValidateBy_1$44 = require_ValidateBy();
	const isHash_1 = __importDefault$25(require_isHash());
	exports.IS_HASH = "isHash";
	/**
	* Check if the string is a hash of type algorithm.
	* Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',
	* 'tiger160', 'tiger192', 'crc32', 'crc32b']
	*/
	function isHash(value, algorithm) {
		return typeof value === "string" && (0, isHash_1.default)(value, algorithm);
	}
	exports.isHash = isHash;
	/**
	* Check if the string is a hash of type algorithm.
	* Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',
	* 'tiger160', 'tiger192', 'crc32', 'crc32b']
	*/
	function IsHash(algorithm, validationOptions) {
		return (0, ValidateBy_1$44.ValidateBy)({
			name: exports.IS_HASH,
			constraints: [algorithm],
			validator: {
				validate: function(value, args) {
					return isHash(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$44.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a hash of type $constraint1";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsHash = IsHash;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISSN.js
var require_isISSN = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISSN.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isISSN$1;
	var _assertString$52 = _interopRequireDefault$59(require_assertString());
	function _interopRequireDefault$59(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var issn = "^\\d{4}-?\\d{3}[\\dX]$";
	function isISSN$1(str) {
		var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
		(0, _assertString$52.default)(str);
		var testIssn = issn;
		testIssn = options.require_hyphen ? testIssn.replace("?", "") : testIssn;
		testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, "i");
		if (!testIssn.test(str)) return false;
		var digits = str.replace("-", "").toUpperCase();
		var checksum = 0;
		for (var i$1 = 0; i$1 < digits.length; i$1++) {
			var digit = digits[i$1];
			checksum += (digit === "X" ? 10 : +digit) * (8 - i$1);
		}
		return checksum % 11 === 0;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISSN.js
var require_IsISSN = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISSN.js"(exports) {
	var __importDefault$24 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsISSN = exports.isISSN = exports.IS_ISSN = void 0;
	const ValidateBy_1$43 = require_ValidateBy();
	const isISSN_1 = __importDefault$24(require_isISSN());
	exports.IS_ISSN = "isISSN";
	/**
	* Checks if the string is a ISSN.
	* If given value is not a string, then it returns false.
	*/
	function isISSN(value, options) {
		return typeof value === "string" && (0, isISSN_1.default)(value, options);
	}
	exports.isISSN = isISSN;
	/**
	* Checks if the string is a ISSN.
	* If given value is not a string, then it returns false.
	*/
	function IsISSN(options, validationOptions) {
		return (0, ValidateBy_1$43.ValidateBy)({
			name: exports.IS_ISSN,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isISSN(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$43.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a ISSN";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsISSN = IsISSN;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsDateString.js
var require_IsDateString = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsDateString.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsDateString = exports.isDateString = exports.IS_DATE_STRING = void 0;
	const ValidateBy_1$42 = require_ValidateBy();
	const IsISO8601_1 = require_IsISO8601();
	exports.IS_DATE_STRING = "isDateString";
	/**
	* Alias for IsISO8601 validator
	*/
	function isDateString(value, options) {
		return (0, IsISO8601_1.isISO8601)(value, options);
	}
	exports.isDateString = isDateString;
	/**
	* Alias for IsISO8601 validator
	*/
	function IsDateString(options, validationOptions) {
		return (0, ValidateBy_1$42.ValidateBy)({
			name: exports.IS_DATE_STRING,
			constraints: [options],
			validator: {
				validate: function(value) {
					return isDateString(value, options);
				},
				defaultMessage: (0, ValidateBy_1$42.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a valid ISO 8601 date string";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsDateString = IsDateString;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBoolean.js
var require_isBoolean = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBoolean.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isBoolean$1;
	var _assertString$51 = _interopRequireDefault$58(require_assertString());
	var _includesArray$2 = _interopRequireDefault$58(require_includesArray());
	function _interopRequireDefault$58(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var defaultOptions$1 = { loose: false };
	var strictBooleans = [
		"true",
		"false",
		"1",
		"0"
	];
	var looseBooleans = [].concat(strictBooleans, ["yes", "no"]);
	function isBoolean$1(str) {
		var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultOptions$1;
		(0, _assertString$51.default)(str);
		if (options.loose) return (0, _includesArray$2.default)(looseBooleans, str.toLowerCase());
		return (0, _includesArray$2.default)(strictBooleans, str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBooleanString.js
var require_IsBooleanString = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBooleanString.js"(exports) {
	var __importDefault$23 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsBooleanString = exports.isBooleanString = exports.IS_BOOLEAN_STRING = void 0;
	const ValidateBy_1$41 = require_ValidateBy();
	const isBoolean_1 = __importDefault$23(require_isBoolean());
	exports.IS_BOOLEAN_STRING = "isBooleanString";
	/**
	* Checks if a string is a boolean.
	* If given value is not a string, then it returns false.
	*/
	function isBooleanString(value) {
		return typeof value === "string" && (0, isBoolean_1.default)(value);
	}
	exports.isBooleanString = isBooleanString;
	/**
	* Checks if a string is a boolean.
	* If given value is not a string, then it returns false.
	*/
	function IsBooleanString(validationOptions) {
		return (0, ValidateBy_1$41.ValidateBy)({
			name: exports.IS_BOOLEAN_STRING,
			validator: {
				validate: function(value, args) {
					return isBooleanString(value);
				},
				defaultMessage: (0, ValidateBy_1$41.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a boolean string";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsBooleanString = IsBooleanString;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isNumeric.js
var require_isNumeric = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isNumeric.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isNumeric;
	var _assertString$50 = _interopRequireDefault$57(require_assertString());
	var _alpha = require_alpha();
	function _interopRequireDefault$57(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var numericNoSymbols = /^[0-9]+$/;
	function isNumeric(str, options) {
		(0, _assertString$50.default)(str);
		if (options && options.no_symbols) return numericNoSymbols.test(str);
		return new RegExp("^[+-]?([0-9]*[".concat((options || {}).locale ? _alpha.decimal[options.locale] : ".", "])?[0-9]+$")).test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsNumberString.js
var require_IsNumberString = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsNumberString.js"(exports) {
	var __importDefault$22 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsNumberString = exports.isNumberString = exports.IS_NUMBER_STRING = void 0;
	const ValidateBy_1$40 = require_ValidateBy();
	const isNumeric_1 = __importDefault$22(require_isNumeric());
	exports.IS_NUMBER_STRING = "isNumberString";
	/**
	* Checks if the string is numeric.
	* If given value is not a string, then it returns false.
	*/
	function isNumberString(value, options) {
		return typeof value === "string" && (0, isNumeric_1.default)(value, options);
	}
	exports.isNumberString = isNumberString;
	/**
	* Checks if the string is numeric.
	* If given value is not a string, then it returns false.
	*/
	function IsNumberString(options, validationOptions) {
		return (0, ValidateBy_1$40.ValidateBy)({
			name: exports.IS_NUMBER_STRING,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isNumberString(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$40.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a number string";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsNumberString = IsNumberString;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBase32.js
var require_isBase32 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBase32.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isBase32$1;
	var _assertString$49 = _interopRequireDefault$56(require_assertString());
	var _merge$5 = _interopRequireDefault$56(require_merge$1());
	function _interopRequireDefault$56(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var base32 = /^[A-Z2-7]+=*$/;
	var crockfordBase32 = /^[A-HJKMNP-TV-Z0-9]+$/;
	var defaultBase32Options = { crockford: false };
	function isBase32$1(str, options) {
		(0, _assertString$49.default)(str);
		options = (0, _merge$5.default)(options, defaultBase32Options);
		if (options.crockford) return crockfordBase32.test(str);
		var len = str.length;
		if (len % 8 === 0 && base32.test(str)) return true;
		return false;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBase32.js
var require_IsBase32 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBase32.js"(exports) {
	var __importDefault$21 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsBase32 = exports.isBase32 = exports.IS_BASE32 = void 0;
	const ValidateBy_1$39 = require_ValidateBy();
	const isBase32_1 = __importDefault$21(require_isBase32());
	exports.IS_BASE32 = "isBase32";
	/**
	* Checks if a string is base32 encoded.
	* If given value is not a string, then it returns false.
	*/
	function isBase32(value) {
		return typeof value === "string" && (0, isBase32_1.default)(value);
	}
	exports.isBase32 = isBase32;
	/**
	* Check if a string is base32 encoded.
	* If given value is not a string, then it returns false.
	*/
	function IsBase32(validationOptions) {
		return (0, ValidateBy_1$39.ValidateBy)({
			name: exports.IS_BASE32,
			validator: {
				validate: function(value, args) {
					return isBase32(value);
				},
				defaultMessage: (0, ValidateBy_1$39.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be base32 encoded";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsBase32 = IsBase32;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBIC.js
var require_isBIC = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBIC.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isBIC$1;
	var _assertString$48 = _interopRequireDefault$55(require_assertString());
	var _isISO31661Alpha$1 = require_isISO31661Alpha2();
	function _interopRequireDefault$55(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var isBICReg = new RegExp("^[A-Za-z]{6}[A-Za-z0-9]{2}([A-Za-z0-9]{3})?$", "");
	function isBIC$1(str) {
		(0, _assertString$48.default)(str);
		var countryCode = str.slice(4, 6).toUpperCase();
		if (!_isISO31661Alpha$1.CountryCodes.has(countryCode) && countryCode !== "XK") return false;
		return isBICReg.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBIC.js
var require_IsBIC = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBIC.js"(exports) {
	var __importDefault$20 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsBIC = exports.isBIC = exports.IS_BIC = void 0;
	const ValidateBy_1$38 = require_ValidateBy();
	const isBIC_1 = __importDefault$20(require_isBIC());
	exports.IS_BIC = "isBIC";
	/**
	* Check if a string is a BIC (Bank Identification Code) or SWIFT code.
	* If given value is not a string, then it returns false.
	*/
	function isBIC(value) {
		return typeof value === "string" && (0, isBIC_1.default)(value);
	}
	exports.isBIC = isBIC;
	/**
	* Check if a string is a BIC (Bank Identification Code) or SWIFT code.
	* If given value is not a string, then it returns false.
	*/
	function IsBIC(validationOptions) {
		return (0, ValidateBy_1$38.ValidateBy)({
			name: exports.IS_BIC,
			validator: {
				validate: function(value, args) {
					return isBIC(value);
				},
				defaultMessage: (0, ValidateBy_1$38.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a BIC or SWIFT code";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsBIC = IsBIC;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBtcAddress.js
var require_isBtcAddress = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBtcAddress.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isBtcAddress$1;
	var _assertString$47 = _interopRequireDefault$54(require_assertString());
	function _interopRequireDefault$54(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var bech32 = new RegExp("^(bc1|tb1|bc1p|tb1p)[ac-hj-np-z02-9]{39,58}$", "");
	var base58 = new RegExp("^(1|2|3|m)[A-HJ-NP-Za-km-z1-9]{25,39}$", "");
	function isBtcAddress$1(str) {
		(0, _assertString$47.default)(str);
		return bech32.test(str) || base58.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBtcAddress.js
var require_IsBtcAddress = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBtcAddress.js"(exports) {
	var __importDefault$19 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsBtcAddress = exports.isBtcAddress = exports.IS_BTC_ADDRESS = void 0;
	const ValidateBy_1$37 = require_ValidateBy();
	const isBtcAddress_1 = __importDefault$19(require_isBtcAddress());
	exports.IS_BTC_ADDRESS = "isBtcAddress";
	/**
	* Check if the string is a valid BTC address.
	* If given value is not a string, then it returns false.
	*/
	function isBtcAddress(value) {
		return typeof value === "string" && (0, isBtcAddress_1.default)(value);
	}
	exports.isBtcAddress = isBtcAddress;
	/**
	* Check if the string is a valid BTC address.
	* If given value is not a string, then it returns false.
	*/
	function IsBtcAddress(validationOptions) {
		return (0, ValidateBy_1$37.ValidateBy)({
			name: exports.IS_BTC_ADDRESS,
			validator: {
				validate: function(value, args) {
					return isBtcAddress(value);
				},
				defaultMessage: (0, ValidateBy_1$37.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a BTC address";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsBtcAddress = IsBtcAddress;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isDataURI.js
var require_isDataURI = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isDataURI.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isDataURI$1;
	var _assertString$46 = _interopRequireDefault$53(require_assertString());
	function _interopRequireDefault$53(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var validMediaType = /^[a-z]+\/[a-z0-9\-\+\._]+$/i;
	var validAttribute = /^[a-z\-]+=[a-z0-9\-]+$/i;
	var validData = /^[a-z0-9!\$&'\(\)\*\+,;=\-\._~:@\/\?%\s]*$/i;
	function isDataURI$1(str) {
		(0, _assertString$46.default)(str);
		var data = str.split(",");
		if (data.length < 2) return false;
		var attributes = data.shift().trim().split(";");
		var schemeAndMediaType = attributes.shift();
		if (schemeAndMediaType.slice(0, 5) !== "data:") return false;
		var mediaType = schemeAndMediaType.slice(5);
		if (mediaType !== "" && !validMediaType.test(mediaType)) return false;
		for (var i$1 = 0; i$1 < attributes.length; i$1++) if (!(i$1 === attributes.length - 1 && attributes[i$1].toLowerCase() === "base64") && !validAttribute.test(attributes[i$1])) return false;
		for (var _i$1 = 0; _i$1 < data.length; _i$1++) if (!validData.test(data[_i$1])) return false;
		return true;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsDataURI.js
var require_IsDataURI = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsDataURI.js"(exports) {
	var __importDefault$18 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsDataURI = exports.isDataURI = exports.IS_DATA_URI = void 0;
	const ValidateBy_1$36 = require_ValidateBy();
	const isDataURI_1 = __importDefault$18(require_isDataURI());
	exports.IS_DATA_URI = "isDataURI";
	/**
	* Check if the string is a data uri format.
	* If given value is not a string, then it returns false.
	*/
	function isDataURI(value) {
		return typeof value === "string" && (0, isDataURI_1.default)(value);
	}
	exports.isDataURI = isDataURI;
	/**
	* Check if the string is a data uri format.
	* If given value is not a string, then it returns false.
	*/
	function IsDataURI(validationOptions) {
		return (0, ValidateBy_1$36.ValidateBy)({
			name: exports.IS_DATA_URI,
			validator: {
				validate: function(value, args) {
					return isDataURI(value);
				},
				defaultMessage: (0, ValidateBy_1$36.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a data uri format";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsDataURI = IsDataURI;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isEAN.js
var require_isEAN = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isEAN.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isEAN$1;
	var _assertString$45 = _interopRequireDefault$52(require_assertString());
	function _interopRequireDefault$52(e) {
		return e && e.__esModule ? e : { default: e };
	}
	/**
	* The most commonly used EAN standard is
	* the thirteen-digit EAN-13, while the
	* less commonly used 8-digit EAN-8 barcode was
	* introduced for use on small packages.
	* Also EAN/UCC-14 is used for Grouping of individual
	* trade items above unit level(Intermediate, Carton or Pallet).
	* For more info about EAN-14 checkout: https://www.gtin.info/itf-14-barcodes/
	* EAN consists of:
	* GS1 prefix, manufacturer code, product code and check digit
	* Reference: https://en.wikipedia.org/wiki/International_Article_Number
	* Reference: https://www.gtin.info/
	*/
	/**
	* Define EAN Lengths; 8 for EAN-8; 13 for EAN-13; 14 for EAN-14
	* and Regular Expression for valid EANs (EAN-8, EAN-13, EAN-14),
	* with exact numeric matching of 8 or 13 or 14 digits [0-9]
	*/
	var LENGTH_EAN_8 = 8;
	var LENGTH_EAN_14 = 14;
	var validEanRegex = new RegExp("^(\\d{8}|\\d{13}|\\d{14})$", "");
	/**
	* Get position weight given:
	* EAN length and digit index/position
	*
	* @param {number} length
	* @param {number} index
	* @return {number}
	*/
	function getPositionWeightThroughLengthAndIndex(length$1, index) {
		if (length$1 === LENGTH_EAN_8 || length$1 === LENGTH_EAN_14) return index % 2 === 0 ? 3 : 1;
		return index % 2 === 0 ? 1 : 3;
	}
	/**
	* Calculate EAN Check Digit
	* Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit
	*
	* @param {string} ean
	* @return {number}
	*/
	function calculateCheckDigit(ean) {
		var checksum = ean.slice(0, -1).split("").map(function(char, index) {
			return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);
		}).reduce(function(acc, partialSum) {
			return acc + partialSum;
		}, 0);
		var remainder = 10 - checksum % 10;
		return remainder < 10 ? remainder : 0;
	}
	/**
	* Check if string is valid EAN:
	* Matches EAN-8/EAN-13/EAN-14 regex
	* Has valid check digit.
	*
	* @param {string} str
	* @return {boolean}
	*/
	function isEAN$1(str) {
		(0, _assertString$45.default)(str);
		var actualCheckDigit = Number(str.slice(-1));
		return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsEAN.js
var require_IsEAN = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsEAN.js"(exports) {
	var __importDefault$17 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsEAN = exports.isEAN = exports.IS_EAN = void 0;
	const ValidateBy_1$35 = require_ValidateBy();
	const isEAN_1 = __importDefault$17(require_isEAN());
	exports.IS_EAN = "isEAN";
	/**
	* Check if the string is an EAN (European Article Number).
	* If given value is not a string, then it returns false.
	*/
	function isEAN(value) {
		return typeof value === "string" && (0, isEAN_1.default)(value);
	}
	exports.isEAN = isEAN;
	/**
	* Check if the string is an EAN (European Article Number).
	* If given value is not a string, then it returns false.
	*/
	function IsEAN(validationOptions) {
		return (0, ValidateBy_1$35.ValidateBy)({
			name: exports.IS_EAN,
			validator: {
				validate: function(value, args) {
					return isEAN(value);
				},
				defaultMessage: (0, ValidateBy_1$35.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be an EAN (European Article Number)";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsEAN = IsEAN;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isEthereumAddress.js
var require_isEthereumAddress = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isEthereumAddress.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isEthereumAddress$1;
	var _assertString$44 = _interopRequireDefault$51(require_assertString());
	function _interopRequireDefault$51(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var eth = new RegExp("^(0x)[0-9a-f]{40}$", "i");
	function isEthereumAddress$1(str) {
		(0, _assertString$44.default)(str);
		return eth.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsEthereumAddress.js
var require_IsEthereumAddress = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsEthereumAddress.js"(exports) {
	var __importDefault$16 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsEthereumAddress = exports.isEthereumAddress = exports.IS_ETHEREUM_ADDRESS = void 0;
	const ValidateBy_1$34 = require_ValidateBy();
	const isEthereumAddress_1 = __importDefault$16(require_isEthereumAddress());
	exports.IS_ETHEREUM_ADDRESS = "isEthereumAddress";
	/**
	* Check if the string is an Ethereum address using basic regex. Does not validate address checksums.
	* If given value is not a string, then it returns false.
	*/
	function isEthereumAddress(value) {
		return typeof value === "string" && (0, isEthereumAddress_1.default)(value);
	}
	exports.isEthereumAddress = isEthereumAddress;
	/**
	* Check if the string is an Ethereum address using basic regex. Does not validate address checksums.
	* If given value is not a string, then it returns false.
	*/
	function IsEthereumAddress(validationOptions) {
		return (0, ValidateBy_1$34.ValidateBy)({
			name: exports.IS_ETHEREUM_ADDRESS,
			validator: {
				validate: function(value, args) {
					return isEthereumAddress(value);
				},
				defaultMessage: (0, ValidateBy_1$34.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be an Ethereum address";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsEthereumAddress = IsEthereumAddress;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isHSL.js
var require_isHSL = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isHSL.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isHSL$1;
	var _assertString$43 = _interopRequireDefault$50(require_assertString());
	function _interopRequireDefault$50(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var hslComma = new RegExp("^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(,(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}(,((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?))?\\)$", "i");
	var hslSpace = new RegExp("^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(\\s(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}\\s?(\\/\\s((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?)\\s?)?\\)$", "i");
	function isHSL$1(str) {
		(0, _assertString$43.default)(str);
		var strippedStr = str.replace(/\s+/g, " ").replace(new RegExp("\\s?(hsla?\\(|\\)|,)\\s?", "gi"), "$1");
		if (strippedStr.indexOf(",") !== -1) return hslComma.test(strippedStr);
		return hslSpace.test(strippedStr);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsHSL.js
var require_IsHSL = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsHSL.js"(exports) {
	var __importDefault$15 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsHSL = exports.isHSL = exports.IS_HSL = void 0;
	const ValidateBy_1$33 = require_ValidateBy();
	const isHSL_1 = __importDefault$15(require_isHSL());
	exports.IS_HSL = "isHSL";
	/**
	* Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.
	* Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).
	* If given value is not a string, then it returns false.
	*/
	function isHSL(value) {
		return typeof value === "string" && (0, isHSL_1.default)(value);
	}
	exports.isHSL = isHSL;
	/**
	* Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.
	* Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).
	* If given value is not a string, then it returns false.
	*/
	function IsHSL(validationOptions) {
		return (0, ValidateBy_1$33.ValidateBy)({
			name: exports.IS_HSL,
			validator: {
				validate: function(value, args) {
					return isHSL(value);
				},
				defaultMessage: (0, ValidateBy_1$33.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a HSL color";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsHSL = IsHSL;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIBAN.js
var require_isIBAN = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIBAN.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isIBAN$1;
	exports.locales = void 0;
	var _assertString$42 = _interopRequireDefault$49(require_assertString());
	var _includesArray$1 = _interopRequireDefault$49(require_includesArray());
	function _interopRequireDefault$49(e) {
		return e && e.__esModule ? e : { default: e };
	}
	/**
	* List of country codes with
	* corresponding IBAN regular expression
	* Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number
	*/
	var ibanRegexThroughCountryCode = {
		AD: new RegExp("^(AD[0-9]{2})\\d{8}[A-Z0-9]{12}$", ""),
		AE: new RegExp("^(AE[0-9]{2})\\d{3}\\d{16}$", ""),
		AL: new RegExp("^(AL[0-9]{2})\\d{8}[A-Z0-9]{16}$", ""),
		AT: new RegExp("^(AT[0-9]{2})\\d{16}$", ""),
		AZ: new RegExp("^(AZ[0-9]{2})[A-Z0-9]{4}\\d{20}$", ""),
		BA: new RegExp("^(BA[0-9]{2})\\d{16}$", ""),
		BE: new RegExp("^(BE[0-9]{2})\\d{12}$", ""),
		BG: new RegExp("^(BG[0-9]{2})[A-Z]{4}\\d{6}[A-Z0-9]{8}$", ""),
		BH: new RegExp("^(BH[0-9]{2})[A-Z]{4}[A-Z0-9]{14}$", ""),
		BR: new RegExp("^(BR[0-9]{2})\\d{23}[A-Z]{1}[A-Z0-9]{1}$", ""),
		BY: new RegExp("^(BY[0-9]{2})[A-Z0-9]{4}\\d{20}$", ""),
		CH: new RegExp("^(CH[0-9]{2})\\d{5}[A-Z0-9]{12}$", ""),
		CR: new RegExp("^(CR[0-9]{2})\\d{18}$", ""),
		CY: new RegExp("^(CY[0-9]{2})\\d{8}[A-Z0-9]{16}$", ""),
		CZ: new RegExp("^(CZ[0-9]{2})\\d{20}$", ""),
		DE: new RegExp("^(DE[0-9]{2})\\d{18}$", ""),
		DK: new RegExp("^(DK[0-9]{2})\\d{14}$", ""),
		DO: new RegExp("^(DO[0-9]{2})[A-Z]{4}\\d{20}$", ""),
		DZ: new RegExp("^(DZ\\d{24})$", ""),
		EE: new RegExp("^(EE[0-9]{2})\\d{16}$", ""),
		EG: new RegExp("^(EG[0-9]{2})\\d{25}$", ""),
		ES: new RegExp("^(ES[0-9]{2})\\d{20}$", ""),
		FI: new RegExp("^(FI[0-9]{2})\\d{14}$", ""),
		FO: new RegExp("^(FO[0-9]{2})\\d{14}$", ""),
		FR: new RegExp("^(FR[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$", ""),
		GB: new RegExp("^(GB[0-9]{2})[A-Z]{4}\\d{14}$", ""),
		GE: new RegExp("^(GE[0-9]{2})[A-Z0-9]{2}\\d{16}$", ""),
		GI: new RegExp("^(GI[0-9]{2})[A-Z]{4}[A-Z0-9]{15}$", ""),
		GL: new RegExp("^(GL[0-9]{2})\\d{14}$", ""),
		GR: new RegExp("^(GR[0-9]{2})\\d{7}[A-Z0-9]{16}$", ""),
		GT: new RegExp("^(GT[0-9]{2})[A-Z0-9]{4}[A-Z0-9]{20}$", ""),
		HR: new RegExp("^(HR[0-9]{2})\\d{17}$", ""),
		HU: new RegExp("^(HU[0-9]{2})\\d{24}$", ""),
		IE: new RegExp("^(IE[0-9]{2})[A-Z]{4}\\d{14}$", ""),
		IL: new RegExp("^(IL[0-9]{2})\\d{19}$", ""),
		IQ: new RegExp("^(IQ[0-9]{2})[A-Z]{4}\\d{15}$", ""),
		IR: new RegExp("^(IR[0-9]{2})0\\d{2}0\\d{18}$", ""),
		IS: new RegExp("^(IS[0-9]{2})\\d{22}$", ""),
		IT: new RegExp("^(IT[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$", ""),
		JO: new RegExp("^(JO[0-9]{2})[A-Z]{4}\\d{22}$", ""),
		KW: new RegExp("^(KW[0-9]{2})[A-Z]{4}[A-Z0-9]{22}$", ""),
		KZ: new RegExp("^(KZ[0-9]{2})\\d{3}[A-Z0-9]{13}$", ""),
		LB: new RegExp("^(LB[0-9]{2})\\d{4}[A-Z0-9]{20}$", ""),
		LC: new RegExp("^(LC[0-9]{2})[A-Z]{4}[A-Z0-9]{24}$", ""),
		LI: new RegExp("^(LI[0-9]{2})\\d{5}[A-Z0-9]{12}$", ""),
		LT: new RegExp("^(LT[0-9]{2})\\d{16}$", ""),
		LU: new RegExp("^(LU[0-9]{2})\\d{3}[A-Z0-9]{13}$", ""),
		LV: new RegExp("^(LV[0-9]{2})[A-Z]{4}[A-Z0-9]{13}$", ""),
		MA: new RegExp("^(MA[0-9]{26})$", ""),
		MC: new RegExp("^(MC[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$", ""),
		MD: new RegExp("^(MD[0-9]{2})[A-Z0-9]{20}$", ""),
		ME: new RegExp("^(ME[0-9]{2})\\d{18}$", ""),
		MK: new RegExp("^(MK[0-9]{2})\\d{3}[A-Z0-9]{10}\\d{2}$", ""),
		MR: new RegExp("^(MR[0-9]{2})\\d{23}$", ""),
		MT: new RegExp("^(MT[0-9]{2})[A-Z]{4}\\d{5}[A-Z0-9]{18}$", ""),
		MU: new RegExp("^(MU[0-9]{2})[A-Z]{4}\\d{19}[A-Z]{3}$", ""),
		MZ: new RegExp("^(MZ[0-9]{2})\\d{21}$", ""),
		NL: new RegExp("^(NL[0-9]{2})[A-Z]{4}\\d{10}$", ""),
		NO: new RegExp("^(NO[0-9]{2})\\d{11}$", ""),
		PK: new RegExp("^(PK[0-9]{2})[A-Z0-9]{4}\\d{16}$", ""),
		PL: new RegExp("^(PL[0-9]{2})\\d{24}$", ""),
		PS: new RegExp("^(PS[0-9]{2})[A-Z]{4}[A-Z0-9]{21}$", ""),
		PT: new RegExp("^(PT[0-9]{2})\\d{21}$", ""),
		QA: new RegExp("^(QA[0-9]{2})[A-Z]{4}[A-Z0-9]{21}$", ""),
		RO: new RegExp("^(RO[0-9]{2})[A-Z]{4}[A-Z0-9]{16}$", ""),
		RS: new RegExp("^(RS[0-9]{2})\\d{18}$", ""),
		SA: new RegExp("^(SA[0-9]{2})\\d{2}[A-Z0-9]{18}$", ""),
		SC: new RegExp("^(SC[0-9]{2})[A-Z]{4}\\d{20}[A-Z]{3}$", ""),
		SE: new RegExp("^(SE[0-9]{2})\\d{20}$", ""),
		SI: new RegExp("^(SI[0-9]{2})\\d{15}$", ""),
		SK: new RegExp("^(SK[0-9]{2})\\d{20}$", ""),
		SM: new RegExp("^(SM[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$", ""),
		SV: new RegExp("^(SV[0-9]{2})[A-Z0-9]{4}\\d{20}$", ""),
		TL: new RegExp("^(TL[0-9]{2})\\d{19}$", ""),
		TN: new RegExp("^(TN[0-9]{2})\\d{20}$", ""),
		TR: new RegExp("^(TR[0-9]{2})\\d{5}[A-Z0-9]{17}$", ""),
		UA: new RegExp("^(UA[0-9]{2})\\d{6}[A-Z0-9]{19}$", ""),
		VA: new RegExp("^(VA[0-9]{2})\\d{18}$", ""),
		VG: new RegExp("^(VG[0-9]{2})[A-Z]{4}\\d{16}$", ""),
		XK: new RegExp("^(XK[0-9]{2})\\d{16}$", "")
	};
	/**
	* Check if the country codes passed are valid using the
	* ibanRegexThroughCountryCode as a reference
	*
	* @param {array} countryCodeArray
	* @return {boolean}
	*/
	function hasOnlyValidCountryCodes(countryCodeArray) {
		var countryCodeArrayFilteredWithObjectIbanCode = countryCodeArray.filter(function(countryCode) {
			return !(countryCode in ibanRegexThroughCountryCode);
		});
		if (countryCodeArrayFilteredWithObjectIbanCode.length > 0) return false;
		return true;
	}
	/**
	* Check whether string has correct universal IBAN format
	* The IBAN consists of up to 34 alphanumeric characters, as follows:
	* Country Code using ISO 3166-1 alpha-2, two letters
	* check digits, two digits and
	* Basic Bank Account Number (BBAN), up to 30 alphanumeric characters.
	* NOTE: Permitted IBAN characters are: digits [0-9] and the 26 latin alphabetic [A-Z]
	*
	* @param {string} str - string under validation
	* @param {object} options - object to pass the countries to be either whitelisted or blacklisted
	* @return {boolean}
	*/
	function hasValidIbanFormat(str, options) {
		var strippedStr = str.replace(/[\s\-]+/gi, "").toUpperCase();
		var isoCountryCode = strippedStr.slice(0, 2).toUpperCase();
		var isoCountryCodeInIbanRegexCodeObject = isoCountryCode in ibanRegexThroughCountryCode;
		if (options.whitelist) {
			if (!hasOnlyValidCountryCodes(options.whitelist)) return false;
			var isoCountryCodeInWhiteList = (0, _includesArray$1.default)(options.whitelist, isoCountryCode);
			if (!isoCountryCodeInWhiteList) return false;
		}
		if (options.blacklist) {
			var isoCountryCodeInBlackList = (0, _includesArray$1.default)(options.blacklist, isoCountryCode);
			if (isoCountryCodeInBlackList) return false;
		}
		return isoCountryCodeInIbanRegexCodeObject && ibanRegexThroughCountryCode[isoCountryCode].test(strippedStr);
	}
	/**
	* Check whether string has valid IBAN Checksum
	* by performing basic mod-97 operation and
	* the remainder should equal 1
	* -- Start by rearranging the IBAN by moving the four initial characters to the end of the string
	* -- Replace each letter in the string with two digits, A -> 10, B = 11, Z = 35
	* -- Interpret the string as a decimal integer and
	* -- compute the remainder on division by 97 (mod 97)
	* Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number
	*
	* @param {string} str
	* @return {boolean}
	*/
	function hasValidIbanChecksum(str) {
		var strippedStr = str.replace(/[^A-Z0-9]+/gi, "").toUpperCase();
		var rearranged = strippedStr.slice(4) + strippedStr.slice(0, 4);
		var alphaCapsReplacedWithDigits = rearranged.replace(/[A-Z]/g, function(char) {
			return char.charCodeAt(0) - 55;
		});
		var remainder = alphaCapsReplacedWithDigits.match(/\d{1,7}/g).reduce(function(acc, value) {
			return Number(acc + value) % 97;
		}, "");
		return remainder === 1;
	}
	function isIBAN$1(str) {
		var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
		(0, _assertString$42.default)(str);
		return hasValidIbanFormat(str, options) && hasValidIbanChecksum(str);
	}
	var locales$2 = exports.locales = Object.keys(ibanRegexThroughCountryCode);
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsIBAN.js
var require_IsIBAN = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsIBAN.js"(exports) {
	var __importDefault$14 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsIBAN = exports.isIBAN = exports.IS_IBAN = void 0;
	const ValidateBy_1$32 = require_ValidateBy();
	const isIBAN_1 = __importDefault$14(require_isIBAN());
	exports.IS_IBAN = "isIBAN";
	/**
	* Check if a string is a IBAN (International Bank Account Number).
	* If given value is not a string, then it returns false.
	*/
	function isIBAN(value) {
		return typeof value === "string" && (0, isIBAN_1.default)(value);
	}
	exports.isIBAN = isIBAN;
	/**
	* Check if a string is a IBAN (International Bank Account Number).
	* If given value is not a string, then it returns false.
	*/
	function IsIBAN(validationOptions) {
		return (0, ValidateBy_1$32.ValidateBy)({
			name: exports.IS_IBAN,
			validator: {
				validate: function(value, args) {
					return isIBAN(value);
				},
				defaultMessage: (0, ValidateBy_1$32.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be an IBAN";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsIBAN = IsIBAN;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIdentityCard.js
var require_isIdentityCard = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIdentityCard.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isIdentityCard$1;
	var _assertString$41 = _interopRequireDefault$48(require_assertString());
	var _includesArray = _interopRequireDefault$48(require_includesArray());
	var _isInt$1 = _interopRequireDefault$48(require_isInt());
	function _interopRequireDefault$48(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var validators$1 = {
		PL: function PL(str) {
			(0, _assertString$41.default)(str);
			var weightOfDigits = {
				1: 1,
				2: 3,
				3: 7,
				4: 9,
				5: 1,
				6: 3,
				7: 7,
				8: 9,
				9: 1,
				10: 3,
				11: 0
			};
			if (str != null && str.length === 11 && (0, _isInt$1.default)(str, { allow_leading_zeroes: true })) {
				var digits = str.split("").slice(0, -1);
				var sum = digits.reduce(function(acc, digit, index) {
					return acc + Number(digit) * weightOfDigits[index + 1];
				}, 0);
				var modulo = sum % 10;
				var lastDigit = Number(str.charAt(str.length - 1));
				if (modulo === 0 && lastDigit === 0 || lastDigit === 10 - modulo) return true;
			}
			return false;
		},
		ES: function ES(str) {
			(0, _assertString$41.default)(str);
			var DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;
			var charsValue = {
				X: 0,
				Y: 1,
				Z: 2
			};
			var controlDigits = [
				"T",
				"R",
				"W",
				"A",
				"G",
				"M",
				"Y",
				"F",
				"P",
				"D",
				"X",
				"B",
				"N",
				"J",
				"Z",
				"S",
				"Q",
				"V",
				"H",
				"L",
				"C",
				"K",
				"E"
			];
			var sanitized = str.trim().toUpperCase();
			if (!DNI.test(sanitized)) return false;
			var number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, function(char) {
				return charsValue[char];
			});
			return sanitized.endsWith(controlDigits[number % 23]);
		},
		FI: function FI(str) {
			(0, _assertString$41.default)(str);
			if (str.length !== 11) return false;
			if (!str.match(/^\d{6}[\-A\+]\d{3}[0-9ABCDEFHJKLMNPRSTUVWXY]{1}$/)) return false;
			var checkDigits = "0123456789ABCDEFHJKLMNPRSTUVWXY";
			var idAsNumber = parseInt(str.slice(0, 6), 10) * 1e3 + parseInt(str.slice(7, 10), 10);
			var remainder = idAsNumber % 31;
			var checkDigit = checkDigits[remainder];
			return checkDigit === str.slice(10, 11);
		},
		IN: function IN(str) {
			var DNI = /^[1-9]\d{3}\s?\d{4}\s?\d{4}$/;
			var d = [
				[
					0,
					1,
					2,
					3,
					4,
					5,
					6,
					7,
					8,
					9
				],
				[
					1,
					2,
					3,
					4,
					0,
					6,
					7,
					8,
					9,
					5
				],
				[
					2,
					3,
					4,
					0,
					1,
					7,
					8,
					9,
					5,
					6
				],
				[
					3,
					4,
					0,
					1,
					2,
					8,
					9,
					5,
					6,
					7
				],
				[
					4,
					0,
					1,
					2,
					3,
					9,
					5,
					6,
					7,
					8
				],
				[
					5,
					9,
					8,
					7,
					6,
					0,
					4,
					3,
					2,
					1
				],
				[
					6,
					5,
					9,
					8,
					7,
					1,
					0,
					4,
					3,
					2
				],
				[
					7,
					6,
					5,
					9,
					8,
					2,
					1,
					0,
					4,
					3
				],
				[
					8,
					7,
					6,
					5,
					9,
					3,
					2,
					1,
					0,
					4
				],
				[
					9,
					8,
					7,
					6,
					5,
					4,
					3,
					2,
					1,
					0
				]
			];
			var p = [
				[
					0,
					1,
					2,
					3,
					4,
					5,
					6,
					7,
					8,
					9
				],
				[
					1,
					5,
					7,
					6,
					2,
					8,
					3,
					0,
					9,
					4
				],
				[
					5,
					8,
					0,
					3,
					7,
					9,
					6,
					1,
					4,
					2
				],
				[
					8,
					9,
					1,
					6,
					0,
					4,
					3,
					5,
					2,
					7
				],
				[
					9,
					4,
					5,
					3,
					1,
					2,
					6,
					8,
					7,
					0
				],
				[
					4,
					2,
					8,
					6,
					5,
					7,
					3,
					9,
					0,
					1
				],
				[
					2,
					7,
					9,
					3,
					8,
					0,
					6,
					4,
					1,
					5
				],
				[
					7,
					0,
					4,
					6,
					9,
					1,
					3,
					2,
					5,
					8
				]
			];
			var sanitized = str.trim();
			if (!DNI.test(sanitized)) return false;
			var c = 0;
			var invertedArray = sanitized.replace(/\s/g, "").split("").map(Number).reverse();
			invertedArray.forEach(function(val, i$1) {
				c = d[c][p[i$1 % 8][val]];
			});
			return c === 0;
		},
		IR: function IR(str) {
			if (!str.match(/^\d{10}$/)) return false;
			str = "0000".concat(str).slice(str.length - 6);
			if (parseInt(str.slice(3, 9), 10) === 0) return false;
			var lastNumber = parseInt(str.slice(9, 10), 10);
			var sum = 0;
			for (var i$1 = 0; i$1 < 9; i$1++) sum += parseInt(str.slice(i$1, i$1 + 1), 10) * (10 - i$1);
			sum %= 11;
			return sum < 2 && lastNumber === sum || sum >= 2 && lastNumber === 11 - sum;
		},
		IT: function IT(str) {
			if (str.length !== 9) return false;
			if (str === "CA00000AA") return false;
			return str.search(/C[A-Z]\d{5}[A-Z]{2}/i) > -1;
		},
		NO: function NO(str) {
			var sanitized = str.trim();
			if (isNaN(Number(sanitized))) return false;
			if (sanitized.length !== 11) return false;
			if (sanitized === "00000000000") return false;
			var f = sanitized.split("").map(Number);
			var k1 = (11 - (3 * f[0] + 7 * f[1] + 6 * f[2] + 1 * f[3] + 8 * f[4] + 9 * f[5] + 4 * f[6] + 5 * f[7] + 2 * f[8]) % 11) % 11;
			var k2 = (11 - (5 * f[0] + 4 * f[1] + 3 * f[2] + 2 * f[3] + 7 * f[4] + 6 * f[5] + 5 * f[6] + 4 * f[7] + 3 * f[8] + 2 * k1) % 11) % 11;
			if (k1 !== f[9] || k2 !== f[10]) return false;
			return true;
		},
		TH: function TH(str) {
			if (!str.match(/^[1-8]\d{12}$/)) return false;
			var sum = 0;
			for (var i$1 = 0; i$1 < 12; i$1++) sum += parseInt(str[i$1], 10) * (13 - i$1);
			return str[12] === ((11 - sum % 11) % 10).toString();
		},
		LK: function LK(str) {
			var old_nic = /^[1-9]\d{8}[vx]$/i;
			var new_nic = /^[1-9]\d{11}$/i;
			if (str.length === 10 && old_nic.test(str)) return true;
			else if (str.length === 12 && new_nic.test(str)) return true;
			return false;
		},
		"he-IL": function heIL(str) {
			var DNI = /^\d{9}$/;
			var sanitized = str.trim();
			if (!DNI.test(sanitized)) return false;
			var id = sanitized;
			var sum = 0, incNum;
			for (var i$1 = 0; i$1 < id.length; i$1++) {
				incNum = Number(id[i$1]) * (i$1 % 2 + 1);
				sum += incNum > 9 ? incNum - 9 : incNum;
			}
			return sum % 10 === 0;
		},
		"ar-LY": function arLY(str) {
			var NIN = new RegExp("^(1|2)\\d{11}$", "");
			var sanitized = str.trim();
			if (!NIN.test(sanitized)) return false;
			return true;
		},
		"ar-TN": function arTN(str) {
			var DNI = /^\d{8}$/;
			var sanitized = str.trim();
			if (!DNI.test(sanitized)) return false;
			return true;
		},
		"zh-CN": function zhCN(str) {
			var provincesAndCities = [
				"11",
				"12",
				"13",
				"14",
				"15",
				"21",
				"22",
				"23",
				"31",
				"32",
				"33",
				"34",
				"35",
				"36",
				"37",
				"41",
				"42",
				"43",
				"44",
				"45",
				"46",
				"50",
				"51",
				"52",
				"53",
				"54",
				"61",
				"62",
				"63",
				"64",
				"65",
				"71",
				"81",
				"82",
				"91"
			];
			var powers = [
				"7",
				"9",
				"10",
				"5",
				"8",
				"4",
				"2",
				"1",
				"6",
				"3",
				"7",
				"9",
				"10",
				"5",
				"8",
				"4",
				"2"
			];
			var parityBit = [
				"1",
				"0",
				"X",
				"9",
				"8",
				"7",
				"6",
				"5",
				"4",
				"3",
				"2"
			];
			var checkAddressCode = function checkAddressCode$1(addressCode) {
				return (0, _includesArray.default)(provincesAndCities, addressCode);
			};
			var checkBirthDayCode = function checkBirthDayCode$1(birDayCode) {
				var yyyy = parseInt(birDayCode.substring(0, 4), 10);
				var mm = parseInt(birDayCode.substring(4, 6), 10);
				var dd = parseInt(birDayCode.substring(6), 10);
				var xdata = new Date(yyyy, mm - 1, dd);
				if (xdata > /* @__PURE__ */ new Date()) return false;
				else if (xdata.getFullYear() === yyyy && xdata.getMonth() === mm - 1 && xdata.getDate() === dd) return true;
				return false;
			};
			var getParityBit = function getParityBit$1(idCardNo) {
				var id17 = idCardNo.substring(0, 17);
				var power = 0;
				for (var i$1 = 0; i$1 < 17; i$1++) power += parseInt(id17.charAt(i$1), 10) * parseInt(powers[i$1], 10);
				var mod = power % 11;
				return parityBit[mod];
			};
			var checkParityBit = function checkParityBit$1(idCardNo) {
				return getParityBit(idCardNo) === idCardNo.charAt(17).toUpperCase();
			};
			var check15IdCardNo = function check15IdCardNo$1(idCardNo) {
				var check = new RegExp("^[1-9]\\d{7}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}$", "").test(idCardNo);
				if (!check) return false;
				var addressCode = idCardNo.substring(0, 2);
				check = checkAddressCode(addressCode);
				if (!check) return false;
				var birDayCode = "19".concat(idCardNo.substring(6, 12));
				check = checkBirthDayCode(birDayCode);
				if (!check) return false;
				return true;
			};
			var check18IdCardNo = function check18IdCardNo$1(idCardNo) {
				var check = new RegExp("^[1-9]\\d{5}[1-9]\\d{3}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}(\\d|x|X)$", "").test(idCardNo);
				if (!check) return false;
				var addressCode = idCardNo.substring(0, 2);
				check = checkAddressCode(addressCode);
				if (!check) return false;
				var birDayCode = idCardNo.substring(6, 14);
				check = checkBirthDayCode(birDayCode);
				if (!check) return false;
				return checkParityBit(idCardNo);
			};
			var checkIdCardNo = function checkIdCardNo$1(idCardNo) {
				var check = new RegExp("^\\d{15}|(\\d{17}(\\d|x|X))$", "").test(idCardNo);
				if (!check) return false;
				if (idCardNo.length === 15) return check15IdCardNo(idCardNo);
				return check18IdCardNo(idCardNo);
			};
			return checkIdCardNo(str);
		},
		"zh-HK": function zhHK(str) {
			str = str.trim();
			var regexHKID = new RegExp("^[A-Z]{1,2}[0-9]{6}((\\([0-9A]\\))|(\\[[0-9A]\\])|([0-9A]))$", "");
			var regexIsDigit = /^[0-9]$/;
			str = str.toUpperCase();
			if (!regexHKID.test(str)) return false;
			str = str.replace(/\[|\]|\(|\)/g, "");
			if (str.length === 8) str = "3".concat(str);
			var checkSumVal = 0;
			for (var i$1 = 0; i$1 <= 7; i$1++) {
				var convertedChar = void 0;
				if (!regexIsDigit.test(str[i$1])) convertedChar = (str[i$1].charCodeAt(0) - 55) % 11;
				else convertedChar = str[i$1];
				checkSumVal += convertedChar * (9 - i$1);
			}
			checkSumVal %= 11;
			var checkSumConverted;
			if (checkSumVal === 0) checkSumConverted = "0";
			else if (checkSumVal === 1) checkSumConverted = "A";
			else checkSumConverted = String(11 - checkSumVal);
			if (checkSumConverted === str[str.length - 1]) return true;
			return false;
		},
		"zh-TW": function zhTW(str) {
			var ALPHABET_CODES = {
				A: 10,
				B: 11,
				C: 12,
				D: 13,
				E: 14,
				F: 15,
				G: 16,
				H: 17,
				I: 34,
				J: 18,
				K: 19,
				L: 20,
				M: 21,
				N: 22,
				O: 35,
				P: 23,
				Q: 24,
				R: 25,
				S: 26,
				T: 27,
				U: 28,
				V: 29,
				W: 32,
				X: 30,
				Y: 31,
				Z: 33
			};
			var sanitized = str.trim().toUpperCase();
			if (!/^[A-Z][0-9]{9}$/.test(sanitized)) return false;
			return Array.from(sanitized).reduce(function(sum, number, index) {
				if (index === 0) {
					var code = ALPHABET_CODES[number];
					return code % 10 * 9 + Math.floor(code / 10);
				}
				if (index === 9) return (10 - sum % 10 - Number(number)) % 10 === 0;
				return sum + Number(number) * (9 - index);
			}, 0);
		},
		PK: function PK(str) {
			var CNIC = /^[1-7][0-9]{4}-[0-9]{7}-[1-9]$/;
			var sanitized = str.trim();
			return CNIC.test(sanitized);
		}
	};
	function isIdentityCard$1(str, locale$1) {
		(0, _assertString$41.default)(str);
		if (locale$1 in validators$1) return validators$1[locale$1](str);
		else if (locale$1 === "any") {
			for (var key in validators$1)
 // istanbul ignore else
			if (validators$1.hasOwnProperty(key)) {
				var validator$2 = validators$1[key];
				if (validator$2(str)) return true;
			}
			return false;
		}
		throw new Error("Invalid locale '".concat(locale$1, "'"));
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsIdentityCard.js
var require_IsIdentityCard = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsIdentityCard.js"(exports) {
	var __importDefault$13 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsIdentityCard = exports.isIdentityCard = exports.IS_IDENTITY_CARD = void 0;
	const ValidateBy_1$31 = require_ValidateBy();
	const isIdentityCard_1 = __importDefault$13(require_isIdentityCard());
	exports.IS_IDENTITY_CARD = "isIdentityCard";
	/**
	* Check if the string is a valid identity card code.
	* locale is one of ['ES', 'zh-TW', 'he-IL', 'ar-TN'] OR 'any'. If 'any' is used, function will check if any of the locals match.
	* Defaults to 'any'.
	* If given value is not a string, then it returns false.
	*/
	function isIdentityCard(value, locale$1) {
		return typeof value === "string" && (0, isIdentityCard_1.default)(value, locale$1);
	}
	exports.isIdentityCard = isIdentityCard;
	/**
	* Check if the string is a valid identity card code.
	* locale is one of ['ES', 'zh-TW', 'he-IL', 'ar-TN'] OR 'any'. If 'any' is used, function will check if any of the locals match.
	* Defaults to 'any'.
	* If given value is not a string, then it returns false.
	*/
	function IsIdentityCard(locale$1, validationOptions) {
		return (0, ValidateBy_1$31.ValidateBy)({
			name: exports.IS_IDENTITY_CARD,
			constraints: [locale$1],
			validator: {
				validate: function(value, args) {
					return isIdentityCard(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$31.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a identity card number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsIdentityCard = IsIdentityCard;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISRC.js
var require_isISRC = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISRC.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isISRC$1;
	var _assertString$40 = _interopRequireDefault$47(require_assertString());
	function _interopRequireDefault$47(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var isrc = /^[A-Z]{2}[0-9A-Z]{3}\d{2}\d{5}$/;
	function isISRC$1(str) {
		(0, _assertString$40.default)(str);
		return isrc.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISRC.js
var require_IsISRC = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsISRC.js"(exports) {
	var __importDefault$12 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsISRC = exports.isISRC = exports.IS_ISRC = void 0;
	const ValidateBy_1$30 = require_ValidateBy();
	const isISRC_1 = __importDefault$12(require_isISRC());
	exports.IS_ISRC = "isISRC";
	/**
	* Check if the string is a ISRC.
	* If given value is not a string, then it returns false.
	*/
	function isISRC(value) {
		return typeof value === "string" && (0, isISRC_1.default)(value);
	}
	exports.isISRC = isISRC;
	/**
	* Check if the string is a ISRC.
	* If given value is not a string, then it returns false.
	*/
	function IsISRC(validationOptions) {
		return (0, ValidateBy_1$30.ValidateBy)({
			name: exports.IS_ISRC,
			validator: {
				validate: function(value, args) {
					return isISRC(value);
				},
				defaultMessage: (0, ValidateBy_1$30.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be an ISRC";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsISRC = IsISRC;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLocale.js
var require_isLocale = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLocale.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isLocale$1;
	var _assertString$39 = _interopRequireDefault$46(require_assertString());
	function _interopRequireDefault$46(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var extlang = "([A-Za-z]{3}(-[A-Za-z]{3}){0,2})";
	var language = "(([a-zA-Z]{2,3}(-".concat(extlang, ")?)|([a-zA-Z]{5,8}))");
	var script = "([A-Za-z]{4})";
	var region = "([A-Za-z]{2}|\\d{3})";
	var variant = "([A-Za-z0-9]{5,8}|(\\d[A-Z-a-z0-9]{3}))";
	var singleton = "(\\d|[A-W]|[Y-Z]|[a-w]|[y-z])";
	var extension = "(".concat(singleton, "(-[A-Za-z0-9]{2,8})+)");
	var privateuse = "(x(-[A-Za-z0-9]{1,8})+)";
	var irregular = "((en-GB-oed)|(i-ami)|(i-bnn)|(i-default)|(i-enochian)|(i-hak)|(i-klingon)|(i-lux)|(i-mingo)|(i-navajo)|(i-pwn)|(i-tao)|(i-tay)|(i-tsu)|(sgn-BE-FR)|(sgn-BE-NL)|(sgn-CH-DE))";
	var regular = "((art-lojban)|(cel-gaulish)|(no-bok)|(no-nyn)|(zh-guoyu)|(zh-hakka)|(zh-min)|(zh-min-nan)|(zh-xiang))";
	var grandfathered = "(".concat(irregular, "|").concat(regular, ")");
	var delimiter = "(-|_)";
	var langtag = "".concat(language, "(").concat(delimiter).concat(script, ")?(").concat(delimiter).concat(region, ")?(").concat(delimiter).concat(variant, ")*(").concat(delimiter).concat(extension, ")*(").concat(delimiter).concat(privateuse, ")?");
	var languageTagRegex = new RegExp("(^".concat(privateuse, "$)|(^").concat(grandfathered, "$)|(^").concat(langtag, "$)"));
	function isLocale$1(str) {
		(0, _assertString$39.default)(str);
		return languageTagRegex.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsLocale.js
var require_IsLocale = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsLocale.js"(exports) {
	var __importDefault$11 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsLocale = exports.isLocale = exports.IS_LOCALE = void 0;
	const ValidateBy_1$29 = require_ValidateBy();
	const isLocale_1 = __importDefault$11(require_isLocale());
	exports.IS_LOCALE = "isLocale";
	/**
	* Check if the string is a locale.
	* If given value is not a string, then it returns false.
	*/
	function isLocale(value) {
		return typeof value === "string" && (0, isLocale_1.default)(value);
	}
	exports.isLocale = isLocale;
	/**
	* Check if the string is a locale.
	* If given value is not a string, then it returns false.
	*/
	function IsLocale(validationOptions) {
		return (0, ValidateBy_1$29.ValidateBy)({
			name: exports.IS_LOCALE,
			validator: {
				validate: function(value, args) {
					return isLocale(value);
				},
				defaultMessage: (0, ValidateBy_1$29.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be locale";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsLocale = IsLocale;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMagnetURI.js
var require_isMagnetURI = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMagnetURI.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isMagnetURI$1;
	var _assertString$38 = _interopRequireDefault$45(require_assertString());
	function _interopRequireDefault$45(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var magnetURIComponent = /(?:^magnet:\?|[^?&]&)xt(?:\.1)?=urn:(?:(?:aich|bitprint|btih|ed2k|ed2khash|kzhash|md5|sha1|tree:tiger):[a-z0-9]{32}(?:[a-z0-9]{8})?|btmh:1220[a-z0-9]{64})(?:$|&)/i;
	function isMagnetURI$1(url) {
		(0, _assertString$38.default)(url);
		if (url.indexOf("magnet:?") !== 0) return false;
		return magnetURIComponent.test(url);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMagnetURI.js
var require_IsMagnetURI = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMagnetURI.js"(exports) {
	var __importDefault$10 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsMagnetURI = exports.isMagnetURI = exports.IS_MAGNET_URI = void 0;
	const ValidateBy_1$28 = require_ValidateBy();
	const isMagnetURI_1 = __importDefault$10(require_isMagnetURI());
	exports.IS_MAGNET_URI = "isMagnetURI";
	/**
	* Check if the string is a magnet uri format.
	* If given value is not a string, then it returns false.
	*/
	function isMagnetURI(value) {
		return typeof value === "string" && (0, isMagnetURI_1.default)(value);
	}
	exports.isMagnetURI = isMagnetURI;
	/**
	* Check if the string is a magnet uri format.
	* If given value is not a string, then it returns false.
	*/
	function IsMagnetURI(validationOptions) {
		return (0, ValidateBy_1$28.ValidateBy)({
			name: exports.IS_MAGNET_URI,
			validator: {
				validate: function(value, args) {
					return isMagnetURI(value);
				},
				defaultMessage: (0, ValidateBy_1$28.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be magnet uri format";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsMagnetURI = IsMagnetURI;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMimeType.js
var require_isMimeType = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMimeType.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isMimeType$1;
	var _assertString$37 = _interopRequireDefault$44(require_assertString());
	function _interopRequireDefault$44(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var mimeTypeSimple = new RegExp("^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+_]{1,100}$", "i");
	var mimeTypeText = new RegExp("^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$", "i");
	var mimeTypeMultipart = new RegExp("^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$", "i");
	function isMimeType$1(str) {
		(0, _assertString$37.default)(str);
		return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMimeType.js
var require_IsMimeType = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsMimeType.js"(exports) {
	var __importDefault$9 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsMimeType = exports.isMimeType = exports.IS_MIME_TYPE = void 0;
	const ValidateBy_1$27 = require_ValidateBy();
	const isMimeType_1 = __importDefault$9(require_isMimeType());
	exports.IS_MIME_TYPE = "isMimeType";
	/**
	* Check if the string matches to a valid MIME type format
	* If given value is not a string, then it returns false.
	*/
	function isMimeType(value) {
		return typeof value === "string" && (0, isMimeType_1.default)(value);
	}
	exports.isMimeType = isMimeType;
	/**
	* Check if the string matches to a valid MIME type format
	* If given value is not a string, then it returns false.
	*/
	function IsMimeType(validationOptions) {
		return (0, ValidateBy_1$27.ValidateBy)({
			name: exports.IS_MIME_TYPE,
			validator: {
				validate: function(value, args) {
					return isMimeType(value);
				},
				defaultMessage: (0, ValidateBy_1$27.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be MIME type format";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsMimeType = IsMimeType;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isOctal.js
var require_isOctal = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isOctal.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isOctal$1;
	var _assertString$36 = _interopRequireDefault$43(require_assertString());
	function _interopRequireDefault$43(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var octal = new RegExp("^(0o)?[0-7]+$", "i");
	function isOctal$1(str) {
		(0, _assertString$36.default)(str);
		return octal.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsOctal.js
var require_IsOctal = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsOctal.js"(exports) {
	var __importDefault$8 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsOctal = exports.isOctal = exports.IS_OCTAL = void 0;
	const ValidateBy_1$26 = require_ValidateBy();
	const isOctal_1 = __importDefault$8(require_isOctal());
	exports.IS_OCTAL = "isOctal";
	/**
	* Check if the string is a valid octal number.
	* If given value is not a string, then it returns false.
	*/
	function isOctal(value) {
		return typeof value === "string" && (0, isOctal_1.default)(value);
	}
	exports.isOctal = isOctal;
	/**
	* Check if the string is a valid octal number.
	* If given value is not a string, then it returns false.
	*/
	function IsOctal(validationOptions) {
		return (0, ValidateBy_1$26.ValidateBy)({
			name: exports.IS_OCTAL,
			validator: {
				validate: function(value, args) {
					return isOctal(value);
				},
				defaultMessage: (0, ValidateBy_1$26.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be valid octal number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsOctal = IsOctal;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isPassportNumber.js
var require_isPassportNumber = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isPassportNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isPassportNumber$1;
	exports.locales = void 0;
	var _assertString$35 = _interopRequireDefault$42(require_assertString());
	function _interopRequireDefault$42(e) {
		return e && e.__esModule ? e : { default: e };
	}
	/**
	* Reference:
	* https://en.wikipedia.org/ -- Wikipedia
	* https://docs.microsoft.com/en-us/microsoft-365/compliance/eu-passport-number -- EU Passport Number
	* https://countrycode.org/ -- Country Codes
	*/
	var passportRegexByCountryCode = {
		AM: /^[A-Z]{2}\d{7}$/,
		AR: /^[A-Z]{3}\d{6}$/,
		AT: /^[A-Z]\d{7}$/,
		AU: /^[A-Z]\d{7}$/,
		AZ: /^[A-Z]{1}\d{8}$/,
		BE: /^[A-Z]{2}\d{6}$/,
		BG: /^\d{9}$/,
		BR: /^[A-Z]{2}\d{6}$/,
		BY: /^[A-Z]{2}\d{7}$/,
		CA: /^[A-Z]{2}\d{6}$|^[A-Z]\d{6}[A-Z]{2}$/,
		CH: /^[A-Z]\d{7}$/,
		CN: /^G\d{8}$|^E(?![IO])[A-Z0-9]\d{7}$/,
		CY: new RegExp("^[A-Z](\\d{6}|\\d{8})$", ""),
		CZ: /^\d{8}$/,
		DE: /^[CFGHJKLMNPRTVWXYZ0-9]{9}$/,
		DK: /^\d{9}$/,
		DZ: /^\d{9}$/,
		EE: new RegExp("^([A-Z]\\d{7}|[A-Z]{2}\\d{7})$", ""),
		ES: new RegExp("^[A-Z0-9]{2}([A-Z0-9]?)\\d{6}$", ""),
		FI: /^[A-Z]{2}\d{7}$/,
		FR: /^\d{2}[A-Z]{2}\d{5}$/,
		GB: /^\d{9}$/,
		GR: /^[A-Z]{2}\d{7}$/,
		HR: /^\d{9}$/,
		HU: new RegExp("^[A-Z]{2}(\\d{6}|\\d{7})$", ""),
		IE: /^[A-Z0-9]{2}\d{7}$/,
		IN: /^[A-Z]{1}-?\d{7}$/,
		ID: /^[A-C]\d{7}$/,
		IR: /^[A-Z]\d{8}$/,
		IS: new RegExp("^(A)\\d{7}$", ""),
		IT: /^[A-Z0-9]{2}\d{7}$/,
		JM: /^[Aa]\d{7}$/,
		JP: /^[A-Z]{2}\d{7}$/,
		KR: /^[MS]\d{8}$/,
		KZ: /^[a-zA-Z]\d{7}$/,
		LI: /^[a-zA-Z]\d{5}$/,
		LT: /^[A-Z0-9]{8}$/,
		LU: /^[A-Z0-9]{8}$/,
		LV: /^[A-Z0-9]{2}\d{7}$/,
		LY: /^[A-Z0-9]{8}$/,
		MT: /^\d{7}$/,
		MZ: new RegExp("^([A-Z]{2}\\d{7})|(\\d{2}[A-Z]{2}\\d{5})$", ""),
		MY: /^[AHK]\d{8}$/,
		MX: /^\d{10,11}$/,
		NL: /^[A-Z]{2}[A-Z0-9]{6}\d$/,
		NZ: new RegExp("^([Ll]([Aa]|[Dd]|[Ff]|[Hh])|[Ee]([Aa]|[Pp])|[Nn])\\d{6}$", ""),
		PH: new RegExp("^([A-Z](\\d{6}|\\d{7}[A-Z]))|([A-Z]{2}(\\d{6}|\\d{7}))$", ""),
		PK: /^[A-Z]{2}\d{7}$/,
		PL: /^[A-Z]{2}\d{7}$/,
		PT: /^[A-Z]\d{6}$/,
		RO: /^\d{8,9}$/,
		RU: /^\d{9}$/,
		SE: /^\d{8}$/,
		SL: new RegExp("^(P)[A-Z]\\d{7}$", ""),
		SK: /^[0-9A-Z]\d{7}$/,
		TH: /^[A-Z]{1,2}\d{6,7}$/,
		TR: /^[A-Z]\d{8}$/,
		UA: /^[A-Z]{2}\d{6}$/,
		US: /^\d{9}$|^[A-Z]\d{8}$/,
		ZA: /^[TAMD]\d{8}$/
	};
	var locales$1 = exports.locales = Object.keys(passportRegexByCountryCode);
	/**
	* Check if str is a valid passport number
	* relative to provided ISO Country Code.
	*
	* @param {string} str
	* @param {string} countryCode
	* @return {boolean}
	*/
	function isPassportNumber$1(str, countryCode) {
		(0, _assertString$35.default)(str);
		/** Remove All Whitespaces, Convert to UPPERCASE */
		var normalizedStr = str.replace(/\s/g, "").toUpperCase();
		return countryCode.toUpperCase() in passportRegexByCountryCode && passportRegexByCountryCode[countryCode].test(normalizedStr);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsPassportNumber.js
var require_IsPassportNumber = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsPassportNumber.js"(exports) {
	var __importDefault$7 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsPassportNumber = exports.isPassportNumber = exports.IS_PASSPORT_NUMBER = void 0;
	const ValidateBy_1$25 = require_ValidateBy();
	const isPassportNumber_1 = __importDefault$7(require_isPassportNumber());
	exports.IS_PASSPORT_NUMBER = "isPassportNumber";
	/**
	* Check if the string is a valid passport number relative to a specific country code.
	* If given value is not a string, then it returns false.
	*/
	function isPassportNumber(value, countryCode) {
		return typeof value === "string" && (0, isPassportNumber_1.default)(value, countryCode);
	}
	exports.isPassportNumber = isPassportNumber;
	/**
	* Check if the string is a valid passport number relative to a specific country code.
	* If given value is not a string, then it returns false.
	*/
	function IsPassportNumber(countryCode, validationOptions) {
		return (0, ValidateBy_1$25.ValidateBy)({
			name: exports.IS_PASSPORT_NUMBER,
			constraints: [countryCode],
			validator: {
				validate: function(value, args) {
					return isPassportNumber(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$25.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be valid passport number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsPassportNumber = IsPassportNumber;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isPostalCode.js
var require_isPostalCode = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isPostalCode.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isPostalCode$1;
	exports.locales = void 0;
	var _assertString$34 = _interopRequireDefault$41(require_assertString());
	function _interopRequireDefault$41(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var threeDigit = /^\d{3}$/;
	var fourDigit = /^\d{4}$/;
	var fiveDigit = /^\d{5}$/;
	var sixDigit = /^\d{6}$/;
	var patterns = {
		AD: /^AD\d{3}$/,
		AT: fourDigit,
		AU: fourDigit,
		AZ: /^AZ\d{4}$/,
		BA: new RegExp("^([7-8]\\d{4}$)", ""),
		BD: new RegExp("^([1-8][0-9]{3}|9[0-4][0-9]{2})$", ""),
		BE: fourDigit,
		BG: fourDigit,
		BR: /^\d{5}-?\d{3}$/,
		BY: /^2[1-4]\d{4}$/,
		CA: /^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJ-NPRSTV-Z][\s\-]?\d[ABCEGHJ-NPRSTV-Z]\d$/i,
		CH: fourDigit,
		CN: new RegExp("^(0[1-7]|1[012356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[1-5]|8[1345]|9[09])\\d{4}$", ""),
		CO: new RegExp("^(05|08|11|13|15|17|18|19|20|23|25|27|41|44|47|50|52|54|63|66|68|70|73|76|81|85|86|88|91|94|95|97|99)(\\d{4})$", ""),
		CZ: /^\d{3}\s?\d{2}$/,
		DE: fiveDigit,
		DK: fourDigit,
		DO: fiveDigit,
		DZ: fiveDigit,
		EE: fiveDigit,
		ES: new RegExp("^(5[0-2]{1}|[0-4]{1}\\d{1})\\d{3}$", ""),
		FI: fiveDigit,
		FR: /^(?:(?:0[1-9]|[1-8]\d|9[0-5])\d{3}|97[1-46]\d{2})$/,
		GB: new RegExp("^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$", "i"),
		GR: /^\d{3}\s?\d{2}$/,
		HR: new RegExp("^([1-5]\\d{4}$)", ""),
		HT: /^HT\d{4}$/,
		HU: fourDigit,
		ID: fiveDigit,
		IE: /^(?!.*(?:o))[A-Za-z]\d[\dw]\s\w{4}$/i,
		IL: new RegExp("^(\\d{5}|\\d{7})$", ""),
		IN: new RegExp("^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$", ""),
		IR: /^(?!(\d)\1{3})[13-9]{4}[1346-9][013-9]{5}$/,
		IS: threeDigit,
		IT: fiveDigit,
		JP: /^\d{3}\-\d{4}$/,
		KE: fiveDigit,
		KR: new RegExp("^(\\d{5}|\\d{6})$", ""),
		LI: new RegExp("^(948[5-9]|949[0-7])$", ""),
		LT: /^LT\-\d{5}$/,
		LU: fourDigit,
		LV: /^LV\-\d{4}$/,
		LK: fiveDigit,
		MG: threeDigit,
		MX: fiveDigit,
		MT: /^[A-Za-z]{3}\s{0,1}\d{4}$/,
		MY: fiveDigit,
		NL: /^[1-9]\d{3}\s?(?!sa|sd|ss)[a-z]{2}$/i,
		NO: fourDigit,
		NP: new RegExp("^(10|21|22|32|33|34|44|45|56|57)\\d{3}$|^(977)$", "i"),
		NZ: fourDigit,
		PK: fiveDigit,
		PL: /^\d{2}\-\d{3}$/,
		PR: new RegExp("^00[679]\\d{2}([ -]\\d{4})?$", ""),
		PT: /^\d{4}\-\d{3}?$/,
		RO: sixDigit,
		RU: sixDigit,
		SA: fiveDigit,
		SE: /^[1-9]\d{2}\s?\d{2}$/,
		SG: sixDigit,
		SI: fourDigit,
		SK: /^\d{3}\s?\d{2}$/,
		TH: fiveDigit,
		TN: fourDigit,
		TW: new RegExp("^\\d{3}(\\d{2,3})?$", ""),
		UA: fiveDigit,
		US: new RegExp("^\\d{5}(-\\d{4})?$", ""),
		ZA: fourDigit,
		ZM: fiveDigit
	};
	var locales = exports.locales = Object.keys(patterns);
	function isPostalCode$1(str, locale$1) {
		(0, _assertString$34.default)(str);
		if (locale$1 in patterns) return patterns[locale$1].test(str);
		else if (locale$1 === "any") {
			for (var key in patterns)
 // istanbul ignore else
			if (patterns.hasOwnProperty(key)) {
				var pattern = patterns[key];
				if (pattern.test(str)) return true;
			}
			return false;
		}
		throw new Error("Invalid locale '".concat(locale$1, "'"));
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsPostalCode.js
var require_IsPostalCode = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsPostalCode.js"(exports) {
	var __importDefault$6 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsPostalCode = exports.isPostalCode = exports.IS_POSTAL_CODE = void 0;
	const ValidateBy_1$24 = require_ValidateBy();
	const isPostalCode_1 = __importDefault$6(require_isPostalCode());
	exports.IS_POSTAL_CODE = "isPostalCode";
	/**
	* Check if the string is a postal code, in the specified locale.
	* If given value is not a string, then it returns false.
	*/
	function isPostalCode(value, locale$1) {
		return typeof value === "string" && (0, isPostalCode_1.default)(value, locale$1);
	}
	exports.isPostalCode = isPostalCode;
	/**
	* Check if the string is a postal code, in the specified locale.
	* If given value is not a string, then it returns false.
	*/
	function IsPostalCode(locale$1, validationOptions) {
		return (0, ValidateBy_1$24.ValidateBy)({
			name: exports.IS_POSTAL_CODE,
			constraints: [locale$1],
			validator: {
				validate: function(value, args) {
					return isPostalCode(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$24.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a postal code";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsPostalCode = IsPostalCode;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isRFC3339.js
var require_isRFC3339 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isRFC3339.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isRFC3339$1;
	var _assertString$33 = _interopRequireDefault$40(require_assertString());
	function _interopRequireDefault$40(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var dateFullYear = /[0-9]{4}/;
	var dateMonth = new RegExp("(0[1-9]|1[0-2])", "");
	var dateMDay = new RegExp("([12]\\d|0[1-9]|3[01])", "");
	var timeHour = new RegExp("([01][0-9]|2[0-3])", "");
	var timeMinute = /[0-5][0-9]/;
	var timeSecond = new RegExp("([0-5][0-9]|60)", "");
	var timeSecFrac = new RegExp("(\\.[0-9]+)?", "");
	var timeNumOffset = new RegExp("[-+]".concat(timeHour.source, ":").concat(timeMinute.source));
	var timeOffset = new RegExp("([zZ]|".concat(timeNumOffset.source, ")"));
	var partialTime = new RegExp("".concat(timeHour.source, ":").concat(timeMinute.source, ":").concat(timeSecond.source).concat(timeSecFrac.source));
	var fullDate = new RegExp("".concat(dateFullYear.source, "-").concat(dateMonth.source, "-").concat(dateMDay.source));
	var fullTime = new RegExp("".concat(partialTime.source).concat(timeOffset.source));
	var rfc3339 = new RegExp("^".concat(fullDate.source, "[ tT]").concat(fullTime.source, "$"));
	function isRFC3339$1(str) {
		(0, _assertString$33.default)(str);
		return rfc3339.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsRFC3339.js
var require_IsRFC3339 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsRFC3339.js"(exports) {
	var __importDefault$5 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsRFC3339 = exports.isRFC3339 = exports.IS_RFC_3339 = void 0;
	const ValidateBy_1$23 = require_ValidateBy();
	const isRFC3339_1 = __importDefault$5(require_isRFC3339());
	exports.IS_RFC_3339 = "isRFC3339";
	/**
	* Check if the string is a valid RFC 3339 date.
	* If given value is not a string, then it returns false.
	*/
	function isRFC3339(value) {
		return typeof value === "string" && (0, isRFC3339_1.default)(value);
	}
	exports.isRFC3339 = isRFC3339;
	/**
	* Check if the string is a valid RFC 3339 date.
	* If given value is not a string, then it returns false.
	*/
	function IsRFC3339(validationOptions) {
		return (0, ValidateBy_1$23.ValidateBy)({
			name: exports.IS_RFC_3339,
			validator: {
				validate: function(value, args) {
					return isRFC3339(value);
				},
				defaultMessage: (0, ValidateBy_1$23.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be RFC 3339 date";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsRFC3339 = IsRFC3339;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isRgbColor.js
var require_isRgbColor = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isRgbColor.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isRgbColor$1;
	var _assertString$32 = _interopRequireDefault$39(require_assertString());
	function _interopRequireDefault$39(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _typeof$6(o) {
		"@babel/helpers - typeof";
		return _typeof$6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof$6(o);
	}
	var rgbColor = new RegExp("^rgb\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){2}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\)$", "");
	var rgbaColor = new RegExp("^rgba\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){3}(0?\\.\\d\\d?|1(\\.0)?|0(\\.0)?)\\)$", "");
	var rgbColorPercent = new RegExp("^rgb\\((([0-9]%|[1-9][0-9]%|100%),){2}([0-9]%|[1-9][0-9]%|100%)\\)$", "");
	var rgbaColorPercent = new RegExp("^rgba\\((([0-9]%|[1-9][0-9]%|100%),){3}(0?\\.\\d\\d?|1(\\.0)?|0(\\.0)?)\\)$", "");
	var startsWithRgb = /^rgba?/;
	function isRgbColor$1(str, options) {
		(0, _assertString$32.default)(str);
		var allowSpaces = false;
		var includePercentValues = true;
		if (_typeof$6(options) !== "object") {
			if (arguments.length >= 2) includePercentValues = arguments[1];
		} else {
			allowSpaces = options.allowSpaces !== void 0 ? options.allowSpaces : allowSpaces;
			includePercentValues = options.includePercentValues !== void 0 ? options.includePercentValues : includePercentValues;
		}
		if (allowSpaces) {
			if (!startsWithRgb.test(str)) return false;
			str = str.replace(/\s/g, "");
		}
		if (!includePercentValues) return rgbColor.test(str) || rgbaColor.test(str);
		return rgbColor.test(str) || rgbaColor.test(str) || rgbColorPercent.test(str) || rgbaColorPercent.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsRgbColor.js
var require_IsRgbColor = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsRgbColor.js"(exports) {
	var __importDefault$4 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsRgbColor = exports.isRgbColor = exports.IS_RGB_COLOR = void 0;
	const ValidateBy_1$22 = require_ValidateBy();
	const isRgbColor_1 = __importDefault$4(require_isRgbColor());
	exports.IS_RGB_COLOR = "isRgbColor";
	/**
	* Check if the string is a rgb or rgba color.
	* `includePercentValues` defaults to true. If you don't want to allow to set rgb or rgba values with percents, like rgb(5%,5%,5%), or rgba(90%,90%,90%,.3), then set it to false.
	* If given value is not a string, then it returns false.
	*/
	function isRgbColor(value, includePercentValues) {
		return typeof value === "string" && (0, isRgbColor_1.default)(value, includePercentValues);
	}
	exports.isRgbColor = isRgbColor;
	/**
	* Check if the string is a rgb or rgba color.
	* `includePercentValues` defaults to true. If you don't want to allow to set rgb or rgba values with percents, like rgb(5%,5%,5%), or rgba(90%,90%,90%,.3), then set it to false.
	* If given value is not a string, then it returns false.
	*/
	function IsRgbColor(includePercentValues, validationOptions) {
		return (0, ValidateBy_1$22.ValidateBy)({
			name: exports.IS_RGB_COLOR,
			constraints: [includePercentValues],
			validator: {
				validate: function(value, args) {
					return isRgbColor(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$22.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be RGB color";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsRgbColor = IsRgbColor;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/multilineRegex.js
var require_multilineRegex = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/multilineRegex.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = multilineRegexp;
	/**
	* Build RegExp object from an array
	* of multiple/multi-line regexp parts
	*
	* @param {string[]} parts
	* @param {string} flags
	* @return {object} - RegExp object
	*/
	function multilineRegexp(parts, flags) {
		var regexpAsStringLiteral = parts.join("");
		return new RegExp(regexpAsStringLiteral, flags);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isSemVer.js
var require_isSemVer = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isSemVer.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isSemVer$1;
	var _assertString$31 = _interopRequireDefault$38(require_assertString());
	var _multilineRegex = _interopRequireDefault$38(require_multilineRegex());
	function _interopRequireDefault$38(e) {
		return e && e.__esModule ? e : { default: e };
	}
	/**
	* Regular Expression to match
	* semantic versioning (SemVer)
	* built from multi-line, multi-parts regexp
	* Reference: https://semver.org/
	*/
	var semanticVersioningRegex = (0, _multilineRegex.default)([
		"^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)",
		"(?:-((?:0|[1-9]\\d*|\\d*[a-z-][0-9a-z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-z-][0-9a-z-]*))*))",
		"?(?:\\+([0-9a-z-]+(?:\\.[0-9a-z-]+)*))?$"
	], "i");
	function isSemVer$1(str) {
		(0, _assertString$31.default)(str);
		return semanticVersioningRegex.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsSemVer.js
var require_IsSemVer = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsSemVer.js"(exports) {
	var __importDefault$3 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsSemVer = exports.isSemVer = exports.IS_SEM_VER = void 0;
	const ValidateBy_1$21 = require_ValidateBy();
	const isSemVer_1 = __importDefault$3(require_isSemVer());
	exports.IS_SEM_VER = "isSemVer";
	/**
	* Check if the string is a Semantic Versioning Specification (SemVer).
	* If given value is not a string, then it returns false.
	*/
	function isSemVer(value) {
		return typeof value === "string" && (0, isSemVer_1.default)(value);
	}
	exports.isSemVer = isSemVer;
	/**
	* Check if the string is a Semantic Versioning Specification (SemVer).
	* If given value is not a string, then it returns false.
	*/
	function IsSemVer(validationOptions) {
		return (0, ValidateBy_1$21.ValidateBy)({
			name: exports.IS_SEM_VER,
			validator: {
				validate: function(value, args) {
					return isSemVer(value);
				},
				defaultMessage: (0, ValidateBy_1$21.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a Semantic Versioning Specification";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsSemVer = IsSemVer;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/toDate.js
var require_toDate = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/toDate.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = toDate;
	var _assertString$30 = _interopRequireDefault$37(require_assertString());
	function _interopRequireDefault$37(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function toDate(date) {
		(0, _assertString$30.default)(date);
		date = Date.parse(date);
		return !isNaN(date) ? new Date(date) : null;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/toInt.js
var require_toInt = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/toInt.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = toInt;
	var _assertString$29 = _interopRequireDefault$36(require_assertString());
	function _interopRequireDefault$36(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function toInt(str, radix) {
		(0, _assertString$29.default)(str);
		return parseInt(str, radix || 10);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/toBoolean.js
var require_toBoolean = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/toBoolean.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = toBoolean;
	var _assertString$28 = _interopRequireDefault$35(require_assertString());
	function _interopRequireDefault$35(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function toBoolean(str, strict) {
		(0, _assertString$28.default)(str);
		if (strict) return str === "1" || /^true$/i.test(str);
		return str !== "0" && !/^false$/i.test(str) && str !== "";
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/equals.js
var require_equals = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/equals.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = equals;
	var _assertString$27 = _interopRequireDefault$34(require_assertString());
	function _interopRequireDefault$34(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function equals(str, comparison) {
		(0, _assertString$27.default)(str);
		return str === comparison;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIPRange.js
var require_isIPRange = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIPRange.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isIPRange;
	var _assertString$26 = _interopRequireDefault$33(require_assertString());
	var _isIP$1 = _interopRequireDefault$33(require_isIP());
	function _interopRequireDefault$33(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var subnetMaybe = /^\d{1,3}$/;
	var v4Subnet = 32;
	var v6Subnet = 128;
	function isIPRange(str) {
		var version$1 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
		(0, _assertString$26.default)(str);
		var parts = str.split("/");
		if (parts.length !== 2) return false;
		if (!subnetMaybe.test(parts[1])) return false;
		if (parts[1].length > 1 && parts[1].startsWith("0")) return false;
		var isValidIP = (0, _isIP$1.default)(parts[0], version$1);
		if (!isValidIP) return false;
		var expectedSubnet = null;
		switch (String(version$1)) {
			case "4":
				expectedSubnet = v4Subnet;
				break;
			case "6":
				expectedSubnet = v6Subnet;
				break;
			default: expectedSubnet = (0, _isIP$1.default)(parts[0], "6") ? v6Subnet : v4Subnet;
		}
		return parts[1] <= expectedSubnet && parts[1] >= 0;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isDate.js
var require_isDate$1 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isDate.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isDate$1;
	var _merge$4 = _interopRequireDefault$32(require_merge$1());
	function _interopRequireDefault$32(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _slicedToArray$1(r, e) {
		return _arrayWithHoles$1(r) || _iterableToArrayLimit$1(r, e) || _unsupportedIterableToArray$2(r, e) || _nonIterableRest$1();
	}
	function _nonIterableRest$1() {
		throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _iterableToArrayLimit$1(r, l) {
		var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
		if (null != t) {
			var e, n, i$1, u, a = [], f = !0, o = !1;
			try {
				if (i$1 = (t = t.call(r)).next, 0 === l) {
					if (Object(t) !== t) return;
					f = !1;
				} else for (; !(f = (e = i$1.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
			} catch (r$1) {
				o = !0, n = r$1;
			} finally {
				try {
					if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
				} finally {
					if (o) throw n;
				}
			}
			return a;
		}
	}
	function _arrayWithHoles$1(r) {
		if (Array.isArray(r)) return r;
	}
	function _createForOfIteratorHelper$1(r, e) {
		var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
		if (!t) {
			if (Array.isArray(r) || (t = _unsupportedIterableToArray$2(r)) || e && r && "number" == typeof r.length) {
				t && (r = t);
				var _n = 0, F = function F$1() {};
				return {
					s: F,
					n: function n() {
						return _n >= r.length ? { done: !0 } : {
							done: !1,
							value: r[_n++]
						};
					},
					e: function e$1(r$1) {
						throw r$1;
					},
					f: F
				};
			}
			throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
		}
		var o, a = !0, u = !1;
		return {
			s: function s() {
				t = t.call(r);
			},
			n: function n() {
				var r$1 = t.next();
				return a = r$1.done, r$1;
			},
			e: function e$1(r$1) {
				u = !0, o = r$1;
			},
			f: function f() {
				try {
					a || null == t.return || t.return();
				} finally {
					if (u) throw o;
				}
			}
		};
	}
	function _unsupportedIterableToArray$2(r, a) {
		if (r) {
			if ("string" == typeof r) return _arrayLikeToArray$2(r, a);
			var t = {}.toString.call(r).slice(8, -1);
			return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray$2(r, a) : void 0;
		}
	}
	function _arrayLikeToArray$2(r, a) {
		(null == a || a > r.length) && (a = r.length);
		for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
		return n;
	}
	var default_date_options = {
		format: "YYYY/MM/DD",
		delimiters: ["/", "-"],
		strictMode: false
	};
	function isValidFormat(format) {
		return new RegExp("(^(y{4}|y{2})[.\\/-](m{1,2})[.\\/-](d{1,2})$)|(^(m{1,2})[.\\/-](d{1,2})[.\\/-]((y{4}|y{2})$))|(^(d{1,2})[.\\/-](m{1,2})[.\\/-]((y{4}|y{2})$))", "gi").test(format);
	}
	function zip$2(date, format) {
		var zippedArr = [], len = Math.max(date.length, format.length);
		for (var i$1 = 0; i$1 < len; i$1++) zippedArr.push([date[i$1], format[i$1]]);
		return zippedArr;
	}
	function isDate$1(input, options) {
		if (typeof options === "string") options = (0, _merge$4.default)({ format: options }, default_date_options);
		else options = (0, _merge$4.default)(options, default_date_options);
		if (typeof input === "string" && isValidFormat(options.format)) {
			if (options.strictMode && input.length !== options.format.length) return false;
			var formatDelimiter = options.delimiters.find(function(delimiter$1) {
				return options.format.indexOf(delimiter$1) !== -1;
			});
			var dateDelimiter = options.strictMode ? formatDelimiter : options.delimiters.find(function(delimiter$1) {
				return input.indexOf(delimiter$1) !== -1;
			});
			var dateAndFormat = zip$2(input.split(dateDelimiter), options.format.toLowerCase().split(formatDelimiter));
			var dateObj = {};
			var _iterator = _createForOfIteratorHelper$1(dateAndFormat), _step;
			try {
				for (_iterator.s(); !(_step = _iterator.n()).done;) {
					var _step$value = _slicedToArray$1(_step.value, 2), dateWord = _step$value[0], formatWord = _step$value[1];
					if (!dateWord || !formatWord || dateWord.length !== formatWord.length) return false;
					dateObj[formatWord.charAt(0)] = dateWord;
				}
			} catch (err) {
				_iterator.e(err);
			} finally {
				_iterator.f();
			}
			var fullYear = dateObj.y;
			if (fullYear.startsWith("-")) return false;
			if (dateObj.y.length === 2) {
				var parsedYear = parseInt(dateObj.y, 10);
				if (isNaN(parsedYear)) return false;
				var currentYearLastTwoDigits = (/* @__PURE__ */ new Date()).getFullYear() % 100;
				if (parsedYear < currentYearLastTwoDigits) fullYear = "20".concat(dateObj.y);
				else fullYear = "19".concat(dateObj.y);
			}
			var month = dateObj.m;
			if (dateObj.m.length === 1) month = "0".concat(dateObj.m);
			var day = dateObj.d;
			if (dateObj.d.length === 1) day = "0".concat(dateObj.d);
			return new Date("".concat(fullYear, "-").concat(month, "-").concat(day, "T00:00:00.000Z")).getUTCDate() === +dateObj.d;
		}
		if (!options.strictMode) return Object.prototype.toString.call(input) === "[object Date]" && isFinite(input);
		return false;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isTime.js
var require_isTime = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isTime.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isTime;
	var _merge$3 = _interopRequireDefault$31(require_merge$1());
	function _interopRequireDefault$31(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var default_time_options = {
		hourFormat: "hour24",
		mode: "default"
	};
	var formats = {
		hour24: {
			default: new RegExp("^([01]?[0-9]|2[0-3]):([0-5][0-9])$", ""),
			withSeconds: new RegExp("^([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$", ""),
			withOptionalSeconds: new RegExp("^([01]?[0-9]|2[0-3]):([0-5][0-9])(?::([0-5][0-9]))?$", "")
		},
		hour12: {
			default: new RegExp("^(0?[1-9]|1[0-2]):([0-5][0-9]) (A|P)M$", ""),
			withSeconds: new RegExp("^(0?[1-9]|1[0-2]):([0-5][0-9]):([0-5][0-9]) (A|P)M$", ""),
			withOptionalSeconds: new RegExp("^(0?[1-9]|1[0-2]):([0-5][0-9])(?::([0-5][0-9]))? (A|P)M$", "")
		}
	};
	function isTime(input, options) {
		options = (0, _merge$3.default)(options, default_time_options);
		if (typeof input !== "string") return false;
		return formats[options.hourFormat][options.mode].test(input);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isAbaRouting.js
var require_isAbaRouting = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isAbaRouting.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isAbaRouting;
	var _assertString$25 = _interopRequireDefault$30(require_assertString());
	function _interopRequireDefault$30(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var isRoutingReg = /^(?!(1[3-9])|(20)|(3[3-9])|(4[0-9])|(5[0-9])|(60)|(7[3-9])|(8[1-9])|(9[0-2])|(9[3-9]))[0-9]{9}$/;
	function isAbaRouting(str) {
		(0, _assertString$25.default)(str);
		if (!isRoutingReg.test(str)) return false;
		var checkSumVal = 0;
		for (var i$1 = 0; i$1 < str.length; i$1++) if (i$1 % 3 === 0) checkSumVal += str[i$1] * 3;
		else if (i$1 % 3 === 1) checkSumVal += str[i$1] * 7;
		else checkSumVal += str[i$1] * 1;
		return checkSumVal % 10 === 0;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIMEI.js
var require_isIMEI = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIMEI.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isIMEI;
	var _assertString$24 = _interopRequireDefault$29(require_assertString());
	function _interopRequireDefault$29(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var imeiRegexWithoutHyphens = /^[0-9]{15}$/;
	var imeiRegexWithHyphens = /^\d{2}-\d{6}-\d{6}-\d{1}$/;
	function isIMEI(str, options) {
		(0, _assertString$24.default)(str);
		options = options || {};
		var imeiRegex = imeiRegexWithoutHyphens;
		if (options.allow_hyphens) imeiRegex = imeiRegexWithHyphens;
		if (!imeiRegex.test(str)) return false;
		str = str.replace(/-/g, "");
		var sum = 0, mul = 2, l = 14;
		for (var i$1 = 0; i$1 < l; i$1++) {
			var digit = str.substring(l - i$1 - 1, l - i$1);
			var tp = parseInt(digit, 10) * mul;
			if (tp >= 10) sum += tp % 10 + 1;
			else sum += tp;
			if (mul === 1) mul += 1;
			else mul -= 1;
		}
		var chk = (10 - sum % 10) % 10;
		if (chk !== parseInt(str.substring(14, 15), 10)) return false;
		return true;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMD5.js
var require_isMD5 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMD5.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isMD5;
	var _assertString$23 = _interopRequireDefault$28(require_assertString());
	function _interopRequireDefault$28(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var md5 = /^[a-f0-9]{32}$/;
	function isMD5(str) {
		(0, _assertString$23.default)(str);
		return md5.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isEmpty.js
var require_isEmpty$1 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isEmpty.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isEmpty$1;
	var _assertString$22 = _interopRequireDefault$27(require_assertString());
	var _merge$2 = _interopRequireDefault$27(require_merge$1());
	function _interopRequireDefault$27(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var default_is_empty_options = { ignore_whitespace: false };
	function isEmpty$1(str, options) {
		(0, _assertString$22.default)(str);
		options = (0, _merge$2.default)(options, default_is_empty_options);
		return (options.ignore_whitespace ? str.trim().length : str.length) === 0;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isULID.js
var require_isULID = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isULID.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isULID;
	var _assertString$21 = _interopRequireDefault$26(require_assertString());
	function _interopRequireDefault$26(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isULID(str) {
		(0, _assertString$21.default)(str);
		return /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isAfter.js
var require_isAfter = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isAfter.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isAfter;
	var _toDate$2 = _interopRequireDefault$25(require_toDate());
	function _interopRequireDefault$25(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _typeof$5(o) {
		"@babel/helpers - typeof";
		return _typeof$5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof$5(o);
	}
	function isAfter(date, options) {
		var comparisonDate = (_typeof$5(options) === "object" ? options.comparisonDate : options) || Date().toString();
		var comparison = (0, _toDate$2.default)(comparisonDate);
		var original = (0, _toDate$2.default)(date);
		return !!(original && comparison && original > comparison);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBefore.js
var require_isBefore = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBefore.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isBefore;
	var _toDate$1 = _interopRequireDefault$24(require_toDate());
	function _interopRequireDefault$24(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _typeof$4(o) {
		"@babel/helpers - typeof";
		return _typeof$4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof$4(o);
	}
	function isBefore(date, options) {
		var comparisonDate = (_typeof$4(options) === "object" ? options.comparisonDate : options) || Date().toString();
		var comparison = (0, _toDate$1.default)(comparisonDate);
		var original = (0, _toDate$1.default)(date);
		return !!(original && comparison && original < comparison);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIn.js
var require_isIn = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isIn.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isIn;
	var _assertString$20 = _interopRequireDefault$23(require_assertString());
	var _toString = _interopRequireDefault$23(require_toString());
	function _interopRequireDefault$23(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _typeof$3(o) {
		"@babel/helpers - typeof";
		return _typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof$3(o);
	}
	function isIn(str, options) {
		(0, _assertString$20.default)(str);
		var i$1;
		if (Object.prototype.toString.call(options) === "[object Array]") {
			var array = [];
			for (i$1 in options)
 // istanbul ignore else
			if ({}.hasOwnProperty.call(options, i$1)) array[i$1] = (0, _toString.default)(options[i$1]);
			return array.indexOf(str) >= 0;
		} else if (_typeof$3(options) === "object") return options.hasOwnProperty(str);
		else if (options && typeof options.indexOf === "function") return options.indexOf(str) >= 0;
		return false;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/algorithms.js
var require_algorithms = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/util/algorithms.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.iso7064Check = iso7064Check;
	exports.luhnCheck = luhnCheck;
	exports.reverseMultiplyAndSum = reverseMultiplyAndSum;
	exports.verhoeffCheck = verhoeffCheck;
	/**
	* Algorithmic validation functions
	* May be used as is or implemented in the workflow of other validators.
	*/
	function iso7064Check(str) {
		var checkvalue = 10;
		for (var i$1 = 0; i$1 < str.length - 1; i$1++) checkvalue = (parseInt(str[i$1], 10) + checkvalue) % 10 === 0 ? 10 * 2 % 11 : (parseInt(str[i$1], 10) + checkvalue) % 10 * 2 % 11;
		checkvalue = checkvalue === 1 ? 0 : 11 - checkvalue;
		return checkvalue === parseInt(str[10], 10);
	}
	function luhnCheck(str) {
		var checksum = 0;
		var second = false;
		for (var i$1 = str.length - 1; i$1 >= 0; i$1--) {
			if (second) {
				var product = parseInt(str[i$1], 10) * 2;
				if (product > 9) checksum += product.toString().split("").map(function(a) {
					return parseInt(a, 10);
				}).reduce(function(a, b) {
					return a + b;
				}, 0);
				else checksum += product;
			} else checksum += parseInt(str[i$1], 10);
			second = !second;
		}
		return checksum % 10 === 0;
	}
	function reverseMultiplyAndSum(digits, base) {
		var total = 0;
		for (var i$1 = 0; i$1 < digits.length; i$1++) total += digits[i$1] * (base - i$1);
		return total;
	}
	function verhoeffCheck(str) {
		var d_table = [
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9
			],
			[
				1,
				2,
				3,
				4,
				0,
				6,
				7,
				8,
				9,
				5
			],
			[
				2,
				3,
				4,
				0,
				1,
				7,
				8,
				9,
				5,
				6
			],
			[
				3,
				4,
				0,
				1,
				2,
				8,
				9,
				5,
				6,
				7
			],
			[
				4,
				0,
				1,
				2,
				3,
				9,
				5,
				6,
				7,
				8
			],
			[
				5,
				9,
				8,
				7,
				6,
				0,
				4,
				3,
				2,
				1
			],
			[
				6,
				5,
				9,
				8,
				7,
				1,
				0,
				4,
				3,
				2
			],
			[
				7,
				6,
				5,
				9,
				8,
				2,
				1,
				0,
				4,
				3
			],
			[
				8,
				7,
				6,
				5,
				9,
				3,
				2,
				1,
				0,
				4
			],
			[
				9,
				8,
				7,
				6,
				5,
				4,
				3,
				2,
				1,
				0
			]
		];
		var p_table = [
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9
			],
			[
				1,
				5,
				7,
				6,
				2,
				8,
				3,
				0,
				9,
				4
			],
			[
				5,
				8,
				0,
				3,
				7,
				9,
				6,
				1,
				4,
				2
			],
			[
				8,
				9,
				1,
				6,
				0,
				4,
				3,
				5,
				2,
				7
			],
			[
				9,
				4,
				5,
				3,
				1,
				2,
				6,
				8,
				7,
				0
			],
			[
				4,
				2,
				8,
				6,
				5,
				7,
				3,
				9,
				0,
				1
			],
			[
				2,
				7,
				9,
				3,
				8,
				0,
				6,
				4,
				1,
				5
			],
			[
				7,
				0,
				4,
				6,
				9,
				1,
				3,
				2,
				5,
				8
			]
		];
		var str_copy = str.split("").reverse().join("");
		var checksum = 0;
		for (var i$1 = 0; i$1 < str_copy.length; i$1++) checksum = d_table[checksum][p_table[i$1 % 8][parseInt(str_copy[i$1], 10)]];
		return checksum === 0;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isTaxID.js
var require_isTaxID = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isTaxID.js"(exports, module) {
	function _typeof$2(o) {
		"@babel/helpers - typeof";
		return _typeof$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof$2(o);
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isTaxID;
	var _assertString$19 = _interopRequireDefault$22(require_assertString());
	var algorithms$1 = _interopRequireWildcard$2(require_algorithms());
	var _isDate$1 = _interopRequireDefault$22(require_isDate$1());
	function _interopRequireWildcard$2(e, t) {
		if ("function" == typeof WeakMap) var r = /* @__PURE__ */ new WeakMap(), n = /* @__PURE__ */ new WeakMap();
		return (_interopRequireWildcard$2 = function _interopRequireWildcard$10(e$1, t$1) {
			if (!t$1 && e$1 && e$1.__esModule) return e$1;
			var o, i$1, f = {
				__proto__: null,
				default: e$1
			};
			if (null === e$1 || "object" != _typeof$2(e$1) && "function" != typeof e$1) return f;
			if (o = t$1 ? n : r) {
				if (o.has(e$1)) return o.get(e$1);
				o.set(e$1, f);
			}
			for (var _t in e$1) "default" !== _t && {}.hasOwnProperty.call(e$1, _t) && ((i$1 = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e$1, _t)) && (i$1.get || i$1.set) ? o(f, _t, i$1) : f[_t] = e$1[_t]);
			return f;
		})(e, t);
	}
	function _interopRequireDefault$22(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _toConsumableArray(r) {
		return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray$1(r) || _nonIterableSpread();
	}
	function _nonIterableSpread() {
		throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$1(r, a) {
		if (r) {
			if ("string" == typeof r) return _arrayLikeToArray$1(r, a);
			var t = {}.toString.call(r).slice(8, -1);
			return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray$1(r, a) : void 0;
		}
	}
	function _iterableToArray(r) {
		if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
	}
	function _arrayWithoutHoles(r) {
		if (Array.isArray(r)) return _arrayLikeToArray$1(r);
	}
	function _arrayLikeToArray$1(r, a) {
		(null == a || a > r.length) && (a = r.length);
		for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
		return n;
	}
	/**
	* TIN Validation
	* Validates Tax Identification Numbers (TINs) from the US, EU member states and the United Kingdom.
	*
	* EU-UK:
	* National TIN validity is calculated using public algorithms as made available by DG TAXUD.
	*
	* See `https://ec.europa.eu/taxation_customs/tin/specs/FS-TIN%20Algorithms-Public.docx` for more information.
	*
	* US:
	* An Employer Identification Number (EIN), also known as a Federal Tax Identification Number,
	*  is used to identify a business entity.
	*
	* NOTES:
	*  - Prefix 47 is being reserved for future use
	*  - Prefixes 26, 27, 45, 46 and 47 were previously assigned by the Philadelphia campus.
	*
	* See `http://www.irs.gov/Businesses/Small-Businesses-&-Self-Employed/How-EINs-are-Assigned-and-Valid-EIN-Prefixes`
	* for more information.
	*/
	function bgBgCheck(tin) {
		var century_year = tin.slice(0, 2);
		var month = parseInt(tin.slice(2, 4), 10);
		if (month > 40) {
			month -= 40;
			century_year = "20".concat(century_year);
		} else if (month > 20) {
			month -= 20;
			century_year = "18".concat(century_year);
		} else century_year = "19".concat(century_year);
		if (month < 10) month = "0".concat(month);
		var date = "".concat(century_year, "/").concat(month, "/").concat(tin.slice(4, 6));
		if (!(0, _isDate$1.default)(date, "YYYY/MM/DD")) return false;
		var digits = tin.split("").map(function(a) {
			return parseInt(a, 10);
		});
		var multip_lookup = [
			2,
			4,
			8,
			5,
			10,
			9,
			7,
			3,
			6
		];
		var checksum = 0;
		for (var i$1 = 0; i$1 < multip_lookup.length; i$1++) checksum += digits[i$1] * multip_lookup[i$1];
		checksum = checksum % 11 === 10 ? 0 : checksum % 11;
		return checksum === digits[9];
	}
	/**
	* Check if an input is a valid Canadian SIN (Social Insurance Number)
	*
	* The Social Insurance Number (SIN) is a 9 digit number that
	* you need to work in Canada or to have access to government programs and benefits.
	*
	* https://en.wikipedia.org/wiki/Social_Insurance_Number
	* https://www.canada.ca/en/employment-social-development/services/sin.html
	* https://www.codercrunch.com/challenge/819302488/sin-validator
	*
	* @param {string} input
	* @return {boolean}
	*/
	function isCanadianSIN(input) {
		var digitsArray = input.split("");
		var even = digitsArray.filter(function(_, idx) {
			return idx % 2;
		}).map(function(i$1) {
			return Number(i$1) * 2;
		}).join("").split("");
		var total = digitsArray.filter(function(_, idx) {
			return !(idx % 2);
		}).concat(even).map(function(i$1) {
			return Number(i$1);
		}).reduce(function(acc, cur) {
			return acc + cur;
		});
		return total % 10 === 0;
	}
	function csCzCheck(tin) {
		tin = tin.replace(/\W/, "");
		var full_year = parseInt(tin.slice(0, 2), 10);
		if (tin.length === 10) if (full_year < 54) full_year = "20".concat(full_year);
		else full_year = "19".concat(full_year);
		else {
			if (tin.slice(6) === "000") return false;
			if (full_year < 54) full_year = "19".concat(full_year);
			else return false;
		}
		if (full_year.length === 3) full_year = [
			full_year.slice(0, 2),
			"0",
			full_year.slice(2)
		].join("");
		var month = parseInt(tin.slice(2, 4), 10);
		if (month > 50) month -= 50;
		if (month > 20) {
			if (parseInt(full_year, 10) < 2004) return false;
			month -= 20;
		}
		if (month < 10) month = "0".concat(month);
		var date = "".concat(full_year, "/").concat(month, "/").concat(tin.slice(4, 6));
		if (!(0, _isDate$1.default)(date, "YYYY/MM/DD")) return false;
		if (tin.length === 10) {
			if (parseInt(tin, 10) % 11 !== 0) {
				var checkdigit = parseInt(tin.slice(0, 9), 10) % 11;
				if (parseInt(full_year, 10) < 1986 && checkdigit === 10) {
					if (parseInt(tin.slice(9), 10) !== 0) return false;
				} else return false;
			}
		}
		return true;
	}
	function deAtCheck(tin) {
		return algorithms$1.luhnCheck(tin);
	}
	function deDeCheck(tin) {
		var digits = tin.split("").map(function(a) {
			return parseInt(a, 10);
		});
		var occurrences = [];
		for (var i$1 = 0; i$1 < digits.length - 1; i$1++) {
			occurrences.push("");
			for (var j = 0; j < digits.length - 1; j++) if (digits[i$1] === digits[j]) occurrences[i$1] += j;
		}
		occurrences = occurrences.filter(function(a) {
			return a.length > 1;
		});
		if (occurrences.length !== 2 && occurrences.length !== 3) return false;
		if (occurrences[0].length === 3) {
			var trip_locations = occurrences[0].split("").map(function(a) {
				return parseInt(a, 10);
			});
			var recurrent = 0;
			for (var _i$1 = 0; _i$1 < trip_locations.length - 1; _i$1++) if (trip_locations[_i$1] + 1 === trip_locations[_i$1 + 1]) recurrent += 1;
			if (recurrent === 2) return false;
		}
		return algorithms$1.iso7064Check(tin);
	}
	function dkDkCheck(tin) {
		tin = tin.replace(/\W/, "");
		var year = parseInt(tin.slice(4, 6), 10);
		var century_digit = tin.slice(6, 7);
		switch (century_digit) {
			case "0":
			case "1":
			case "2":
			case "3":
				year = "19".concat(year);
				break;
			case "4":
			case "9":
				if (year < 37) year = "20".concat(year);
				else year = "19".concat(year);
				break;
			default:
				if (year < 37) year = "20".concat(year);
				else if (year > 58) year = "18".concat(year);
				else return false;
				break;
		}
		if (year.length === 3) year = [
			year.slice(0, 2),
			"0",
			year.slice(2)
		].join("");
		var date = "".concat(year, "/").concat(tin.slice(2, 4), "/").concat(tin.slice(0, 2));
		if (!(0, _isDate$1.default)(date, "YYYY/MM/DD")) return false;
		var digits = tin.split("").map(function(a) {
			return parseInt(a, 10);
		});
		var checksum = 0;
		var weight = 4;
		for (var i$1 = 0; i$1 < 9; i$1++) {
			checksum += digits[i$1] * weight;
			weight -= 1;
			if (weight === 1) weight = 7;
		}
		checksum %= 11;
		if (checksum === 1) return false;
		return checksum === 0 ? digits[9] === 0 : digits[9] === 11 - checksum;
	}
	function elCyCheck(tin) {
		var digits = tin.slice(0, 8).split("").map(function(a) {
			return parseInt(a, 10);
		});
		var checksum = 0;
		for (var i$1 = 1; i$1 < digits.length; i$1 += 2) checksum += digits[i$1];
		for (var _i2$1 = 0; _i2$1 < digits.length; _i2$1 += 2) if (digits[_i2$1] < 2) checksum += 1 - digits[_i2$1];
		else {
			checksum += 2 * (digits[_i2$1] - 2) + 5;
			if (digits[_i2$1] > 4) checksum += 2;
		}
		return String.fromCharCode(checksum % 26 + 65) === tin.charAt(8);
	}
	function elGrCheck(tin) {
		var digits = tin.split("").map(function(a) {
			return parseInt(a, 10);
		});
		var checksum = 0;
		for (var i$1 = 0; i$1 < 8; i$1++) checksum += digits[i$1] * Math.pow(2, 8 - i$1);
		return checksum % 11 % 10 === digits[8];
	}
	function enIeCheck(tin) {
		var checksum = algorithms$1.reverseMultiplyAndSum(tin.split("").slice(0, 7).map(function(a) {
			return parseInt(a, 10);
		}), 8);
		if (tin.length === 9 && tin[8] !== "W") checksum += (tin[8].charCodeAt(0) - 64) * 9;
		checksum %= 23;
		if (checksum === 0) return tin[7].toUpperCase() === "W";
		return tin[7].toUpperCase() === String.fromCharCode(64 + checksum);
	}
	var enUsCampusPrefix = {
		andover: ["10", "12"],
		atlanta: ["60", "67"],
		austin: ["50", "53"],
		brookhaven: [
			"01",
			"02",
			"03",
			"04",
			"05",
			"06",
			"11",
			"13",
			"14",
			"16",
			"21",
			"22",
			"23",
			"25",
			"34",
			"51",
			"52",
			"54",
			"55",
			"56",
			"57",
			"58",
			"59",
			"65"
		],
		cincinnati: [
			"30",
			"32",
			"35",
			"36",
			"37",
			"38",
			"61"
		],
		fresno: ["15", "24"],
		internet: [
			"20",
			"26",
			"27",
			"45",
			"46",
			"47"
		],
		kansas: ["40", "44"],
		memphis: ["94", "95"],
		ogden: ["80", "90"],
		philadelphia: [
			"33",
			"39",
			"41",
			"42",
			"43",
			"46",
			"48",
			"62",
			"63",
			"64",
			"66",
			"68",
			"71",
			"72",
			"73",
			"74",
			"75",
			"76",
			"77",
			"81",
			"82",
			"83",
			"84",
			"85",
			"86",
			"87",
			"88",
			"91",
			"92",
			"93",
			"98",
			"99"
		],
		sba: ["31"]
	};
	function enUsGetPrefixes() {
		var prefixes = [];
		for (var location in enUsCampusPrefix)
 // istanbul ignore else
		if (enUsCampusPrefix.hasOwnProperty(location)) prefixes.push.apply(prefixes, _toConsumableArray(enUsCampusPrefix[location]));
		return prefixes;
	}
	function enUsCheck(tin) {
		return enUsGetPrefixes().indexOf(tin.slice(0, 2)) !== -1;
	}
	function esArCheck(tin) {
		var accum = 0;
		var digits = tin.split("");
		var digit = parseInt(digits.pop(), 10);
		for (var i$1 = 0; i$1 < digits.length; i$1++) accum += digits[9 - i$1] * (2 + i$1 % 6);
		var verif = 11 - accum % 11;
		if (verif === 11) verif = 0;
		else if (verif === 10) verif = 9;
		return digit === verif;
	}
	function esEsCheck(tin) {
		var chars = tin.toUpperCase().split("");
		if (isNaN(parseInt(chars[0], 10)) && chars.length > 1) {
			var lead_replace = 0;
			switch (chars[0]) {
				case "Y":
					lead_replace = 1;
					break;
				case "Z":
					lead_replace = 2;
					break;
				default:
			}
			chars.splice(0, 1, lead_replace);
		} else while (chars.length < 9) chars.unshift(0);
		var lookup = [
			"T",
			"R",
			"W",
			"A",
			"G",
			"M",
			"Y",
			"F",
			"P",
			"D",
			"X",
			"B",
			"N",
			"J",
			"Z",
			"S",
			"Q",
			"V",
			"H",
			"L",
			"C",
			"K",
			"E"
		];
		chars = chars.join("");
		var checksum = parseInt(chars.slice(0, 8), 10) % 23;
		return chars[8] === lookup[checksum];
	}
	function etEeCheck(tin) {
		var full_year = tin.slice(1, 3);
		var century_digit = tin.slice(0, 1);
		switch (century_digit) {
			case "1":
			case "2":
				full_year = "18".concat(full_year);
				break;
			case "3":
			case "4":
				full_year = "19".concat(full_year);
				break;
			default:
				full_year = "20".concat(full_year);
				break;
		}
		var date = "".concat(full_year, "/").concat(tin.slice(3, 5), "/").concat(tin.slice(5, 7));
		if (!(0, _isDate$1.default)(date, "YYYY/MM/DD")) return false;
		var digits = tin.split("").map(function(a) {
			return parseInt(a, 10);
		});
		var checksum = 0;
		var weight = 1;
		for (var i$1 = 0; i$1 < 10; i$1++) {
			checksum += digits[i$1] * weight;
			weight += 1;
			if (weight === 10) weight = 1;
		}
		if (checksum % 11 === 10) {
			checksum = 0;
			weight = 3;
			for (var _i3$1 = 0; _i3$1 < 10; _i3$1++) {
				checksum += digits[_i3$1] * weight;
				weight += 1;
				if (weight === 10) weight = 1;
			}
			if (checksum % 11 === 10) return digits[10] === 0;
		}
		return checksum % 11 === digits[10];
	}
	function fiFiCheck(tin) {
		var full_year = tin.slice(4, 6);
		var century_symbol = tin.slice(6, 7);
		switch (century_symbol) {
			case "+":
				full_year = "18".concat(full_year);
				break;
			case "-":
				full_year = "19".concat(full_year);
				break;
			default:
				full_year = "20".concat(full_year);
				break;
		}
		var date = "".concat(full_year, "/").concat(tin.slice(2, 4), "/").concat(tin.slice(0, 2));
		if (!(0, _isDate$1.default)(date, "YYYY/MM/DD")) return false;
		var checksum = parseInt(tin.slice(0, 6) + tin.slice(7, 10), 10) % 31;
		if (checksum < 10) return checksum === parseInt(tin.slice(10), 10);
		checksum -= 10;
		var letters_lookup = [
			"A",
			"B",
			"C",
			"D",
			"E",
			"F",
			"H",
			"J",
			"K",
			"L",
			"M",
			"N",
			"P",
			"R",
			"S",
			"T",
			"U",
			"V",
			"W",
			"X",
			"Y"
		];
		return letters_lookup[checksum] === tin.slice(10);
	}
	function frBeCheck(tin) {
		if (tin.slice(2, 4) !== "00" || tin.slice(4, 6) !== "00") {
			var date = "".concat(tin.slice(0, 2), "/").concat(tin.slice(2, 4), "/").concat(tin.slice(4, 6));
			if (!(0, _isDate$1.default)(date, "YY/MM/DD")) return false;
		}
		var checksum = 97 - parseInt(tin.slice(0, 9), 10) % 97;
		var checkdigits = parseInt(tin.slice(9, 11), 10);
		if (checksum !== checkdigits) {
			checksum = 97 - parseInt("2".concat(tin.slice(0, 9)), 10) % 97;
			if (checksum !== checkdigits) return false;
		}
		return true;
	}
	function frFrCheck(tin) {
		tin = tin.replace(/\s/g, "");
		var checksum = parseInt(tin.slice(0, 10), 10) % 511;
		var checkdigits = parseInt(tin.slice(10, 13), 10);
		return checksum === checkdigits;
	}
	function frLuCheck(tin) {
		var date = "".concat(tin.slice(0, 4), "/").concat(tin.slice(4, 6), "/").concat(tin.slice(6, 8));
		if (!(0, _isDate$1.default)(date, "YYYY/MM/DD")) return false;
		if (!algorithms$1.luhnCheck(tin.slice(0, 12))) return false;
		return algorithms$1.verhoeffCheck("".concat(tin.slice(0, 11)).concat(tin[12]));
	}
	function hrHrCheck(tin) {
		return algorithms$1.iso7064Check(tin);
	}
	function huHuCheck(tin) {
		var digits = tin.split("").map(function(a) {
			return parseInt(a, 10);
		});
		var checksum = 8;
		for (var i$1 = 1; i$1 < 9; i$1++) checksum += digits[i$1] * (i$1 + 1);
		return checksum % 11 === digits[9];
	}
	function itItNameCheck(name) {
		var vowelflag = false;
		var xflag = false;
		for (var i$1 = 0; i$1 < 3; i$1++) if (!vowelflag && /[AEIOU]/.test(name[i$1])) vowelflag = true;
		else if (!xflag && vowelflag && name[i$1] === "X") xflag = true;
		else if (i$1 > 0) {
			if (vowelflag && !xflag) {
				if (!/[AEIOU]/.test(name[i$1])) return false;
			}
			if (xflag) {
				if (!/X/.test(name[i$1])) return false;
			}
		}
		return true;
	}
	function itItCheck(tin) {
		var chars = tin.toUpperCase().split("");
		if (!itItNameCheck(chars.slice(0, 3))) return false;
		if (!itItNameCheck(chars.slice(3, 6))) return false;
		var number_locations = [
			6,
			7,
			9,
			10,
			12,
			13,
			14
		];
		var number_replace = {
			L: "0",
			M: "1",
			N: "2",
			P: "3",
			Q: "4",
			R: "5",
			S: "6",
			T: "7",
			U: "8",
			V: "9"
		};
		for (var _i4$1 = 0, _number_locations = number_locations; _i4$1 < _number_locations.length; _i4$1++) {
			var i$1 = _number_locations[_i4$1];
			if (chars[i$1] in number_replace) chars.splice(i$1, 1, number_replace[chars[i$1]]);
		}
		var month_replace = {
			A: "01",
			B: "02",
			C: "03",
			D: "04",
			E: "05",
			H: "06",
			L: "07",
			M: "08",
			P: "09",
			R: "10",
			S: "11",
			T: "12"
		};
		var month = month_replace[chars[8]];
		var day = parseInt(chars[9] + chars[10], 10);
		if (day > 40) day -= 40;
		if (day < 10) day = "0".concat(day);
		var date = "".concat(chars[6]).concat(chars[7], "/").concat(month, "/").concat(day);
		if (!(0, _isDate$1.default)(date, "YY/MM/DD")) return false;
		var checksum = 0;
		for (var _i5$1 = 1; _i5$1 < chars.length - 1; _i5$1 += 2) {
			var char_to_int = parseInt(chars[_i5$1], 10);
			if (isNaN(char_to_int)) char_to_int = chars[_i5$1].charCodeAt(0) - 65;
			checksum += char_to_int;
		}
		var odd_convert = {
			A: 1,
			B: 0,
			C: 5,
			D: 7,
			E: 9,
			F: 13,
			G: 15,
			H: 17,
			I: 19,
			J: 21,
			K: 2,
			L: 4,
			M: 18,
			N: 20,
			O: 11,
			P: 3,
			Q: 6,
			R: 8,
			S: 12,
			T: 14,
			U: 16,
			V: 10,
			W: 22,
			X: 25,
			Y: 24,
			Z: 23,
			0: 1,
			1: 0
		};
		for (var _i6 = 0; _i6 < chars.length - 1; _i6 += 2) {
			var _char_to_int = 0;
			if (chars[_i6] in odd_convert) _char_to_int = odd_convert[chars[_i6]];
			else {
				var multiplier = parseInt(chars[_i6], 10);
				_char_to_int = 2 * multiplier + 1;
				if (multiplier > 4) _char_to_int += 2;
			}
			checksum += _char_to_int;
		}
		if (String.fromCharCode(65 + checksum % 26) !== chars[15]) return false;
		return true;
	}
	function lvLvCheck(tin) {
		tin = tin.replace(/\W/, "");
		var day = tin.slice(0, 2);
		if (day !== "32") {
			var month = tin.slice(2, 4);
			if (month !== "00") {
				var full_year = tin.slice(4, 6);
				switch (tin[6]) {
					case "0":
						full_year = "18".concat(full_year);
						break;
					case "1":
						full_year = "19".concat(full_year);
						break;
					default:
						full_year = "20".concat(full_year);
						break;
				}
				var date = "".concat(full_year, "/").concat(tin.slice(2, 4), "/").concat(day);
				if (!(0, _isDate$1.default)(date, "YYYY/MM/DD")) return false;
			}
			var checksum = 1101;
			var multip_lookup = [
				1,
				6,
				3,
				7,
				9,
				10,
				5,
				8,
				4,
				2
			];
			for (var i$1 = 0; i$1 < tin.length - 1; i$1++) checksum -= parseInt(tin[i$1], 10) * multip_lookup[i$1];
			return parseInt(tin[10], 10) === checksum % 11;
		}
		return true;
	}
	function mtMtCheck(tin) {
		if (tin.length !== 9) {
			var chars = tin.toUpperCase().split("");
			while (chars.length < 8) chars.unshift(0);
			switch (tin[7]) {
				case "A":
				case "P":
					if (parseInt(chars[6], 10) === 0) return false;
					break;
				default: {
					var first_part = parseInt(chars.join("").slice(0, 5), 10);
					if (first_part > 32e3) return false;
					var second_part = parseInt(chars.join("").slice(5, 7), 10);
					if (first_part === second_part) return false;
				}
			}
		}
		return true;
	}
	function nlNlCheck(tin) {
		return algorithms$1.reverseMultiplyAndSum(tin.split("").slice(0, 8).map(function(a) {
			return parseInt(a, 10);
		}), 9) % 11 === parseInt(tin[8], 10);
	}
	function plPlCheck(tin) {
		if (tin.length === 10) {
			var lookup = [
				6,
				5,
				7,
				2,
				3,
				4,
				5,
				6,
				7
			];
			var _checksum = 0;
			for (var i$1 = 0; i$1 < lookup.length; i$1++) _checksum += parseInt(tin[i$1], 10) * lookup[i$1];
			_checksum %= 11;
			if (_checksum === 10) return false;
			return _checksum === parseInt(tin[9], 10);
		}
		var full_year = tin.slice(0, 2);
		var month = parseInt(tin.slice(2, 4), 10);
		if (month > 80) {
			full_year = "18".concat(full_year);
			month -= 80;
		} else if (month > 60) {
			full_year = "22".concat(full_year);
			month -= 60;
		} else if (month > 40) {
			full_year = "21".concat(full_year);
			month -= 40;
		} else if (month > 20) {
			full_year = "20".concat(full_year);
			month -= 20;
		} else full_year = "19".concat(full_year);
		if (month < 10) month = "0".concat(month);
		var date = "".concat(full_year, "/").concat(month, "/").concat(tin.slice(4, 6));
		if (!(0, _isDate$1.default)(date, "YYYY/MM/DD")) return false;
		var checksum = 0;
		var multiplier = 1;
		for (var _i7 = 0; _i7 < tin.length - 1; _i7++) {
			checksum += parseInt(tin[_i7], 10) * multiplier % 10;
			multiplier += 2;
			if (multiplier > 10) multiplier = 1;
			else if (multiplier === 5) multiplier += 2;
		}
		checksum = 10 - checksum % 10;
		return checksum === parseInt(tin[10], 10);
	}
	function ptBrCheck(tin) {
		if (tin.length === 11) {
			var _sum;
			var remainder;
			_sum = 0;
			if (tin === "11111111111" || tin === "22222222222" || tin === "33333333333" || tin === "44444444444" || tin === "55555555555" || tin === "66666666666" || tin === "77777777777" || tin === "88888888888" || tin === "99999999999" || tin === "00000000000") return false;
			for (var i$1 = 1; i$1 <= 9; i$1++) _sum += parseInt(tin.substring(i$1 - 1, i$1), 10) * (11 - i$1);
			remainder = _sum * 10 % 11;
			if (remainder === 10) remainder = 0;
			if (remainder !== parseInt(tin.substring(9, 10), 10)) return false;
			_sum = 0;
			for (var _i8 = 1; _i8 <= 10; _i8++) _sum += parseInt(tin.substring(_i8 - 1, _i8), 10) * (12 - _i8);
			remainder = _sum * 10 % 11;
			if (remainder === 10) remainder = 0;
			if (remainder !== parseInt(tin.substring(10, 11), 10)) return false;
			return true;
		}
		if (tin === "00000000000000" || tin === "11111111111111" || tin === "22222222222222" || tin === "33333333333333" || tin === "44444444444444" || tin === "55555555555555" || tin === "66666666666666" || tin === "77777777777777" || tin === "88888888888888" || tin === "99999999999999") return false;
		var length$1 = tin.length - 2;
		var identifiers = tin.substring(0, length$1);
		var verificators = tin.substring(length$1);
		var sum = 0;
		var pos = length$1 - 7;
		for (var _i9 = length$1; _i9 >= 1; _i9--) {
			sum += identifiers.charAt(length$1 - _i9) * pos;
			pos -= 1;
			if (pos < 2) pos = 9;
		}
		var result$1 = sum % 11 < 2 ? 0 : 11 - sum % 11;
		if (result$1 !== parseInt(verificators.charAt(0), 10)) return false;
		length$1 += 1;
		identifiers = tin.substring(0, length$1);
		sum = 0;
		pos = length$1 - 7;
		for (var _i0 = length$1; _i0 >= 1; _i0--) {
			sum += identifiers.charAt(length$1 - _i0) * pos;
			pos -= 1;
			if (pos < 2) pos = 9;
		}
		result$1 = sum % 11 < 2 ? 0 : 11 - sum % 11;
		if (result$1 !== parseInt(verificators.charAt(1), 10)) return false;
		return true;
	}
	function ptPtCheck(tin) {
		var checksum = 11 - algorithms$1.reverseMultiplyAndSum(tin.split("").slice(0, 8).map(function(a) {
			return parseInt(a, 10);
		}), 9) % 11;
		if (checksum > 9) return parseInt(tin[8], 10) === 0;
		return checksum === parseInt(tin[8], 10);
	}
	function roRoCheck(tin) {
		if (tin.slice(0, 4) !== "9000") {
			var full_year = tin.slice(1, 3);
			switch (tin[0]) {
				case "1":
				case "2":
					full_year = "19".concat(full_year);
					break;
				case "3":
				case "4":
					full_year = "18".concat(full_year);
					break;
				case "5":
				case "6":
					full_year = "20".concat(full_year);
					break;
				default:
			}
			var date = "".concat(full_year, "/").concat(tin.slice(3, 5), "/").concat(tin.slice(5, 7));
			if (date.length === 8) {
				if (!(0, _isDate$1.default)(date, "YY/MM/DD")) return false;
			} else if (!(0, _isDate$1.default)(date, "YYYY/MM/DD")) return false;
			var digits = tin.split("").map(function(a) {
				return parseInt(a, 10);
			});
			var multipliers = [
				2,
				7,
				9,
				1,
				4,
				6,
				3,
				5,
				8,
				2,
				7,
				9
			];
			var checksum = 0;
			for (var i$1 = 0; i$1 < multipliers.length; i$1++) checksum += digits[i$1] * multipliers[i$1];
			if (checksum % 11 === 10) return digits[12] === 1;
			return digits[12] === checksum % 11;
		}
		return true;
	}
	function skSkCheck(tin) {
		if (tin.length === 9) {
			tin = tin.replace(/\W/, "");
			if (tin.slice(6) === "000") return false;
			var full_year = parseInt(tin.slice(0, 2), 10);
			if (full_year > 53) return false;
			if (full_year < 10) full_year = "190".concat(full_year);
			else full_year = "19".concat(full_year);
			var month = parseInt(tin.slice(2, 4), 10);
			if (month > 50) month -= 50;
			if (month < 10) month = "0".concat(month);
			var date = "".concat(full_year, "/").concat(month, "/").concat(tin.slice(4, 6));
			if (!(0, _isDate$1.default)(date, "YYYY/MM/DD")) return false;
		}
		return true;
	}
	function slSiCheck(tin) {
		var checksum = 11 - algorithms$1.reverseMultiplyAndSum(tin.split("").slice(0, 7).map(function(a) {
			return parseInt(a, 10);
		}), 8) % 11;
		if (checksum === 10) return parseInt(tin[7], 10) === 0;
		return checksum === parseInt(tin[7], 10);
	}
	function svSeCheck(tin) {
		var tin_copy = tin.slice(0);
		if (tin.length > 11) tin_copy = tin_copy.slice(2);
		var full_year = "";
		var month = tin_copy.slice(2, 4);
		var day = parseInt(tin_copy.slice(4, 6), 10);
		if (tin.length > 11) full_year = tin.slice(0, 4);
		else {
			full_year = tin.slice(0, 2);
			if (tin.length === 11 && day < 60) {
				var current_year = (/* @__PURE__ */ new Date()).getFullYear().toString();
				var current_century = parseInt(current_year.slice(0, 2), 10);
				current_year = parseInt(current_year, 10);
				if (tin[6] === "-") if (parseInt("".concat(current_century).concat(full_year), 10) > current_year) full_year = "".concat(current_century - 1).concat(full_year);
				else full_year = "".concat(current_century).concat(full_year);
				else {
					full_year = "".concat(current_century - 1).concat(full_year);
					if (current_year - parseInt(full_year, 10) < 100) return false;
				}
			}
		}
		if (day > 60) day -= 60;
		if (day < 10) day = "0".concat(day);
		var date = "".concat(full_year, "/").concat(month, "/").concat(day);
		if (date.length === 8) {
			if (!(0, _isDate$1.default)(date, "YY/MM/DD")) return false;
		} else if (!(0, _isDate$1.default)(date, "YYYY/MM/DD")) return false;
		return algorithms$1.luhnCheck(tin.replace(/\W/, ""));
	}
	/**
	* uk-UA validation function
	* Verify TIN validity by calculating check (last) digit (variant of MOD 11)
	*/
	function ukUaCheck(tin) {
		var digits = tin.split("").map(function(a) {
			return parseInt(a, 10);
		});
		var multipliers = [
			-1,
			5,
			7,
			9,
			4,
			6,
			10,
			5,
			7
		];
		var checksum = 0;
		for (var i$1 = 0; i$1 < multipliers.length; i$1++) checksum += digits[i$1] * multipliers[i$1];
		return checksum % 11 === 10 ? digits[9] === 0 : digits[9] === checksum % 11;
	}
	var taxIdFormat = {
		"bg-BG": /^\d{10}$/,
		"cs-CZ": /^\d{6}\/{0,1}\d{3,4}$/,
		"de-AT": /^\d{9}$/,
		"de-DE": /^[1-9]\d{10}$/,
		"dk-DK": /^\d{6}-{0,1}\d{4}$/,
		"el-CY": /^[09]\d{7}[A-Z]$/,
		"el-GR": new RegExp("^([0-4]|[7-9])\\d{8}$", ""),
		"en-CA": /^\d{9}$/,
		"en-GB": /^\d{10}$|^(?!GB|NK|TN|ZZ)(?![DFIQUV])[A-Z](?![DFIQUVO])[A-Z]\d{6}[ABCD ]$/i,
		"en-IE": /^\d{7}[A-W][A-IW]{0,1}$/i,
		"en-US": /^\d{2}[- ]{0,1}\d{7}$/,
		"es-AR": new RegExp("(20|23|24|27|30|33|34)[0-9]{8}[0-9]", ""),
		"es-ES": new RegExp("^(\\d{0,8}|[XYZKLM]\\d{7})[A-HJ-NP-TV-Z]$", "i"),
		"et-EE": new RegExp("^[1-6]\\d{6}(00[1-9]|0[1-9][0-9]|[1-6][0-9]{2}|70[0-9]|710)\\d$", ""),
		"fi-FI": /^\d{6}[-+A]\d{3}[0-9A-FHJ-NPR-Y]$/i,
		"fr-BE": /^\d{11}$/,
		"fr-FR": new RegExp("^[0-3]\\d{12}$|^[0-3]\\d\\s\\d{2}(\\s\\d{3}){3}$", ""),
		"fr-LU": /^\d{13}$/,
		"hr-HR": /^\d{11}$/,
		"hu-HU": /^8\d{9}$/,
		"it-IT": /^[A-Z]{6}[L-NP-V0-9]{2}[A-EHLMPRST][L-NP-V0-9]{2}[A-ILMZ][L-NP-V0-9]{3}[A-Z]$/i,
		"lv-LV": /^\d{6}-{0,1}\d{5}$/,
		"mt-MT": new RegExp("^\\d{3,7}[APMGLHBZ]$|^([1-8])\\1\\d{7}$", "i"),
		"nl-NL": /^\d{9}$/,
		"pl-PL": /^\d{10,11}$/,
		"pt-BR": /(?:^\d{11}$)|(?:^\d{14}$)/,
		"pt-PT": /^\d{9}$/,
		"ro-RO": /^\d{13}$/,
		"sk-SK": /^\d{6}\/{0,1}\d{3,4}$/,
		"sl-SI": /^[1-9]\d{7}$/,
		"sv-SE": new RegExp("^(\\d{6}[-+]{0,1}\\d{4}|(18|19|20)\\d{6}[-+]{0,1}\\d{4})$", ""),
		"uk-UA": /^\d{10}$/
	};
	taxIdFormat["lb-LU"] = taxIdFormat["fr-LU"];
	taxIdFormat["lt-LT"] = taxIdFormat["et-EE"];
	taxIdFormat["nl-BE"] = taxIdFormat["fr-BE"];
	taxIdFormat["fr-CA"] = taxIdFormat["en-CA"];
	var taxIdCheck = {
		"bg-BG": bgBgCheck,
		"cs-CZ": csCzCheck,
		"de-AT": deAtCheck,
		"de-DE": deDeCheck,
		"dk-DK": dkDkCheck,
		"el-CY": elCyCheck,
		"el-GR": elGrCheck,
		"en-CA": isCanadianSIN,
		"en-IE": enIeCheck,
		"en-US": enUsCheck,
		"es-AR": esArCheck,
		"es-ES": esEsCheck,
		"et-EE": etEeCheck,
		"fi-FI": fiFiCheck,
		"fr-BE": frBeCheck,
		"fr-FR": frFrCheck,
		"fr-LU": frLuCheck,
		"hr-HR": hrHrCheck,
		"hu-HU": huHuCheck,
		"it-IT": itItCheck,
		"lv-LV": lvLvCheck,
		"mt-MT": mtMtCheck,
		"nl-NL": nlNlCheck,
		"pl-PL": plPlCheck,
		"pt-BR": ptBrCheck,
		"pt-PT": ptPtCheck,
		"ro-RO": roRoCheck,
		"sk-SK": skSkCheck,
		"sl-SI": slSiCheck,
		"sv-SE": svSeCheck,
		"uk-UA": ukUaCheck
	};
	taxIdCheck["lb-LU"] = taxIdCheck["fr-LU"];
	taxIdCheck["lt-LT"] = taxIdCheck["et-EE"];
	taxIdCheck["nl-BE"] = taxIdCheck["fr-BE"];
	taxIdCheck["fr-CA"] = taxIdCheck["en-CA"];
	var allsymbols = /[-\\\/!@#$%\^&\*\(\)\+\=\[\]]+/g;
	var sanitizeRegexes = {
		"de-AT": allsymbols,
		"de-DE": /[\/\\]/g,
		"fr-BE": allsymbols
	};
	sanitizeRegexes["nl-BE"] = sanitizeRegexes["fr-BE"];
	function isTaxID(str) {
		var locale$1 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "en-US";
		(0, _assertString$19.default)(str);
		var strcopy = str.slice(0);
		if (locale$1 in taxIdFormat) {
			if (locale$1 in sanitizeRegexes) strcopy = strcopy.replace(sanitizeRegexes[locale$1], "");
			if (!taxIdFormat[locale$1].test(strcopy)) return false;
			if (locale$1 in taxIdCheck) return taxIdCheck[locale$1](strcopy);
			return true;
		}
		throw new Error("Invalid locale '".concat(locale$1, "'"));
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO6346.js
var require_isISO6346 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO6346.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isFreightContainerID = void 0;
	exports.isISO6346 = isISO6346;
	var _assertString$18 = _interopRequireDefault$21(require_assertString());
	function _interopRequireDefault$21(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var isISO6346Str = new RegExp("^[A-Z]{3}(U[0-9]{7})|([J,Z][0-9]{6,7})$", "");
	var isDigit = /^[0-9]$/;
	function isISO6346(str) {
		(0, _assertString$18.default)(str);
		str = str.toUpperCase();
		if (!isISO6346Str.test(str)) return false;
		if (str.length === 11) {
			var sum = 0;
			for (var i$1 = 0; i$1 < str.length - 1; i$1++) if (!isDigit.test(str[i$1])) {
				var convertedCode = void 0;
				var letterCode = str.charCodeAt(i$1) - 55;
				if (letterCode < 11) convertedCode = letterCode;
				else if (letterCode >= 11 && letterCode <= 20) convertedCode = 12 + letterCode % 11;
				else if (letterCode >= 21 && letterCode <= 30) convertedCode = 23 + letterCode % 21;
				else convertedCode = 34 + letterCode % 31;
				sum += convertedCode * Math.pow(2, i$1);
			} else sum += str[i$1] * Math.pow(2, i$1);
			var checkSumDigit = sum % 11;
			if (checkSumDigit === 10) checkSumDigit = 0;
			return Number(str[str.length - 1]) === checkSumDigit;
		}
		return true;
	}
	var isFreightContainerID = exports.isFreightContainerID = isISO6346;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO6391.js
var require_isISO6391 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO6391.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isISO6391;
	var _assertString$17 = _interopRequireDefault$20(require_assertString());
	function _interopRequireDefault$20(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var isISO6391Set = new Set([
		"aa",
		"ab",
		"ae",
		"af",
		"ak",
		"am",
		"an",
		"ar",
		"as",
		"av",
		"ay",
		"az",
		"az",
		"ba",
		"be",
		"bg",
		"bh",
		"bi",
		"bm",
		"bn",
		"bo",
		"br",
		"bs",
		"ca",
		"ce",
		"ch",
		"co",
		"cr",
		"cs",
		"cu",
		"cv",
		"cy",
		"da",
		"de",
		"dv",
		"dz",
		"ee",
		"el",
		"en",
		"eo",
		"es",
		"et",
		"eu",
		"fa",
		"ff",
		"fi",
		"fj",
		"fo",
		"fr",
		"fy",
		"ga",
		"gd",
		"gl",
		"gn",
		"gu",
		"gv",
		"ha",
		"he",
		"hi",
		"ho",
		"hr",
		"ht",
		"hu",
		"hy",
		"hz",
		"ia",
		"id",
		"ie",
		"ig",
		"ii",
		"ik",
		"io",
		"is",
		"it",
		"iu",
		"ja",
		"jv",
		"ka",
		"kg",
		"ki",
		"kj",
		"kk",
		"kl",
		"km",
		"kn",
		"ko",
		"kr",
		"ks",
		"ku",
		"kv",
		"kw",
		"ky",
		"la",
		"lb",
		"lg",
		"li",
		"ln",
		"lo",
		"lt",
		"lu",
		"lv",
		"mg",
		"mh",
		"mi",
		"mk",
		"ml",
		"mn",
		"mr",
		"ms",
		"mt",
		"my",
		"na",
		"nb",
		"nd",
		"ne",
		"ng",
		"nl",
		"nn",
		"no",
		"nr",
		"nv",
		"ny",
		"oc",
		"oj",
		"om",
		"or",
		"os",
		"pa",
		"pi",
		"pl",
		"ps",
		"pt",
		"qu",
		"rm",
		"rn",
		"ro",
		"ru",
		"rw",
		"sa",
		"sc",
		"sd",
		"se",
		"sg",
		"si",
		"sk",
		"sl",
		"sm",
		"sn",
		"so",
		"sq",
		"sr",
		"ss",
		"st",
		"su",
		"sv",
		"sw",
		"ta",
		"te",
		"tg",
		"th",
		"ti",
		"tk",
		"tl",
		"tn",
		"to",
		"tr",
		"ts",
		"tt",
		"tw",
		"ty",
		"ug",
		"uk",
		"ur",
		"uz",
		"ve",
		"vi",
		"vo",
		"wa",
		"wo",
		"xh",
		"yi",
		"yo",
		"za",
		"zh",
		"zu"
	]);
	function isISO6391(str) {
		(0, _assertString$17.default)(str);
		return isISO6391Set.has(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO15924.js
var require_isISO15924 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO15924.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ScriptCodes = void 0;
	exports.default = isISO15924;
	var _assertString$16 = _interopRequireDefault$19(require_assertString());
	function _interopRequireDefault$19(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var validISO15924Codes = new Set([
		"Adlm",
		"Afak",
		"Aghb",
		"Ahom",
		"Arab",
		"Aran",
		"Armi",
		"Armn",
		"Avst",
		"Bali",
		"Bamu",
		"Bass",
		"Batk",
		"Beng",
		"Bhks",
		"Blis",
		"Bopo",
		"Brah",
		"Brai",
		"Bugi",
		"Buhd",
		"Cakm",
		"Cans",
		"Cari",
		"Cham",
		"Cher",
		"Chis",
		"Chrs",
		"Cirt",
		"Copt",
		"Cpmn",
		"Cprt",
		"Cyrl",
		"Cyrs",
		"Deva",
		"Diak",
		"Dogr",
		"Dsrt",
		"Dupl",
		"Egyd",
		"Egyh",
		"Egyp",
		"Elba",
		"Elym",
		"Ethi",
		"Gara",
		"Geok",
		"Geor",
		"Glag",
		"Gong",
		"Gonm",
		"Goth",
		"Gran",
		"Grek",
		"Gujr",
		"Gukh",
		"Guru",
		"Hanb",
		"Hang",
		"Hani",
		"Hano",
		"Hans",
		"Hant",
		"Hatr",
		"Hebr",
		"Hira",
		"Hluw",
		"Hmng",
		"Hmnp",
		"Hrkt",
		"Hung",
		"Inds",
		"Ital",
		"Jamo",
		"Java",
		"Jpan",
		"Jurc",
		"Kali",
		"Kana",
		"Kawi",
		"Khar",
		"Khmr",
		"Khoj",
		"Kitl",
		"Kits",
		"Knda",
		"Kore",
		"Kpel",
		"Krai",
		"Kthi",
		"Lana",
		"Laoo",
		"Latf",
		"Latg",
		"Latn",
		"Leke",
		"Lepc",
		"Limb",
		"Lina",
		"Linb",
		"Lisu",
		"Loma",
		"Lyci",
		"Lydi",
		"Mahj",
		"Maka",
		"Mand",
		"Mani",
		"Marc",
		"Maya",
		"Medf",
		"Mend",
		"Merc",
		"Mero",
		"Mlym",
		"Modi",
		"Mong",
		"Moon",
		"Mroo",
		"Mtei",
		"Mult",
		"Mymr",
		"Nagm",
		"Nand",
		"Narb",
		"Nbat",
		"Newa",
		"Nkdb",
		"Nkgb",
		"Nkoo",
		"Nshu",
		"Ogam",
		"Olck",
		"Onao",
		"Orkh",
		"Orya",
		"Osge",
		"Osma",
		"Ougr",
		"Palm",
		"Pauc",
		"Pcun",
		"Pelm",
		"Perm",
		"Phag",
		"Phli",
		"Phlp",
		"Phlv",
		"Phnx",
		"Plrd",
		"Piqd",
		"Prti",
		"Psin",
		"Qaaa",
		"Qaab",
		"Qaac",
		"Qaad",
		"Qaae",
		"Qaaf",
		"Qaag",
		"Qaah",
		"Qaai",
		"Qaaj",
		"Qaak",
		"Qaal",
		"Qaam",
		"Qaan",
		"Qaao",
		"Qaap",
		"Qaaq",
		"Qaar",
		"Qaas",
		"Qaat",
		"Qaau",
		"Qaav",
		"Qaaw",
		"Qaax",
		"Qaay",
		"Qaaz",
		"Qaba",
		"Qabb",
		"Qabc",
		"Qabd",
		"Qabe",
		"Qabf",
		"Qabg",
		"Qabh",
		"Qabi",
		"Qabj",
		"Qabk",
		"Qabl",
		"Qabm",
		"Qabn",
		"Qabo",
		"Qabp",
		"Qabq",
		"Qabr",
		"Qabs",
		"Qabt",
		"Qabu",
		"Qabv",
		"Qabw",
		"Qabx",
		"Ranj",
		"Rjng",
		"Rohg",
		"Roro",
		"Runr",
		"Samr",
		"Sara",
		"Sarb",
		"Saur",
		"Sgnw",
		"Shaw",
		"Shrd",
		"Shui",
		"Sidd",
		"Sidt",
		"Sind",
		"Sinh",
		"Sogd",
		"Sogo",
		"Sora",
		"Soyo",
		"Sund",
		"Sunu",
		"Sylo",
		"Syrc",
		"Syre",
		"Syrj",
		"Syrn",
		"Tagb",
		"Takr",
		"Tale",
		"Talu",
		"Taml",
		"Tang",
		"Tavt",
		"Tayo",
		"Telu",
		"Teng",
		"Tfng",
		"Tglg",
		"Thaa",
		"Thai",
		"Tibt",
		"Tirh",
		"Tnsa",
		"Todr",
		"Tols",
		"Toto",
		"Tutg",
		"Ugar",
		"Vaii",
		"Visp",
		"Vith",
		"Wara",
		"Wcho",
		"Wole",
		"Xpeo",
		"Xsux",
		"Yezi",
		"Yiii",
		"Zanb",
		"Zinh",
		"Zmth",
		"Zsye",
		"Zsym",
		"Zxxx",
		"Zyyy",
		"Zzzz"
	]);
	function isISO15924(str) {
		(0, _assertString$16.default)(str);
		return validISO15924Codes.has(str);
	}
	var ScriptCodes = exports.ScriptCodes = validISO15924Codes;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO31661Numeric.js
var require_isISO31661Numeric = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO31661Numeric.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isISO31661Numeric;
	var _assertString$15 = _interopRequireDefault$18(require_assertString());
	function _interopRequireDefault$18(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var validISO31661NumericCountriesCodes = new Set([
		"004",
		"008",
		"010",
		"012",
		"016",
		"020",
		"024",
		"028",
		"031",
		"032",
		"036",
		"040",
		"044",
		"048",
		"050",
		"051",
		"052",
		"056",
		"060",
		"064",
		"068",
		"070",
		"072",
		"074",
		"076",
		"084",
		"086",
		"090",
		"092",
		"096",
		"100",
		"104",
		"108",
		"112",
		"116",
		"120",
		"124",
		"132",
		"136",
		"140",
		"144",
		"148",
		"152",
		"156",
		"158",
		"162",
		"166",
		"170",
		"174",
		"175",
		"178",
		"180",
		"184",
		"188",
		"191",
		"192",
		"196",
		"203",
		"204",
		"208",
		"212",
		"214",
		"218",
		"222",
		"226",
		"231",
		"232",
		"233",
		"234",
		"238",
		"239",
		"242",
		"246",
		"248",
		"250",
		"254",
		"258",
		"260",
		"262",
		"266",
		"268",
		"270",
		"275",
		"276",
		"288",
		"292",
		"296",
		"300",
		"304",
		"308",
		"312",
		"316",
		"320",
		"324",
		"328",
		"332",
		"334",
		"336",
		"340",
		"344",
		"348",
		"352",
		"356",
		"360",
		"364",
		"368",
		"372",
		"376",
		"380",
		"384",
		"388",
		"392",
		"398",
		"400",
		"404",
		"408",
		"410",
		"414",
		"417",
		"418",
		"422",
		"426",
		"428",
		"430",
		"434",
		"438",
		"440",
		"442",
		"446",
		"450",
		"454",
		"458",
		"462",
		"466",
		"470",
		"474",
		"478",
		"480",
		"484",
		"492",
		"496",
		"498",
		"499",
		"500",
		"504",
		"508",
		"512",
		"516",
		"520",
		"524",
		"528",
		"531",
		"533",
		"534",
		"535",
		"540",
		"548",
		"554",
		"558",
		"562",
		"566",
		"570",
		"574",
		"578",
		"580",
		"581",
		"583",
		"584",
		"585",
		"586",
		"591",
		"598",
		"600",
		"604",
		"608",
		"612",
		"616",
		"620",
		"624",
		"626",
		"630",
		"634",
		"638",
		"642",
		"643",
		"646",
		"652",
		"654",
		"659",
		"660",
		"662",
		"663",
		"666",
		"670",
		"674",
		"678",
		"682",
		"686",
		"688",
		"690",
		"694",
		"702",
		"703",
		"704",
		"705",
		"706",
		"710",
		"716",
		"724",
		"728",
		"729",
		"732",
		"740",
		"744",
		"748",
		"752",
		"756",
		"760",
		"762",
		"764",
		"768",
		"772",
		"776",
		"780",
		"784",
		"788",
		"792",
		"795",
		"796",
		"798",
		"800",
		"804",
		"807",
		"818",
		"826",
		"831",
		"832",
		"833",
		"834",
		"840",
		"850",
		"854",
		"858",
		"860",
		"862",
		"876",
		"882",
		"887",
		"894"
	]);
	function isISO31661Numeric(str) {
		(0, _assertString$15.default)(str);
		return validISO31661NumericCountriesCodes.has(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO4217.js
var require_isISO4217 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isISO4217.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.CurrencyCodes = void 0;
	exports.default = isISO4217;
	var _assertString$14 = _interopRequireDefault$17(require_assertString());
	function _interopRequireDefault$17(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var validISO4217CurrencyCodes = new Set([
		"AED",
		"AFN",
		"ALL",
		"AMD",
		"ANG",
		"AOA",
		"ARS",
		"AUD",
		"AWG",
		"AZN",
		"BAM",
		"BBD",
		"BDT",
		"BGN",
		"BHD",
		"BIF",
		"BMD",
		"BND",
		"BOB",
		"BOV",
		"BRL",
		"BSD",
		"BTN",
		"BWP",
		"BYN",
		"BZD",
		"CAD",
		"CDF",
		"CHE",
		"CHF",
		"CHW",
		"CLF",
		"CLP",
		"CNY",
		"COP",
		"COU",
		"CRC",
		"CUP",
		"CVE",
		"CZK",
		"DJF",
		"DKK",
		"DOP",
		"DZD",
		"EGP",
		"ERN",
		"ETB",
		"EUR",
		"FJD",
		"FKP",
		"GBP",
		"GEL",
		"GHS",
		"GIP",
		"GMD",
		"GNF",
		"GTQ",
		"GYD",
		"HKD",
		"HNL",
		"HTG",
		"HUF",
		"IDR",
		"ILS",
		"INR",
		"IQD",
		"IRR",
		"ISK",
		"JMD",
		"JOD",
		"JPY",
		"KES",
		"KGS",
		"KHR",
		"KMF",
		"KPW",
		"KRW",
		"KWD",
		"KYD",
		"KZT",
		"LAK",
		"LBP",
		"LKR",
		"LRD",
		"LSL",
		"LYD",
		"MAD",
		"MDL",
		"MGA",
		"MKD",
		"MMK",
		"MNT",
		"MOP",
		"MRU",
		"MUR",
		"MVR",
		"MWK",
		"MXN",
		"MXV",
		"MYR",
		"MZN",
		"NAD",
		"NGN",
		"NIO",
		"NOK",
		"NPR",
		"NZD",
		"OMR",
		"PAB",
		"PEN",
		"PGK",
		"PHP",
		"PKR",
		"PLN",
		"PYG",
		"QAR",
		"RON",
		"RSD",
		"RUB",
		"RWF",
		"SAR",
		"SBD",
		"SCR",
		"SDG",
		"SEK",
		"SGD",
		"SHP",
		"SLE",
		"SLL",
		"SOS",
		"SRD",
		"SSP",
		"STN",
		"SVC",
		"SYP",
		"SZL",
		"THB",
		"TJS",
		"TMT",
		"TND",
		"TOP",
		"TRY",
		"TTD",
		"TWD",
		"TZS",
		"UAH",
		"UGX",
		"USD",
		"USN",
		"UYI",
		"UYU",
		"UYW",
		"UZS",
		"VED",
		"VES",
		"VND",
		"VUV",
		"WST",
		"XAF",
		"XAG",
		"XAU",
		"XBA",
		"XBB",
		"XBC",
		"XBD",
		"XCD",
		"XDR",
		"XOF",
		"XPD",
		"XPF",
		"XPT",
		"XSU",
		"XTS",
		"XUA",
		"XXX",
		"YER",
		"ZAR",
		"ZMW",
		"ZWL"
	]);
	function isISO4217(str) {
		(0, _assertString$14.default)(str);
		return validISO4217CurrencyCodes.has(str.toUpperCase());
	}
	var CurrencyCodes = exports.CurrencyCodes = validISO4217CurrencyCodes;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBase58.js
var require_isBase58 = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isBase58.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isBase58$1;
	var _assertString$13 = _interopRequireDefault$16(require_assertString());
	function _interopRequireDefault$16(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var base58Reg = /^[A-HJ-NP-Za-km-z1-9]*$/;
	function isBase58$1(str) {
		(0, _assertString$13.default)(str);
		if (base58Reg.test(str)) return true;
		return false;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/rtrim.js
var require_rtrim = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/rtrim.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = rtrim;
	var _assertString$12 = _interopRequireDefault$15(require_assertString());
	function _interopRequireDefault$15(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function rtrim(str, chars) {
		(0, _assertString$12.default)(str);
		if (chars) {
			var pattern = new RegExp("[".concat(chars.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), "]+$"), "g");
			return str.replace(pattern, "");
		}
		var strIndex = str.length - 1;
		while (/\s/.test(str.charAt(strIndex))) strIndex -= 1;
		return str.slice(0, strIndex + 1);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/ltrim.js
var require_ltrim = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/ltrim.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ltrim;
	var _assertString$11 = _interopRequireDefault$14(require_assertString());
	function _interopRequireDefault$14(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function ltrim(str, chars) {
		(0, _assertString$11.default)(str);
		var pattern = chars ? new RegExp("^[".concat(chars.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), "]+"), "g") : /^\s+/g;
		return str.replace(pattern, "");
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/trim.js
var require_trim = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/trim.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = trim;
	var _rtrim$1 = _interopRequireDefault$13(require_rtrim());
	var _ltrim$1 = _interopRequireDefault$13(require_ltrim());
	function _interopRequireDefault$13(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function trim(str, chars) {
		return (0, _rtrim$1.default)((0, _ltrim$1.default)(str, chars), chars);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMailtoURI.js
var require_isMailtoURI = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isMailtoURI.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isMailtoURI;
	var _trim$1 = _interopRequireDefault$12(require_trim());
	var _isEmail$1 = _interopRequireDefault$12(require_isEmail());
	var _assertString$10 = _interopRequireDefault$12(require_assertString());
	function _interopRequireDefault$12(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function _slicedToArray(r, e) {
		return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
	}
	function _nonIterableRest() {
		throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}
	function _iterableToArrayLimit(r, l) {
		var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
		if (null != t) {
			var e, n, i$1, u, a = [], f = !0, o = !1;
			try {
				if (i$1 = (t = t.call(r)).next, 0 === l) {
					if (Object(t) !== t) return;
					f = !1;
				} else for (; !(f = (e = i$1.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
			} catch (r$1) {
				o = !0, n = r$1;
			} finally {
				try {
					if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
				} finally {
					if (o) throw n;
				}
			}
			return a;
		}
	}
	function _arrayWithHoles(r) {
		if (Array.isArray(r)) return r;
	}
	function _createForOfIteratorHelper(r, e) {
		var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
		if (!t) {
			if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
				t && (r = t);
				var _n = 0, F = function F$1() {};
				return {
					s: F,
					n: function n() {
						return _n >= r.length ? { done: !0 } : {
							done: !1,
							value: r[_n++]
						};
					},
					e: function e$1(r$1) {
						throw r$1;
					},
					f: F
				};
			}
			throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
		}
		var o, a = !0, u = !1;
		return {
			s: function s() {
				t = t.call(r);
			},
			n: function n() {
				var r$1 = t.next();
				return a = r$1.done, r$1;
			},
			e: function e$1(r$1) {
				u = !0, o = r$1;
			},
			f: function f() {
				try {
					a || null == t.return || t.return();
				} finally {
					if (u) throw o;
				}
			}
		};
	}
	function _unsupportedIterableToArray(r, a) {
		if (r) {
			if ("string" == typeof r) return _arrayLikeToArray(r, a);
			var t = {}.toString.call(r).slice(8, -1);
			return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
		}
	}
	function _arrayLikeToArray(r, a) {
		(null == a || a > r.length) && (a = r.length);
		for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
		return n;
	}
	function parseMailtoQueryString(queryString) {
		var allowedParams = new Set([
			"subject",
			"body",
			"cc",
			"bcc"
		]), query = {
			cc: "",
			bcc: ""
		};
		var isParseFailed = false;
		var queryParams = queryString.split("&");
		if (queryParams.length > 4) return false;
		var _iterator = _createForOfIteratorHelper(queryParams), _step;
		try {
			for (_iterator.s(); !(_step = _iterator.n()).done;) {
				var q = _step.value;
				var _q$split = q.split("="), _q$split2 = _slicedToArray(_q$split, 2), key = _q$split2[0], value = _q$split2[1];
				if (key && !allowedParams.has(key)) {
					isParseFailed = true;
					break;
				}
				if (value && (key === "cc" || key === "bcc")) query[key] = value;
				if (key) allowedParams.delete(key);
			}
		} catch (err) {
			_iterator.e(err);
		} finally {
			_iterator.f();
		}
		return isParseFailed ? false : query;
	}
	function isMailtoURI(url, options) {
		(0, _assertString$10.default)(url);
		if (url.indexOf("mailto:") !== 0) return false;
		var _url$replace$split = url.replace("mailto:", "").split("?"), _url$replace$split2 = _slicedToArray(_url$replace$split, 2), to = _url$replace$split2[0], _url$replace$split2$ = _url$replace$split2[1], queryString = _url$replace$split2$ === void 0 ? "" : _url$replace$split2$;
		if (!to && !queryString) return true;
		var query = parseMailtoQueryString(queryString);
		if (!query) return false;
		return "".concat(to, ",").concat(query.cc, ",").concat(query.bcc).split(",").every(function(email) {
			email = (0, _trim$1.default)(email, " ");
			if (email) return (0, _isEmail$1.default)(email, options);
			return true;
		});
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/escape.js
var require_escape = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/escape.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = escape;
	var _assertString$9 = _interopRequireDefault$11(require_assertString());
	function _interopRequireDefault$11(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function escape(str) {
		(0, _assertString$9.default)(str);
		return str.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\//g, "&#x2F;").replace(/\\/g, "&#x5C;").replace(/`/g, "&#96;");
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/unescape.js
var require_unescape = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/unescape.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = unescape;
	var _assertString$8 = _interopRequireDefault$10(require_assertString());
	function _interopRequireDefault$10(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function unescape(str) {
		(0, _assertString$8.default)(str);
		return str.replace(/&quot;/g, "\"").replace(/&#x27;/g, "'").replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&#x2F;/g, "/").replace(/&#x5C;/g, "\\").replace(/&#96;/g, "`").replace(/&amp;/g, "&");
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/blacklist.js
var require_blacklist = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/blacklist.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = blacklist;
	var _assertString$7 = _interopRequireDefault$9(require_assertString());
	function _interopRequireDefault$9(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function blacklist(str, chars) {
		(0, _assertString$7.default)(str);
		return str.replace(new RegExp("[".concat(chars, "]+"), "g"), "");
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/stripLow.js
var require_stripLow = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/stripLow.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = stripLow;
	var _assertString$6 = _interopRequireDefault$8(require_assertString());
	var _blacklist$1 = _interopRequireDefault$8(require_blacklist());
	function _interopRequireDefault$8(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function stripLow(str, keep_new_lines) {
		(0, _assertString$6.default)(str);
		var chars = keep_new_lines ? "\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F" : "\\x00-\\x1F\\x7F";
		return (0, _blacklist$1.default)(str, chars);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/whitelist.js
var require_whitelist = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/whitelist.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = whitelist;
	var _assertString$5 = _interopRequireDefault$7(require_assertString());
	function _interopRequireDefault$7(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function whitelist(str, chars) {
		(0, _assertString$5.default)(str);
		return str.replace(new RegExp("[^".concat(chars, "]+"), "g"), "");
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isWhitelisted.js
var require_isWhitelisted = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isWhitelisted.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isWhitelisted;
	var _assertString$4 = _interopRequireDefault$6(require_assertString());
	function _interopRequireDefault$6(e) {
		return e && e.__esModule ? e : { default: e };
	}
	function isWhitelisted(str, chars) {
		(0, _assertString$4.default)(str);
		for (var i$1 = str.length - 1; i$1 >= 0; i$1--) if (chars.indexOf(str[i$1]) === -1) return false;
		return true;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/normalizeEmail.js
var require_normalizeEmail = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/normalizeEmail.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = normalizeEmail;
	var _merge$1 = _interopRequireDefault$5(require_merge$1());
	function _interopRequireDefault$5(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var default_normalize_email_options = {
		all_lowercase: true,
		gmail_lowercase: true,
		gmail_remove_dots: true,
		gmail_remove_subaddress: true,
		gmail_convert_googlemaildotcom: true,
		outlookdotcom_lowercase: true,
		outlookdotcom_remove_subaddress: true,
		yahoo_lowercase: true,
		yahoo_remove_subaddress: true,
		yandex_lowercase: true,
		yandex_convert_yandexru: true,
		icloud_lowercase: true,
		icloud_remove_subaddress: true
	};
	var icloud_domains = ["icloud.com", "me.com"];
	var outlookdotcom_domains = [
		"hotmail.at",
		"hotmail.be",
		"hotmail.ca",
		"hotmail.cl",
		"hotmail.co.il",
		"hotmail.co.nz",
		"hotmail.co.th",
		"hotmail.co.uk",
		"hotmail.com",
		"hotmail.com.ar",
		"hotmail.com.au",
		"hotmail.com.br",
		"hotmail.com.gr",
		"hotmail.com.mx",
		"hotmail.com.pe",
		"hotmail.com.tr",
		"hotmail.com.vn",
		"hotmail.cz",
		"hotmail.de",
		"hotmail.dk",
		"hotmail.es",
		"hotmail.fr",
		"hotmail.hu",
		"hotmail.id",
		"hotmail.ie",
		"hotmail.in",
		"hotmail.it",
		"hotmail.jp",
		"hotmail.kr",
		"hotmail.lv",
		"hotmail.my",
		"hotmail.ph",
		"hotmail.pt",
		"hotmail.sa",
		"hotmail.sg",
		"hotmail.sk",
		"live.be",
		"live.co.uk",
		"live.com",
		"live.com.ar",
		"live.com.mx",
		"live.de",
		"live.es",
		"live.eu",
		"live.fr",
		"live.it",
		"live.nl",
		"msn.com",
		"outlook.at",
		"outlook.be",
		"outlook.cl",
		"outlook.co.il",
		"outlook.co.nz",
		"outlook.co.th",
		"outlook.com",
		"outlook.com.ar",
		"outlook.com.au",
		"outlook.com.br",
		"outlook.com.gr",
		"outlook.com.pe",
		"outlook.com.tr",
		"outlook.com.vn",
		"outlook.cz",
		"outlook.de",
		"outlook.dk",
		"outlook.es",
		"outlook.fr",
		"outlook.hu",
		"outlook.id",
		"outlook.ie",
		"outlook.in",
		"outlook.it",
		"outlook.jp",
		"outlook.kr",
		"outlook.lv",
		"outlook.my",
		"outlook.ph",
		"outlook.pt",
		"outlook.sa",
		"outlook.sg",
		"outlook.sk",
		"passport.com"
	];
	var yahoo_domains = [
		"rocketmail.com",
		"yahoo.ca",
		"yahoo.co.uk",
		"yahoo.com",
		"yahoo.de",
		"yahoo.fr",
		"yahoo.in",
		"yahoo.it",
		"ymail.com"
	];
	var yandex_domains = [
		"yandex.ru",
		"yandex.ua",
		"yandex.kz",
		"yandex.com",
		"yandex.by",
		"ya.ru"
	];
	function dotsReplacer(match) {
		if (match.length > 1) return match;
		return "";
	}
	function normalizeEmail(email, options) {
		options = (0, _merge$1.default)(options, default_normalize_email_options);
		var raw_parts = email.split("@");
		var domain = raw_parts.pop();
		var user = raw_parts.join("@");
		var parts = [user, domain];
		parts[1] = parts[1].toLowerCase();
		if (parts[1] === "gmail.com" || parts[1] === "googlemail.com") {
			if (options.gmail_remove_subaddress) parts[0] = parts[0].split("+")[0];
			if (options.gmail_remove_dots) parts[0] = parts[0].replace(/\.+/g, dotsReplacer);
			if (!parts[0].length) return false;
			if (options.all_lowercase || options.gmail_lowercase) parts[0] = parts[0].toLowerCase();
			parts[1] = options.gmail_convert_googlemaildotcom ? "gmail.com" : parts[1];
		} else if (icloud_domains.indexOf(parts[1]) >= 0) {
			if (options.icloud_remove_subaddress) parts[0] = parts[0].split("+")[0];
			if (!parts[0].length) return false;
			if (options.all_lowercase || options.icloud_lowercase) parts[0] = parts[0].toLowerCase();
		} else if (outlookdotcom_domains.indexOf(parts[1]) >= 0) {
			if (options.outlookdotcom_remove_subaddress) parts[0] = parts[0].split("+")[0];
			if (!parts[0].length) return false;
			if (options.all_lowercase || options.outlookdotcom_lowercase) parts[0] = parts[0].toLowerCase();
		} else if (yahoo_domains.indexOf(parts[1]) >= 0) {
			if (options.yahoo_remove_subaddress) {
				var components = parts[0].split("-");
				parts[0] = components.length > 1 ? components.slice(0, -1).join("-") : components[0];
			}
			if (!parts[0].length) return false;
			if (options.all_lowercase || options.yahoo_lowercase) parts[0] = parts[0].toLowerCase();
		} else if (yandex_domains.indexOf(parts[1]) >= 0) {
			if (options.all_lowercase || options.yandex_lowercase) parts[0] = parts[0].toLowerCase();
			parts[1] = options.yandex_convert_yandexru ? "yandex.ru" : parts[1];
		} else if (options.all_lowercase) parts[0] = parts[0].toLowerCase();
		return parts.join("@");
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isSlug.js
var require_isSlug = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isSlug.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isSlug;
	var _assertString$3 = _interopRequireDefault$4(require_assertString());
	function _interopRequireDefault$4(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var charsetRegex = /^[^\s-_](?!.*?[-_]{2,})[a-z0-9-\\][^\s]*[^-_\s]$/;
	function isSlug(str) {
		(0, _assertString$3.default)(str);
		return charsetRegex.test(str);
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLicensePlate.js
var require_isLicensePlate = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isLicensePlate.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isLicensePlate;
	var _assertString$2 = _interopRequireDefault$3(require_assertString());
	function _interopRequireDefault$3(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var validators = {
		"cs-CZ": function csCZ(str) {
			return new RegExp("^(([ABCDEFHIJKLMNPRSTUVXYZ]|[0-9])-?){5,8}$", "").test(str);
		},
		"de-DE": function deDE(str) {
			return new RegExp("^((A|AA|AB|AC|AE|AH|AK|AM|AN|AÖ|AP|AS|AT|AU|AW|AZ|B|BA|BB|BC|BE|BF|BH|BI|BK|BL|BM|BN|BO|BÖ|BS|BT|BZ|C|CA|CB|CE|CO|CR|CW|D|DA|DD|DE|DH|DI|DL|DM|DN|DO|DU|DW|DZ|E|EA|EB|ED|EE|EF|EG|EH|EI|EL|EM|EN|ER|ES|EU|EW|F|FB|FD|FF|FG|FI|FL|FN|FO|FR|FS|FT|FÜ|FW|FZ|G|GA|GC|GD|GE|GF|GG|GI|GK|GL|GM|GN|GÖ|GP|GR|GS|GT|GÜ|GV|GW|GZ|H|HA|HB|HC|HD|HE|HF|HG|HH|HI|HK|HL|HM|HN|HO|HP|HR|HS|HU|HV|HX|HY|HZ|IK|IL|IN|IZ|J|JE|JL|K|KA|KB|KC|KE|KF|KG|KH|KI|KK|KL|KM|KN|KO|KR|KS|KT|KU|KW|KY|L|LA|LB|LC|LD|LF|LG|LH|LI|LL|LM|LN|LÖ|LP|LR|LU|M|MA|MB|MC|MD|ME|MG|MH|MI|MK|ML|MM|MN|MO|MQ|MR|MS|MÜ|MW|MY|MZ|N|NB|ND|NE|NF|NH|NI|NK|NM|NÖ|NP|NR|NT|NU|NW|NY|NZ|OA|OB|OC|OD|OE|OF|OG|OH|OK|OL|OP|OS|OZ|P|PA|PB|PE|PF|PI|PL|PM|PN|PR|PS|PW|PZ|R|RA|RC|RD|RE|RG|RH|RI|RL|RM|RN|RO|RP|RS|RT|RU|RV|RW|RZ|S|SB|SC|SE|SG|SI|SK|SL|SM|SN|SO|SP|SR|ST|SU|SW|SY|SZ|TE|TF|TG|TO|TP|TR|TS|TT|TÜ|ÜB|UE|UH|UL|UM|UN|V|VB|VG|VK|VR|VS|W|WA|WB|WE|WF|WI|WK|WL|WM|WN|WO|WR|WS|WT|WÜ|WW|WZ|Z|ZE|ZI|ZP|ZR|ZW|ZZ)[- ]?[A-Z]{1,2}[- ]?\\d{1,4}|(ABG|ABI|AIB|AIC|ALF|ALZ|ANA|ANG|ANK|APD|ARN|ART|ASL|ASZ|AUR|AZE|BAD|BAR|BBG|BCH|BED|BER|BGD|BGL|BID|BIN|BIR|BIT|BIW|BKS|BLB|BLK|BNA|BOG|BOH|BOR|BOT|BRA|BRB|BRG|BRK|BRL|BRV|BSB|BSK|BTF|BÜD|BUL|BÜR|BÜS|BÜZ|CAS|CHA|CLP|CLZ|COC|COE|CUX|DAH|DAN|DAU|DBR|DEG|DEL|DGF|DIL|DIN|DIZ|DKB|DLG|DON|DUD|DÜW|EBE|EBN|EBS|ECK|EIC|EIL|EIN|EIS|EMD|EMS|ERB|ERH|ERK|ERZ|ESB|ESW|FDB|FDS|FEU|FFB|FKB|FLÖ|FOR|FRG|FRI|FRW|FTL|FÜS|GAN|GAP|GDB|GEL|GEO|GER|GHA|GHC|GLA|GMN|GNT|GOA|GOH|GRA|GRH|GRI|GRM|GRZ|GTH|GUB|GUN|GVM|HAB|HAL|HAM|HAS|HBN|HBS|HCH|HDH|HDL|HEB|HEF|HEI|HER|HET|HGN|HGW|HHM|HIG|HIP|HMÜ|HOG|HOH|HOL|HOM|HOR|HÖS|HOT|HRO|HSK|HST|HVL|HWI|IGB|ILL|JÜL|KEH|KEL|KEM|KIB|KLE|KLZ|KÖN|KÖT|KÖZ|KRU|KÜN|KUS|KYF|LAN|LAU|LBS|LBZ|LDK|LDS|LEO|LER|LEV|LIB|LIF|LIP|LÖB|LOS|LRO|LSZ|LÜN|LUP|LWL|MAB|MAI|MAK|MAL|MED|MEG|MEI|MEK|MEL|MER|MET|MGH|MGN|MHL|MIL|MKK|MOD|MOL|MON|MOS|MSE|MSH|MSP|MST|MTK|MTL|MÜB|MÜR|MYK|MZG|NAB|NAI|NAU|NDH|NEA|NEB|NEC|NEN|NES|NEW|NMB|NMS|NOH|NOL|NOM|NOR|NVP|NWM|OAL|OBB|OBG|OCH|OHA|ÖHR|OHV|OHZ|OPR|OSL|OVI|OVL|OVP|PAF|PAN|PAR|PCH|PEG|PIR|PLÖ|PRÜ|QFT|QLB|RDG|REG|REH|REI|RID|RIE|ROD|ROF|ROK|ROL|ROS|ROT|ROW|RSL|RÜD|RÜG|SAB|SAD|SAN|SAW|SBG|SBK|SCZ|SDH|SDL|SDT|SEB|SEE|SEF|SEL|SFB|SFT|SGH|SHA|SHG|SHK|SHL|SIG|SIM|SLE|SLF|SLK|SLN|SLS|SLÜ|SLZ|SMÜ|SOB|SOG|SOK|SÖM|SON|SPB|SPN|SRB|SRO|STA|STB|STD|STE|STL|SUL|SÜW|SWA|SZB|TBB|TDO|TET|TIR|TÖL|TUT|UEM|UER|UFF|USI|VAI|VEC|VER|VIB|VIE|VIT|VOH|WAF|WAK|WAN|WAR|WAT|WBS|WDA|WEL|WEN|WER|WES|WHV|WIL|WIS|WIT|WIZ|WLG|WMS|WND|WOB|WOH|WOL|WOR|WOS|WRN|WSF|WST|WSW|WTL|WTM|WUG|WÜM|WUN|WUR|WZL|ZEL|ZIG)[- ]?(([A-Z][- ]?\\d{1,4})|([A-Z]{2}[- ]?\\d{1,3})))[- ]?(E|H)?$", "").test(str);
		},
		"de-LI": function deLI(str) {
			return /^FL[- ]?\d{1,5}[UZ]?$/.test(str);
		},
		"en-IN": function enIN(str) {
			return /^[A-Z]{2}[ -]?[0-9]{1,2}(?:[ -]?[A-Z])(?:[ -]?[A-Z]*)?[ -]?[0-9]{4}$/.test(str);
		},
		"en-SG": function enSG(str) {
			return /^[A-Z]{3}[ -]?[\d]{4}[ -]?[A-Z]{1}$/.test(str);
		},
		"es-AR": function esAR(str) {
			return new RegExp("^(([A-Z]{2} ?[0-9]{3} ?[A-Z]{2})|([A-Z]{3} ?[0-9]{3}))$", "").test(str);
		},
		"fi-FI": function fiFI(str) {
			return new RegExp("^(?=.{4,7})(([A-Z]{1,3}|[0-9]{1,3})[\\s-]?([A-Z]{1,3}|[0-9]{1,5}))$", "").test(str);
		},
		"hu-HU": function huHU(str) {
			return new RegExp("^((((?!AAA)(([A-NPRSTVZWXY]{1})([A-PR-Z]{1})([A-HJ-NPR-Z]))|(A[ABC]I)|A[ABC]O|A[A-W]Q|BPI|BPO|UCO|UDO|XAO)-(?!000)\\d{3})|(M\\d{6})|((CK|DT|CD|HC|H[ABEFIKLMNPRSTVX]|MA|OT|R[A-Z]) \\d{2}-\\d{2})|(CD \\d{3}-\\d{3})|(C-(C|X) \\d{4})|(X-(A|B|C) \\d{4})|(([EPVZ]-\\d{5}))|(S A[A-Z]{2} \\d{2})|(SP \\d{2}-\\d{2}))$", "").test(str);
		},
		"pt-BR": function ptBR(str) {
			return /^[A-Z]{3}[ -]?[0-9][A-Z][0-9]{2}|[A-Z]{3}[ -]?[0-9]{4}$/.test(str);
		},
		"pt-PT": function ptPT(str) {
			return new RegExp("^(([A-Z]{2}[ -·]?[0-9]{2}[ -·]?[0-9]{2})|([0-9]{2}[ -·]?[A-Z]{2}[ -·]?[0-9]{2})|([0-9]{2}[ -·]?[0-9]{2}[ -·]?[A-Z]{2})|([A-Z]{2}[ -·]?[0-9]{2}[ -·]?[A-Z]{2}))$", "").test(str);
		},
		"sq-AL": function sqAL(str) {
			return new RegExp("^[A-Z]{2}[- ]?((\\d{3}[- ]?(([A-Z]{2})|T))|(R[- ]?\\d{3}))$", "").test(str);
		},
		"sv-SE": function svSE(str) {
			return new RegExp("^[A-HJ-PR-UW-Z]{3} ?[\\d]{2}[A-HJ-PR-UW-Z1-9]$|(^[A-ZÅÄÖ ]{2,7}$)", "").test(str.trim());
		},
		"en-PK": function enPK(str) {
			return new RegExp("(^[A-Z]{2}((\\s|-){0,1})[0-9]{3,4}((\\s|-)[0-9]{2}){0,1}$)|(^[A-Z]{3}((\\s|-){0,1})[0-9]{3,4}((\\s|-)[0-9]{2}){0,1}$)|(^[A-Z]{4}((\\s|-){0,1})[0-9]{3,4}((\\s|-)[0-9]{2}){0,1}$)|(^[A-Z]((\\s|-){0,1})[0-9]{4}((\\s|-)[0-9]{2}){0,1}$)", "").test(str.trim());
		}
	};
	function isLicensePlate(str, locale$1) {
		(0, _assertString$2.default)(str);
		if (locale$1 in validators) return validators[locale$1](str);
		else if (locale$1 === "any") {
			for (var key in validators) {
				var validator$2 = validators[key];
				if (validator$2(str)) return true;
			}
			return false;
		}
		throw new Error("Invalid locale '".concat(locale$1, "'"));
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isStrongPassword.js
var require_isStrongPassword = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isStrongPassword.js"(exports, module) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isStrongPassword$1;
	var _merge = _interopRequireDefault$2(require_merge$1());
	var _assertString$1 = _interopRequireDefault$2(require_assertString());
	function _interopRequireDefault$2(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var upperCaseRegex = /^[A-Z]$/;
	var lowerCaseRegex = /^[a-z]$/;
	var numberRegex = /^[0-9]$/;
	var symbolRegex = /^[-#!$@£%^&*()_+|~=`{}\[\]:";'<>?,.\/\\ ]$/;
	var defaultOptions = {
		minLength: 8,
		minLowercase: 1,
		minUppercase: 1,
		minNumbers: 1,
		minSymbols: 1,
		returnScore: false,
		pointsPerUnique: 1,
		pointsPerRepeat: .5,
		pointsForContainingLower: 10,
		pointsForContainingUpper: 10,
		pointsForContainingNumber: 10,
		pointsForContainingSymbol: 10
	};
	function countChars(str) {
		var result$1 = {};
		Array.from(str).forEach(function(char) {
			var curVal = result$1[char];
			if (curVal) result$1[char] += 1;
			else result$1[char] = 1;
		});
		return result$1;
	}
	function analyzePassword(password) {
		var charMap = countChars(password);
		var analysis = {
			length: password.length,
			uniqueChars: Object.keys(charMap).length,
			uppercaseCount: 0,
			lowercaseCount: 0,
			numberCount: 0,
			symbolCount: 0
		};
		Object.keys(charMap).forEach(function(char) {
			/* istanbul ignore else */
			if (upperCaseRegex.test(char)) analysis.uppercaseCount += charMap[char];
			else if (lowerCaseRegex.test(char)) analysis.lowercaseCount += charMap[char];
			else if (numberRegex.test(char)) analysis.numberCount += charMap[char];
			else if (symbolRegex.test(char)) analysis.symbolCount += charMap[char];
		});
		return analysis;
	}
	function scorePassword(analysis, scoringOptions) {
		var points = 0;
		points += analysis.uniqueChars * scoringOptions.pointsPerUnique;
		points += (analysis.length - analysis.uniqueChars) * scoringOptions.pointsPerRepeat;
		if (analysis.lowercaseCount > 0) points += scoringOptions.pointsForContainingLower;
		if (analysis.uppercaseCount > 0) points += scoringOptions.pointsForContainingUpper;
		if (analysis.numberCount > 0) points += scoringOptions.pointsForContainingNumber;
		if (analysis.symbolCount > 0) points += scoringOptions.pointsForContainingSymbol;
		return points;
	}
	function isStrongPassword$1(str) {
		var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
		(0, _assertString$1.default)(str);
		var analysis = analyzePassword(str);
		options = (0, _merge.default)(options || {}, defaultOptions);
		if (options.returnScore) return scorePassword(analysis, options);
		return analysis.length >= options.minLength && analysis.lowercaseCount >= options.minLowercase && analysis.uppercaseCount >= options.minUppercase && analysis.numberCount >= options.minNumbers && analysis.symbolCount >= options.minSymbols;
	}
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isVAT.js
var require_isVAT = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/lib/isVAT.js"(exports) {
	function _typeof$1(o) {
		"@babel/helpers - typeof";
		return _typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof$1(o);
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = isVAT;
	exports.vatMatchers = void 0;
	var _assertString = _interopRequireDefault$1(require_assertString());
	var algorithms = _interopRequireWildcard$1(require_algorithms());
	function _interopRequireWildcard$1(e, t) {
		if ("function" == typeof WeakMap) var r = /* @__PURE__ */ new WeakMap(), n = /* @__PURE__ */ new WeakMap();
		return (_interopRequireWildcard$1 = function _interopRequireWildcard$10(e$1, t$1) {
			if (!t$1 && e$1 && e$1.__esModule) return e$1;
			var o, i$1, f = {
				__proto__: null,
				default: e$1
			};
			if (null === e$1 || "object" != _typeof$1(e$1) && "function" != typeof e$1) return f;
			if (o = t$1 ? n : r) {
				if (o.has(e$1)) return o.get(e$1);
				o.set(e$1, f);
			}
			for (var _t in e$1) "default" !== _t && {}.hasOwnProperty.call(e$1, _t) && ((i$1 = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e$1, _t)) && (i$1.get || i$1.set) ? o(f, _t, i$1) : f[_t] = e$1[_t]);
			return f;
		})(e, t);
	}
	function _interopRequireDefault$1(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var AU = function AU$1(str) {
		var match = str.match(new RegExp("^(AU)?(\\d{11})$", ""));
		if (!match) return false;
		var weights = [
			10,
			1,
			3,
			5,
			7,
			9,
			11,
			13,
			15,
			17,
			19
		];
		str = str.replace(/^AU/, "");
		var ABN = (parseInt(str.slice(0, 1), 10) - 1).toString() + str.slice(1);
		var total = 0;
		for (var i$1 = 0; i$1 < 11; i$1++) total += weights[i$1] * ABN.charAt(i$1);
		return total !== 0 && total % 89 === 0;
	};
	var CH = function CH$1(str) {
		var hasValidCheckNumber = function hasValidCheckNumber$1(digits) {
			var lastDigit = digits.pop();
			var weights = [
				5,
				4,
				3,
				2,
				7,
				6,
				5,
				4
			];
			var calculatedCheckNumber = (11 - digits.reduce(function(acc, el, idx) {
				return acc + el * weights[idx];
			}, 0) % 11) % 11;
			return lastDigit === calculatedCheckNumber;
		};
		return new RegExp("^(CHE[- ]?)?(\\d{9}|(\\d{3}\\.\\d{3}\\.\\d{3})|(\\d{3} \\d{3} \\d{3})) ?(TVA|MWST|IVA)?$", "").test(str) && hasValidCheckNumber(str.match(/\d/g).map(function(el) {
			return +el;
		}));
	};
	var PT = function PT$1(str) {
		var match = str.match(new RegExp("^(PT)?(\\d{9})$", ""));
		if (!match) return false;
		var tin = match[2];
		var checksum = 11 - algorithms.reverseMultiplyAndSum(tin.split("").slice(0, 8).map(function(a) {
			return parseInt(a, 10);
		}), 9) % 11;
		if (checksum > 9) return parseInt(tin[8], 10) === 0;
		return checksum === parseInt(tin[8], 10);
	};
	var vatMatchers = exports.vatMatchers = {
		AT: function AT(str) {
			return new RegExp("^(AT)?U\\d{8}$", "").test(str);
		},
		BE: function BE(str) {
			return new RegExp("^(BE)?\\d{10}$", "").test(str);
		},
		BG: function BG(str) {
			return new RegExp("^(BG)?\\d{9,10}$", "").test(str);
		},
		HR: function HR(str) {
			return new RegExp("^(HR)?\\d{11}$", "").test(str);
		},
		CY: function CY(str) {
			return new RegExp("^(CY)?\\w{9}$", "").test(str);
		},
		CZ: function CZ(str) {
			return new RegExp("^(CZ)?\\d{8,10}$", "").test(str);
		},
		DK: function DK(str) {
			return new RegExp("^(DK)?\\d{8}$", "").test(str);
		},
		EE: function EE(str) {
			return new RegExp("^(EE)?\\d{9}$", "").test(str);
		},
		FI: function FI(str) {
			return new RegExp("^(FI)?\\d{8}$", "").test(str);
		},
		FR: function FR(str) {
			return new RegExp("^(FR)?\\w{2}\\d{9}$", "").test(str);
		},
		DE: function DE(str) {
			return new RegExp("^(DE)?\\d{9}$", "").test(str);
		},
		EL: function EL(str) {
			return new RegExp("^(EL)?\\d{9}$", "").test(str);
		},
		HU: function HU(str) {
			return new RegExp("^(HU)?\\d{8}$", "").test(str);
		},
		IE: function IE(str) {
			return new RegExp("^(IE)?\\d{7}\\w{1}(W)?$", "").test(str);
		},
		IT: function IT(str) {
			return new RegExp("^(IT)?\\d{11}$", "").test(str);
		},
		LV: function LV(str) {
			return new RegExp("^(LV)?\\d{11}$", "").test(str);
		},
		LT: function LT(str) {
			return new RegExp("^(LT)?\\d{9,12}$", "").test(str);
		},
		LU: function LU(str) {
			return new RegExp("^(LU)?\\d{8}$", "").test(str);
		},
		MT: function MT(str) {
			return new RegExp("^(MT)?\\d{8}$", "").test(str);
		},
		NL: function NL(str) {
			return new RegExp("^(NL)?\\d{9}B\\d{2}$", "").test(str);
		},
		PL: function PL(str) {
			return new RegExp("^(PL)?(\\d{10}|(\\d{3}-\\d{3}-\\d{2}-\\d{2})|(\\d{3}-\\d{2}-\\d{2}-\\d{3}))$", "").test(str);
		},
		PT,
		RO: function RO(str) {
			return new RegExp("^(RO)?\\d{2,10}$", "").test(str);
		},
		SK: function SK(str) {
			return new RegExp("^(SK)?\\d{10}$", "").test(str);
		},
		SI: function SI(str) {
			return new RegExp("^(SI)?\\d{8}$", "").test(str);
		},
		ES: function ES(str) {
			return new RegExp("^(ES)?\\w\\d{7}[A-Z]$", "").test(str);
		},
		SE: function SE(str) {
			return new RegExp("^(SE)?\\d{12}$", "").test(str);
		},
		AL: function AL(str) {
			return new RegExp("^(AL)?\\w{9}[A-Z]$", "").test(str);
		},
		MK: function MK(str) {
			return new RegExp("^(MK)?\\d{13}$", "").test(str);
		},
		AU,
		BY: function BY(str) {
			return new RegExp("^(УНП )?\\d{9}$", "").test(str);
		},
		CA: function CA(str) {
			return new RegExp("^(CA)?\\d{9}$", "").test(str);
		},
		IS: function IS(str) {
			return new RegExp("^(IS)?\\d{5,6}$", "").test(str);
		},
		IN: function IN(str) {
			return new RegExp("^(IN)?\\d{15}$", "").test(str);
		},
		ID: function ID(str) {
			return new RegExp("^(ID)?(\\d{15}|(\\d{2}.\\d{3}.\\d{3}.\\d{1}-\\d{3}.\\d{3}))$", "").test(str);
		},
		IL: function IL(str) {
			return new RegExp("^(IL)?\\d{9}$", "").test(str);
		},
		KZ: function KZ(str) {
			return new RegExp("^(KZ)?\\d{12}$", "").test(str);
		},
		NZ: function NZ(str) {
			return new RegExp("^(NZ)?\\d{9}$", "").test(str);
		},
		NG: function NG(str) {
			return new RegExp("^(NG)?(\\d{12}|(\\d{8}-\\d{4}))$", "").test(str);
		},
		NO: function NO(str) {
			return new RegExp("^(NO)?\\d{9}MVA$", "").test(str);
		},
		PH: function PH(str) {
			return new RegExp("^(PH)?(\\d{12}|\\d{3} \\d{3} \\d{3} \\d{3})$", "").test(str);
		},
		RU: function RU(str) {
			return new RegExp("^(RU)?(\\d{10}|\\d{12})$", "").test(str);
		},
		SM: function SM(str) {
			return new RegExp("^(SM)?\\d{5}$", "").test(str);
		},
		SA: function SA(str) {
			return new RegExp("^(SA)?\\d{15}$", "").test(str);
		},
		RS: function RS(str) {
			return new RegExp("^(RS)?\\d{9}$", "").test(str);
		},
		CH,
		TR: function TR(str) {
			return new RegExp("^(TR)?\\d{10}$", "").test(str);
		},
		UA: function UA(str) {
			return new RegExp("^(UA)?\\d{12}$", "").test(str);
		},
		GB: function GB(str) {
			return new RegExp("^GB((\\d{3} \\d{4} ([0-8][0-9]|9[0-6]))|(\\d{9} \\d{3})|(((GD[0-4])|(HA[5-9]))[0-9]{2}))$", "").test(str);
		},
		UZ: function UZ(str) {
			return new RegExp("^(UZ)?\\d{9}$", "").test(str);
		},
		AR: function AR(str) {
			return new RegExp("^(AR)?\\d{11}$", "").test(str);
		},
		BO: function BO(str) {
			return new RegExp("^(BO)?\\d{7}$", "").test(str);
		},
		BR: function BR(str) {
			return new RegExp("^(BR)?((\\d{2}.\\d{3}.\\d{3}\\/\\d{4}-\\d{2})|(\\d{3}.\\d{3}.\\d{3}-\\d{2}))$", "").test(str);
		},
		CL: function CL(str) {
			return new RegExp("^(CL)?\\d{8}-\\d{1}$", "").test(str);
		},
		CO: function CO(str) {
			return new RegExp("^(CO)?\\d{10}$", "").test(str);
		},
		CR: function CR(str) {
			return new RegExp("^(CR)?\\d{9,12}$", "").test(str);
		},
		EC: function EC(str) {
			return new RegExp("^(EC)?\\d{13}$", "").test(str);
		},
		SV: function SV(str) {
			return new RegExp("^(SV)?\\d{4}-\\d{6}-\\d{3}-\\d{1}$", "").test(str);
		},
		GT: function GT(str) {
			return new RegExp("^(GT)?\\d{7}-\\d{1}$", "").test(str);
		},
		HN: function HN(str) {
			return new RegExp("^(HN)?$", "").test(str);
		},
		MX: function MX(str) {
			return new RegExp("^(MX)?\\w{3,4}\\d{6}\\w{3}$", "").test(str);
		},
		NI: function NI(str) {
			return new RegExp("^(NI)?\\d{3}-\\d{6}-\\d{4}\\w{1}$", "").test(str);
		},
		PA: function PA(str) {
			return new RegExp("^(PA)?$", "").test(str);
		},
		PY: function PY(str) {
			return new RegExp("^(PY)?\\d{6,8}-\\d{1}$", "").test(str);
		},
		PE: function PE(str) {
			return new RegExp("^(PE)?\\d{11}$", "").test(str);
		},
		DO: function DO(str) {
			return new RegExp("^(DO)?(\\d{11}|(\\d{3}-\\d{7}-\\d{1})|[1,4,5]{1}\\d{8}|([1,4,5]{1})-\\d{2}-\\d{5}-\\d{1})$", "").test(str);
		},
		UY: function UY(str) {
			return new RegExp("^(UY)?\\d{12}$", "").test(str);
		},
		VE: function VE(str) {
			return new RegExp("^(VE)?[J,G,V,E]{1}-(\\d{9}|(\\d{8}-\\d{1}))$", "").test(str);
		}
	};
	function isVAT(str, countryCode) {
		(0, _assertString.default)(str);
		(0, _assertString.default)(countryCode);
		if (countryCode in vatMatchers) return vatMatchers[countryCode](str);
		throw new Error("Invalid country code: '".concat(countryCode, "'"));
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/index.js
var require_validator = __commonJS({ "../../node_modules/.pnpm/validator@13.15.15/node_modules/validator/index.js"(exports, module) {
	function _typeof(o) {
		"@babel/helpers - typeof";
		return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
			return typeof o$1;
		} : function(o$1) {
			return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
		}, _typeof(o);
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = void 0;
	var _toDate = _interopRequireDefault(require_toDate());
	var _toFloat = _interopRequireDefault(require_toFloat());
	var _toInt = _interopRequireDefault(require_toInt());
	var _toBoolean = _interopRequireDefault(require_toBoolean());
	var _equals = _interopRequireDefault(require_equals());
	var _contains = _interopRequireDefault(require_contains());
	var _matches = _interopRequireDefault(require_matches());
	var _isEmail = _interopRequireDefault(require_isEmail());
	var _isURL = _interopRequireDefault(require_isURL());
	var _isMACAddress = _interopRequireDefault(require_isMACAddress());
	var _isIP = _interopRequireDefault(require_isIP());
	var _isIPRange = _interopRequireDefault(require_isIPRange());
	var _isFQDN = _interopRequireDefault(require_isFQDN());
	var _isDate = _interopRequireDefault(require_isDate$1());
	var _isTime = _interopRequireDefault(require_isTime());
	var _isBoolean = _interopRequireDefault(require_isBoolean());
	var _isLocale = _interopRequireDefault(require_isLocale());
	var _isAbaRouting = _interopRequireDefault(require_isAbaRouting());
	var _isAlpha = _interopRequireWildcard(require_isAlpha());
	var _isAlphanumeric = _interopRequireWildcard(require_isAlphanumeric());
	var _isNumeric = _interopRequireDefault(require_isNumeric());
	var _isPassportNumber = _interopRequireWildcard(require_isPassportNumber());
	var _isPort = _interopRequireDefault(require_isPort());
	var _isLowercase = _interopRequireDefault(require_isLowercase());
	var _isUppercase = _interopRequireDefault(require_isUppercase());
	var _isIMEI = _interopRequireDefault(require_isIMEI());
	var _isAscii = _interopRequireDefault(require_isAscii());
	var _isFullWidth = _interopRequireDefault(require_isFullWidth());
	var _isHalfWidth = _interopRequireDefault(require_isHalfWidth());
	var _isVariableWidth = _interopRequireDefault(require_isVariableWidth());
	var _isMultibyte = _interopRequireDefault(require_isMultibyte());
	var _isSemVer = _interopRequireDefault(require_isSemVer());
	var _isSurrogatePair = _interopRequireDefault(require_isSurrogatePair());
	var _isInt = _interopRequireDefault(require_isInt());
	var _isFloat = _interopRequireWildcard(require_isFloat());
	var _isDecimal = _interopRequireDefault(require_isDecimal());
	var _isHexadecimal = _interopRequireDefault(require_isHexadecimal());
	var _isOctal = _interopRequireDefault(require_isOctal());
	var _isDivisibleBy = _interopRequireDefault(require_isDivisibleBy());
	var _isHexColor = _interopRequireDefault(require_isHexColor());
	var _isRgbColor = _interopRequireDefault(require_isRgbColor());
	var _isHSL = _interopRequireDefault(require_isHSL());
	var _isISRC = _interopRequireDefault(require_isISRC());
	var _isIBAN = _interopRequireWildcard(require_isIBAN());
	var _isBIC = _interopRequireDefault(require_isBIC());
	var _isMD = _interopRequireDefault(require_isMD5());
	var _isHash = _interopRequireDefault(require_isHash());
	var _isJWT = _interopRequireDefault(require_isJWT());
	var _isJSON = _interopRequireDefault(require_isJSON());
	var _isEmpty = _interopRequireDefault(require_isEmpty$1());
	var _isLength = _interopRequireDefault(require_isLength());
	var _isByteLength = _interopRequireDefault(require_isByteLength());
	var _isULID = _interopRequireDefault(require_isULID());
	var _isUUID = _interopRequireDefault(require_isUUID());
	var _isMongoId = _interopRequireDefault(require_isMongoId());
	var _isAfter = _interopRequireDefault(require_isAfter());
	var _isBefore = _interopRequireDefault(require_isBefore());
	var _isIn = _interopRequireDefault(require_isIn());
	var _isLuhnNumber = _interopRequireDefault(require_isLuhnNumber());
	var _isCreditCard = _interopRequireDefault(require_isCreditCard());
	var _isIdentityCard = _interopRequireDefault(require_isIdentityCard());
	var _isEAN = _interopRequireDefault(require_isEAN());
	var _isISIN = _interopRequireDefault(require_isISIN());
	var _isISBN = _interopRequireDefault(require_isISBN());
	var _isISSN = _interopRequireDefault(require_isISSN());
	var _isTaxID = _interopRequireDefault(require_isTaxID());
	var _isMobilePhone = _interopRequireWildcard(require_isMobilePhone());
	var _isEthereumAddress = _interopRequireDefault(require_isEthereumAddress());
	var _isCurrency = _interopRequireDefault(require_isCurrency());
	var _isBtcAddress = _interopRequireDefault(require_isBtcAddress());
	var _isISO = require_isISO6346();
	var _isISO2 = _interopRequireDefault(require_isISO6391());
	var _isISO3 = _interopRequireDefault(require_isISO8601());
	var _isRFC = _interopRequireDefault(require_isRFC3339());
	var _isISO4 = _interopRequireDefault(require_isISO15924());
	var _isISO31661Alpha = _interopRequireDefault(require_isISO31661Alpha2());
	var _isISO31661Alpha2 = _interopRequireDefault(require_isISO31661Alpha3());
	var _isISO31661Numeric = _interopRequireDefault(require_isISO31661Numeric());
	var _isISO5 = _interopRequireDefault(require_isISO4217());
	var _isBase = _interopRequireDefault(require_isBase32());
	var _isBase2 = _interopRequireDefault(require_isBase58());
	var _isBase3 = _interopRequireDefault(require_isBase64());
	var _isDataURI = _interopRequireDefault(require_isDataURI());
	var _isMagnetURI = _interopRequireDefault(require_isMagnetURI());
	var _isMailtoURI = _interopRequireDefault(require_isMailtoURI());
	var _isMimeType = _interopRequireDefault(require_isMimeType());
	var _isLatLong = _interopRequireDefault(require_isLatLong());
	var _isPostalCode = _interopRequireWildcard(require_isPostalCode());
	var _ltrim = _interopRequireDefault(require_ltrim());
	var _rtrim = _interopRequireDefault(require_rtrim());
	var _trim = _interopRequireDefault(require_trim());
	var _escape = _interopRequireDefault(require_escape());
	var _unescape = _interopRequireDefault(require_unescape());
	var _stripLow = _interopRequireDefault(require_stripLow());
	var _whitelist = _interopRequireDefault(require_whitelist());
	var _blacklist = _interopRequireDefault(require_blacklist());
	var _isWhitelisted = _interopRequireDefault(require_isWhitelisted());
	var _normalizeEmail = _interopRequireDefault(require_normalizeEmail());
	var _isSlug = _interopRequireDefault(require_isSlug());
	var _isLicensePlate = _interopRequireDefault(require_isLicensePlate());
	var _isStrongPassword = _interopRequireDefault(require_isStrongPassword());
	var _isVAT = _interopRequireDefault(require_isVAT());
	function _interopRequireWildcard(e, t) {
		if ("function" == typeof WeakMap) var r = /* @__PURE__ */ new WeakMap(), n = /* @__PURE__ */ new WeakMap();
		return (_interopRequireWildcard = function _interopRequireWildcard$10(e$1, t$1) {
			if (!t$1 && e$1 && e$1.__esModule) return e$1;
			var o, i$1, f = {
				__proto__: null,
				default: e$1
			};
			if (null === e$1 || "object" != _typeof(e$1) && "function" != typeof e$1) return f;
			if (o = t$1 ? n : r) {
				if (o.has(e$1)) return o.get(e$1);
				o.set(e$1, f);
			}
			for (var _t in e$1) "default" !== _t && {}.hasOwnProperty.call(e$1, _t) && ((i$1 = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e$1, _t)) && (i$1.get || i$1.set) ? o(f, _t, i$1) : f[_t] = e$1[_t]);
			return f;
		})(e, t);
	}
	function _interopRequireDefault(e) {
		return e && e.__esModule ? e : { default: e };
	}
	var version = "13.15.15";
	var validator$1 = {
		version,
		toDate: _toDate.default,
		toFloat: _toFloat.default,
		toInt: _toInt.default,
		toBoolean: _toBoolean.default,
		equals: _equals.default,
		contains: _contains.default,
		matches: _matches.default,
		isEmail: _isEmail.default,
		isURL: _isURL.default,
		isMACAddress: _isMACAddress.default,
		isIP: _isIP.default,
		isIPRange: _isIPRange.default,
		isFQDN: _isFQDN.default,
		isBoolean: _isBoolean.default,
		isIBAN: _isIBAN.default,
		isBIC: _isBIC.default,
		isAbaRouting: _isAbaRouting.default,
		isAlpha: _isAlpha.default,
		isAlphaLocales: _isAlpha.locales,
		isAlphanumeric: _isAlphanumeric.default,
		isAlphanumericLocales: _isAlphanumeric.locales,
		isNumeric: _isNumeric.default,
		isPassportNumber: _isPassportNumber.default,
		passportNumberLocales: _isPassportNumber.locales,
		isPort: _isPort.default,
		isLowercase: _isLowercase.default,
		isUppercase: _isUppercase.default,
		isAscii: _isAscii.default,
		isFullWidth: _isFullWidth.default,
		isHalfWidth: _isHalfWidth.default,
		isVariableWidth: _isVariableWidth.default,
		isMultibyte: _isMultibyte.default,
		isSemVer: _isSemVer.default,
		isSurrogatePair: _isSurrogatePair.default,
		isInt: _isInt.default,
		isIMEI: _isIMEI.default,
		isFloat: _isFloat.default,
		isFloatLocales: _isFloat.locales,
		isDecimal: _isDecimal.default,
		isHexadecimal: _isHexadecimal.default,
		isOctal: _isOctal.default,
		isDivisibleBy: _isDivisibleBy.default,
		isHexColor: _isHexColor.default,
		isRgbColor: _isRgbColor.default,
		isHSL: _isHSL.default,
		isISRC: _isISRC.default,
		isMD5: _isMD.default,
		isHash: _isHash.default,
		isJWT: _isJWT.default,
		isJSON: _isJSON.default,
		isEmpty: _isEmpty.default,
		isLength: _isLength.default,
		isLocale: _isLocale.default,
		isByteLength: _isByteLength.default,
		isULID: _isULID.default,
		isUUID: _isUUID.default,
		isMongoId: _isMongoId.default,
		isAfter: _isAfter.default,
		isBefore: _isBefore.default,
		isIn: _isIn.default,
		isLuhnNumber: _isLuhnNumber.default,
		isCreditCard: _isCreditCard.default,
		isIdentityCard: _isIdentityCard.default,
		isEAN: _isEAN.default,
		isISIN: _isISIN.default,
		isISBN: _isISBN.default,
		isISSN: _isISSN.default,
		isMobilePhone: _isMobilePhone.default,
		isMobilePhoneLocales: _isMobilePhone.locales,
		isPostalCode: _isPostalCode.default,
		isPostalCodeLocales: _isPostalCode.locales,
		isEthereumAddress: _isEthereumAddress.default,
		isCurrency: _isCurrency.default,
		isBtcAddress: _isBtcAddress.default,
		isISO6346: _isISO.isISO6346,
		isFreightContainerID: _isISO.isFreightContainerID,
		isISO6391: _isISO2.default,
		isISO8601: _isISO3.default,
		isISO15924: _isISO4.default,
		isRFC3339: _isRFC.default,
		isISO31661Alpha2: _isISO31661Alpha.default,
		isISO31661Alpha3: _isISO31661Alpha2.default,
		isISO31661Numeric: _isISO31661Numeric.default,
		isISO4217: _isISO5.default,
		isBase32: _isBase.default,
		isBase58: _isBase2.default,
		isBase64: _isBase3.default,
		isDataURI: _isDataURI.default,
		isMagnetURI: _isMagnetURI.default,
		isMailtoURI: _isMailtoURI.default,
		isMimeType: _isMimeType.default,
		isLatLong: _isLatLong.default,
		ltrim: _ltrim.default,
		rtrim: _rtrim.default,
		trim: _trim.default,
		escape: _escape.default,
		unescape: _unescape.default,
		stripLow: _stripLow.default,
		whitelist: _whitelist.default,
		blacklist: _blacklist.default,
		isWhitelisted: _isWhitelisted.default,
		normalizeEmail: _normalizeEmail.default,
		toString,
		isSlug: _isSlug.default,
		isStrongPassword: _isStrongPassword.default,
		isTaxID: _isTaxID.default,
		isDate: _isDate.default,
		isTime: _isTime.default,
		isLicensePlate: _isLicensePlate.default,
		isVAT: _isVAT.default,
		ibanLocales: _isIBAN.locales
	};
	var _default = exports.default = validator$1;
	module.exports = exports.default;
	module.exports.default = exports.default;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsStrongPassword.js
var require_IsStrongPassword = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsStrongPassword.js"(exports) {
	var __createBinding$7 = void 0 && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		var desc = Object.getOwnPropertyDescriptor(m, k);
		if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
			enumerable: true,
			get: function() {
				return m[k];
			}
		};
		Object.defineProperty(o, k2, desc);
	} : function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		o[k2] = m[k];
	});
	var __setModuleDefault = void 0 && (void 0).__setModuleDefault || (Object.create ? function(o, v) {
		Object.defineProperty(o, "default", {
			enumerable: true,
			value: v
		});
	} : function(o, v) {
		o["default"] = v;
	});
	var __importStar = void 0 && (void 0).__importStar || function(mod) {
		if (mod && mod.__esModule) return mod;
		var result$1 = {};
		if (mod != null) {
			for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding$7(result$1, mod, k);
		}
		__setModuleDefault(result$1, mod);
		return result$1;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsStrongPassword = exports.isStrongPassword = exports.IS_STRONG_PASSWORD = void 0;
	const validator = __importStar(require_validator());
	const ValidateBy_1$20 = require_ValidateBy();
	exports.IS_STRONG_PASSWORD = "isStrongPassword";
	/**
	* Checks if the string is a strong password.
	* If given value is not a string, then it returns false.
	*/
	function isStrongPassword(value, options) {
		return typeof value === "string" && validator.isStrongPassword(value, options);
	}
	exports.isStrongPassword = isStrongPassword;
	/**
	* Checks if the string is a strong password.
	* If given value is not a string, then it returns false.
	*/
	function IsStrongPassword(options, validationOptions) {
		return (0, ValidateBy_1$20.ValidateBy)({
			name: exports.IS_STRONG_PASSWORD,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isStrongPassword(value, args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$20.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property is not strong enough";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsStrongPassword = IsStrongPassword;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsTimeZone.js
var require_IsTimeZone = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsTimeZone.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsTimeZone = exports.isTimeZone = exports.IS_TIMEZONE = void 0;
	const ValidateBy_1$19 = require_ValidateBy();
	exports.IS_TIMEZONE = "isTimeZone";
	/**
	* Checks if the string represents a valid IANA timezone
	* If the given value is not a valid IANA timezone, then it returns false.
	*/
	function isTimeZone(value) {
		try {
			if (typeof value !== "string") return false;
			/** Specifying an invalid time-zone will raise a `RangeError: Invalid time zone specified` error. */
			Intl.DateTimeFormat(void 0, { timeZone: value });
			return true;
		} catch (exception) {
			return false;
		}
	}
	exports.isTimeZone = isTimeZone;
	/**
	* Checks if the string represents a valid IANA timezone
	* If the given value is not a valid IANA timezone, then it returns false.
	*/
	function IsTimeZone(validationOptions) {
		return (0, ValidateBy_1$19.ValidateBy)({
			name: exports.IS_TIMEZONE,
			validator: {
				validate: function(value, args) {
					return isTimeZone(value);
				},
				defaultMessage: (0, ValidateBy_1$19.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a valid IANA time-zone";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsTimeZone = IsTimeZone;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBase58.js
var require_IsBase58 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/IsBase58.js"(exports) {
	var __importDefault$2 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsBase58 = exports.isBase58 = exports.IS_BASE58 = void 0;
	const ValidateBy_1$18 = require_ValidateBy();
	const isBase58_1 = __importDefault$2(require_isBase58());
	exports.IS_BASE58 = "isBase58";
	/**
	* Checks if a string is base58 encoded.
	* If given value is not a string, then it returns false.
	*/
	function isBase58(value) {
		return typeof value === "string" && (0, isBase58_1.default)(value);
	}
	exports.isBase58 = isBase58;
	/**
	* Checks if a string is base58 encoded.
	* If given value is not a string, then it returns false.
	*/
	function IsBase58(validationOptions) {
		return (0, ValidateBy_1$18.ValidateBy)({
			name: exports.IS_BASE58,
			validator: {
				validate: function(value, args) {
					return isBase58(value);
				},
				defaultMessage: (0, ValidateBy_1$18.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be base58 encoded";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsBase58 = IsBase58;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/is-tax-id.js
var require_is_tax_id = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/is-tax-id.js"(exports) {
	var __importDefault$1 = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsTaxId = exports.isTaxId = exports.IS_TAX_ID = void 0;
	const ValidateBy_1$17 = require_ValidateBy();
	const isTaxID_1 = __importDefault$1(require_isTaxID());
	exports.IS_TAX_ID = "isTaxId";
	/**
	* Checks if the string is a valid tax ID. Default locale is `en-US`.
	* If given value is not a string, then it returns false.
	*
	* Supported locales: bg-BG, cs-CZ, de-AT, de-DE, dk-DK, el-CY, el-GR, en-CA,
	* en-IE, en-US, es-ES, et-EE, fi-FI, fr-BE, fr-FR, fr-LU, hr-HR, hu-HU, it-IT,
	* lv-LV, mt-MT, nl-NL, pl-PL, pt-BR, pt-PT, ro-RO, sk-SK, sl-SI, sv-SE.
	*/
	function isTaxId(value, locale$1) {
		return typeof value === "string" && (0, isTaxID_1.default)(value, locale$1 || "en-US");
	}
	exports.isTaxId = isTaxId;
	/**
	* Checks if the string is a valid tax ID. Default locale is `en-US`.
	* If given value is not a string, then it returns false.
	*
	* Supported locales: bg-BG, cs-CZ, de-AT, de-DE, dk-DK, el-CY, el-GR, en-CA,
	* en-IE, en-US, es-ES, et-EE, fi-FI, fr-BE, fr-FR, fr-LU, hr-HR, hu-HU, it-IT,
	* lv-LV, mt-MT, nl-NL, pl-PL, pt-BR, pt-PT, ro-RO, sk-SK, sl-SI, sv-SE.
	*/
	function IsTaxId(locale$1, validationOptions) {
		return (0, ValidateBy_1$17.ValidateBy)({
			name: exports.IS_TAX_ID,
			constraints: [locale$1],
			validator: {
				validate: function(value, args) {
					return isTaxId(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$17.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a Tax Identification Number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsTaxId = IsTaxId;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/is-iso4217-currency-code.js
var require_is_iso4217_currency_code = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/string/is-iso4217-currency-code.js"(exports) {
	var __importDefault = void 0 && (void 0).__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsISO4217CurrencyCode = exports.isISO4217CurrencyCode = exports.IS_ISO4217_CURRENCY_CODE = void 0;
	const ValidateBy_1$16 = require_ValidateBy();
	const isISO4217_1 = __importDefault(require_isISO4217());
	exports.IS_ISO4217_CURRENCY_CODE = "isISO4217CurrencyCode";
	/**
	* Check if the string is a valid [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) officially assigned currency code.
	*/
	function isISO4217CurrencyCode(value) {
		return typeof value === "string" && (0, isISO4217_1.default)(value);
	}
	exports.isISO4217CurrencyCode = isISO4217CurrencyCode;
	/**
	* Check if the string is a valid [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) officially assigned currency code.
	*/
	function IsISO4217CurrencyCode(validationOptions) {
		return (0, ValidateBy_1$16.ValidateBy)({
			name: exports.IS_ISO4217_CURRENCY_CODE,
			validator: {
				validate: function(value, args) {
					return isISO4217CurrencyCode(value);
				},
				defaultMessage: (0, ValidateBy_1$16.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a valid ISO4217 currency code";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsISO4217CurrencyCode = IsISO4217CurrencyCode;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsBoolean.js
var require_IsBoolean = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsBoolean.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsBoolean = exports.isBoolean = exports.IS_BOOLEAN = void 0;
	const ValidateBy_1$15 = require_ValidateBy();
	exports.IS_BOOLEAN = "isBoolean";
	/**
	* Checks if a given value is a boolean.
	*/
	function isBoolean(value) {
		return value instanceof Boolean || typeof value === "boolean";
	}
	exports.isBoolean = isBoolean;
	/**
	* Checks if a value is a boolean.
	*/
	function IsBoolean(validationOptions) {
		return (0, ValidateBy_1$15.ValidateBy)({
			name: exports.IS_BOOLEAN,
			validator: {
				validate: function(value, args) {
					return isBoolean(value);
				},
				defaultMessage: (0, ValidateBy_1$15.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a boolean value";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsBoolean = IsBoolean;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsDate.js
var require_IsDate = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsDate.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsDate = exports.isDate = exports.IS_DATE = void 0;
	const ValidateBy_1$14 = require_ValidateBy();
	exports.IS_DATE = "isDate";
	/**
	* Checks if a given value is a date.
	*/
	function isDate(value) {
		return value instanceof Date && !isNaN(value.getTime());
	}
	exports.isDate = isDate;
	/**
	* Checks if a value is a date.
	*/
	function IsDate(validationOptions) {
		return (0, ValidateBy_1$14.ValidateBy)({
			name: exports.IS_DATE,
			validator: {
				validate: function(value, args) {
					return isDate(value);
				},
				defaultMessage: (0, ValidateBy_1$14.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a Date instance";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsDate = IsDate;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsNumber.js
var require_IsNumber = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsNumber.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsNumber = exports.isNumber = exports.IS_NUMBER = void 0;
	const ValidateBy_1$13 = require_ValidateBy();
	exports.IS_NUMBER = "isNumber";
	/**
	* Checks if a given value is a number.
	*/
	function isNumber(value, options = {}) {
		if (typeof value !== "number") return false;
		if (value === Infinity || value === -Infinity) return !!options.allowInfinity;
		if (Number.isNaN(value)) return !!options.allowNaN;
		if (options.maxDecimalPlaces !== void 0) {
			let decimalPlaces = 0;
			if (value % 1 !== 0) decimalPlaces = value.toString().split(".")[1].length;
			if (decimalPlaces > options.maxDecimalPlaces) return false;
		}
		return Number.isFinite(value);
	}
	exports.isNumber = isNumber;
	/**
	* Checks if a value is a number.
	*/
	function IsNumber(options = {}, validationOptions) {
		return (0, ValidateBy_1$13.ValidateBy)({
			name: exports.IS_NUMBER,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isNumber(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$13.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a number conforming to the specified constraints";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsNumber = IsNumber;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsEnum.js
var require_IsEnum = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsEnum.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsEnum = exports.isEnum = exports.IS_ENUM = void 0;
	const ValidateBy_1$12 = require_ValidateBy();
	exports.IS_ENUM = "isEnum";
	/**
	* Checks if a given value is the member of the provided enum.
	*/
	function isEnum(value, entity) {
		const enumValues = Object.keys(entity).map(function(k) {
			return entity[k];
		});
		return enumValues.includes(value);
	}
	exports.isEnum = isEnum;
	/**
	* Returns the possible values from an enum (both simple number indexed and string indexed enums).
	*/
	function validEnumValues(entity) {
		return Object.entries(entity).filter(function([key, value]) {
			return isNaN(parseInt(key));
		}).map(function([key, value]) {
			return value;
		});
	}
	/**
	* Checks if a given value is the member of the provided enum.
	*/
	function IsEnum(entity, validationOptions) {
		return (0, ValidateBy_1$12.ValidateBy)({
			name: exports.IS_ENUM,
			constraints: [entity, validEnumValues(entity)],
			validator: {
				validate: function(value, args) {
					return isEnum(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$12.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be one of the following values: $constraint2";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsEnum = IsEnum;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsInt.js
var require_IsInt = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsInt.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsInt = exports.isInt = exports.IS_INT = void 0;
	const ValidateBy_1$11 = require_ValidateBy();
	exports.IS_INT = "isInt";
	/**
	* Checks if value is an integer.
	*/
	function isInt(val) {
		return typeof val === "number" && Number.isInteger(val);
	}
	exports.isInt = isInt;
	/**
	* Checks if value is an integer.
	*/
	function IsInt(validationOptions) {
		return (0, ValidateBy_1$11.ValidateBy)({
			name: exports.IS_INT,
			validator: {
				validate: function(value, args) {
					return isInt(value);
				},
				defaultMessage: (0, ValidateBy_1$11.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be an integer number";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsInt = IsInt;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsString.js
var require_IsString = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsString.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsString = exports.isString = exports.IS_STRING = void 0;
	const ValidateBy_1$10 = require_ValidateBy();
	exports.IS_STRING = "isString";
	/**
	* Checks if a given value is a real string.
	*/
	function isString(value) {
		return value instanceof String || typeof value === "string";
	}
	exports.isString = isString;
	/**
	* Checks if a given value is a real string.
	*/
	function IsString(validationOptions) {
		return (0, ValidateBy_1$10.ValidateBy)({
			name: exports.IS_STRING,
			validator: {
				validate: function(value, args) {
					return isString(value);
				},
				defaultMessage: (0, ValidateBy_1$10.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a string";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsString = IsString;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsArray.js
var require_IsArray = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsArray.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsArray = exports.isArray = exports.IS_ARRAY = void 0;
	const ValidateBy_1$9 = require_ValidateBy();
	exports.IS_ARRAY = "isArray";
	/**
	* Checks if a given value is an array
	*/
	function isArray$3(value) {
		return Array.isArray(value);
	}
	exports.isArray = isArray$3;
	/**
	* Checks if a given value is an array
	*/
	function IsArray(validationOptions) {
		return (0, ValidateBy_1$9.ValidateBy)({
			name: exports.IS_ARRAY,
			validator: {
				validate: function(value, args) {
					return isArray$3(value);
				},
				defaultMessage: (0, ValidateBy_1$9.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be an array";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsArray = IsArray;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsObject.js
var require_IsObject = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/typechecker/IsObject.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsObject = exports.isObject = exports.IS_OBJECT = void 0;
	const ValidateBy_1$8 = require_ValidateBy();
	exports.IS_OBJECT = "isObject";
	/**
	* Checks if the value is valid Object.
	* Returns false if the value is not an object.
	*/
	function isObject(value) {
		return value != null && (typeof value === "object" || typeof value === "function") && !Array.isArray(value);
	}
	exports.isObject = isObject;
	/**
	* Checks if the value is valid Object.
	* Returns false if the value is not an object.
	*/
	function IsObject(validationOptions) {
		return (0, ValidateBy_1$8.ValidateBy)({
			name: exports.IS_OBJECT,
			validator: {
				validate: function(value, args) {
					return isObject(value);
				},
				defaultMessage: (0, ValidateBy_1$8.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be an object";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsObject = IsObject;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayContains.js
var require_ArrayContains = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayContains.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ArrayContains = exports.arrayContains = exports.ARRAY_CONTAINS = void 0;
	const ValidateBy_1$7 = require_ValidateBy();
	exports.ARRAY_CONTAINS = "arrayContains";
	/**
	* Checks if array contains all values from the given array of values.
	* If null or undefined is given then this function returns false.
	*/
	function arrayContains(array, values) {
		if (!Array.isArray(array)) return false;
		return values.every(function(value) {
			return array.indexOf(value) !== -1;
		});
	}
	exports.arrayContains = arrayContains;
	/**
	* Checks if array contains all values from the given array of values.
	* If null or undefined is given then this function returns false.
	*/
	function ArrayContains(values, validationOptions) {
		return (0, ValidateBy_1$7.ValidateBy)({
			name: exports.ARRAY_CONTAINS,
			constraints: [values],
			validator: {
				validate: function(value, args) {
					return arrayContains(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$7.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain $constraint1 values";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.ArrayContains = ArrayContains;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayNotContains.js
var require_ArrayNotContains = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayNotContains.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ArrayNotContains = exports.arrayNotContains = exports.ARRAY_NOT_CONTAINS = void 0;
	const ValidateBy_1$6 = require_ValidateBy();
	exports.ARRAY_NOT_CONTAINS = "arrayNotContains";
	/**
	* Checks if array does not contain any of the given values.
	* If null or undefined is given then this function returns false.
	*/
	function arrayNotContains(array, values) {
		if (!Array.isArray(array)) return false;
		return values.every(function(value) {
			return array.indexOf(value) === -1;
		});
	}
	exports.arrayNotContains = arrayNotContains;
	/**
	* Checks if array does not contain any of the given values.
	* If null or undefined is given then this function returns false.
	*/
	function ArrayNotContains(values, validationOptions) {
		return (0, ValidateBy_1$6.ValidateBy)({
			name: exports.ARRAY_NOT_CONTAINS,
			constraints: [values],
			validator: {
				validate: function(value, args) {
					return arrayNotContains(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$6.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property should not contain $constraint1 values";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.ArrayNotContains = ArrayNotContains;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayNotEmpty.js
var require_ArrayNotEmpty = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayNotEmpty.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ArrayNotEmpty = exports.arrayNotEmpty = exports.ARRAY_NOT_EMPTY = void 0;
	const ValidateBy_1$5 = require_ValidateBy();
	exports.ARRAY_NOT_EMPTY = "arrayNotEmpty";
	/**
	* Checks if given array is not empty.
	* If null or undefined is given then this function returns false.
	*/
	function arrayNotEmpty(array) {
		return Array.isArray(array) && array.length > 0;
	}
	exports.arrayNotEmpty = arrayNotEmpty;
	/**
	* Checks if given array is not empty.
	* If null or undefined is given then this function returns false.
	*/
	function ArrayNotEmpty(validationOptions) {
		return (0, ValidateBy_1$5.ValidateBy)({
			name: exports.ARRAY_NOT_EMPTY,
			validator: {
				validate: function(value, args) {
					return arrayNotEmpty(value);
				},
				defaultMessage: (0, ValidateBy_1$5.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property should not be empty";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.ArrayNotEmpty = ArrayNotEmpty;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayMinSize.js
var require_ArrayMinSize = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayMinSize.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ArrayMinSize = exports.arrayMinSize = exports.ARRAY_MIN_SIZE = void 0;
	const ValidateBy_1$4 = require_ValidateBy();
	exports.ARRAY_MIN_SIZE = "arrayMinSize";
	/**
	* Checks if the array's length is greater than or equal to the specified number.
	* If null or undefined is given then this function returns false.
	*/
	function arrayMinSize(array, min$2) {
		return Array.isArray(array) && array.length >= min$2;
	}
	exports.arrayMinSize = arrayMinSize;
	/**
	* Checks if the array's length is greater than or equal to the specified number.
	* If null or undefined is given then this function returns false.
	*/
	function ArrayMinSize(min$2, validationOptions) {
		return (0, ValidateBy_1$4.ValidateBy)({
			name: exports.ARRAY_MIN_SIZE,
			constraints: [min$2],
			validator: {
				validate: function(value, args) {
					return arrayMinSize(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$4.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain at least $constraint1 elements";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.ArrayMinSize = ArrayMinSize;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayMaxSize.js
var require_ArrayMaxSize = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayMaxSize.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ArrayMaxSize = exports.arrayMaxSize = exports.ARRAY_MAX_SIZE = void 0;
	const ValidateBy_1$3 = require_ValidateBy();
	exports.ARRAY_MAX_SIZE = "arrayMaxSize";
	/**
	* Checks if the array's length is less or equal to the specified number.
	* If null or undefined is given then this function returns false.
	*/
	function arrayMaxSize(array, max$2) {
		return Array.isArray(array) && array.length <= max$2;
	}
	exports.arrayMaxSize = arrayMaxSize;
	/**
	* Checks if the array's length is less or equal to the specified number.
	* If null or undefined is given then this function returns false.
	*/
	function ArrayMaxSize(max$2, validationOptions) {
		return (0, ValidateBy_1$3.ValidateBy)({
			name: exports.ARRAY_MAX_SIZE,
			constraints: [max$2],
			validator: {
				validate: function(value, args) {
					return arrayMaxSize(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$3.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must contain no more than $constraint1 elements";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.ArrayMaxSize = ArrayMaxSize;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayUnique.js
var require_ArrayUnique = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/array/ArrayUnique.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ArrayUnique = exports.arrayUnique = exports.ARRAY_UNIQUE = void 0;
	const ValidateBy_1$2 = require_ValidateBy();
	exports.ARRAY_UNIQUE = "arrayUnique";
	/**
	* Checks if all array's values are unique. Comparison for objects is reference-based.
	* If null or undefined is given then this function returns false.
	*/
	function arrayUnique(array, identifier) {
		if (!Array.isArray(array)) return false;
		if (identifier) array = array.map(function(o) {
			return o != null ? identifier(o) : o;
		});
		const uniqueItems = array.filter(function(a, b, c) {
			return c.indexOf(a) === b;
		});
		return array.length === uniqueItems.length;
	}
	exports.arrayUnique = arrayUnique;
	/**
	* Checks if all array's values are unique. Comparison for objects is reference-based.
	* If null or undefined is given then this function returns false.
	*/
	function ArrayUnique(identifierOrOptions, validationOptions) {
		const identifier = typeof identifierOrOptions === "function" ? identifierOrOptions : void 0;
		const options = typeof identifierOrOptions !== "function" ? identifierOrOptions : validationOptions;
		return (0, ValidateBy_1$2.ValidateBy)({
			name: exports.ARRAY_UNIQUE,
			validator: {
				validate: function(value, args) {
					return arrayUnique(value, identifier);
				},
				defaultMessage: (0, ValidateBy_1$2.buildMessage)(function(eachPrefix) {
					return eachPrefix + "All $property's elements must be unique";
				}, options)
			}
		}, options);
	}
	exports.ArrayUnique = ArrayUnique;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/object/IsNotEmptyObject.js
var require_IsNotEmptyObject = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/object/IsNotEmptyObject.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsNotEmptyObject = exports.isNotEmptyObject = exports.IS_NOT_EMPTY_OBJECT = void 0;
	const ValidateBy_1$1 = require_ValidateBy();
	const IsObject_1 = require_IsObject();
	exports.IS_NOT_EMPTY_OBJECT = "isNotEmptyObject";
	/**
	* Checks if the value is valid Object & not empty.
	* Returns false if the value is not an object or an empty valid object.
	*/
	function isNotEmptyObject(value, options) {
		if (!(0, IsObject_1.isObject)(value)) return false;
		if ((options === null || options === void 0 ? void 0 : options.nullable) === false) return !Object.values(value).every(function(propertyValue) {
			return propertyValue === null || propertyValue === void 0;
		});
		for (const key in value) if (value.hasOwnProperty(key)) return true;
		return false;
	}
	exports.isNotEmptyObject = isNotEmptyObject;
	/**
	* Checks if the value is valid Object & not empty.
	* Returns false if the value is not an object or an empty valid object.
	*/
	function IsNotEmptyObject(options, validationOptions) {
		return (0, ValidateBy_1$1.ValidateBy)({
			name: exports.IS_NOT_EMPTY_OBJECT,
			constraints: [options],
			validator: {
				validate: function(value, args) {
					return isNotEmptyObject(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1$1.buildMessage)(function(eachPrefix) {
					return eachPrefix + "$property must be a non-empty object";
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsNotEmptyObject = IsNotEmptyObject;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/object/IsInstance.js
var require_IsInstance = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/object/IsInstance.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.IsInstance = exports.isInstance = exports.IS_INSTANCE = void 0;
	const ValidateBy_1 = require_ValidateBy();
	exports.IS_INSTANCE = "isInstance";
	/**
	* Checks if the value is an instance of the specified object.
	*/
	function isInstance(object, targetTypeConstructor) {
		return targetTypeConstructor && typeof targetTypeConstructor === "function" && object instanceof targetTypeConstructor;
	}
	exports.isInstance = isInstance;
	/**
	* Checks if the value is an instance of the specified object.
	*/
	function IsInstance(targetType, validationOptions) {
		return (0, ValidateBy_1.ValidateBy)({
			name: exports.IS_INSTANCE,
			constraints: [targetType],
			validator: {
				validate: function(value, args) {
					return isInstance(value, args === null || args === void 0 ? void 0 : args.constraints[0]);
				},
				defaultMessage: (0, ValidateBy_1.buildMessage)(function(eachPrefix, args) {
					if (args === null || args === void 0 ? void 0 : args.constraints[0]) return eachPrefix + `$property must be an instance of ${args === null || args === void 0 ? void 0 : args.constraints[0].name}`;
					else return eachPrefix + `${exports.IS_INSTANCE} decorator expects and object as value, but got falsy value.`;
				}, validationOptions)
			}
		}, validationOptions);
	}
	exports.IsInstance = IsInstance;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/decorators.js
var require_decorators$2 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/decorator/decorators.js"(exports) {
	var __createBinding$6 = void 0 && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		var desc = Object.getOwnPropertyDescriptor(m, k);
		if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
			enumerable: true,
			get: function() {
				return m[k];
			}
		};
		Object.defineProperty(o, k2, desc);
	} : function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		o[k2] = m[k];
	});
	var __exportStar$6 = void 0 && (void 0).__exportStar || function(m, exports$1) {
		for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports$1, p)) __createBinding$6(exports$1, m, p);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	__exportStar$6(require_Allow(), exports);
	__exportStar$6(require_IsDefined(), exports);
	__exportStar$6(require_IsOptional(), exports);
	__exportStar$6(require_Validate(), exports);
	__exportStar$6(require_ValidateBy(), exports);
	__exportStar$6(require_ValidateIf(), exports);
	__exportStar$6(require_ValidateNested(), exports);
	__exportStar$6(require_ValidatePromise(), exports);
	__exportStar$6(require_IsLatLong(), exports);
	__exportStar$6(require_IsLatitude(), exports);
	__exportStar$6(require_IsLongitude(), exports);
	__exportStar$6(require_Equals(), exports);
	__exportStar$6(require_NotEquals(), exports);
	__exportStar$6(require_IsEmpty(), exports);
	__exportStar$6(require_IsNotEmpty(), exports);
	__exportStar$6(require_IsIn(), exports);
	__exportStar$6(require_IsNotIn(), exports);
	__exportStar$6(require_IsDivisibleBy(), exports);
	__exportStar$6(require_IsPositive(), exports);
	__exportStar$6(require_IsNegative(), exports);
	__exportStar$6(require_Max(), exports);
	__exportStar$6(require_Min(), exports);
	__exportStar$6(require_MinDate(), exports);
	__exportStar$6(require_MaxDate(), exports);
	__exportStar$6(require_Contains(), exports);
	__exportStar$6(require_NotContains(), exports);
	__exportStar$6(require_IsAlpha(), exports);
	__exportStar$6(require_IsAlphanumeric(), exports);
	__exportStar$6(require_IsDecimal(), exports);
	__exportStar$6(require_IsAscii(), exports);
	__exportStar$6(require_IsBase64(), exports);
	__exportStar$6(require_IsByteLength(), exports);
	__exportStar$6(require_IsCreditCard(), exports);
	__exportStar$6(require_IsCurrency(), exports);
	__exportStar$6(require_IsEmail(), exports);
	__exportStar$6(require_IsFQDN(), exports);
	__exportStar$6(require_IsFullWidth(), exports);
	__exportStar$6(require_IsHalfWidth(), exports);
	__exportStar$6(require_IsVariableWidth(), exports);
	__exportStar$6(require_IsHexColor(), exports);
	__exportStar$6(require_IsHexadecimal(), exports);
	__exportStar$6(require_IsMacAddress(), exports);
	__exportStar$6(require_IsIP(), exports);
	__exportStar$6(require_IsPort(), exports);
	__exportStar$6(require_IsISBN(), exports);
	__exportStar$6(require_IsISIN(), exports);
	__exportStar$6(require_IsISO8601(), exports);
	__exportStar$6(require_IsJSON(), exports);
	__exportStar$6(require_IsJWT(), exports);
	__exportStar$6(require_IsLowercase(), exports);
	__exportStar$6(require_IsMobilePhone(), exports);
	__exportStar$6(require_IsISO31661Alpha2(), exports);
	__exportStar$6(require_IsISO31661Alpha3(), exports);
	__exportStar$6(require_IsMongoId(), exports);
	__exportStar$6(require_IsMultibyte(), exports);
	__exportStar$6(require_IsSurrogatePair(), exports);
	__exportStar$6(require_IsUrl(), exports);
	__exportStar$6(require_IsUUID(), exports);
	__exportStar$6(require_IsFirebasePushId(), exports);
	__exportStar$6(require_IsUppercase(), exports);
	__exportStar$6(require_Length(), exports);
	__exportStar$6(require_MaxLength(), exports);
	__exportStar$6(require_MinLength(), exports);
	__exportStar$6(require_Matches(), exports);
	__exportStar$6(require_IsPhoneNumber(), exports);
	__exportStar$6(require_IsMilitaryTime(), exports);
	__exportStar$6(require_IsHash(), exports);
	__exportStar$6(require_IsISSN(), exports);
	__exportStar$6(require_IsDateString(), exports);
	__exportStar$6(require_IsBooleanString(), exports);
	__exportStar$6(require_IsNumberString(), exports);
	__exportStar$6(require_IsBase32(), exports);
	__exportStar$6(require_IsBIC(), exports);
	__exportStar$6(require_IsBtcAddress(), exports);
	__exportStar$6(require_IsDataURI(), exports);
	__exportStar$6(require_IsEAN(), exports);
	__exportStar$6(require_IsEthereumAddress(), exports);
	__exportStar$6(require_IsHSL(), exports);
	__exportStar$6(require_IsIBAN(), exports);
	__exportStar$6(require_IsIdentityCard(), exports);
	__exportStar$6(require_IsISRC(), exports);
	__exportStar$6(require_IsLocale(), exports);
	__exportStar$6(require_IsMagnetURI(), exports);
	__exportStar$6(require_IsMimeType(), exports);
	__exportStar$6(require_IsOctal(), exports);
	__exportStar$6(require_IsPassportNumber(), exports);
	__exportStar$6(require_IsPostalCode(), exports);
	__exportStar$6(require_IsRFC3339(), exports);
	__exportStar$6(require_IsRgbColor(), exports);
	__exportStar$6(require_IsSemVer(), exports);
	__exportStar$6(require_IsStrongPassword(), exports);
	__exportStar$6(require_IsTimeZone(), exports);
	__exportStar$6(require_IsBase58(), exports);
	__exportStar$6(require_is_tax_id(), exports);
	__exportStar$6(require_is_iso4217_currency_code(), exports);
	__exportStar$6(require_IsBoolean(), exports);
	__exportStar$6(require_IsDate(), exports);
	__exportStar$6(require_IsNumber(), exports);
	__exportStar$6(require_IsEnum(), exports);
	__exportStar$6(require_IsInt(), exports);
	__exportStar$6(require_IsString(), exports);
	__exportStar$6(require_IsArray(), exports);
	__exportStar$6(require_IsObject(), exports);
	__exportStar$6(require_ArrayContains(), exports);
	__exportStar$6(require_ArrayNotContains(), exports);
	__exportStar$6(require_ArrayNotEmpty(), exports);
	__exportStar$6(require_ArrayMinSize(), exports);
	__exportStar$6(require_ArrayMaxSize(), exports);
	__exportStar$6(require_ArrayUnique(), exports);
	__exportStar$6(require_IsNotEmptyObject(), exports);
	__exportStar$6(require_IsInstance(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidatorConstraintInterface.js
var require_ValidatorConstraintInterface = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidatorConstraintInterface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidatorOptions.js
var require_ValidatorOptions = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidatorOptions.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidationArguments.js
var require_ValidationArguments = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation/ValidationArguments.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation-schema/ValidationSchema.js
var require_ValidationSchema = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/validation-schema/ValidationSchema.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/index.js
var require_cjs$1 = __commonJS({ "../../node_modules/.pnpm/class-validator@0.14.2/node_modules/class-validator/cjs/index.js"(exports) {
	var __createBinding$5 = void 0 && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		var desc = Object.getOwnPropertyDescriptor(m, k);
		if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
			enumerable: true,
			get: function() {
				return m[k];
			}
		};
		Object.defineProperty(o, k2, desc);
	} : function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		o[k2] = m[k];
	});
	var __exportStar$5 = void 0 && (void 0).__exportStar || function(m, exports$1) {
		for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports$1, p)) __createBinding$5(exports$1, m, p);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.registerSchema = exports.validateSync = exports.validateOrReject = exports.validate = void 0;
	const MetadataStorage_1$1 = require_MetadataStorage$1();
	const Validator_1 = require_Validator();
	const container_1 = require_container();
	__exportStar$5(require_container(), exports);
	__exportStar$5(require_decorators$2(), exports);
	__exportStar$5(require_ValidationOptions(), exports);
	__exportStar$5(require_ValidatorConstraintInterface(), exports);
	__exportStar$5(require_ValidationError(), exports);
	__exportStar$5(require_ValidatorOptions(), exports);
	__exportStar$5(require_ValidationArguments(), exports);
	__exportStar$5(require_ValidationTypes(), exports);
	__exportStar$5(require_Validator(), exports);
	__exportStar$5(require_ValidationSchema(), exports);
	__exportStar$5(require_register_decorator(), exports);
	__exportStar$5(require_MetadataStorage$1(), exports);
	/**
	* Validates given object by object's decorators or given validation schema.
	*/
	function validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
		if (typeof schemaNameOrObject === "string") return (0, container_1.getFromContainer)(Validator_1.Validator).validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);
		else return (0, container_1.getFromContainer)(Validator_1.Validator).validate(schemaNameOrObject, objectOrValidationOptions);
	}
	exports.validate = validate;
	/**
	* Validates given object by object's decorators or given validation schema and reject on error.
	*/
	function validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
		if (typeof schemaNameOrObject === "string") return (0, container_1.getFromContainer)(Validator_1.Validator).validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);
		else return (0, container_1.getFromContainer)(Validator_1.Validator).validateOrReject(schemaNameOrObject, objectOrValidationOptions);
	}
	exports.validateOrReject = validateOrReject;
	/**
	* Validates given object by object's decorators or given validation schema.
	* Note that this method completely ignores async validations.
	* If you want to properly perform validation you need to call validate method instead.
	*/
	function validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
		if (typeof schemaNameOrObject === "string") return (0, container_1.getFromContainer)(Validator_1.Validator).validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);
		else return (0, container_1.getFromContainer)(Validator_1.Validator).validateSync(schemaNameOrObject, objectOrValidationOptions);
	}
	exports.validateSync = validateSync;
	/**
	* Registers a new validation schema.
	*/
	function registerSchema(schema) {
		(0, MetadataStorage_1$1.getMetadataStorage)().addValidationSchema(schema);
	}
	exports.registerSchema = registerSchema;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/enums/transformation-type.enum.js
var require_transformation_type_enum = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/enums/transformation-type.enum.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.TransformationType = void 0;
	var TransformationType;
	(function(TransformationType$1) {
		TransformationType$1[TransformationType$1["PLAIN_TO_CLASS"] = 0] = "PLAIN_TO_CLASS";
		TransformationType$1[TransformationType$1["CLASS_TO_PLAIN"] = 1] = "CLASS_TO_PLAIN";
		TransformationType$1[TransformationType$1["CLASS_TO_CLASS"] = 2] = "CLASS_TO_CLASS";
	})(TransformationType = exports.TransformationType || (exports.TransformationType = {}));
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/enums/index.js
var require_enums = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/enums/index.js"(exports) {
	var __createBinding$4 = void 0 && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		Object.defineProperty(o, k2, {
			enumerable: true,
			get: function() {
				return m[k];
			}
		});
	} : function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		o[k2] = m[k];
	});
	var __exportStar$4 = void 0 && (void 0).__exportStar || function(m, exports$1) {
		for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports$1, p)) __createBinding$4(exports$1, m, p);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	__exportStar$4(require_transformation_type_enum(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/MetadataStorage.js
var require_MetadataStorage = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/MetadataStorage.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.MetadataStorage = void 0;
	const enums_1$2 = require_enums();
	/**
	* Storage all library metadata.
	*/
	var MetadataStorage = class {
		constructor() {
			this._typeMetadatas = /* @__PURE__ */ new Map();
			this._transformMetadatas = /* @__PURE__ */ new Map();
			this._exposeMetadatas = /* @__PURE__ */ new Map();
			this._excludeMetadatas = /* @__PURE__ */ new Map();
			this._ancestorsMap = /* @__PURE__ */ new Map();
		}
		addTypeMetadata(metadata$1) {
			if (!this._typeMetadatas.has(metadata$1.target)) this._typeMetadatas.set(metadata$1.target, /* @__PURE__ */ new Map());
			this._typeMetadatas.get(metadata$1.target).set(metadata$1.propertyName, metadata$1);
		}
		addTransformMetadata(metadata$1) {
			if (!this._transformMetadatas.has(metadata$1.target)) this._transformMetadatas.set(metadata$1.target, /* @__PURE__ */ new Map());
			if (!this._transformMetadatas.get(metadata$1.target).has(metadata$1.propertyName)) this._transformMetadatas.get(metadata$1.target).set(metadata$1.propertyName, []);
			this._transformMetadatas.get(metadata$1.target).get(metadata$1.propertyName).push(metadata$1);
		}
		addExposeMetadata(metadata$1) {
			if (!this._exposeMetadatas.has(metadata$1.target)) this._exposeMetadatas.set(metadata$1.target, /* @__PURE__ */ new Map());
			this._exposeMetadatas.get(metadata$1.target).set(metadata$1.propertyName, metadata$1);
		}
		addExcludeMetadata(metadata$1) {
			if (!this._excludeMetadatas.has(metadata$1.target)) this._excludeMetadatas.set(metadata$1.target, /* @__PURE__ */ new Map());
			this._excludeMetadatas.get(metadata$1.target).set(metadata$1.propertyName, metadata$1);
		}
		findTransformMetadatas(target, propertyName, transformationType) {
			return this.findMetadatas(this._transformMetadatas, target, propertyName).filter(function(metadata$1) {
				if (!metadata$1.options) return true;
				if (metadata$1.options.toClassOnly === true && metadata$1.options.toPlainOnly === true) return true;
				if (metadata$1.options.toClassOnly === true) return transformationType === enums_1$2.TransformationType.CLASS_TO_CLASS || transformationType === enums_1$2.TransformationType.PLAIN_TO_CLASS;
				if (metadata$1.options.toPlainOnly === true) return transformationType === enums_1$2.TransformationType.CLASS_TO_PLAIN;
				return true;
			});
		}
		findExcludeMetadata(target, propertyName) {
			return this.findMetadata(this._excludeMetadatas, target, propertyName);
		}
		findExposeMetadata(target, propertyName) {
			return this.findMetadata(this._exposeMetadatas, target, propertyName);
		}
		findExposeMetadataByCustomName(target, name) {
			return this.getExposedMetadatas(target).find(function(metadata$1) {
				return metadata$1.options && metadata$1.options.name === name;
			});
		}
		findTypeMetadata(target, propertyName) {
			return this.findMetadata(this._typeMetadatas, target, propertyName);
		}
		getStrategy(target) {
			const excludeMap = this._excludeMetadatas.get(target);
			const exclude = excludeMap && excludeMap.get(void 0);
			const exposeMap = this._exposeMetadatas.get(target);
			const expose = exposeMap && exposeMap.get(void 0);
			if (exclude && expose || !exclude && !expose) return "none";
			return exclude ? "excludeAll" : "exposeAll";
		}
		getExposedMetadatas(target) {
			return this.getMetadata(this._exposeMetadatas, target);
		}
		getExcludedMetadatas(target) {
			return this.getMetadata(this._excludeMetadatas, target);
		}
		getExposedProperties(target, transformationType) {
			return this.getExposedMetadatas(target).filter(function(metadata$1) {
				if (!metadata$1.options) return true;
				if (metadata$1.options.toClassOnly === true && metadata$1.options.toPlainOnly === true) return true;
				if (metadata$1.options.toClassOnly === true) return transformationType === enums_1$2.TransformationType.CLASS_TO_CLASS || transformationType === enums_1$2.TransformationType.PLAIN_TO_CLASS;
				if (metadata$1.options.toPlainOnly === true) return transformationType === enums_1$2.TransformationType.CLASS_TO_PLAIN;
				return true;
			}).map(function(metadata$1) {
				return metadata$1.propertyName;
			});
		}
		getExcludedProperties(target, transformationType) {
			return this.getExcludedMetadatas(target).filter(function(metadata$1) {
				if (!metadata$1.options) return true;
				if (metadata$1.options.toClassOnly === true && metadata$1.options.toPlainOnly === true) return true;
				if (metadata$1.options.toClassOnly === true) return transformationType === enums_1$2.TransformationType.CLASS_TO_CLASS || transformationType === enums_1$2.TransformationType.PLAIN_TO_CLASS;
				if (metadata$1.options.toPlainOnly === true) return transformationType === enums_1$2.TransformationType.CLASS_TO_PLAIN;
				return true;
			}).map(function(metadata$1) {
				return metadata$1.propertyName;
			});
		}
		clear() {
			this._typeMetadatas.clear();
			this._exposeMetadatas.clear();
			this._excludeMetadatas.clear();
			this._ancestorsMap.clear();
		}
		getMetadata(metadatas, target) {
			const metadataFromTargetMap = metadatas.get(target);
			let metadataFromTarget;
			if (metadataFromTargetMap) metadataFromTarget = Array.from(metadataFromTargetMap.values()).filter(function(meta) {
				return meta.propertyName !== void 0;
			});
			const metadataFromAncestors = [];
			for (const ancestor of this.getAncestors(target)) {
				const ancestorMetadataMap = metadatas.get(ancestor);
				if (ancestorMetadataMap) {
					const metadataFromAncestor = Array.from(ancestorMetadataMap.values()).filter(function(meta) {
						return meta.propertyName !== void 0;
					});
					metadataFromAncestors.push(...metadataFromAncestor);
				}
			}
			return metadataFromAncestors.concat(metadataFromTarget || []);
		}
		findMetadata(metadatas, target, propertyName) {
			const metadataFromTargetMap = metadatas.get(target);
			if (metadataFromTargetMap) {
				const metadataFromTarget = metadataFromTargetMap.get(propertyName);
				if (metadataFromTarget) return metadataFromTarget;
			}
			for (const ancestor of this.getAncestors(target)) {
				const ancestorMetadataMap = metadatas.get(ancestor);
				if (ancestorMetadataMap) {
					const ancestorResult = ancestorMetadataMap.get(propertyName);
					if (ancestorResult) return ancestorResult;
				}
			}
			return void 0;
		}
		findMetadatas(metadatas, target, propertyName) {
			const metadataFromTargetMap = metadatas.get(target);
			let metadataFromTarget;
			if (metadataFromTargetMap) metadataFromTarget = metadataFromTargetMap.get(propertyName);
			const metadataFromAncestorsTarget = [];
			for (const ancestor of this.getAncestors(target)) {
				const ancestorMetadataMap = metadatas.get(ancestor);
				if (ancestorMetadataMap) {
					if (ancestorMetadataMap.has(propertyName)) metadataFromAncestorsTarget.push(...ancestorMetadataMap.get(propertyName));
				}
			}
			return metadataFromAncestorsTarget.slice().reverse().concat((metadataFromTarget || []).slice().reverse());
		}
		getAncestors(target) {
			if (!target) return [];
			if (!this._ancestorsMap.has(target)) {
				const ancestors = [];
				for (let baseClass = Object.getPrototypeOf(target.prototype.constructor); typeof baseClass.prototype !== "undefined"; baseClass = Object.getPrototypeOf(baseClass.prototype.constructor)) ancestors.push(baseClass);
				this._ancestorsMap.set(target, ancestors);
			}
			return this._ancestorsMap.get(target);
		}
	};
	exports.MetadataStorage = MetadataStorage;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/storage.js
var require_storage = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/storage.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.defaultMetadataStorage = void 0;
	const MetadataStorage_1 = require_MetadataStorage();
	/**
	* Default metadata storage is used as singleton and can be used to storage all metadatas.
	*/
	exports.defaultMetadataStorage = new MetadataStorage_1.MetadataStorage();
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/utils/get-global.util.js
var require_get_global_util = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/utils/get-global.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.getGlobal = void 0;
	/**
	* This function returns the global object across Node and browsers.
	*
	* Note: `globalThis` is the standardized approach however it has been added to
	* Node.js in version 12. We need to include this snippet until Node 12 EOL.
	*/
	function getGlobal() {
		if (typeof globalThis !== "undefined") return globalThis;
		if (typeof global !== "undefined") return global;
		if (typeof window !== "undefined") return window;
		if (typeof self !== "undefined") return self;
	}
	exports.getGlobal = getGlobal;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/utils/is-promise.util.js
var require_is_promise_util = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/utils/is-promise.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isPromise = void 0;
	function isPromise$1(p) {
		return p !== null && typeof p === "object" && typeof p.then === "function";
	}
	exports.isPromise = isPromise$1;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/utils/index.js
var require_utils$1 = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/utils/index.js"(exports) {
	var __createBinding$3 = void 0 && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		Object.defineProperty(o, k2, {
			enumerable: true,
			get: function() {
				return m[k];
			}
		});
	} : function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		o[k2] = m[k];
	});
	var __exportStar$3 = void 0 && (void 0).__exportStar || function(m, exports$1) {
		for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports$1, p)) __createBinding$3(exports$1, m, p);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	__exportStar$3(require_get_global_util(), exports);
	__exportStar$3(require_is_promise_util(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/TransformOperationExecutor.js
var require_TransformOperationExecutor = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/TransformOperationExecutor.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.TransformOperationExecutor = void 0;
	const storage_1$4 = require_storage();
	const enums_1$1 = require_enums();
	const utils_1 = require_utils$1();
	function instantiateArrayType(arrayType) {
		const array = new arrayType();
		if (!(array instanceof Set) && !("push" in array)) return [];
		return array;
	}
	var TransformOperationExecutor = class {
		constructor(transformationType, options) {
			this.transformationType = transformationType;
			this.options = options;
			this.recursionStack = /* @__PURE__ */ new Set();
		}
		transform(source, value, targetType, arrayType, isMap, level = 0) {
			var _this = this;
			if (Array.isArray(value) || value instanceof Set) {
				const newValue = arrayType && this.transformationType === enums_1$1.TransformationType.PLAIN_TO_CLASS ? instantiateArrayType(arrayType) : [];
				value.forEach(function(subValue, index) {
					const subSource = source ? source[index] : void 0;
					if (!_this.options.enableCircularCheck || !_this.isCircular(subValue)) {
						let realTargetType;
						if (typeof targetType !== "function" && targetType && targetType.options && targetType.options.discriminator && targetType.options.discriminator.property && targetType.options.discriminator.subTypes) {
							if (_this.transformationType === enums_1$1.TransformationType.PLAIN_TO_CLASS) {
								realTargetType = targetType.options.discriminator.subTypes.find(function(subType) {
									return subType.name === subValue[targetType.options.discriminator.property];
								});
								const options = {
									newObject: newValue,
									object: subValue,
									property: void 0
								};
								const newType = targetType.typeFunction(options);
								realTargetType === void 0 ? realTargetType = newType : realTargetType = realTargetType.value;
								if (!targetType.options.keepDiscriminatorProperty) delete subValue[targetType.options.discriminator.property];
							}
							if (_this.transformationType === enums_1$1.TransformationType.CLASS_TO_CLASS) realTargetType = subValue.constructor;
							if (_this.transformationType === enums_1$1.TransformationType.CLASS_TO_PLAIN) subValue[targetType.options.discriminator.property] = targetType.options.discriminator.subTypes.find(function(subType) {
								return subType.value === subValue.constructor;
							}).name;
						} else realTargetType = targetType;
						const value$1 = _this.transform(subSource, subValue, realTargetType, void 0, subValue instanceof Map, level + 1);
						if (newValue instanceof Set) newValue.add(value$1);
						else newValue.push(value$1);
					} else if (_this.transformationType === enums_1$1.TransformationType.CLASS_TO_CLASS) if (newValue instanceof Set) newValue.add(subValue);
					else newValue.push(subValue);
				});
				return newValue;
			} else if (targetType === String && !isMap) {
				if (value === null || value === void 0) return value;
				return String(value);
			} else if (targetType === Number && !isMap) {
				if (value === null || value === void 0) return value;
				return Number(value);
			} else if (targetType === Boolean && !isMap) {
				if (value === null || value === void 0) return value;
				return Boolean(value);
			} else if ((targetType === Date || value instanceof Date) && !isMap) {
				if (value instanceof Date) return new Date(value.valueOf());
				if (value === null || value === void 0) return value;
				return new Date(value);
			} else if (!!(0, utils_1.getGlobal)().Buffer && (targetType === Buffer || value instanceof Buffer) && !isMap) {
				if (value === null || value === void 0) return value;
				return Buffer.from(value);
			} else if ((0, utils_1.isPromise)(value) && !isMap) return new Promise(function(resolve, reject) {
				value.then(function(data) {
					return resolve(_this.transform(void 0, data, targetType, void 0, void 0, level + 1));
				}, reject);
			});
			else if (!isMap && value !== null && typeof value === "object" && typeof value.then === "function") return value;
			else if (typeof value === "object" && value !== null) {
				if (!targetType && value.constructor !== Object) if (!Array.isArray(value) && value.constructor === Array) {} else targetType = value.constructor;
				if (!targetType && source) targetType = source.constructor;
				if (this.options.enableCircularCheck) this.recursionStack.add(value);
				const keys = this.getKeys(targetType, value, isMap);
				let newValue = source ? source : {};
				if (!source && (this.transformationType === enums_1$1.TransformationType.PLAIN_TO_CLASS || this.transformationType === enums_1$1.TransformationType.CLASS_TO_CLASS)) if (isMap) newValue = /* @__PURE__ */ new Map();
				else if (targetType) newValue = new targetType();
				else newValue = {};
				for (const key of keys) {
					if (key === "__proto__" || key === "constructor") continue;
					const valueKey = key;
					let newValueKey = key, propertyName = key;
					if (!this.options.ignoreDecorators && targetType) {
						if (this.transformationType === enums_1$1.TransformationType.PLAIN_TO_CLASS) {
							const exposeMetadata = storage_1$4.defaultMetadataStorage.findExposeMetadataByCustomName(targetType, key);
							if (exposeMetadata) {
								propertyName = exposeMetadata.propertyName;
								newValueKey = exposeMetadata.propertyName;
							}
						} else if (this.transformationType === enums_1$1.TransformationType.CLASS_TO_PLAIN || this.transformationType === enums_1$1.TransformationType.CLASS_TO_CLASS) {
							const exposeMetadata = storage_1$4.defaultMetadataStorage.findExposeMetadata(targetType, key);
							if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) newValueKey = exposeMetadata.options.name;
						}
					}
					let subValue = void 0;
					if (this.transformationType === enums_1$1.TransformationType.PLAIN_TO_CLASS)
 /**
					* This section is added for the following report:
					* https://github.com/typestack/class-transformer/issues/596
					*
					* We should not call functions or constructors when transforming to class.
					*/
					subValue = value[valueKey];
					else if (value instanceof Map) subValue = value.get(valueKey);
					else if (value[valueKey] instanceof Function) subValue = value[valueKey]();
					else subValue = value[valueKey];
					let type = void 0, isSubValueMap = subValue instanceof Map;
					if (targetType && isMap) type = targetType;
					else if (targetType) {
						const metadata$1 = storage_1$4.defaultMetadataStorage.findTypeMetadata(targetType, propertyName);
						if (metadata$1) {
							const options = {
								newObject: newValue,
								object: value,
								property: propertyName
							};
							const newType = metadata$1.typeFunction ? metadata$1.typeFunction(options) : metadata$1.reflectedType;
							if (metadata$1.options && metadata$1.options.discriminator && metadata$1.options.discriminator.property && metadata$1.options.discriminator.subTypes) if (!(value[valueKey] instanceof Array)) {
								if (this.transformationType === enums_1$1.TransformationType.PLAIN_TO_CLASS) {
									type = metadata$1.options.discriminator.subTypes.find(function(subType) {
										if (subValue && subValue instanceof Object && metadata$1.options.discriminator.property in subValue) return subType.name === subValue[metadata$1.options.discriminator.property];
									});
									type === void 0 ? type = newType : type = type.value;
									if (!metadata$1.options.keepDiscriminatorProperty) {
										if (subValue && subValue instanceof Object && metadata$1.options.discriminator.property in subValue) delete subValue[metadata$1.options.discriminator.property];
									}
								}
								if (this.transformationType === enums_1$1.TransformationType.CLASS_TO_CLASS) type = subValue.constructor;
								if (this.transformationType === enums_1$1.TransformationType.CLASS_TO_PLAIN) {
									if (subValue) subValue[metadata$1.options.discriminator.property] = metadata$1.options.discriminator.subTypes.find(function(subType) {
										return subType.value === subValue.constructor;
									}).name;
								}
							} else type = metadata$1;
							else type = newType;
							isSubValueMap = isSubValueMap || metadata$1.reflectedType === Map;
						} else if (this.options.targetMaps) this.options.targetMaps.filter(function(map$1) {
							return map$1.target === targetType && !!map$1.properties[propertyName];
						}).forEach(function(map$1) {
							return type = map$1.properties[propertyName];
						});
						else if (this.options.enableImplicitConversion && this.transformationType === enums_1$1.TransformationType.PLAIN_TO_CLASS) {
							const reflectedType = Reflect.getMetadata("design:type", targetType.prototype, propertyName);
							if (reflectedType) type = reflectedType;
						}
					}
					const arrayType$1 = Array.isArray(value[valueKey]) ? this.getReflectedType(targetType, propertyName) : void 0;
					const subSource = source ? source[valueKey] : void 0;
					if (newValue.constructor.prototype) {
						const descriptor = Object.getOwnPropertyDescriptor(newValue.constructor.prototype, newValueKey);
						if ((this.transformationType === enums_1$1.TransformationType.PLAIN_TO_CLASS || this.transformationType === enums_1$1.TransformationType.CLASS_TO_CLASS) && (descriptor && !descriptor.set || newValue[newValueKey] instanceof Function)) continue;
					}
					if (!this.options.enableCircularCheck || !this.isCircular(subValue)) {
						const transformKey = this.transformationType === enums_1$1.TransformationType.PLAIN_TO_CLASS ? newValueKey : key;
						let finalValue;
						if (this.transformationType === enums_1$1.TransformationType.CLASS_TO_PLAIN) {
							finalValue = value[transformKey];
							finalValue = this.applyCustomTransformations(finalValue, targetType, transformKey, value, this.transformationType);
							finalValue = value[transformKey] === finalValue ? subValue : finalValue;
							finalValue = this.transform(subSource, finalValue, type, arrayType$1, isSubValueMap, level + 1);
						} else if (subValue === void 0 && this.options.exposeDefaultValues) finalValue = newValue[newValueKey];
						else {
							finalValue = this.transform(subSource, subValue, type, arrayType$1, isSubValueMap, level + 1);
							finalValue = this.applyCustomTransformations(finalValue, targetType, transformKey, value, this.transformationType);
						}
						if (finalValue !== void 0 || this.options.exposeUnsetFields) if (newValue instanceof Map) newValue.set(newValueKey, finalValue);
						else newValue[newValueKey] = finalValue;
					} else if (this.transformationType === enums_1$1.TransformationType.CLASS_TO_CLASS) {
						let finalValue = subValue;
						finalValue = this.applyCustomTransformations(finalValue, targetType, key, value, this.transformationType);
						if (finalValue !== void 0 || this.options.exposeUnsetFields) if (newValue instanceof Map) newValue.set(newValueKey, finalValue);
						else newValue[newValueKey] = finalValue;
					}
				}
				if (this.options.enableCircularCheck) this.recursionStack.delete(value);
				return newValue;
			} else return value;
		}
		applyCustomTransformations(value, target, key, obj, transformationType) {
			var _this2 = this;
			let metadatas = storage_1$4.defaultMetadataStorage.findTransformMetadatas(target, key, this.transformationType);
			if (this.options.version !== void 0) metadatas = metadatas.filter(function(metadata$1) {
				if (!metadata$1.options) return true;
				return _this2.checkVersion(metadata$1.options.since, metadata$1.options.until);
			});
			if (this.options.groups && this.options.groups.length) metadatas = metadatas.filter(function(metadata$1) {
				if (!metadata$1.options) return true;
				return _this2.checkGroups(metadata$1.options.groups);
			});
			else metadatas = metadatas.filter(function(metadata$1) {
				return !metadata$1.options || !metadata$1.options.groups || !metadata$1.options.groups.length;
			});
			metadatas.forEach(function(metadata$1) {
				value = metadata$1.transformFn({
					value,
					key,
					obj,
					type: transformationType,
					options: _this2.options
				});
			});
			return value;
		}
		isCircular(object) {
			return this.recursionStack.has(object);
		}
		getReflectedType(target, propertyName) {
			if (!target) return void 0;
			const meta = storage_1$4.defaultMetadataStorage.findTypeMetadata(target, propertyName);
			return meta ? meta.reflectedType : void 0;
		}
		getKeys(target, object, isMap) {
			var _this3 = this;
			let strategy = storage_1$4.defaultMetadataStorage.getStrategy(target);
			if (strategy === "none") strategy = this.options.strategy || "exposeAll";
			let keys = [];
			if (strategy === "exposeAll" || isMap) if (object instanceof Map) keys = Array.from(object.keys());
			else keys = Object.keys(object);
			if (isMap) return keys;
			/**
			* If decorators are ignored but we don't want the extraneous values, then we use the
			* metadata to decide which property is needed, but doesn't apply the decorator effect.
			*/
			if (this.options.ignoreDecorators && this.options.excludeExtraneousValues && target) {
				const exposedProperties = storage_1$4.defaultMetadataStorage.getExposedProperties(target, this.transformationType);
				const excludedProperties = storage_1$4.defaultMetadataStorage.getExcludedProperties(target, this.transformationType);
				keys = [...exposedProperties, ...excludedProperties];
			}
			if (!this.options.ignoreDecorators && target) {
				let exposedProperties = storage_1$4.defaultMetadataStorage.getExposedProperties(target, this.transformationType);
				if (this.transformationType === enums_1$1.TransformationType.PLAIN_TO_CLASS) exposedProperties = exposedProperties.map(function(key) {
					const exposeMetadata = storage_1$4.defaultMetadataStorage.findExposeMetadata(target, key);
					if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) return exposeMetadata.options.name;
					return key;
				});
				if (this.options.excludeExtraneousValues) keys = exposedProperties;
				else keys = keys.concat(exposedProperties);
				const excludedProperties = storage_1$4.defaultMetadataStorage.getExcludedProperties(target, this.transformationType);
				if (excludedProperties.length > 0) keys = keys.filter(function(key) {
					return !excludedProperties.includes(key);
				});
				if (this.options.version !== void 0) keys = keys.filter(function(key) {
					const exposeMetadata = storage_1$4.defaultMetadataStorage.findExposeMetadata(target, key);
					if (!exposeMetadata || !exposeMetadata.options) return true;
					return _this3.checkVersion(exposeMetadata.options.since, exposeMetadata.options.until);
				});
				if (this.options.groups && this.options.groups.length) keys = keys.filter(function(key) {
					const exposeMetadata = storage_1$4.defaultMetadataStorage.findExposeMetadata(target, key);
					if (!exposeMetadata || !exposeMetadata.options) return true;
					return _this3.checkGroups(exposeMetadata.options.groups);
				});
				else keys = keys.filter(function(key) {
					const exposeMetadata = storage_1$4.defaultMetadataStorage.findExposeMetadata(target, key);
					return !exposeMetadata || !exposeMetadata.options || !exposeMetadata.options.groups || !exposeMetadata.options.groups.length;
				});
			}
			if (this.options.excludePrefixes && this.options.excludePrefixes.length) keys = keys.filter(function(key) {
				return _this3.options.excludePrefixes.every(function(prefix) {
					return key.substr(0, prefix.length) !== prefix;
				});
			});
			keys = keys.filter(function(key, index, self$1) {
				return self$1.indexOf(key) === index;
			});
			return keys;
		}
		checkVersion(since, until) {
			let decision = true;
			if (decision && since) decision = this.options.version >= since;
			if (decision && until) decision = this.options.version < until;
			return decision;
		}
		checkGroups(groups) {
			if (!groups) return true;
			return this.options.groups.some(function(optionGroup) {
				return groups.includes(optionGroup);
			});
		}
	};
	exports.TransformOperationExecutor = TransformOperationExecutor;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/constants/default-options.constant.js
var require_default_options_constant = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/constants/default-options.constant.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.defaultOptions = void 0;
	/**
	* These are the default options used by any transformation operation.
	*/
	exports.defaultOptions = {
		enableCircularCheck: false,
		enableImplicitConversion: false,
		excludeExtraneousValues: false,
		excludePrefixes: void 0,
		exposeDefaultValues: false,
		exposeUnsetFields: true,
		groups: void 0,
		ignoreDecorators: false,
		strategy: void 0,
		targetMaps: void 0,
		version: void 0
	};
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/ClassTransformer.js
var require_ClassTransformer = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/ClassTransformer.js"(exports) {
	var import_objectSpread2$3 = __toESM(require_objectSpread2());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ClassTransformer = void 0;
	const TransformOperationExecutor_1 = require_TransformOperationExecutor();
	const enums_1 = require_enums();
	const default_options_constant_1 = require_default_options_constant();
	var ClassTransformer = class {
		instanceToPlain(object, options) {
			const executor = new TransformOperationExecutor_1.TransformOperationExecutor(enums_1.TransformationType.CLASS_TO_PLAIN, (0, import_objectSpread2$3.default)((0, import_objectSpread2$3.default)({}, default_options_constant_1.defaultOptions), options));
			return executor.transform(void 0, object, void 0, void 0, void 0, void 0);
		}
		classToPlainFromExist(object, plainObject, options) {
			const executor = new TransformOperationExecutor_1.TransformOperationExecutor(enums_1.TransformationType.CLASS_TO_PLAIN, (0, import_objectSpread2$3.default)((0, import_objectSpread2$3.default)({}, default_options_constant_1.defaultOptions), options));
			return executor.transform(plainObject, object, void 0, void 0, void 0, void 0);
		}
		plainToInstance(cls, plain, options) {
			const executor = new TransformOperationExecutor_1.TransformOperationExecutor(enums_1.TransformationType.PLAIN_TO_CLASS, (0, import_objectSpread2$3.default)((0, import_objectSpread2$3.default)({}, default_options_constant_1.defaultOptions), options));
			return executor.transform(void 0, plain, cls, void 0, void 0, void 0);
		}
		plainToClassFromExist(clsObject, plain, options) {
			const executor = new TransformOperationExecutor_1.TransformOperationExecutor(enums_1.TransformationType.PLAIN_TO_CLASS, (0, import_objectSpread2$3.default)((0, import_objectSpread2$3.default)({}, default_options_constant_1.defaultOptions), options));
			return executor.transform(clsObject, plain, void 0, void 0, void 0, void 0);
		}
		instanceToInstance(object, options) {
			const executor = new TransformOperationExecutor_1.TransformOperationExecutor(enums_1.TransformationType.CLASS_TO_CLASS, (0, import_objectSpread2$3.default)((0, import_objectSpread2$3.default)({}, default_options_constant_1.defaultOptions), options));
			return executor.transform(void 0, object, void 0, void 0, void 0, void 0);
		}
		classToClassFromExist(object, fromObject, options) {
			const executor = new TransformOperationExecutor_1.TransformOperationExecutor(enums_1.TransformationType.CLASS_TO_CLASS, (0, import_objectSpread2$3.default)((0, import_objectSpread2$3.default)({}, default_options_constant_1.defaultOptions), options));
			return executor.transform(fromObject, object, void 0, void 0, void 0, void 0);
		}
		serialize(object, options) {
			return JSON.stringify(this.instanceToPlain(object, options));
		}
		/**
		* Deserializes given JSON string to a object of the given class.
		*/
		deserialize(cls, json, options) {
			const jsonObject = JSON.parse(json);
			return this.plainToInstance(cls, jsonObject, options);
		}
		/**
		* Deserializes given JSON string to an array of objects of the given class.
		*/
		deserializeArray(cls, json, options) {
			const jsonObject = JSON.parse(json);
			return this.plainToInstance(cls, jsonObject, options);
		}
	};
	exports.ClassTransformer = ClassTransformer;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/exclude.decorator.js
var require_exclude_decorator = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/exclude.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Exclude = void 0;
	const storage_1$3 = require_storage();
	/**
	* Marks the given class or property as excluded. By default the property is excluded in both
	* constructorToPlain and plainToConstructor transformations. It can be limited to only one direction
	* via using the `toPlainOnly` or `toClassOnly` option.
	*
	* Can be applied to class definitions and properties.
	*/
	function Exclude(options = {}) {
		/**
		* NOTE: The `propertyName` property must be marked as optional because
		* this decorator used both as a class and a property decorator and the
		* Typescript compiler will freak out if we make it mandatory as a class
		* decorator only receives one parameter.
		*/
		return function(object, propertyName) {
			storage_1$3.defaultMetadataStorage.addExcludeMetadata({
				target: object instanceof Function ? object : object.constructor,
				propertyName,
				options
			});
		};
	}
	exports.Exclude = Exclude;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/expose.decorator.js
var require_expose_decorator = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/expose.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Expose = void 0;
	const storage_1$2 = require_storage();
	/**
	* Marks the given class or property as included. By default the property is included in both
	* constructorToPlain and plainToConstructor transformations. It can be limited to only one direction
	* via using the `toPlainOnly` or `toClassOnly` option.
	*
	* Can be applied to class definitions and properties.
	*/
	function Expose(options = {}) {
		/**
		* NOTE: The `propertyName` property must be marked as optional because
		* this decorator used both as a class and a property decorator and the
		* Typescript compiler will freak out if we make it mandatory as a class
		* decorator only receives one parameter.
		*/
		return function(object, propertyName) {
			storage_1$2.defaultMetadataStorage.addExposeMetadata({
				target: object instanceof Function ? object : object.constructor,
				propertyName,
				options
			});
		};
	}
	exports.Expose = Expose;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/transform-instance-to-instance.decorator.js
var require_transform_instance_to_instance_decorator = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/transform-instance-to-instance.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.TransformInstanceToInstance = void 0;
	const ClassTransformer_1$3 = require_ClassTransformer();
	/**
	* Return the class instance only with the exposed properties.
	*
	* Can be applied to functions and getters/setters only.
	*/
	function TransformInstanceToInstance(params) {
		return function(target, propertyKey, descriptor) {
			const classTransformer$3 = new ClassTransformer_1$3.ClassTransformer();
			const originalMethod = descriptor.value;
			descriptor.value = function(...args) {
				const result$1 = originalMethod.apply(this, args);
				const isPromise$3 = !!result$1 && (typeof result$1 === "object" || typeof result$1 === "function") && typeof result$1.then === "function";
				return isPromise$3 ? result$1.then(function(data) {
					return classTransformer$3.instanceToInstance(data, params);
				}) : classTransformer$3.instanceToInstance(result$1, params);
			};
		};
	}
	exports.TransformInstanceToInstance = TransformInstanceToInstance;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/transform-instance-to-plain.decorator.js
var require_transform_instance_to_plain_decorator = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/transform-instance-to-plain.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.TransformInstanceToPlain = void 0;
	const ClassTransformer_1$2 = require_ClassTransformer();
	/**
	* Transform the object from class to plain object and return only with the exposed properties.
	*
	* Can be applied to functions and getters/setters only.
	*/
	function TransformInstanceToPlain(params) {
		return function(target, propertyKey, descriptor) {
			const classTransformer$3 = new ClassTransformer_1$2.ClassTransformer();
			const originalMethod = descriptor.value;
			descriptor.value = function(...args) {
				const result$1 = originalMethod.apply(this, args);
				const isPromise$3 = !!result$1 && (typeof result$1 === "object" || typeof result$1 === "function") && typeof result$1.then === "function";
				return isPromise$3 ? result$1.then(function(data) {
					return classTransformer$3.instanceToPlain(data, params);
				}) : classTransformer$3.instanceToPlain(result$1, params);
			};
		};
	}
	exports.TransformInstanceToPlain = TransformInstanceToPlain;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/transform-plain-to-instance.decorator.js
var require_transform_plain_to_instance_decorator = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/transform-plain-to-instance.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.TransformPlainToInstance = void 0;
	const ClassTransformer_1$1 = require_ClassTransformer();
	/**
	* Return the class instance only with the exposed properties.
	*
	* Can be applied to functions and getters/setters only.
	*/
	function TransformPlainToInstance(classType, params) {
		return function(target, propertyKey, descriptor) {
			const classTransformer$3 = new ClassTransformer_1$1.ClassTransformer();
			const originalMethod = descriptor.value;
			descriptor.value = function(...args) {
				const result$1 = originalMethod.apply(this, args);
				const isPromise$3 = !!result$1 && (typeof result$1 === "object" || typeof result$1 === "function") && typeof result$1.then === "function";
				return isPromise$3 ? result$1.then(function(data) {
					return classTransformer$3.plainToInstance(classType, data, params);
				}) : classTransformer$3.plainToInstance(classType, result$1, params);
			};
		};
	}
	exports.TransformPlainToInstance = TransformPlainToInstance;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/transform.decorator.js
var require_transform_decorator = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/transform.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Transform = void 0;
	const storage_1$1 = require_storage();
	/**
	* Defines a custom logic for value transformation.
	*
	* Can be applied to properties only.
	*/
	function Transform(transformFn, options = {}) {
		return function(target, propertyName) {
			storage_1$1.defaultMetadataStorage.addTransformMetadata({
				target: target.constructor,
				propertyName,
				transformFn,
				options
			});
		};
	}
	exports.Transform = Transform;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/type.decorator.js
var require_type_decorator = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/type.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Type = void 0;
	const storage_1 = require_storage();
	/**
	* Specifies a type of the property.
	* The given TypeFunction can return a constructor. A discriminator can be given in the options.
	*
	* Can be applied to properties only.
	*/
	function Type(typeFunction, options = {}) {
		return function(target, propertyName) {
			const reflectedType = Reflect.getMetadata("design:type", target, propertyName);
			storage_1.defaultMetadataStorage.addTypeMetadata({
				target: target.constructor,
				propertyName,
				reflectedType,
				typeFunction,
				options
			});
		};
	}
	exports.Type = Type;
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/index.js
var require_decorators$1 = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/decorators/index.js"(exports) {
	var __createBinding$2 = void 0 && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		Object.defineProperty(o, k2, {
			enumerable: true,
			get: function() {
				return m[k];
			}
		});
	} : function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		o[k2] = m[k];
	});
	var __exportStar$2 = void 0 && (void 0).__exportStar || function(m, exports$1) {
		for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports$1, p)) __createBinding$2(exports$1, m, p);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	__exportStar$2(require_exclude_decorator(), exports);
	__exportStar$2(require_expose_decorator(), exports);
	__exportStar$2(require_transform_instance_to_instance_decorator(), exports);
	__exportStar$2(require_transform_instance_to_plain_decorator(), exports);
	__exportStar$2(require_transform_plain_to_instance_decorator(), exports);
	__exportStar$2(require_transform_decorator(), exports);
	__exportStar$2(require_type_decorator(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/decorator-options/expose-options.interface.js
var require_expose_options_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/decorator-options/expose-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/decorator-options/exclude-options.interface.js
var require_exclude_options_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/decorator-options/exclude-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/decorator-options/transform-options.interface.js
var require_transform_options_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/decorator-options/transform-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/decorator-options/type-discriminator-descriptor.interface.js
var require_type_discriminator_descriptor_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/decorator-options/type-discriminator-descriptor.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/decorator-options/type-options.interface.js
var require_type_options_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/decorator-options/type-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/metadata/exclude-metadata.interface.js
var require_exclude_metadata_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/metadata/exclude-metadata.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/metadata/expose-metadata.interface.js
var require_expose_metadata_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/metadata/expose-metadata.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/metadata/transform-metadata.interface.js
var require_transform_metadata_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/metadata/transform-metadata.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/metadata/transform-fn-params.interface.js
var require_transform_fn_params_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/metadata/transform-fn-params.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/metadata/type-metadata.interface.js
var require_type_metadata_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/metadata/type-metadata.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/class-constructor.type.js
var require_class_constructor_type = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/class-constructor.type.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/class-transformer-options.interface.js
var require_class_transformer_options_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/class-transformer-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/target-map.interface.js
var require_target_map_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/target-map.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/type-help-options.interface.js
var require_type_help_options_interface = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/type-help-options.interface.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/index.js
var require_interfaces = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/interfaces/index.js"(exports) {
	var __createBinding$1 = void 0 && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		Object.defineProperty(o, k2, {
			enumerable: true,
			get: function() {
				return m[k];
			}
		});
	} : function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		o[k2] = m[k];
	});
	var __exportStar$1 = void 0 && (void 0).__exportStar || function(m, exports$1) {
		for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports$1, p)) __createBinding$1(exports$1, m, p);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	__exportStar$1(require_expose_options_interface(), exports);
	__exportStar$1(require_exclude_options_interface(), exports);
	__exportStar$1(require_transform_options_interface(), exports);
	__exportStar$1(require_type_discriminator_descriptor_interface(), exports);
	__exportStar$1(require_type_options_interface(), exports);
	__exportStar$1(require_exclude_metadata_interface(), exports);
	__exportStar$1(require_expose_metadata_interface(), exports);
	__exportStar$1(require_transform_metadata_interface(), exports);
	__exportStar$1(require_transform_fn_params_interface(), exports);
	__exportStar$1(require_type_metadata_interface(), exports);
	__exportStar$1(require_class_constructor_type(), exports);
	__exportStar$1(require_class_transformer_options_interface(), exports);
	__exportStar$1(require_target_map_interface(), exports);
	__exportStar$1(require_type_help_options_interface(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/index.js
var require_cjs = __commonJS({ "../../node_modules/.pnpm/class-transformer@0.5.1/node_modules/class-transformer/cjs/index.js"(exports) {
	var __createBinding = void 0 && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		Object.defineProperty(o, k2, {
			enumerable: true,
			get: function() {
				return m[k];
			}
		});
	} : function(o, m, k, k2) {
		if (k2 === void 0) k2 = k;
		o[k2] = m[k];
	});
	var __exportStar = void 0 && (void 0).__exportStar || function(m, exports$1) {
		for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports$1, p)) __createBinding(exports$1, m, p);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.deserializeArray = exports.deserialize = exports.serialize = exports.classToClassFromExist = exports.instanceToInstance = exports.plainToClassFromExist = exports.plainToInstance = exports.plainToClass = exports.classToPlainFromExist = exports.instanceToPlain = exports.classToPlain = exports.ClassTransformer = void 0;
	const ClassTransformer_1 = require_ClassTransformer();
	var ClassTransformer_2 = require_ClassTransformer();
	Object.defineProperty(exports, "ClassTransformer", {
		enumerable: true,
		get: function() {
			return ClassTransformer_2.ClassTransformer;
		}
	});
	__exportStar(require_decorators$1(), exports);
	__exportStar(require_interfaces(), exports);
	__exportStar(require_enums(), exports);
	const classTransformer$2 = new ClassTransformer_1.ClassTransformer();
	function classToPlain(object, options) {
		return classTransformer$2.instanceToPlain(object, options);
	}
	exports.classToPlain = classToPlain;
	function instanceToPlain(object, options) {
		return classTransformer$2.instanceToPlain(object, options);
	}
	exports.instanceToPlain = instanceToPlain;
	function classToPlainFromExist(object, plainObject, options) {
		return classTransformer$2.classToPlainFromExist(object, plainObject, options);
	}
	exports.classToPlainFromExist = classToPlainFromExist;
	function plainToClass(cls, plain, options) {
		return classTransformer$2.plainToInstance(cls, plain, options);
	}
	exports.plainToClass = plainToClass;
	function plainToInstance(cls, plain, options) {
		return classTransformer$2.plainToInstance(cls, plain, options);
	}
	exports.plainToInstance = plainToInstance;
	function plainToClassFromExist(clsObject, plain, options) {
		return classTransformer$2.plainToClassFromExist(clsObject, plain, options);
	}
	exports.plainToClassFromExist = plainToClassFromExist;
	function instanceToInstance(object, options) {
		return classTransformer$2.instanceToInstance(object, options);
	}
	exports.instanceToInstance = instanceToInstance;
	function classToClassFromExist(object, fromObject, options) {
		return classTransformer$2.classToClassFromExist(object, fromObject, options);
	}
	exports.classToClassFromExist = classToClassFromExist;
	function serialize(object, options) {
		return classTransformer$2.serialize(object, options);
	}
	exports.serialize = serialize;
	/**
	* Deserializes given JSON string to a object of the given class.
	*
	* @deprecated This function is being removed. Please use the following instead:
	* ```
	* instanceToClass(cls, JSON.parse(json), options)
	* ```
	*/
	function deserialize(cls, json, options) {
		return classTransformer$2.deserialize(cls, json, options);
	}
	exports.deserialize = deserialize;
	/**
	* Deserializes given JSON string to an array of objects of the given class.
	*
	* @deprecated This function is being removed. Please use the following instead:
	* ```
	* JSON.parse(json).map(value => instanceToClass(cls, value, options))
	* ```
	*
	*/
	function deserializeArray(cls, json, options) {
		return classTransformer$2.deserializeArray(cls, json, options);
	}
	exports.deserializeArray = deserializeArray;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/validation.pipe.js
var require_validation_pipe = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/validation.pipe.js"(exports) {
	var import_objectWithoutProperties = __toESM(require_objectWithoutProperties());
	var import_objectSpread2$2 = __toESM(require_objectSpread2());
	var import_asyncToGenerator$6 = __toESM(require_asyncToGenerator());
	const _excluded = [
		"transform",
		"disableErrorMessages",
		"errorHttpStatusCode",
		"expectedType",
		"transformOptions",
		"validateCustomDecorators"
	];
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ValidationPipe = void 0;
	const tslib_1$13 = __require("tslib");
	const iterare_1 = require_lib();
	const util_1 = __require("util");
	const decorators_1$1 = require_decorators$3();
	const core_1$3 = require_core$1();
	const http_status_enum_1$5 = require_http_status_enum();
	const http_error_by_code_util_1$7 = require_http_error_by_code_util();
	const load_package_util_1$1 = require_load_package_util();
	const shared_utils_1$8 = require_shared_utils();
	let classValidator = {};
	let classTransformer$1 = {};
	/**
	* @see [Validation](https://docs.nestjs.com/techniques/validation)
	*
	* @publicApi
	*/
	let ValidationPipe = class ValidationPipe$1 {
		constructor(options) {
			options = options || {};
			const { transform, disableErrorMessages, errorHttpStatusCode, expectedType, transformOptions, validateCustomDecorators } = options, validatorOptions = (0, import_objectWithoutProperties.default)(options, _excluded);
			this.validatorOptions = (0, import_objectSpread2$2.default)({ forbidUnknownValues: false }, validatorOptions);
			this.isTransformEnabled = !!transform;
			this.transformOptions = transformOptions;
			this.isDetailedOutputDisabled = disableErrorMessages;
			this.validateCustomDecorators = validateCustomDecorators || false;
			this.errorHttpStatusCode = errorHttpStatusCode || http_status_enum_1$5.HttpStatus.BAD_REQUEST;
			this.expectedType = expectedType;
			this.exceptionFactory = options.exceptionFactory || this.createExceptionFactory();
			classValidator = this.loadValidator(options.validatorPackage);
			classTransformer$1 = this.loadTransformer(options.transformerPackage);
		}
		loadValidator(validatorPackage) {
			return validatorPackage !== null && validatorPackage !== void 0 ? validatorPackage : (0, load_package_util_1$1.loadPackage)("class-validator", "ValidationPipe", function() {
				return require_cjs$1();
			});
		}
		loadTransformer(transformerPackage) {
			return transformerPackage !== null && transformerPackage !== void 0 ? transformerPackage : (0, load_package_util_1$1.loadPackage)("class-transformer", "ValidationPipe", function() {
				return require_cjs();
			});
		}
		transform(value, metadata$1) {
			return (0, import_asyncToGenerator$6.default)(function* () {
				if (this.expectedType) metadata$1 = (0, import_objectSpread2$2.default)((0, import_objectSpread2$2.default)({}, metadata$1), {}, { metatype: this.expectedType });
				const metatype = metadata$1.metatype;
				if (!metatype || !this.toValidate(metadata$1)) return this.isTransformEnabled ? this.transformPrimitive(value, metadata$1) : value;
				const originalValue = value;
				value = this.toEmptyIfNil(value, metatype);
				const isNil$1 = value !== originalValue;
				const isPrimitive = this.isPrimitive(value);
				this.stripProtoKeys(value);
				let entity = classTransformer$1.plainToInstance(metatype, value, this.transformOptions);
				const originalEntity = entity;
				const isCtorNotEqual = entity.constructor !== metatype;
				if (isCtorNotEqual && !isPrimitive) entity.constructor = metatype;
				else if (isCtorNotEqual) entity = { constructor: metatype };
				const errors = yield this.validate(entity, this.validatorOptions);
				if (errors.length > 0) throw yield this.exceptionFactory(errors);
				if (originalValue === void 0 && originalEntity === "") return originalValue;
				if (isPrimitive) entity = originalEntity;
				if (this.isTransformEnabled) return entity;
				if (isNil$1) return originalValue;
				const shouldTransformToPlain = Object.keys(this.validatorOptions).length > 1;
				return shouldTransformToPlain ? classTransformer$1.classToPlain(entity, this.transformOptions) : value;
			})();
		}
		createExceptionFactory() {
			var _this = this;
			return function(validationErrors = []) {
				if (_this.isDetailedOutputDisabled) return new http_error_by_code_util_1$7.HttpErrorByCode[_this.errorHttpStatusCode]();
				const errors = _this.flattenValidationErrors(validationErrors);
				return new http_error_by_code_util_1$7.HttpErrorByCode[_this.errorHttpStatusCode](errors);
			};
		}
		toValidate(metadata$1) {
			const { metatype, type } = metadata$1;
			if (type === "custom" && !this.validateCustomDecorators) return false;
			const types = [
				String,
				Boolean,
				Number,
				Array,
				Object,
				Buffer,
				Date
			];
			return !types.some(function(t) {
				return metatype === t;
			}) && !(0, shared_utils_1$8.isNil)(metatype);
		}
		transformPrimitive(value, metadata$1) {
			if (!metadata$1.data) return value;
			const { type, metatype } = metadata$1;
			if (type !== "param" && type !== "query") return value;
			if (metatype === Boolean) {
				if ((0, shared_utils_1$8.isUndefined)(value)) return void 0;
				return value === true || value === "true";
			}
			if (metatype === Number) {
				if ((0, shared_utils_1$8.isUndefined)(value)) return void 0;
				return +value;
			}
			if (metatype === String && !(0, shared_utils_1$8.isUndefined)(value)) return String(value);
			return value;
		}
		toEmptyIfNil(value, metatype) {
			var _metatype$prototype;
			if (!(0, shared_utils_1$8.isNil)(value)) return value;
			if (typeof metatype === "function" || metatype && "prototype" in metatype && ((_metatype$prototype = metatype.prototype) === null || _metatype$prototype === void 0 ? void 0 : _metatype$prototype.constructor)) return {};
			return "";
		}
		stripProtoKeys(value) {
			if (value == null || typeof value !== "object" || util_1.types.isTypedArray(value)) return;
			if (Array.isArray(value)) {
				for (const v of value) this.stripProtoKeys(v);
				return;
			}
			delete value.__proto__;
			for (const key in value) this.stripProtoKeys(value[key]);
		}
		isPrimitive(value) {
			return [
				"number",
				"boolean",
				"string"
			].includes(typeof value);
		}
		validate(object, validatorOptions) {
			return classValidator.validate(object, validatorOptions);
		}
		flattenValidationErrors(validationErrors) {
			var _this2 = this;
			return (0, iterare_1.iterate)(validationErrors).map(function(error) {
				return _this2.mapChildrenToValidationErrors(error);
			}).flatten().filter(function(item) {
				return !!item.constraints;
			}).map(function(item) {
				return Object.values(item.constraints);
			}).flatten().toArray();
		}
		mapChildrenToValidationErrors(error, parentPath) {
			if (!(error.children && error.children.length)) return [error];
			const validationErrors = [];
			parentPath = parentPath ? `${parentPath}.${error.property}` : error.property;
			for (const item of error.children) {
				if (item.children && item.children.length) validationErrors.push(...this.mapChildrenToValidationErrors(item, parentPath));
				validationErrors.push(this.prependConstraintsWithParentProp(parentPath, item));
			}
			return validationErrors;
		}
		prependConstraintsWithParentProp(parentPath, error) {
			const constraints = {};
			for (const key in error.constraints) constraints[key] = `${parentPath}.${error.constraints[key]}`;
			return (0, import_objectSpread2$2.default)((0, import_objectSpread2$2.default)({}, error), {}, { constraints });
		}
	};
	exports.ValidationPipe = ValidationPipe;
	exports.ValidationPipe = ValidationPipe = tslib_1$13.__decorate([
		(0, core_1$3.Injectable)(),
		tslib_1$13.__param(0, (0, decorators_1$1.Optional)()),
		tslib_1$13.__metadata("design:paramtypes", [Object])
	], ValidationPipe);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-array.pipe.js
var require_parse_array_pipe = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-array.pipe.js"(exports) {
	var import_objectSpread2$1 = __toESM(require_objectSpread2());
	var import_asyncToGenerator$5 = __toESM(require_asyncToGenerator());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ParseArrayPipe = void 0;
	const tslib_1$12 = __require("tslib");
	const injectable_decorator_1$4 = require_injectable_decorator();
	const optional_decorator_1$3 = require_optional_decorator();
	const http_status_enum_1$4 = require_http_status_enum();
	const http_error_by_code_util_1$6 = require_http_error_by_code_util();
	const shared_utils_1$7 = require_shared_utils();
	const validation_pipe_1 = require_validation_pipe();
	const VALIDATION_ERROR_MESSAGE = "Validation failed (parsable array expected)";
	const DEFAULT_ARRAY_SEPARATOR = ",";
	/**
	* Defines the built-in ParseArray Pipe
	*
	* @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)
	*
	* @publicApi
	*/
	let ParseArrayPipe = class ParseArrayPipe$1 {
		constructor(options = {}) {
			this.options = options;
			this.validationPipe = new validation_pipe_1.ValidationPipe((0, import_objectSpread2$1.default)({
				transform: true,
				validateCustomDecorators: true
			}, options));
			const { exceptionFactory, errorHttpStatusCode = http_status_enum_1$4.HttpStatus.BAD_REQUEST } = options;
			this.exceptionFactory = exceptionFactory || function(error) {
				return new http_error_by_code_util_1$6.HttpErrorByCode[errorHttpStatusCode](error);
			};
		}
		/**
		* Method that accesses and performs optional transformation on argument for
		* in-flight requests.
		*
		* @param value currently processed route argument
		* @param metadata contains metadata about the currently processed route argument
		*/
		transform(value, metadata$1) {
			var _this = this;
			return (0, import_asyncToGenerator$5.default)(function* () {
				if (!value && !this.options.optional) throw this.exceptionFactory(VALIDATION_ERROR_MESSAGE);
				else if ((0, shared_utils_1$7.isNil)(value) && this.options.optional) return value;
				if (!Array.isArray(value)) if (!(0, shared_utils_1$7.isString)(value)) throw this.exceptionFactory(VALIDATION_ERROR_MESSAGE);
				else try {
					value = value.trim().split(this.options.separator || DEFAULT_ARRAY_SEPARATOR);
				} catch (_unused) {
					throw this.exceptionFactory(VALIDATION_ERROR_MESSAGE);
				}
				if (this.options.items) {
					const validationMetadata = {
						metatype: this.options.items,
						type: "query"
					};
					const isExpectedTypePrimitive = this.isExpectedTypePrimitive();
					const toClassInstance = function(item, index) {
						if (_this.options.items !== String) try {
							item = JSON.parse(item);
						} catch (_unused2) {}
						if (isExpectedTypePrimitive) return _this.validatePrimitive(item, index);
						return _this.validationPipe.transform(item, validationMetadata);
					};
					if (this.options.stopAtFirstError === false) {
						let errors = [];
						const targetArray = value;
						for (let i$1 = 0; i$1 < targetArray.length; i$1++) try {
							targetArray[i$1] = yield toClassInstance(targetArray[i$1]);
						} catch (err) {
							let message;
							if (err.getResponse) {
								const response = err.getResponse();
								if (Array.isArray(response.message)) message = response.message.map(function(item) {
									return `[${i$1}] ${item}`;
								});
								else message = `[${i$1}] ${response.message}`;
							} else message = err;
							errors = errors.concat(message);
						}
						if (errors.length > 0) throw this.exceptionFactory(errors);
						return targetArray;
					} else value = yield Promise.all(value.map(toClassInstance));
				}
				return value;
			})();
		}
		isExpectedTypePrimitive() {
			return [
				Boolean,
				Number,
				String
			].includes(this.options.items);
		}
		validatePrimitive(originalValue, index) {
			if (this.options.items === Number) {
				const value = originalValue !== null && originalValue !== "" ? +originalValue : NaN;
				if (isNaN(value)) throw this.exceptionFactory(`${(0, shared_utils_1$7.isUndefined)(index) ? "" : `[${index}] `}item must be a number`);
				return value;
			} else if (this.options.items === String) {
				if (!(0, shared_utils_1$7.isString)(originalValue)) return `${originalValue}`;
			} else if (this.options.items === Boolean) {
				if (typeof originalValue !== "boolean") throw this.exceptionFactory(`${(0, shared_utils_1$7.isUndefined)(index) ? "" : `[${index}] `}item must be a boolean value`);
			}
			return originalValue;
		}
	};
	exports.ParseArrayPipe = ParseArrayPipe;
	exports.ParseArrayPipe = ParseArrayPipe = tslib_1$12.__decorate([
		(0, injectable_decorator_1$4.Injectable)(),
		tslib_1$12.__param(0, (0, optional_decorator_1$3.Optional)()),
		tslib_1$12.__metadata("design:paramtypes", [Object])
	], ParseArrayPipe);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-bool.pipe.js
var require_parse_bool_pipe = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-bool.pipe.js"(exports) {
	var import_asyncToGenerator$4 = __toESM(require_asyncToGenerator());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ParseBoolPipe = void 0;
	const tslib_1$11 = __require("tslib");
	const injectable_decorator_1$3 = require_injectable_decorator();
	const optional_decorator_1$2 = require_optional_decorator();
	const http_status_enum_1$3 = require_http_status_enum();
	const http_error_by_code_util_1$5 = require_http_error_by_code_util();
	const shared_utils_1$6 = require_shared_utils();
	/**
	* Defines the built-in ParseBool Pipe
	*
	* @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)
	*
	* @publicApi
	*/
	let ParseBoolPipe = class ParseBoolPipe$1 {
		constructor(options) {
			this.options = options;
			options = options || {};
			const { exceptionFactory, errorHttpStatusCode = http_status_enum_1$3.HttpStatus.BAD_REQUEST } = options;
			this.exceptionFactory = exceptionFactory || function(error) {
				return new http_error_by_code_util_1$5.HttpErrorByCode[errorHttpStatusCode](error);
			};
		}
		/**
		* Method that accesses and performs optional transformation on argument for
		* in-flight requests.
		*
		* @param value currently processed route argument
		* @param metadata contains metadata about the currently processed route argument
		*/
		transform(value, metadata$1) {
			return (0, import_asyncToGenerator$4.default)(function* () {
				var _this$options;
				if ((0, shared_utils_1$6.isNil)(value) && ((_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.optional)) return value;
				if (this.isTrue(value)) return true;
				if (this.isFalse(value)) return false;
				throw this.exceptionFactory("Validation failed (boolean string is expected)");
			})();
		}
		/**
		* @param value currently processed route argument
		* @returns `true` if `value` is said 'true', ie., if it is equal to the boolean
		* `true` or the string `"true"`
		*/
		isTrue(value) {
			return value === true || value === "true";
		}
		/**
		* @param value currently processed route argument
		* @returns `true` if `value` is said 'false', ie., if it is equal to the boolean
		* `false` or the string `"false"`
		*/
		isFalse(value) {
			return value === false || value === "false";
		}
	};
	exports.ParseBoolPipe = ParseBoolPipe;
	exports.ParseBoolPipe = ParseBoolPipe = tslib_1$11.__decorate([
		(0, injectable_decorator_1$3.Injectable)(),
		tslib_1$11.__param(0, (0, optional_decorator_1$2.Optional)()),
		tslib_1$11.__metadata("design:paramtypes", [Object])
	], ParseBoolPipe);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-date.pipe.js
var require_parse_date_pipe = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-date.pipe.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ParseDatePipe = void 0;
	const tslib_1$10 = __require("tslib");
	const injectable_decorator_1$2 = require_injectable_decorator();
	const http_status_enum_1$2 = require_http_status_enum();
	const http_error_by_code_util_1$4 = require_http_error_by_code_util();
	const shared_utils_1$5 = require_shared_utils();
	let ParseDatePipe = class ParseDatePipe$1 {
		constructor(options = {}) {
			this.options = options;
			const { exceptionFactory, errorHttpStatusCode = http_status_enum_1$2.HttpStatus.BAD_REQUEST } = options;
			this.exceptionFactory = exceptionFactory || function(error) {
				return new http_error_by_code_util_1$4.HttpErrorByCode[errorHttpStatusCode](error);
			};
		}
		/**
		* Method that accesses and performs optional transformation on argument for
		* in-flight requests.
		*
		* @param value currently processed route argument
		* @param metadata contains metadata about the currently processed route argument
		*/
		transform(value) {
			if (this.options.optional && (0, shared_utils_1$5.isNil)(value)) return this.options.default ? this.options.default() : value;
			if (!value) throw this.exceptionFactory("Validation failed (no Date provided)");
			const transformedValue = new Date(value);
			if (isNaN(transformedValue.getTime())) throw this.exceptionFactory("Validation failed (invalid date format)");
			return transformedValue;
		}
	};
	exports.ParseDatePipe = ParseDatePipe;
	exports.ParseDatePipe = ParseDatePipe = tslib_1$10.__decorate([(0, injectable_decorator_1$2.Injectable)(), tslib_1$10.__metadata("design:paramtypes", [Object])], ParseDatePipe);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-enum.pipe.js
var require_parse_enum_pipe = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-enum.pipe.js"(exports) {
	var import_asyncToGenerator$3 = __toESM(require_asyncToGenerator());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ParseEnumPipe = void 0;
	const tslib_1$9 = __require("tslib");
	const core_1$2 = require_core$1();
	const index_1$1 = require_common();
	const http_error_by_code_util_1$3 = require_http_error_by_code_util();
	const shared_utils_1$4 = require_shared_utils();
	/**
	* Defines the built-in ParseEnum Pipe
	*
	* @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)
	*
	* @publicApi
	*/
	let ParseEnumPipe = class ParseEnumPipe$1 {
		constructor(enumType, options) {
			this.enumType = enumType;
			this.options = options;
			if (!enumType) throw new Error(`"ParseEnumPipe" requires "enumType" argument specified (to validate input values).`);
			options = options || {};
			const { exceptionFactory, errorHttpStatusCode = index_1$1.HttpStatus.BAD_REQUEST } = options;
			this.exceptionFactory = exceptionFactory || function(error) {
				return new http_error_by_code_util_1$3.HttpErrorByCode[errorHttpStatusCode](error);
			};
		}
		/**
		* Method that accesses and performs optional transformation on argument for
		* in-flight requests.
		*
		* @param value currently processed route argument
		* @param metadata contains metadata about the currently processed route argument
		*/
		transform(value, metadata$1) {
			return (0, import_asyncToGenerator$3.default)(function* () {
				var _this$options;
				if ((0, shared_utils_1$4.isNil)(value) && ((_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.optional)) return value;
				if (!this.isEnum(value)) throw this.exceptionFactory("Validation failed (enum string is expected)");
				return value;
			})();
		}
		isEnum(value) {
			var _this = this;
			const enumValues = Object.keys(this.enumType).map(function(item) {
				return _this.enumType[item];
			});
			return enumValues.includes(value);
		}
	};
	exports.ParseEnumPipe = ParseEnumPipe;
	exports.ParseEnumPipe = ParseEnumPipe = tslib_1$9.__decorate([
		(0, core_1$2.Injectable)(),
		tslib_1$9.__param(1, (0, core_1$2.Optional)()),
		tslib_1$9.__metadata("design:paramtypes", [Object, Object])
	], ParseEnumPipe);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-float.pipe.js
var require_parse_float_pipe = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-float.pipe.js"(exports) {
	var import_asyncToGenerator$2 = __toESM(require_asyncToGenerator());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ParseFloatPipe = void 0;
	const tslib_1$8 = __require("tslib");
	const core_1$1 = require_core$1();
	const index_1 = require_common();
	const http_error_by_code_util_1$2 = require_http_error_by_code_util();
	const shared_utils_1$3 = require_shared_utils();
	/**
	* Defines the built-in ParseFloat Pipe
	*
	* @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)
	*
	* @publicApi
	*/
	let ParseFloatPipe = class ParseFloatPipe$1 {
		constructor(options) {
			this.options = options;
			options = options || {};
			const { exceptionFactory, errorHttpStatusCode = index_1.HttpStatus.BAD_REQUEST } = options;
			this.exceptionFactory = exceptionFactory || function(error) {
				return new http_error_by_code_util_1$2.HttpErrorByCode[errorHttpStatusCode](error);
			};
		}
		/**
		* Method that accesses and performs optional transformation on argument for
		* in-flight requests.
		*
		* @param value currently processed route argument
		* @param metadata contains metadata about the currently processed route argument
		*/
		transform(value, metadata$1) {
			return (0, import_asyncToGenerator$2.default)(function* () {
				var _this$options;
				if ((0, shared_utils_1$3.isNil)(value) && ((_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.optional)) return value;
				if (!this.isNumeric(value)) throw this.exceptionFactory("Validation failed (numeric string is expected)");
				return parseFloat(value);
			})();
		}
		/**
		* @param value currently processed route argument
		* @returns `true` if `value` is a valid float number
		*/
		isNumeric(value) {
			return ["string", "number"].includes(typeof value) && !isNaN(parseFloat(value)) && isFinite(value);
		}
	};
	exports.ParseFloatPipe = ParseFloatPipe;
	exports.ParseFloatPipe = ParseFloatPipe = tslib_1$8.__decorate([
		(0, core_1$1.Injectable)(),
		tslib_1$8.__param(0, (0, core_1$1.Optional)()),
		tslib_1$8.__metadata("design:paramtypes", [Object])
	], ParseFloatPipe);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-int.pipe.js
var require_parse_int_pipe = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-int.pipe.js"(exports) {
	var import_asyncToGenerator$1 = __toESM(require_asyncToGenerator());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ParseIntPipe = void 0;
	const tslib_1$7 = __require("tslib");
	const injectable_decorator_1$1 = require_injectable_decorator();
	const optional_decorator_1$1 = require_optional_decorator();
	const http_status_enum_1$1 = require_http_status_enum();
	const http_error_by_code_util_1$1 = require_http_error_by_code_util();
	const shared_utils_1$2 = require_shared_utils();
	/**
	* Defines the built-in ParseInt Pipe
	*
	* @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)
	*
	* @publicApi
	*/
	let ParseIntPipe = class ParseIntPipe$1 {
		constructor(options) {
			this.options = options;
			options = options || {};
			const { exceptionFactory, errorHttpStatusCode = http_status_enum_1$1.HttpStatus.BAD_REQUEST } = options;
			this.exceptionFactory = exceptionFactory || function(error) {
				return new http_error_by_code_util_1$1.HttpErrorByCode[errorHttpStatusCode](error);
			};
		}
		/**
		* Method that accesses and performs optional transformation on argument for
		* in-flight requests.
		*
		* @param value currently processed route argument
		* @param metadata contains metadata about the currently processed route argument
		*/
		transform(value, metadata$1) {
			return (0, import_asyncToGenerator$1.default)(function* () {
				var _this$options;
				if ((0, shared_utils_1$2.isNil)(value) && ((_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.optional)) return value;
				if (!this.isNumeric(value)) throw this.exceptionFactory("Validation failed (numeric string is expected)");
				return parseInt(value, 10);
			})();
		}
		/**
		* @param value currently processed route argument
		* @returns `true` if `value` is a valid integer number
		*/
		isNumeric(value) {
			return ["string", "number"].includes(typeof value) && /^-?\d+$/.test(value) && isFinite(value);
		}
	};
	exports.ParseIntPipe = ParseIntPipe;
	exports.ParseIntPipe = ParseIntPipe = tslib_1$7.__decorate([
		(0, injectable_decorator_1$1.Injectable)(),
		tslib_1$7.__param(0, (0, optional_decorator_1$1.Optional)()),
		tslib_1$7.__metadata("design:paramtypes", [Object])
	], ParseIntPipe);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-uuid.pipe.js
var require_parse_uuid_pipe = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/parse-uuid.pipe.js"(exports) {
	var import_asyncToGenerator = __toESM(require_asyncToGenerator());
	var ParseUUIDPipe_1;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ParseUUIDPipe = void 0;
	const tslib_1$6 = __require("tslib");
	const injectable_decorator_1 = require_injectable_decorator();
	const optional_decorator_1 = require_optional_decorator();
	const http_status_enum_1 = require_http_status_enum();
	const http_error_by_code_util_1 = require_http_error_by_code_util();
	const shared_utils_1$1 = require_shared_utils();
	/**
	* Defines the built-in ParseUUID Pipe
	*
	* @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)
	*
	* @publicApi
	*/
	let ParseUUIDPipe = ParseUUIDPipe_1 = class ParseUUIDPipe$1 {
		constructor(options) {
			this.options = options;
			options = options || {};
			const { exceptionFactory, errorHttpStatusCode = http_status_enum_1.HttpStatus.BAD_REQUEST, version: version$1 } = options;
			this.version = version$1;
			this.exceptionFactory = exceptionFactory || function(error) {
				return new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error);
			};
		}
		transform(value, metadata$1) {
			return (0, import_asyncToGenerator.default)(function* () {
				var _this$options;
				if ((0, shared_utils_1$1.isNil)(value) && ((_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.optional)) return value;
				if (!this.isUUID(value, this.version)) throw this.exceptionFactory(`Validation failed (uuid${this.version ? ` v ${this.version}` : ""} is expected)`);
				return value;
			})();
		}
		isUUID(str, version$1 = "all") {
			if (!(0, shared_utils_1$1.isString)(str)) throw this.exceptionFactory("The value passed as UUID is not a string");
			const pattern = ParseUUIDPipe_1.uuidRegExps[version$1];
			return pattern === null || pattern === void 0 ? void 0 : pattern.test(str);
		}
	};
	exports.ParseUUIDPipe = ParseUUIDPipe;
	ParseUUIDPipe.uuidRegExps = {
		3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
		4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
		5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
		7: /^[0-9A-F]{8}-[0-9A-F]{4}-7[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
		all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
	};
	exports.ParseUUIDPipe = ParseUUIDPipe = ParseUUIDPipe_1 = tslib_1$6.__decorate([
		(0, injectable_decorator_1.Injectable)(),
		tslib_1$6.__param(0, (0, optional_decorator_1.Optional)()),
		tslib_1$6.__metadata("design:paramtypes", [Object])
	], ParseUUIDPipe);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/index.js
var require_pipes = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/pipes/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$5 = __require("tslib");
	tslib_1$5.__exportStar(require_default_value_pipe(), exports);
	tslib_1$5.__exportStar(require_file(), exports);
	tslib_1$5.__exportStar(require_parse_array_pipe(), exports);
	tslib_1$5.__exportStar(require_parse_bool_pipe(), exports);
	tslib_1$5.__exportStar(require_parse_date_pipe(), exports);
	tslib_1$5.__exportStar(require_parse_enum_pipe(), exports);
	tslib_1$5.__exportStar(require_parse_float_pipe(), exports);
	tslib_1$5.__exportStar(require_parse_int_pipe(), exports);
	tslib_1$5.__exportStar(require_parse_uuid_pipe(), exports);
	tslib_1$5.__exportStar(require_validation_pipe(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isFunction.js
var require_isFunction = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isFunction.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isFunction = void 0;
	function isFunction(value) {
		return typeof value === "function";
	}
	exports.isFunction = isFunction;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/lift.js
var require_lift = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/lift.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.operate = exports.hasLift = void 0;
	var isFunction_1$24 = require_isFunction();
	function hasLift(source) {
		return isFunction_1$24.isFunction(source === null || source === void 0 ? void 0 : source.lift);
	}
	exports.hasLift = hasLift;
	function operate(init) {
		return function(source) {
			if (hasLift(source)) return source.lift(function(liftedSource) {
				try {
					return init(liftedSource, this);
				} catch (err) {
					this.error(err);
				}
			});
			throw new TypeError("Unable to lift unknown Observable type");
		};
	}
	exports.operate = operate;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isArrayLike.js
var require_isArrayLike = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isArrayLike.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isArrayLike = void 0;
	exports.isArrayLike = function(x) {
		return x && typeof x.length === "number" && typeof x !== "function";
	};
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isPromise.js
var require_isPromise = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isPromise.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isPromise = void 0;
	var isFunction_1$23 = require_isFunction();
	function isPromise(value) {
		return isFunction_1$23.isFunction(value === null || value === void 0 ? void 0 : value.then);
	}
	exports.isPromise = isPromise;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/createErrorClass.js
var require_createErrorClass = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/createErrorClass.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.createErrorClass = void 0;
	function createErrorClass(createImpl) {
		var _super = function(instance) {
			Error.call(instance);
			instance.stack = (/* @__PURE__ */ new Error()).stack;
		};
		var ctorFunc = createImpl(_super);
		ctorFunc.prototype = Object.create(Error.prototype);
		ctorFunc.prototype.constructor = ctorFunc;
		return ctorFunc;
	}
	exports.createErrorClass = createErrorClass;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/UnsubscriptionError.js
var require_UnsubscriptionError = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/UnsubscriptionError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.UnsubscriptionError = void 0;
	var createErrorClass_1$6 = require_createErrorClass();
	exports.UnsubscriptionError = createErrorClass_1$6.createErrorClass(function(_super) {
		return function UnsubscriptionErrorImpl(errors) {
			_super(this);
			this.message = errors ? errors.length + " errors occurred during unsubscription:\n" + errors.map(function(err, i$1) {
				return i$1 + 1 + ") " + err.toString();
			}).join("\n  ") : "";
			this.name = "UnsubscriptionError";
			this.errors = errors;
		};
	});
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/arrRemove.js
var require_arrRemove = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/arrRemove.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.arrRemove = void 0;
	function arrRemove(arr, item) {
		if (arr) {
			var index = arr.indexOf(item);
			0 <= index && arr.splice(index, 1);
		}
	}
	exports.arrRemove = arrRemove;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Subscription.js
var require_Subscription = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Subscription.js"(exports) {
	var __values$8 = void 0 && (void 0).__values || function(o) {
		var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i$1 = 0;
		if (m) return m.call(o);
		if (o && typeof o.length === "number") return { next: function() {
			if (o && i$1 >= o.length) o = void 0;
			return {
				value: o && o[i$1++],
				done: !o
			};
		} };
		throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read$18 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$18 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isSubscription = exports.EMPTY_SUBSCRIPTION = exports.Subscription = void 0;
	var isFunction_1$22 = require_isFunction();
	var UnsubscriptionError_1 = require_UnsubscriptionError();
	var arrRemove_1$7 = require_arrRemove();
	var Subscription = function() {
		function Subscription$1(initialTeardown) {
			this.initialTeardown = initialTeardown;
			this.closed = false;
			this._parentage = null;
			this._finalizers = null;
		}
		Subscription$1.prototype.unsubscribe = function() {
			var e_1, _a, e_2, _b;
			var errors;
			if (!this.closed) {
				this.closed = true;
				var _parentage = this._parentage;
				if (_parentage) {
					this._parentage = null;
					if (Array.isArray(_parentage)) try {
						for (var _parentage_1 = __values$8(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {
							var parent_1 = _parentage_1_1.value;
							parent_1.remove(this);
						}
					} catch (e_1_1) {
						e_1 = { error: e_1_1 };
					} finally {
						try {
							if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);
						} finally {
							if (e_1) throw e_1.error;
						}
					}
					else _parentage.remove(this);
				}
				var initialFinalizer = this.initialTeardown;
				if (isFunction_1$22.isFunction(initialFinalizer)) try {
					initialFinalizer();
				} catch (e) {
					errors = e instanceof UnsubscriptionError_1.UnsubscriptionError ? e.errors : [e];
				}
				var _finalizers = this._finalizers;
				if (_finalizers) {
					this._finalizers = null;
					try {
						for (var _finalizers_1 = __values$8(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {
							var finalizer = _finalizers_1_1.value;
							try {
								execFinalizer(finalizer);
							} catch (err) {
								errors = errors !== null && errors !== void 0 ? errors : [];
								if (err instanceof UnsubscriptionError_1.UnsubscriptionError) errors = __spreadArray$18(__spreadArray$18([], __read$18(errors)), __read$18(err.errors));
								else errors.push(err);
							}
						}
					} catch (e_2_1) {
						e_2 = { error: e_2_1 };
					} finally {
						try {
							if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);
						} finally {
							if (e_2) throw e_2.error;
						}
					}
				}
				if (errors) throw new UnsubscriptionError_1.UnsubscriptionError(errors);
			}
		};
		Subscription$1.prototype.add = function(teardown) {
			var _a;
			if (teardown && teardown !== this) if (this.closed) execFinalizer(teardown);
			else {
				if (teardown instanceof Subscription$1) {
					if (teardown.closed || teardown._hasParent(this)) return;
					teardown._addParent(this);
				}
				(this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);
			}
		};
		Subscription$1.prototype._hasParent = function(parent) {
			var _parentage = this._parentage;
			return _parentage === parent || Array.isArray(_parentage) && _parentage.includes(parent);
		};
		Subscription$1.prototype._addParent = function(parent) {
			var _parentage = this._parentage;
			this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;
		};
		Subscription$1.prototype._removeParent = function(parent) {
			var _parentage = this._parentage;
			if (_parentage === parent) this._parentage = null;
			else if (Array.isArray(_parentage)) arrRemove_1$7.arrRemove(_parentage, parent);
		};
		Subscription$1.prototype.remove = function(teardown) {
			var _finalizers = this._finalizers;
			_finalizers && arrRemove_1$7.arrRemove(_finalizers, teardown);
			if (teardown instanceof Subscription$1) teardown._removeParent(this);
		};
		Subscription$1.EMPTY = function() {
			var empty$1 = new Subscription$1();
			empty$1.closed = true;
			return empty$1;
		}();
		return Subscription$1;
	}();
	exports.Subscription = Subscription;
	exports.EMPTY_SUBSCRIPTION = Subscription.EMPTY;
	function isSubscription(value) {
		return value instanceof Subscription || value && "closed" in value && isFunction_1$22.isFunction(value.remove) && isFunction_1$22.isFunction(value.add) && isFunction_1$22.isFunction(value.unsubscribe);
	}
	exports.isSubscription = isSubscription;
	function execFinalizer(finalizer) {
		if (isFunction_1$22.isFunction(finalizer)) finalizer();
		else finalizer.unsubscribe();
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/config.js
var require_config = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/config.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.config = void 0;
	exports.config = {
		onUnhandledError: null,
		onStoppedNotification: null,
		Promise: void 0,
		useDeprecatedSynchronousErrorHandling: false,
		useDeprecatedNextContext: false
	};
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/timeoutProvider.js
var require_timeoutProvider = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/timeoutProvider.js"(exports) {
	var __read$17 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$17 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.timeoutProvider = void 0;
	exports.timeoutProvider = {
		setTimeout: function(handler, timeout$1) {
			var args = [];
			for (var _i$1 = 2; _i$1 < arguments.length; _i$1++) args[_i$1 - 2] = arguments[_i$1];
			var delegate = exports.timeoutProvider.delegate;
			if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) return delegate.setTimeout.apply(delegate, __spreadArray$17([handler, timeout$1], __read$17(args)));
			return setTimeout.apply(void 0, __spreadArray$17([handler, timeout$1], __read$17(args)));
		},
		clearTimeout: function(handle) {
			var delegate = exports.timeoutProvider.delegate;
			return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);
		},
		delegate: void 0
	};
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/reportUnhandledError.js
var require_reportUnhandledError = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/reportUnhandledError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.reportUnhandledError = void 0;
	var config_1$3 = require_config();
	var timeoutProvider_1$1 = require_timeoutProvider();
	function reportUnhandledError(err) {
		timeoutProvider_1$1.timeoutProvider.setTimeout(function() {
			var onUnhandledError = config_1$3.config.onUnhandledError;
			if (onUnhandledError) onUnhandledError(err);
			else throw err;
		});
	}
	exports.reportUnhandledError = reportUnhandledError;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/noop.js
var require_noop = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/noop.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.noop = void 0;
	function noop() {}
	exports.noop = noop;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/NotificationFactories.js
var require_NotificationFactories = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/NotificationFactories.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.createNotification = exports.nextNotification = exports.errorNotification = exports.COMPLETE_NOTIFICATION = void 0;
	exports.COMPLETE_NOTIFICATION = function() {
		return createNotification("C", void 0, void 0);
	}();
	function errorNotification(error) {
		return createNotification("E", void 0, error);
	}
	exports.errorNotification = errorNotification;
	function nextNotification(value) {
		return createNotification("N", value, void 0);
	}
	exports.nextNotification = nextNotification;
	function createNotification(kind, value, error) {
		return {
			kind,
			value,
			error
		};
	}
	exports.createNotification = createNotification;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/errorContext.js
var require_errorContext = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/errorContext.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.captureError = exports.errorContext = void 0;
	var config_1$2 = require_config();
	var context = null;
	function errorContext(cb) {
		if (config_1$2.config.useDeprecatedSynchronousErrorHandling) {
			var isRoot = !context;
			if (isRoot) context = {
				errorThrown: false,
				error: null
			};
			cb();
			if (isRoot) {
				var _a = context, errorThrown = _a.errorThrown, error = _a.error;
				context = null;
				if (errorThrown) throw error;
			}
		} else cb();
	}
	exports.errorContext = errorContext;
	function captureError(err) {
		if (config_1$2.config.useDeprecatedSynchronousErrorHandling && context) {
			context.errorThrown = true;
			context.error = err;
		}
	}
	exports.captureError = captureError;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Subscriber.js
var require_Subscriber = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Subscriber.js"(exports) {
	var __extends$9 = void 0 && (void 0).__extends || function() {
		var extendStatics = function(d, b) {
			extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d$1, b$1) {
				d$1.__proto__ = b$1;
			} || function(d$1, b$1) {
				for (var p in b$1) if (Object.prototype.hasOwnProperty.call(b$1, p)) d$1[p] = b$1[p];
			};
			return extendStatics(d, b);
		};
		return function(d, b) {
			if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		};
	}();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.EMPTY_OBSERVER = exports.SafeSubscriber = exports.Subscriber = void 0;
	var isFunction_1$21 = require_isFunction();
	var Subscription_1$8 = require_Subscription();
	var config_1$1 = require_config();
	var reportUnhandledError_1$1 = require_reportUnhandledError();
	var noop_1$13 = require_noop();
	var NotificationFactories_1 = require_NotificationFactories();
	var timeoutProvider_1 = require_timeoutProvider();
	var errorContext_1$2 = require_errorContext();
	var Subscriber = function(_super) {
		__extends$9(Subscriber$1, _super);
		function Subscriber$1(destination) {
			var _this = _super.call(this) || this;
			_this.isStopped = false;
			if (destination) {
				_this.destination = destination;
				if (Subscription_1$8.isSubscription(destination)) destination.add(_this);
			} else _this.destination = exports.EMPTY_OBSERVER;
			return _this;
		}
		Subscriber$1.create = function(next, error, complete) {
			return new SafeSubscriber(next, error, complete);
		};
		Subscriber$1.prototype.next = function(value) {
			if (this.isStopped) handleStoppedNotification(NotificationFactories_1.nextNotification(value), this);
			else this._next(value);
		};
		Subscriber$1.prototype.error = function(err) {
			if (this.isStopped) handleStoppedNotification(NotificationFactories_1.errorNotification(err), this);
			else {
				this.isStopped = true;
				this._error(err);
			}
		};
		Subscriber$1.prototype.complete = function() {
			if (this.isStopped) handleStoppedNotification(NotificationFactories_1.COMPLETE_NOTIFICATION, this);
			else {
				this.isStopped = true;
				this._complete();
			}
		};
		Subscriber$1.prototype.unsubscribe = function() {
			if (!this.closed) {
				this.isStopped = true;
				_super.prototype.unsubscribe.call(this);
				this.destination = null;
			}
		};
		Subscriber$1.prototype._next = function(value) {
			this.destination.next(value);
		};
		Subscriber$1.prototype._error = function(err) {
			try {
				this.destination.error(err);
			} finally {
				this.unsubscribe();
			}
		};
		Subscriber$1.prototype._complete = function() {
			try {
				this.destination.complete();
			} finally {
				this.unsubscribe();
			}
		};
		return Subscriber$1;
	}(Subscription_1$8.Subscription);
	exports.Subscriber = Subscriber;
	var _bind = Function.prototype.bind;
	function bind(fn, thisArg) {
		return _bind.call(fn, thisArg);
	}
	var ConsumerObserver = function() {
		function ConsumerObserver$1(partialObserver) {
			this.partialObserver = partialObserver;
		}
		ConsumerObserver$1.prototype.next = function(value) {
			var partialObserver = this.partialObserver;
			if (partialObserver.next) try {
				partialObserver.next(value);
			} catch (error) {
				handleUnhandledError(error);
			}
		};
		ConsumerObserver$1.prototype.error = function(err) {
			var partialObserver = this.partialObserver;
			if (partialObserver.error) try {
				partialObserver.error(err);
			} catch (error) {
				handleUnhandledError(error);
			}
			else handleUnhandledError(err);
		};
		ConsumerObserver$1.prototype.complete = function() {
			var partialObserver = this.partialObserver;
			if (partialObserver.complete) try {
				partialObserver.complete();
			} catch (error) {
				handleUnhandledError(error);
			}
		};
		return ConsumerObserver$1;
	}();
	var SafeSubscriber = function(_super) {
		__extends$9(SafeSubscriber$1, _super);
		function SafeSubscriber$1(observerOrNext, error, complete) {
			var _this = _super.call(this) || this;
			var partialObserver;
			if (isFunction_1$21.isFunction(observerOrNext) || !observerOrNext) partialObserver = {
				next: observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : void 0,
				error: error !== null && error !== void 0 ? error : void 0,
				complete: complete !== null && complete !== void 0 ? complete : void 0
			};
			else {
				var context_1;
				if (_this && config_1$1.config.useDeprecatedNextContext) {
					context_1 = Object.create(observerOrNext);
					context_1.unsubscribe = function() {
						return _this.unsubscribe();
					};
					partialObserver = {
						next: observerOrNext.next && bind(observerOrNext.next, context_1),
						error: observerOrNext.error && bind(observerOrNext.error, context_1),
						complete: observerOrNext.complete && bind(observerOrNext.complete, context_1)
					};
				} else partialObserver = observerOrNext;
			}
			_this.destination = new ConsumerObserver(partialObserver);
			return _this;
		}
		return SafeSubscriber$1;
	}(Subscriber);
	exports.SafeSubscriber = SafeSubscriber;
	function handleUnhandledError(error) {
		if (config_1$1.config.useDeprecatedSynchronousErrorHandling) errorContext_1$2.captureError(error);
		else reportUnhandledError_1$1.reportUnhandledError(error);
	}
	function defaultErrorHandler(err) {
		throw err;
	}
	function handleStoppedNotification(notification, subscriber) {
		var onStoppedNotification = config_1$1.config.onStoppedNotification;
		onStoppedNotification && timeoutProvider_1.timeoutProvider.setTimeout(function() {
			return onStoppedNotification(notification, subscriber);
		});
	}
	exports.EMPTY_OBSERVER = {
		closed: true,
		next: noop_1$13.noop,
		error: defaultErrorHandler,
		complete: noop_1$13.noop
	};
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/symbol/observable.js
var require_observable = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/symbol/observable.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.observable = void 0;
	exports.observable = function() {
		return typeof Symbol === "function" && Symbol.observable || "@@observable";
	}();
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/identity.js
var require_identity = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/identity.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.identity = void 0;
	function identity(x) {
		return x;
	}
	exports.identity = identity;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/pipe.js
var require_pipe = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/pipe.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.pipeFromArray = exports.pipe = void 0;
	var identity_1$13 = require_identity();
	function pipe() {
		var fns = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) fns[_i$1] = arguments[_i$1];
		return pipeFromArray(fns);
	}
	exports.pipe = pipe;
	function pipeFromArray(fns) {
		if (fns.length === 0) return identity_1$13.identity;
		if (fns.length === 1) return fns[0];
		return function piped(input) {
			return fns.reduce(function(prev, fn) {
				return fn(prev);
			}, input);
		};
	}
	exports.pipeFromArray = pipeFromArray;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Observable.js
var require_Observable = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Observable.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Observable = void 0;
	var Subscriber_1$2 = require_Subscriber();
	var Subscription_1$7 = require_Subscription();
	var observable_1$2 = require_observable();
	var pipe_1$2 = require_pipe();
	var config_1 = require_config();
	var isFunction_1$20 = require_isFunction();
	var errorContext_1$1 = require_errorContext();
	var Observable = function() {
		function Observable$1(subscribe) {
			if (subscribe) this._subscribe = subscribe;
		}
		Observable$1.prototype.lift = function(operator) {
			var observable = new Observable$1();
			observable.source = this;
			observable.operator = operator;
			return observable;
		};
		Observable$1.prototype.subscribe = function(observerOrNext, error, complete) {
			var _this = this;
			var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new Subscriber_1$2.SafeSubscriber(observerOrNext, error, complete);
			errorContext_1$1.errorContext(function() {
				var _a = _this, operator = _a.operator, source = _a.source;
				subscriber.add(operator ? operator.call(subscriber, source) : source ? _this._subscribe(subscriber) : _this._trySubscribe(subscriber));
			});
			return subscriber;
		};
		Observable$1.prototype._trySubscribe = function(sink) {
			try {
				return this._subscribe(sink);
			} catch (err) {
				sink.error(err);
			}
		};
		Observable$1.prototype.forEach = function(next, promiseCtor) {
			var _this = this;
			promiseCtor = getPromiseCtor(promiseCtor);
			return new promiseCtor(function(resolve, reject) {
				var subscriber = new Subscriber_1$2.SafeSubscriber({
					next: function(value) {
						try {
							next(value);
						} catch (err) {
							reject(err);
							subscriber.unsubscribe();
						}
					},
					error: reject,
					complete: resolve
				});
				_this.subscribe(subscriber);
			});
		};
		Observable$1.prototype._subscribe = function(subscriber) {
			var _a;
			return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);
		};
		Observable$1.prototype[observable_1$2.observable] = function() {
			return this;
		};
		Observable$1.prototype.pipe = function() {
			var operations = [];
			for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) operations[_i$1] = arguments[_i$1];
			return pipe_1$2.pipeFromArray(operations)(this);
		};
		Observable$1.prototype.toPromise = function(promiseCtor) {
			var _this = this;
			promiseCtor = getPromiseCtor(promiseCtor);
			return new promiseCtor(function(resolve, reject) {
				var value;
				_this.subscribe(function(x) {
					return value = x;
				}, function(err) {
					return reject(err);
				}, function() {
					return resolve(value);
				});
			});
		};
		Observable$1.create = function(subscribe) {
			return new Observable$1(subscribe);
		};
		return Observable$1;
	}();
	exports.Observable = Observable;
	function getPromiseCtor(promiseCtor) {
		var _a;
		return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config_1.config.Promise) !== null && _a !== void 0 ? _a : Promise;
	}
	function isObserver(value) {
		return value && isFunction_1$20.isFunction(value.next) && isFunction_1$20.isFunction(value.error) && isFunction_1$20.isFunction(value.complete);
	}
	function isSubscriber(value) {
		return value && value instanceof Subscriber_1$2.Subscriber || isObserver(value) && Subscription_1$7.isSubscription(value);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isInteropObservable.js
var require_isInteropObservable = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isInteropObservable.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isInteropObservable = void 0;
	var observable_1$1 = require_observable();
	var isFunction_1$19 = require_isFunction();
	function isInteropObservable(input) {
		return isFunction_1$19.isFunction(input[observable_1$1.observable]);
	}
	exports.isInteropObservable = isInteropObservable;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isAsyncIterable.js
var require_isAsyncIterable = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isAsyncIterable.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isAsyncIterable = void 0;
	var isFunction_1$18 = require_isFunction();
	function isAsyncIterable(obj) {
		return Symbol.asyncIterator && isFunction_1$18.isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);
	}
	exports.isAsyncIterable = isAsyncIterable;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/throwUnobservableError.js
var require_throwUnobservableError = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/throwUnobservableError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.createInvalidObservableTypeError = void 0;
	function createInvalidObservableTypeError(input) {
		return /* @__PURE__ */ new TypeError("You provided " + (input !== null && typeof input === "object" ? "an invalid object" : "'" + input + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");
	}
	exports.createInvalidObservableTypeError = createInvalidObservableTypeError;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/symbol/iterator.js
var require_iterator = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/symbol/iterator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.iterator = exports.getSymbolIterator = void 0;
	function getSymbolIterator() {
		if (typeof Symbol !== "function" || !Symbol.iterator) return "@@iterator";
		return Symbol.iterator;
	}
	exports.getSymbolIterator = getSymbolIterator;
	exports.iterator = getSymbolIterator();
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isIterable.js
var require_isIterable = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isIterable.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isIterable = void 0;
	var iterator_1$1 = require_iterator();
	var isFunction_1$17 = require_isFunction();
	function isIterable(input) {
		return isFunction_1$17.isFunction(input === null || input === void 0 ? void 0 : input[iterator_1$1.iterator]);
	}
	exports.isIterable = isIterable;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isReadableStreamLike.js
var require_isReadableStreamLike = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isReadableStreamLike.js"(exports) {
	var __generator$1 = void 0 && (void 0).__generator || function(thisArg, body) {
		var _ = {
			label: 0,
			sent: function() {
				if (t[0] & 1) throw t[1];
				return t[1];
			},
			trys: [],
			ops: []
		}, f, y, t, g;
		return g = {
			next: verb(0),
			"throw": verb(1),
			"return": verb(2)
		}, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
			return this;
		}), g;
		function verb(n) {
			return function(v) {
				return step([n, v]);
			};
		}
		function step(op) {
			if (f) throw new TypeError("Generator is already executing.");
			while (_) try {
				if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
				if (y = 0, t) op = [op[0] & 2, t.value];
				switch (op[0]) {
					case 0:
					case 1:
						t = op;
						break;
					case 4:
						_.label++;
						return {
							value: op[1],
							done: false
						};
					case 5:
						_.label++;
						y = op[1];
						op = [0];
						continue;
					case 7:
						op = _.ops.pop();
						_.trys.pop();
						continue;
					default:
						if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
							_ = 0;
							continue;
						}
						if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
							_.label = op[1];
							break;
						}
						if (op[0] === 6 && _.label < t[1]) {
							_.label = t[1];
							t = op;
							break;
						}
						if (t && _.label < t[2]) {
							_.label = t[2];
							_.ops.push(op);
							break;
						}
						if (t[2]) _.ops.pop();
						_.trys.pop();
						continue;
				}
				op = body.call(thisArg, _);
			} catch (e) {
				op = [6, e];
				y = 0;
			} finally {
				f = t = 0;
			}
			if (op[0] & 5) throw op[1];
			return {
				value: op[0] ? op[1] : void 0,
				done: true
			};
		}
	};
	var __await = void 0 && (void 0).__await || function(v) {
		return this instanceof __await ? (this.v = v, this) : new __await(v);
	};
	var __asyncGenerator = void 0 && (void 0).__asyncGenerator || function(thisArg, _arguments, generator) {
		if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
		var g = generator.apply(thisArg, _arguments || []), i$1, q = [];
		return i$1 = {}, verb("next"), verb("throw"), verb("return"), i$1[Symbol.asyncIterator] = function() {
			return this;
		}, i$1;
		function verb(n) {
			if (g[n]) i$1[n] = function(v) {
				return new Promise(function(a, b) {
					q.push([
						n,
						v,
						a,
						b
					]) > 1 || resume(n, v);
				});
			};
		}
		function resume(n, v) {
			try {
				step(g[n](v));
			} catch (e) {
				settle(q[0][3], e);
			}
		}
		function step(r) {
			r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
		}
		function fulfill(value) {
			resume("next", value);
		}
		function reject(value) {
			resume("throw", value);
		}
		function settle(f, v) {
			if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
		}
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isReadableStreamLike = exports.readableStreamLikeToAsyncGenerator = void 0;
	var isFunction_1$16 = require_isFunction();
	function readableStreamLikeToAsyncGenerator(readableStream) {
		return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {
			var reader, _a, value, done;
			return __generator$1(this, function(_b) {
				switch (_b.label) {
					case 0:
						reader = readableStream.getReader();
						_b.label = 1;
					case 1:
						_b.trys.push([
							1,
							,
							9,
							10
						]);
						_b.label = 2;
					case 2: return [4, __await(reader.read())];
					case 3:
						_a = _b.sent(), value = _a.value, done = _a.done;
						if (!done) return [3, 5];
						return [4, __await(void 0)];
					case 4: return [2, _b.sent()];
					case 5: return [4, __await(value)];
					case 6: return [4, _b.sent()];
					case 7:
						_b.sent();
						return [3, 2];
					case 8: return [3, 10];
					case 9:
						reader.releaseLock();
						return [7];
					case 10: return [2];
				}
			});
		});
	}
	exports.readableStreamLikeToAsyncGenerator = readableStreamLikeToAsyncGenerator;
	function isReadableStreamLike(obj) {
		return isFunction_1$16.isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);
	}
	exports.isReadableStreamLike = isReadableStreamLike;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/innerFrom.js
var require_innerFrom = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/innerFrom.js"(exports) {
	var __awaiter = void 0 && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {
		function adopt(value) {
			return value instanceof P ? value : new P(function(resolve) {
				resolve(value);
			});
		}
		return new (P || (P = Promise))(function(resolve, reject) {
			function fulfilled(value) {
				try {
					step(generator.next(value));
				} catch (e) {
					reject(e);
				}
			}
			function rejected(value) {
				try {
					step(generator["throw"](value));
				} catch (e) {
					reject(e);
				}
			}
			function step(result$1) {
				result$1.done ? resolve(result$1.value) : adopt(result$1.value).then(fulfilled, rejected);
			}
			step((generator = generator.apply(thisArg, _arguments || [])).next());
		});
	};
	var __generator = void 0 && (void 0).__generator || function(thisArg, body) {
		var _ = {
			label: 0,
			sent: function() {
				if (t[0] & 1) throw t[1];
				return t[1];
			},
			trys: [],
			ops: []
		}, f, y, t, g;
		return g = {
			next: verb(0),
			"throw": verb(1),
			"return": verb(2)
		}, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
			return this;
		}), g;
		function verb(n) {
			return function(v) {
				return step([n, v]);
			};
		}
		function step(op) {
			if (f) throw new TypeError("Generator is already executing.");
			while (_) try {
				if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
				if (y = 0, t) op = [op[0] & 2, t.value];
				switch (op[0]) {
					case 0:
					case 1:
						t = op;
						break;
					case 4:
						_.label++;
						return {
							value: op[1],
							done: false
						};
					case 5:
						_.label++;
						y = op[1];
						op = [0];
						continue;
					case 7:
						op = _.ops.pop();
						_.trys.pop();
						continue;
					default:
						if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
							_ = 0;
							continue;
						}
						if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
							_.label = op[1];
							break;
						}
						if (op[0] === 6 && _.label < t[1]) {
							_.label = t[1];
							t = op;
							break;
						}
						if (t && _.label < t[2]) {
							_.label = t[2];
							_.ops.push(op);
							break;
						}
						if (t[2]) _.ops.pop();
						_.trys.pop();
						continue;
				}
				op = body.call(thisArg, _);
			} catch (e) {
				op = [6, e];
				y = 0;
			} finally {
				f = t = 0;
			}
			if (op[0] & 5) throw op[1];
			return {
				value: op[0] ? op[1] : void 0,
				done: true
			};
		}
	};
	var __asyncValues = void 0 && (void 0).__asyncValues || function(o) {
		if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
		var m = o[Symbol.asyncIterator], i$1;
		return m ? m.call(o) : (o = typeof __values$7 === "function" ? __values$7(o) : o[Symbol.iterator](), i$1 = {}, verb("next"), verb("throw"), verb("return"), i$1[Symbol.asyncIterator] = function() {
			return this;
		}, i$1);
		function verb(n) {
			i$1[n] = o[n] && function(v) {
				return new Promise(function(resolve, reject) {
					v = o[n](v), settle(resolve, reject, v.done, v.value);
				});
			};
		}
		function settle(resolve, reject, d, v) {
			Promise.resolve(v).then(function(v$1) {
				resolve({
					value: v$1,
					done: d
				});
			}, reject);
		}
	};
	var __values$7 = void 0 && (void 0).__values || function(o) {
		var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i$1 = 0;
		if (m) return m.call(o);
		if (o && typeof o.length === "number") return { next: function() {
			if (o && i$1 >= o.length) o = void 0;
			return {
				value: o && o[i$1++],
				done: !o
			};
		} };
		throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.fromReadableStreamLike = exports.fromAsyncIterable = exports.fromIterable = exports.fromPromise = exports.fromArrayLike = exports.fromInteropObservable = exports.innerFrom = void 0;
	var isArrayLike_1$1 = require_isArrayLike();
	var isPromise_1$1 = require_isPromise();
	var Observable_1$14 = require_Observable();
	var isInteropObservable_1$1 = require_isInteropObservable();
	var isAsyncIterable_1$1 = require_isAsyncIterable();
	var throwUnobservableError_1$1 = require_throwUnobservableError();
	var isIterable_1$1 = require_isIterable();
	var isReadableStreamLike_1$2 = require_isReadableStreamLike();
	var isFunction_1$15 = require_isFunction();
	var reportUnhandledError_1 = require_reportUnhandledError();
	var observable_1 = require_observable();
	function innerFrom(input) {
		if (input instanceof Observable_1$14.Observable) return input;
		if (input != null) {
			if (isInteropObservable_1$1.isInteropObservable(input)) return fromInteropObservable(input);
			if (isArrayLike_1$1.isArrayLike(input)) return fromArrayLike(input);
			if (isPromise_1$1.isPromise(input)) return fromPromise(input);
			if (isAsyncIterable_1$1.isAsyncIterable(input)) return fromAsyncIterable(input);
			if (isIterable_1$1.isIterable(input)) return fromIterable(input);
			if (isReadableStreamLike_1$2.isReadableStreamLike(input)) return fromReadableStreamLike(input);
		}
		throw throwUnobservableError_1$1.createInvalidObservableTypeError(input);
	}
	exports.innerFrom = innerFrom;
	function fromInteropObservable(obj) {
		return new Observable_1$14.Observable(function(subscriber) {
			var obs = obj[observable_1.observable]();
			if (isFunction_1$15.isFunction(obs.subscribe)) return obs.subscribe(subscriber);
			throw new TypeError("Provided object does not correctly implement Symbol.observable");
		});
	}
	exports.fromInteropObservable = fromInteropObservable;
	function fromArrayLike(array) {
		return new Observable_1$14.Observable(function(subscriber) {
			for (var i$1 = 0; i$1 < array.length && !subscriber.closed; i$1++) subscriber.next(array[i$1]);
			subscriber.complete();
		});
	}
	exports.fromArrayLike = fromArrayLike;
	function fromPromise(promise) {
		return new Observable_1$14.Observable(function(subscriber) {
			promise.then(function(value) {
				if (!subscriber.closed) {
					subscriber.next(value);
					subscriber.complete();
				}
			}, function(err) {
				return subscriber.error(err);
			}).then(null, reportUnhandledError_1.reportUnhandledError);
		});
	}
	exports.fromPromise = fromPromise;
	function fromIterable(iterable) {
		return new Observable_1$14.Observable(function(subscriber) {
			var e_1, _a;
			try {
				for (var iterable_1 = __values$7(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {
					var value = iterable_1_1.value;
					subscriber.next(value);
					if (subscriber.closed) return;
				}
			} catch (e_1_1) {
				e_1 = { error: e_1_1 };
			} finally {
				try {
					if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);
				} finally {
					if (e_1) throw e_1.error;
				}
			}
			subscriber.complete();
		});
	}
	exports.fromIterable = fromIterable;
	function fromAsyncIterable(asyncIterable) {
		return new Observable_1$14.Observable(function(subscriber) {
			process$1(asyncIterable, subscriber).catch(function(err) {
				return subscriber.error(err);
			});
		});
	}
	exports.fromAsyncIterable = fromAsyncIterable;
	function fromReadableStreamLike(readableStream) {
		return fromAsyncIterable(isReadableStreamLike_1$2.readableStreamLikeToAsyncGenerator(readableStream));
	}
	exports.fromReadableStreamLike = fromReadableStreamLike;
	function process$1(asyncIterable, subscriber) {
		var asyncIterable_1, asyncIterable_1_1;
		var e_2, _a;
		return __awaiter(this, void 0, void 0, function() {
			var value, e_2_1;
			return __generator(this, function(_b) {
				switch (_b.label) {
					case 0:
						_b.trys.push([
							0,
							5,
							6,
							11
						]);
						asyncIterable_1 = __asyncValues(asyncIterable);
						_b.label = 1;
					case 1: return [4, asyncIterable_1.next()];
					case 2:
						if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];
						value = asyncIterable_1_1.value;
						subscriber.next(value);
						if (subscriber.closed) return [2];
						_b.label = 3;
					case 3: return [3, 1];
					case 4: return [3, 11];
					case 5:
						e_2_1 = _b.sent();
						e_2 = { error: e_2_1 };
						return [3, 11];
					case 6:
						_b.trys.push([
							6,
							,
							9,
							10
						]);
						if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];
						return [4, _a.call(asyncIterable_1)];
					case 7:
						_b.sent();
						_b.label = 8;
					case 8: return [3, 10];
					case 9:
						if (e_2) throw e_2.error;
						return [7];
					case 10: return [7];
					case 11:
						subscriber.complete();
						return [2];
				}
			});
		});
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/OperatorSubscriber.js
var require_OperatorSubscriber = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/OperatorSubscriber.js"(exports) {
	var __extends$8 = void 0 && (void 0).__extends || function() {
		var extendStatics = function(d, b) {
			extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d$1, b$1) {
				d$1.__proto__ = b$1;
			} || function(d$1, b$1) {
				for (var p in b$1) if (Object.prototype.hasOwnProperty.call(b$1, p)) d$1[p] = b$1[p];
			};
			return extendStatics(d, b);
		};
		return function(d, b) {
			if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		};
	}();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.OperatorSubscriber = exports.createOperatorSubscriber = void 0;
	var Subscriber_1$1 = require_Subscriber();
	function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {
		return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);
	}
	exports.createOperatorSubscriber = createOperatorSubscriber;
	var OperatorSubscriber = function(_super) {
		__extends$8(OperatorSubscriber$1, _super);
		function OperatorSubscriber$1(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {
			var _this = _super.call(this, destination) || this;
			_this.onFinalize = onFinalize;
			_this.shouldUnsubscribe = shouldUnsubscribe;
			_this._next = onNext ? function(value) {
				try {
					onNext(value);
				} catch (err) {
					destination.error(err);
				}
			} : _super.prototype._next;
			_this._error = onError ? function(err) {
				try {
					onError(err);
				} catch (err$1) {
					destination.error(err$1);
				} finally {
					this.unsubscribe();
				}
			} : _super.prototype._error;
			_this._complete = onComplete ? function() {
				try {
					onComplete();
				} catch (err) {
					destination.error(err);
				} finally {
					this.unsubscribe();
				}
			} : _super.prototype._complete;
			return _this;
		}
		OperatorSubscriber$1.prototype.unsubscribe = function() {
			var _a;
			if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
				var closed_1 = this.closed;
				_super.prototype.unsubscribe.call(this);
				!closed_1 && ((_a = this.onFinalize) === null || _a === void 0 || _a.call(this));
			}
		};
		return OperatorSubscriber$1;
	}(Subscriber_1$1.Subscriber);
	exports.OperatorSubscriber = OperatorSubscriber;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/audit.js
var require_audit = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/audit.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.audit = void 0;
	var lift_1$69 = require_lift();
	var innerFrom_1$34 = require_innerFrom();
	var OperatorSubscriber_1$57 = require_OperatorSubscriber();
	function audit(durationSelector) {
		return lift_1$69.operate(function(source, subscriber) {
			var hasValue = false;
			var lastValue = null;
			var durationSubscriber = null;
			var isComplete = false;
			var endDuration = function() {
				durationSubscriber === null || durationSubscriber === void 0 || durationSubscriber.unsubscribe();
				durationSubscriber = null;
				if (hasValue) {
					hasValue = false;
					var value = lastValue;
					lastValue = null;
					subscriber.next(value);
				}
				isComplete && subscriber.complete();
			};
			var cleanupDuration = function() {
				durationSubscriber = null;
				isComplete && subscriber.complete();
			};
			source.subscribe(OperatorSubscriber_1$57.createOperatorSubscriber(subscriber, function(value) {
				hasValue = true;
				lastValue = value;
				if (!durationSubscriber) innerFrom_1$34.innerFrom(durationSelector(value)).subscribe(durationSubscriber = OperatorSubscriber_1$57.createOperatorSubscriber(subscriber, endDuration, cleanupDuration));
			}, function() {
				isComplete = true;
				(!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();
			}));
		});
	}
	exports.audit = audit;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/Action.js
var require_Action = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/Action.js"(exports) {
	var __extends$7 = void 0 && (void 0).__extends || function() {
		var extendStatics = function(d, b) {
			extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d$1, b$1) {
				d$1.__proto__ = b$1;
			} || function(d$1, b$1) {
				for (var p in b$1) if (Object.prototype.hasOwnProperty.call(b$1, p)) d$1[p] = b$1[p];
			};
			return extendStatics(d, b);
		};
		return function(d, b) {
			if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		};
	}();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Action = void 0;
	var Subscription_1$6 = require_Subscription();
	var Action = function(_super) {
		__extends$7(Action$1, _super);
		function Action$1(scheduler, work) {
			return _super.call(this) || this;
		}
		Action$1.prototype.schedule = function(state, delay$1) {
			if (delay$1 === void 0) delay$1 = 0;
			return this;
		};
		return Action$1;
	}(Subscription_1$6.Subscription);
	exports.Action = Action;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/intervalProvider.js
var require_intervalProvider = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/intervalProvider.js"(exports) {
	var __read$16 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$16 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.intervalProvider = void 0;
	exports.intervalProvider = {
		setInterval: function(handler, timeout$1) {
			var args = [];
			for (var _i$1 = 2; _i$1 < arguments.length; _i$1++) args[_i$1 - 2] = arguments[_i$1];
			var delegate = exports.intervalProvider.delegate;
			if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) return delegate.setInterval.apply(delegate, __spreadArray$16([handler, timeout$1], __read$16(args)));
			return setInterval.apply(void 0, __spreadArray$16([handler, timeout$1], __read$16(args)));
		},
		clearInterval: function(handle) {
			var delegate = exports.intervalProvider.delegate;
			return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);
		},
		delegate: void 0
	};
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/AsyncAction.js
var require_AsyncAction = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/AsyncAction.js"(exports) {
	var __extends$6 = void 0 && (void 0).__extends || function() {
		var extendStatics = function(d, b) {
			extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d$1, b$1) {
				d$1.__proto__ = b$1;
			} || function(d$1, b$1) {
				for (var p in b$1) if (Object.prototype.hasOwnProperty.call(b$1, p)) d$1[p] = b$1[p];
			};
			return extendStatics(d, b);
		};
		return function(d, b) {
			if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		};
	}();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.AsyncAction = void 0;
	var Action_1 = require_Action();
	var intervalProvider_1 = require_intervalProvider();
	var arrRemove_1$6 = require_arrRemove();
	var AsyncAction = function(_super) {
		__extends$6(AsyncAction$1, _super);
		function AsyncAction$1(scheduler, work) {
			var _this = _super.call(this, scheduler, work) || this;
			_this.scheduler = scheduler;
			_this.work = work;
			_this.pending = false;
			return _this;
		}
		AsyncAction$1.prototype.schedule = function(state, delay$1) {
			var _a;
			if (delay$1 === void 0) delay$1 = 0;
			if (this.closed) return this;
			this.state = state;
			var id = this.id;
			var scheduler = this.scheduler;
			if (id != null) this.id = this.recycleAsyncId(scheduler, id, delay$1);
			this.pending = true;
			this.delay = delay$1;
			this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay$1);
			return this;
		};
		AsyncAction$1.prototype.requestAsyncId = function(scheduler, _id, delay$1) {
			if (delay$1 === void 0) delay$1 = 0;
			return intervalProvider_1.intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay$1);
		};
		AsyncAction$1.prototype.recycleAsyncId = function(_scheduler, id, delay$1) {
			if (delay$1 === void 0) delay$1 = 0;
			if (delay$1 != null && this.delay === delay$1 && this.pending === false) return id;
			if (id != null) intervalProvider_1.intervalProvider.clearInterval(id);
			return void 0;
		};
		AsyncAction$1.prototype.execute = function(state, delay$1) {
			if (this.closed) return /* @__PURE__ */ new Error("executing a cancelled action");
			this.pending = false;
			var error = this._execute(state, delay$1);
			if (error) return error;
			else if (this.pending === false && this.id != null) this.id = this.recycleAsyncId(this.scheduler, this.id, null);
		};
		AsyncAction$1.prototype._execute = function(state, _delay) {
			var errored = false;
			var errorValue;
			try {
				this.work(state);
			} catch (e) {
				errored = true;
				errorValue = e ? e : /* @__PURE__ */ new Error("Scheduled action threw falsy error");
			}
			if (errored) {
				this.unsubscribe();
				return errorValue;
			}
		};
		AsyncAction$1.prototype.unsubscribe = function() {
			if (!this.closed) {
				var _a = this, id = _a.id, scheduler = _a.scheduler;
				var actions = scheduler.actions;
				this.work = this.state = this.scheduler = null;
				this.pending = false;
				arrRemove_1$6.arrRemove(actions, this);
				if (id != null) this.id = this.recycleAsyncId(scheduler, id, null);
				this.delay = null;
				_super.prototype.unsubscribe.call(this);
			}
		};
		return AsyncAction$1;
	}(Action_1.Action);
	exports.AsyncAction = AsyncAction;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/dateTimestampProvider.js
var require_dateTimestampProvider = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/dateTimestampProvider.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.dateTimestampProvider = void 0;
	exports.dateTimestampProvider = {
		now: function() {
			return (exports.dateTimestampProvider.delegate || Date).now();
		},
		delegate: void 0
	};
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Scheduler.js
var require_Scheduler = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Scheduler.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Scheduler = void 0;
	var dateTimestampProvider_1$2 = require_dateTimestampProvider();
	var Scheduler = function() {
		function Scheduler$1(schedulerActionCtor, now) {
			if (now === void 0) now = Scheduler$1.now;
			this.schedulerActionCtor = schedulerActionCtor;
			this.now = now;
		}
		Scheduler$1.prototype.schedule = function(work, delay$1, state) {
			if (delay$1 === void 0) delay$1 = 0;
			return new this.schedulerActionCtor(this, work).schedule(state, delay$1);
		};
		Scheduler$1.now = dateTimestampProvider_1$2.dateTimestampProvider.now;
		return Scheduler$1;
	}();
	exports.Scheduler = Scheduler;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/AsyncScheduler.js
var require_AsyncScheduler = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/AsyncScheduler.js"(exports) {
	var __extends$5 = void 0 && (void 0).__extends || function() {
		var extendStatics = function(d, b) {
			extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d$1, b$1) {
				d$1.__proto__ = b$1;
			} || function(d$1, b$1) {
				for (var p in b$1) if (Object.prototype.hasOwnProperty.call(b$1, p)) d$1[p] = b$1[p];
			};
			return extendStatics(d, b);
		};
		return function(d, b) {
			if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		};
	}();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.AsyncScheduler = void 0;
	var Scheduler_1 = require_Scheduler();
	var AsyncScheduler = function(_super) {
		__extends$5(AsyncScheduler$1, _super);
		function AsyncScheduler$1(SchedulerAction, now) {
			if (now === void 0) now = Scheduler_1.Scheduler.now;
			var _this = _super.call(this, SchedulerAction, now) || this;
			_this.actions = [];
			_this._active = false;
			return _this;
		}
		AsyncScheduler$1.prototype.flush = function(action) {
			var actions = this.actions;
			if (this._active) {
				actions.push(action);
				return;
			}
			var error;
			this._active = true;
			do
				if (error = action.execute(action.state, action.delay)) break;
			while (action = actions.shift());
			this._active = false;
			if (error) {
				while (action = actions.shift()) action.unsubscribe();
				throw error;
			}
		};
		return AsyncScheduler$1;
	}(Scheduler_1.Scheduler);
	exports.AsyncScheduler = AsyncScheduler;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/async.js
var require_async = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduler/async.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.async = exports.asyncScheduler = void 0;
	var AsyncAction_1 = require_AsyncAction();
	var AsyncScheduler_1 = require_AsyncScheduler();
	exports.asyncScheduler = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);
	exports.async = exports.asyncScheduler;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isScheduler.js
var require_isScheduler = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isScheduler.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isScheduler = void 0;
	var isFunction_1$14 = require_isFunction();
	function isScheduler(value) {
		return value && isFunction_1$14.isFunction(value.schedule);
	}
	exports.isScheduler = isScheduler;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isDate.js
var require_isDate = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/isDate.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isValidDate = void 0;
	function isValidDate(value) {
		return value instanceof Date && !isNaN(value);
	}
	exports.isValidDate = isValidDate;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/timer.js
var require_timer = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/timer.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.timer = void 0;
	var Observable_1$13 = require_Observable();
	var async_1$11 = require_async();
	var isScheduler_1$1 = require_isScheduler();
	var isDate_1$2 = require_isDate();
	function timer(dueTime, intervalOrScheduler, scheduler) {
		if (dueTime === void 0) dueTime = 0;
		if (scheduler === void 0) scheduler = async_1$11.async;
		var intervalDuration = -1;
		if (intervalOrScheduler != null) if (isScheduler_1$1.isScheduler(intervalOrScheduler)) scheduler = intervalOrScheduler;
		else intervalDuration = intervalOrScheduler;
		return new Observable_1$13.Observable(function(subscriber) {
			var due = isDate_1$2.isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;
			if (due < 0) due = 0;
			var n = 0;
			return scheduler.schedule(function() {
				if (!subscriber.closed) {
					subscriber.next(n++);
					if (0 <= intervalDuration) this.schedule(void 0, intervalDuration);
					else subscriber.complete();
				}
			}, due);
		});
	}
	exports.timer = timer;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/auditTime.js
var require_auditTime = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/auditTime.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.auditTime = void 0;
	var async_1$10 = require_async();
	var audit_1$1 = require_audit();
	var timer_1$5 = require_timer();
	function auditTime(duration, scheduler) {
		if (scheduler === void 0) scheduler = async_1$10.asyncScheduler;
		return audit_1$1.audit(function() {
			return timer_1$5.timer(duration, scheduler);
		});
	}
	exports.auditTime = auditTime;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/buffer.js
var require_buffer = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/buffer.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.buffer = void 0;
	var lift_1$68 = require_lift();
	var noop_1$12 = require_noop();
	var OperatorSubscriber_1$56 = require_OperatorSubscriber();
	var innerFrom_1$33 = require_innerFrom();
	function buffer(closingNotifier) {
		return lift_1$68.operate(function(source, subscriber) {
			var currentBuffer = [];
			source.subscribe(OperatorSubscriber_1$56.createOperatorSubscriber(subscriber, function(value) {
				return currentBuffer.push(value);
			}, function() {
				subscriber.next(currentBuffer);
				subscriber.complete();
			}));
			innerFrom_1$33.innerFrom(closingNotifier).subscribe(OperatorSubscriber_1$56.createOperatorSubscriber(subscriber, function() {
				var b = currentBuffer;
				currentBuffer = [];
				subscriber.next(b);
			}, noop_1$12.noop));
			return function() {
				currentBuffer = null;
			};
		});
	}
	exports.buffer = buffer;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/bufferCount.js
var require_bufferCount = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/bufferCount.js"(exports) {
	var __values$6 = void 0 && (void 0).__values || function(o) {
		var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i$1 = 0;
		if (m) return m.call(o);
		if (o && typeof o.length === "number") return { next: function() {
			if (o && i$1 >= o.length) o = void 0;
			return {
				value: o && o[i$1++],
				done: !o
			};
		} };
		throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.bufferCount = void 0;
	var lift_1$67 = require_lift();
	var OperatorSubscriber_1$55 = require_OperatorSubscriber();
	var arrRemove_1$5 = require_arrRemove();
	function bufferCount(bufferSize, startBufferEvery) {
		if (startBufferEvery === void 0) startBufferEvery = null;
		startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;
		return lift_1$67.operate(function(source, subscriber) {
			var buffers = [];
			var count$1 = 0;
			source.subscribe(OperatorSubscriber_1$55.createOperatorSubscriber(subscriber, function(value) {
				var e_1, _a, e_2, _b;
				var toEmit = null;
				if (count$1++ % startBufferEvery === 0) buffers.push([]);
				try {
					for (var buffers_1 = __values$6(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {
						var buffer$1 = buffers_1_1.value;
						buffer$1.push(value);
						if (bufferSize <= buffer$1.length) {
							toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];
							toEmit.push(buffer$1);
						}
					}
				} catch (e_1_1) {
					e_1 = { error: e_1_1 };
				} finally {
					try {
						if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);
					} finally {
						if (e_1) throw e_1.error;
					}
				}
				if (toEmit) try {
					for (var toEmit_1 = __values$6(toEmit), toEmit_1_1 = toEmit_1.next(); !toEmit_1_1.done; toEmit_1_1 = toEmit_1.next()) {
						var buffer$1 = toEmit_1_1.value;
						arrRemove_1$5.arrRemove(buffers, buffer$1);
						subscriber.next(buffer$1);
					}
				} catch (e_2_1) {
					e_2 = { error: e_2_1 };
				} finally {
					try {
						if (toEmit_1_1 && !toEmit_1_1.done && (_b = toEmit_1.return)) _b.call(toEmit_1);
					} finally {
						if (e_2) throw e_2.error;
					}
				}
			}, function() {
				var e_3, _a;
				try {
					for (var buffers_2 = __values$6(buffers), buffers_2_1 = buffers_2.next(); !buffers_2_1.done; buffers_2_1 = buffers_2.next()) {
						var buffer$1 = buffers_2_1.value;
						subscriber.next(buffer$1);
					}
				} catch (e_3_1) {
					e_3 = { error: e_3_1 };
				} finally {
					try {
						if (buffers_2_1 && !buffers_2_1.done && (_a = buffers_2.return)) _a.call(buffers_2);
					} finally {
						if (e_3) throw e_3.error;
					}
				}
				subscriber.complete();
			}, void 0, function() {
				buffers = null;
			}));
		});
	}
	exports.bufferCount = bufferCount;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/args.js
var require_args = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/args.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.popNumber = exports.popScheduler = exports.popResultSelector = void 0;
	var isFunction_1$13 = require_isFunction();
	var isScheduler_1 = require_isScheduler();
	function last$1(arr) {
		return arr[arr.length - 1];
	}
	function popResultSelector(args) {
		return isFunction_1$13.isFunction(last$1(args)) ? args.pop() : void 0;
	}
	exports.popResultSelector = popResultSelector;
	function popScheduler(args) {
		return isScheduler_1.isScheduler(last$1(args)) ? args.pop() : void 0;
	}
	exports.popScheduler = popScheduler;
	function popNumber(args, defaultValue) {
		return typeof last$1(args) === "number" ? args.pop() : defaultValue;
	}
	exports.popNumber = popNumber;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/executeSchedule.js
var require_executeSchedule = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/executeSchedule.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.executeSchedule = void 0;
	function executeSchedule(parentSubscription, scheduler, work, delay$1, repeat$2) {
		if (delay$1 === void 0) delay$1 = 0;
		if (repeat$2 === void 0) repeat$2 = false;
		var scheduleSubscription = scheduler.schedule(function() {
			work();
			if (repeat$2) parentSubscription.add(this.schedule(null, delay$1));
			else this.unsubscribe();
		}, delay$1);
		parentSubscription.add(scheduleSubscription);
		if (!repeat$2) return scheduleSubscription;
	}
	exports.executeSchedule = executeSchedule;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/bufferTime.js
var require_bufferTime = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/bufferTime.js"(exports) {
	var __values$5 = void 0 && (void 0).__values || function(o) {
		var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i$1 = 0;
		if (m) return m.call(o);
		if (o && typeof o.length === "number") return { next: function() {
			if (o && i$1 >= o.length) o = void 0;
			return {
				value: o && o[i$1++],
				done: !o
			};
		} };
		throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.bufferTime = void 0;
	var Subscription_1$5 = require_Subscription();
	var lift_1$66 = require_lift();
	var OperatorSubscriber_1$54 = require_OperatorSubscriber();
	var arrRemove_1$4 = require_arrRemove();
	var async_1$9 = require_async();
	var args_1$10 = require_args();
	var executeSchedule_1$7 = require_executeSchedule();
	function bufferTime(bufferTimeSpan) {
		var _a, _b;
		var otherArgs = [];
		for (var _i$1 = 1; _i$1 < arguments.length; _i$1++) otherArgs[_i$1 - 1] = arguments[_i$1];
		var scheduler = (_a = args_1$10.popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : async_1$9.asyncScheduler;
		var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;
		var maxBufferSize = otherArgs[1] || Infinity;
		return lift_1$66.operate(function(source, subscriber) {
			var bufferRecords = [];
			var restartOnEmit = false;
			var emit = function(record) {
				var buffer$1 = record.buffer, subs = record.subs;
				subs.unsubscribe();
				arrRemove_1$4.arrRemove(bufferRecords, record);
				subscriber.next(buffer$1);
				restartOnEmit && startBuffer();
			};
			var startBuffer = function() {
				if (bufferRecords) {
					var subs = new Subscription_1$5.Subscription();
					subscriber.add(subs);
					var buffer$1 = [];
					var record_1 = {
						buffer: buffer$1,
						subs
					};
					bufferRecords.push(record_1);
					executeSchedule_1$7.executeSchedule(subs, scheduler, function() {
						return emit(record_1);
					}, bufferTimeSpan);
				}
			};
			if (bufferCreationInterval !== null && bufferCreationInterval >= 0) executeSchedule_1$7.executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);
			else restartOnEmit = true;
			startBuffer();
			var bufferTimeSubscriber = OperatorSubscriber_1$54.createOperatorSubscriber(subscriber, function(value) {
				var e_1, _a$1;
				var recordsCopy = bufferRecords.slice();
				try {
					for (var recordsCopy_1 = __values$5(recordsCopy), recordsCopy_1_1 = recordsCopy_1.next(); !recordsCopy_1_1.done; recordsCopy_1_1 = recordsCopy_1.next()) {
						var record = recordsCopy_1_1.value;
						var buffer$1 = record.buffer;
						buffer$1.push(value);
						maxBufferSize <= buffer$1.length && emit(record);
					}
				} catch (e_1_1) {
					e_1 = { error: e_1_1 };
				} finally {
					try {
						if (recordsCopy_1_1 && !recordsCopy_1_1.done && (_a$1 = recordsCopy_1.return)) _a$1.call(recordsCopy_1);
					} finally {
						if (e_1) throw e_1.error;
					}
				}
			}, function() {
				while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) subscriber.next(bufferRecords.shift().buffer);
				bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 || bufferTimeSubscriber.unsubscribe();
				subscriber.complete();
				subscriber.unsubscribe();
			}, void 0, function() {
				return bufferRecords = null;
			});
			source.subscribe(bufferTimeSubscriber);
		});
	}
	exports.bufferTime = bufferTime;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/bufferToggle.js
var require_bufferToggle = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/bufferToggle.js"(exports) {
	var __values$4 = void 0 && (void 0).__values || function(o) {
		var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i$1 = 0;
		if (m) return m.call(o);
		if (o && typeof o.length === "number") return { next: function() {
			if (o && i$1 >= o.length) o = void 0;
			return {
				value: o && o[i$1++],
				done: !o
			};
		} };
		throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.bufferToggle = void 0;
	var Subscription_1$4 = require_Subscription();
	var lift_1$65 = require_lift();
	var innerFrom_1$32 = require_innerFrom();
	var OperatorSubscriber_1$53 = require_OperatorSubscriber();
	var noop_1$11 = require_noop();
	var arrRemove_1$3 = require_arrRemove();
	function bufferToggle(openings, closingSelector) {
		return lift_1$65.operate(function(source, subscriber) {
			var buffers = [];
			innerFrom_1$32.innerFrom(openings).subscribe(OperatorSubscriber_1$53.createOperatorSubscriber(subscriber, function(openValue) {
				var buffer$1 = [];
				buffers.push(buffer$1);
				var closingSubscription = new Subscription_1$4.Subscription();
				var emitBuffer = function() {
					arrRemove_1$3.arrRemove(buffers, buffer$1);
					subscriber.next(buffer$1);
					closingSubscription.unsubscribe();
				};
				closingSubscription.add(innerFrom_1$32.innerFrom(closingSelector(openValue)).subscribe(OperatorSubscriber_1$53.createOperatorSubscriber(subscriber, emitBuffer, noop_1$11.noop)));
			}, noop_1$11.noop));
			source.subscribe(OperatorSubscriber_1$53.createOperatorSubscriber(subscriber, function(value) {
				var e_1, _a;
				try {
					for (var buffers_1 = __values$4(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {
						var buffer$1 = buffers_1_1.value;
						buffer$1.push(value);
					}
				} catch (e_1_1) {
					e_1 = { error: e_1_1 };
				} finally {
					try {
						if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);
					} finally {
						if (e_1) throw e_1.error;
					}
				}
			}, function() {
				while (buffers.length > 0) subscriber.next(buffers.shift());
				subscriber.complete();
			}));
		});
	}
	exports.bufferToggle = bufferToggle;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/bufferWhen.js
var require_bufferWhen = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/bufferWhen.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.bufferWhen = void 0;
	var lift_1$64 = require_lift();
	var noop_1$10 = require_noop();
	var OperatorSubscriber_1$52 = require_OperatorSubscriber();
	var innerFrom_1$31 = require_innerFrom();
	function bufferWhen(closingSelector) {
		return lift_1$64.operate(function(source, subscriber) {
			var buffer$1 = null;
			var closingSubscriber = null;
			var openBuffer = function() {
				closingSubscriber === null || closingSubscriber === void 0 || closingSubscriber.unsubscribe();
				var b = buffer$1;
				buffer$1 = [];
				b && subscriber.next(b);
				innerFrom_1$31.innerFrom(closingSelector()).subscribe(closingSubscriber = OperatorSubscriber_1$52.createOperatorSubscriber(subscriber, openBuffer, noop_1$10.noop));
			};
			openBuffer();
			source.subscribe(OperatorSubscriber_1$52.createOperatorSubscriber(subscriber, function(value) {
				return buffer$1 === null || buffer$1 === void 0 ? void 0 : buffer$1.push(value);
			}, function() {
				buffer$1 && subscriber.next(buffer$1);
				subscriber.complete();
			}, void 0, function() {
				return buffer$1 = closingSubscriber = null;
			}));
		});
	}
	exports.bufferWhen = bufferWhen;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/catchError.js
var require_catchError = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/catchError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.catchError = void 0;
	var innerFrom_1$30 = require_innerFrom();
	var OperatorSubscriber_1$51 = require_OperatorSubscriber();
	var lift_1$63 = require_lift();
	function catchError(selector) {
		return lift_1$63.operate(function(source, subscriber) {
			var innerSub = null;
			var syncUnsub = false;
			var handledResult;
			innerSub = source.subscribe(OperatorSubscriber_1$51.createOperatorSubscriber(subscriber, void 0, void 0, function(err) {
				handledResult = innerFrom_1$30.innerFrom(selector(err, catchError(selector)(source)));
				if (innerSub) {
					innerSub.unsubscribe();
					innerSub = null;
					handledResult.subscribe(subscriber);
				} else syncUnsub = true;
			}));
			if (syncUnsub) {
				innerSub.unsubscribe();
				innerSub = null;
				handledResult.subscribe(subscriber);
			}
		});
	}
	exports.catchError = catchError;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/argsArgArrayOrObject.js
var require_argsArgArrayOrObject = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/argsArgArrayOrObject.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.argsArgArrayOrObject = void 0;
	var isArray$2 = Array.isArray;
	var getPrototypeOf = Object.getPrototypeOf, objectProto = Object.prototype, getKeys = Object.keys;
	function argsArgArrayOrObject(args) {
		if (args.length === 1) {
			var first_1$1 = args[0];
			if (isArray$2(first_1$1)) return {
				args: first_1$1,
				keys: null
			};
			if (isPOJO(first_1$1)) {
				var keys = getKeys(first_1$1);
				return {
					args: keys.map(function(key) {
						return first_1$1[key];
					}),
					keys
				};
			}
		}
		return {
			args,
			keys: null
		};
	}
	exports.argsArgArrayOrObject = argsArgArrayOrObject;
	function isPOJO(obj) {
		return obj && typeof obj === "object" && getPrototypeOf(obj) === objectProto;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/observeOn.js
var require_observeOn = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/observeOn.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.observeOn = void 0;
	var executeSchedule_1$6 = require_executeSchedule();
	var lift_1$62 = require_lift();
	var OperatorSubscriber_1$50 = require_OperatorSubscriber();
	function observeOn(scheduler, delay$1) {
		if (delay$1 === void 0) delay$1 = 0;
		return lift_1$62.operate(function(source, subscriber) {
			source.subscribe(OperatorSubscriber_1$50.createOperatorSubscriber(subscriber, function(value) {
				return executeSchedule_1$6.executeSchedule(subscriber, scheduler, function() {
					return subscriber.next(value);
				}, delay$1);
			}, function() {
				return executeSchedule_1$6.executeSchedule(subscriber, scheduler, function() {
					return subscriber.complete();
				}, delay$1);
			}, function(err) {
				return executeSchedule_1$6.executeSchedule(subscriber, scheduler, function() {
					return subscriber.error(err);
				}, delay$1);
			}));
		});
	}
	exports.observeOn = observeOn;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/subscribeOn.js
var require_subscribeOn = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/subscribeOn.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.subscribeOn = void 0;
	var lift_1$61 = require_lift();
	function subscribeOn(scheduler, delay$1) {
		if (delay$1 === void 0) delay$1 = 0;
		return lift_1$61.operate(function(source, subscriber) {
			subscriber.add(scheduler.schedule(function() {
				return source.subscribe(subscriber);
			}, delay$1));
		});
	}
	exports.subscribeOn = subscribeOn;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduleObservable.js
var require_scheduleObservable = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduleObservable.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.scheduleObservable = void 0;
	var innerFrom_1$29 = require_innerFrom();
	var observeOn_1$2 = require_observeOn();
	var subscribeOn_1$2 = require_subscribeOn();
	function scheduleObservable(input, scheduler) {
		return innerFrom_1$29.innerFrom(input).pipe(subscribeOn_1$2.subscribeOn(scheduler), observeOn_1$2.observeOn(scheduler));
	}
	exports.scheduleObservable = scheduleObservable;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/schedulePromise.js
var require_schedulePromise = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/schedulePromise.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.schedulePromise = void 0;
	var innerFrom_1$28 = require_innerFrom();
	var observeOn_1$1 = require_observeOn();
	var subscribeOn_1$1 = require_subscribeOn();
	function schedulePromise(input, scheduler) {
		return innerFrom_1$28.innerFrom(input).pipe(subscribeOn_1$1.subscribeOn(scheduler), observeOn_1$1.observeOn(scheduler));
	}
	exports.schedulePromise = schedulePromise;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduleArray.js
var require_scheduleArray = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduleArray.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.scheduleArray = void 0;
	var Observable_1$12 = require_Observable();
	function scheduleArray(input, scheduler) {
		return new Observable_1$12.Observable(function(subscriber) {
			var i$1 = 0;
			return scheduler.schedule(function() {
				if (i$1 === input.length) subscriber.complete();
				else {
					subscriber.next(input[i$1++]);
					if (!subscriber.closed) this.schedule();
				}
			});
		});
	}
	exports.scheduleArray = scheduleArray;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduleIterable.js
var require_scheduleIterable = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduleIterable.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.scheduleIterable = void 0;
	var Observable_1$11 = require_Observable();
	var iterator_1 = require_iterator();
	var isFunction_1$12 = require_isFunction();
	var executeSchedule_1$5 = require_executeSchedule();
	function scheduleIterable(input, scheduler) {
		return new Observable_1$11.Observable(function(subscriber) {
			var iterator;
			executeSchedule_1$5.executeSchedule(subscriber, scheduler, function() {
				iterator = input[iterator_1.iterator]();
				executeSchedule_1$5.executeSchedule(subscriber, scheduler, function() {
					var _a;
					var value;
					var done;
					try {
						_a = iterator.next(), value = _a.value, done = _a.done;
					} catch (err) {
						subscriber.error(err);
						return;
					}
					if (done) subscriber.complete();
					else subscriber.next(value);
				}, 0, true);
			});
			return function() {
				return isFunction_1$12.isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();
			};
		});
	}
	exports.scheduleIterable = scheduleIterable;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduleAsyncIterable.js
var require_scheduleAsyncIterable = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduleAsyncIterable.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.scheduleAsyncIterable = void 0;
	var Observable_1$10 = require_Observable();
	var executeSchedule_1$4 = require_executeSchedule();
	function scheduleAsyncIterable(input, scheduler) {
		if (!input) throw new Error("Iterable cannot be null");
		return new Observable_1$10.Observable(function(subscriber) {
			executeSchedule_1$4.executeSchedule(subscriber, scheduler, function() {
				var iterator = input[Symbol.asyncIterator]();
				executeSchedule_1$4.executeSchedule(subscriber, scheduler, function() {
					iterator.next().then(function(result$1) {
						if (result$1.done) subscriber.complete();
						else subscriber.next(result$1.value);
					});
				}, 0, true);
			});
		});
	}
	exports.scheduleAsyncIterable = scheduleAsyncIterable;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduleReadableStreamLike.js
var require_scheduleReadableStreamLike = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduleReadableStreamLike.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.scheduleReadableStreamLike = void 0;
	var scheduleAsyncIterable_1$1 = require_scheduleAsyncIterable();
	var isReadableStreamLike_1$1 = require_isReadableStreamLike();
	function scheduleReadableStreamLike(input, scheduler) {
		return scheduleAsyncIterable_1$1.scheduleAsyncIterable(isReadableStreamLike_1$1.readableStreamLikeToAsyncGenerator(input), scheduler);
	}
	exports.scheduleReadableStreamLike = scheduleReadableStreamLike;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduled.js
var require_scheduled = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/scheduled/scheduled.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.scheduled = void 0;
	var scheduleObservable_1 = require_scheduleObservable();
	var schedulePromise_1 = require_schedulePromise();
	var scheduleArray_1 = require_scheduleArray();
	var scheduleIterable_1 = require_scheduleIterable();
	var scheduleAsyncIterable_1 = require_scheduleAsyncIterable();
	var isInteropObservable_1 = require_isInteropObservable();
	var isPromise_1 = require_isPromise();
	var isArrayLike_1 = require_isArrayLike();
	var isIterable_1 = require_isIterable();
	var isAsyncIterable_1 = require_isAsyncIterable();
	var throwUnobservableError_1 = require_throwUnobservableError();
	var isReadableStreamLike_1 = require_isReadableStreamLike();
	var scheduleReadableStreamLike_1 = require_scheduleReadableStreamLike();
	function scheduled(input, scheduler) {
		if (input != null) {
			if (isInteropObservable_1.isInteropObservable(input)) return scheduleObservable_1.scheduleObservable(input, scheduler);
			if (isArrayLike_1.isArrayLike(input)) return scheduleArray_1.scheduleArray(input, scheduler);
			if (isPromise_1.isPromise(input)) return schedulePromise_1.schedulePromise(input, scheduler);
			if (isAsyncIterable_1.isAsyncIterable(input)) return scheduleAsyncIterable_1.scheduleAsyncIterable(input, scheduler);
			if (isIterable_1.isIterable(input)) return scheduleIterable_1.scheduleIterable(input, scheduler);
			if (isReadableStreamLike_1.isReadableStreamLike(input)) return scheduleReadableStreamLike_1.scheduleReadableStreamLike(input, scheduler);
		}
		throw throwUnobservableError_1.createInvalidObservableTypeError(input);
	}
	exports.scheduled = scheduled;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/from.js
var require_from = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/from.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.from = void 0;
	var scheduled_1 = require_scheduled();
	var innerFrom_1$27 = require_innerFrom();
	function from(input, scheduler) {
		return scheduler ? scheduled_1.scheduled(input, scheduler) : innerFrom_1$27.innerFrom(input);
	}
	exports.from = from;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/map.js
var require_map = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/map.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.map = void 0;
	var lift_1$60 = require_lift();
	var OperatorSubscriber_1$49 = require_OperatorSubscriber();
	function map(project, thisArg) {
		return lift_1$60.operate(function(source, subscriber) {
			var index = 0;
			source.subscribe(OperatorSubscriber_1$49.createOperatorSubscriber(subscriber, function(value) {
				subscriber.next(project.call(thisArg, value, index++));
			}));
		});
	}
	exports.map = map;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/mapOneOrManyArgs.js
var require_mapOneOrManyArgs = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/mapOneOrManyArgs.js"(exports) {
	var __read$15 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$15 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.mapOneOrManyArgs = void 0;
	var map_1$6 = require_map();
	var isArray$1 = Array.isArray;
	function callOrApply(fn, args) {
		return isArray$1(args) ? fn.apply(void 0, __spreadArray$15([], __read$15(args))) : fn(args);
	}
	function mapOneOrManyArgs(fn) {
		return map_1$6.map(function(args) {
			return callOrApply(fn, args);
		});
	}
	exports.mapOneOrManyArgs = mapOneOrManyArgs;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/createObject.js
var require_createObject = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/createObject.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.createObject = void 0;
	function createObject(keys, values) {
		return keys.reduce(function(result$1, key, i$1) {
			return result$1[key] = values[i$1], result$1;
		}, {});
	}
	exports.createObject = createObject;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/combineLatest.js
var require_combineLatest$1 = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/combineLatest.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.combineLatestInit = exports.combineLatest = void 0;
	var Observable_1$9 = require_Observable();
	var argsArgArrayOrObject_1 = require_argsArgArrayOrObject();
	var from_1$4 = require_from();
	var identity_1$12 = require_identity();
	var mapOneOrManyArgs_1$2 = require_mapOneOrManyArgs();
	var args_1$9 = require_args();
	var createObject_1 = require_createObject();
	var OperatorSubscriber_1$48 = require_OperatorSubscriber();
	var executeSchedule_1$3 = require_executeSchedule();
	function combineLatest$1() {
		var args = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) args[_i$1] = arguments[_i$1];
		var scheduler = args_1$9.popScheduler(args);
		var resultSelector = args_1$9.popResultSelector(args);
		var _a = argsArgArrayOrObject_1.argsArgArrayOrObject(args), observables = _a.args, keys = _a.keys;
		if (observables.length === 0) return from_1$4.from([], scheduler);
		var result$1 = new Observable_1$9.Observable(combineLatestInit(observables, scheduler, keys ? function(values) {
			return createObject_1.createObject(keys, values);
		} : identity_1$12.identity));
		return resultSelector ? result$1.pipe(mapOneOrManyArgs_1$2.mapOneOrManyArgs(resultSelector)) : result$1;
	}
	exports.combineLatest = combineLatest$1;
	function combineLatestInit(observables, scheduler, valueTransform) {
		if (valueTransform === void 0) valueTransform = identity_1$12.identity;
		return function(subscriber) {
			maybeSchedule(scheduler, function() {
				var length$1 = observables.length;
				var values = new Array(length$1);
				var active = length$1;
				var remainingFirstValues = length$1;
				var _loop_1 = function(i$2) {
					maybeSchedule(scheduler, function() {
						var source = from_1$4.from(observables[i$2], scheduler);
						var hasFirstValue = false;
						source.subscribe(OperatorSubscriber_1$48.createOperatorSubscriber(subscriber, function(value) {
							values[i$2] = value;
							if (!hasFirstValue) {
								hasFirstValue = true;
								remainingFirstValues--;
							}
							if (!remainingFirstValues) subscriber.next(valueTransform(values.slice()));
						}, function() {
							if (!--active) subscriber.complete();
						}));
					}, subscriber);
				};
				for (var i$1 = 0; i$1 < length$1; i$1++) _loop_1(i$1);
			}, subscriber);
		};
	}
	exports.combineLatestInit = combineLatestInit;
	function maybeSchedule(scheduler, execute, subscription) {
		if (scheduler) executeSchedule_1$3.executeSchedule(subscription, scheduler, execute);
		else execute();
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeInternals.js
var require_mergeInternals = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeInternals.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.mergeInternals = void 0;
	var innerFrom_1$26 = require_innerFrom();
	var executeSchedule_1$2 = require_executeSchedule();
	var OperatorSubscriber_1$47 = require_OperatorSubscriber();
	function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand$1, innerSubScheduler, additionalFinalizer) {
		var buffer$1 = [];
		var active = 0;
		var index = 0;
		var isComplete = false;
		var checkComplete = function() {
			if (isComplete && !buffer$1.length && !active) subscriber.complete();
		};
		var outerNext = function(value) {
			return active < concurrent ? doInnerSub(value) : buffer$1.push(value);
		};
		var doInnerSub = function(value) {
			expand$1 && subscriber.next(value);
			active++;
			var innerComplete = false;
			innerFrom_1$26.innerFrom(project(value, index++)).subscribe(OperatorSubscriber_1$47.createOperatorSubscriber(subscriber, function(innerValue) {
				onBeforeNext === null || onBeforeNext === void 0 || onBeforeNext(innerValue);
				if (expand$1) outerNext(innerValue);
				else subscriber.next(innerValue);
			}, function() {
				innerComplete = true;
			}, void 0, function() {
				if (innerComplete) try {
					active--;
					var _loop_1 = function() {
						var bufferedValue = buffer$1.shift();
						if (innerSubScheduler) executeSchedule_1$2.executeSchedule(subscriber, innerSubScheduler, function() {
							return doInnerSub(bufferedValue);
						});
						else doInnerSub(bufferedValue);
					};
					while (buffer$1.length && active < concurrent) _loop_1();
					checkComplete();
				} catch (err) {
					subscriber.error(err);
				}
			}));
		};
		source.subscribe(OperatorSubscriber_1$47.createOperatorSubscriber(subscriber, outerNext, function() {
			isComplete = true;
			checkComplete();
		}));
		return function() {
			additionalFinalizer === null || additionalFinalizer === void 0 || additionalFinalizer();
		};
	}
	exports.mergeInternals = mergeInternals;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeMap.js
var require_mergeMap = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeMap.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.mergeMap = void 0;
	var map_1$5 = require_map();
	var innerFrom_1$25 = require_innerFrom();
	var lift_1$59 = require_lift();
	var mergeInternals_1$2 = require_mergeInternals();
	var isFunction_1$11 = require_isFunction();
	function mergeMap(project, resultSelector, concurrent) {
		if (concurrent === void 0) concurrent = Infinity;
		if (isFunction_1$11.isFunction(resultSelector)) return mergeMap(function(a, i$1) {
			return map_1$5.map(function(b, ii) {
				return resultSelector(a, b, i$1, ii);
			})(innerFrom_1$25.innerFrom(project(a, i$1)));
		}, concurrent);
		else if (typeof resultSelector === "number") concurrent = resultSelector;
		return lift_1$59.operate(function(source, subscriber) {
			return mergeInternals_1$2.mergeInternals(source, subscriber, project, concurrent);
		});
	}
	exports.mergeMap = mergeMap;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/scanInternals.js
var require_scanInternals = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/scanInternals.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.scanInternals = void 0;
	var OperatorSubscriber_1$46 = require_OperatorSubscriber();
	function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {
		return function(source, subscriber) {
			var hasState = hasSeed;
			var state = seed;
			var index = 0;
			source.subscribe(OperatorSubscriber_1$46.createOperatorSubscriber(subscriber, function(value) {
				var i$1 = index++;
				state = hasState ? accumulator(state, value, i$1) : (hasState = true, value);
				emitOnNext && subscriber.next(state);
			}, emitBeforeComplete && function() {
				hasState && subscriber.next(state);
				subscriber.complete();
			}));
		};
	}
	exports.scanInternals = scanInternals;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/reduce.js
var require_reduce = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/reduce.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.reduce = void 0;
	var scanInternals_1$1 = require_scanInternals();
	var lift_1$58 = require_lift();
	function reduce(accumulator, seed) {
		return lift_1$58.operate(scanInternals_1$1.scanInternals(accumulator, seed, arguments.length >= 2, false, true));
	}
	exports.reduce = reduce;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/toArray.js
var require_toArray = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/toArray.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.toArray = void 0;
	var reduce_1$4 = require_reduce();
	var lift_1$57 = require_lift();
	var arrReducer = function(arr, value) {
		return arr.push(value), arr;
	};
	function toArray() {
		return lift_1$57.operate(function(source, subscriber) {
			reduce_1$4.reduce(arrReducer, [])(source).subscribe(subscriber);
		});
	}
	exports.toArray = toArray;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/joinAllInternals.js
var require_joinAllInternals = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/joinAllInternals.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.joinAllInternals = void 0;
	var identity_1$11 = require_identity();
	var mapOneOrManyArgs_1$1 = require_mapOneOrManyArgs();
	var pipe_1$1 = require_pipe();
	var mergeMap_1$6 = require_mergeMap();
	var toArray_1$1 = require_toArray();
	function joinAllInternals(joinFn, project) {
		return pipe_1$1.pipe(toArray_1$1.toArray(), mergeMap_1$6.mergeMap(function(sources) {
			return joinFn(sources);
		}), project ? mapOneOrManyArgs_1$1.mapOneOrManyArgs(project) : identity_1$11.identity);
	}
	exports.joinAllInternals = joinAllInternals;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/combineLatestAll.js
var require_combineLatestAll = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/combineLatestAll.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.combineLatestAll = void 0;
	var combineLatest_1$3 = require_combineLatest$1();
	var joinAllInternals_1$1 = require_joinAllInternals();
	function combineLatestAll(project) {
		return joinAllInternals_1$1.joinAllInternals(combineLatest_1$3.combineLatest, project);
	}
	exports.combineLatestAll = combineLatestAll;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/combineAll.js
var require_combineAll = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/combineAll.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.combineAll = void 0;
	var combineLatestAll_1$1 = require_combineLatestAll();
	exports.combineAll = combineLatestAll_1$1.combineLatestAll;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/argsOrArgArray.js
var require_argsOrArgArray = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/argsOrArgArray.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.argsOrArgArray = void 0;
	var isArray = Array.isArray;
	function argsOrArgArray(args) {
		return args.length === 1 && isArray(args[0]) ? args[0] : args;
	}
	exports.argsOrArgArray = argsOrArgArray;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/combineLatest.js
var require_combineLatest = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/combineLatest.js"(exports) {
	var __read$14 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$14 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.combineLatest = void 0;
	var combineLatest_1$2 = require_combineLatest$1();
	var lift_1$56 = require_lift();
	var argsOrArgArray_1$5 = require_argsOrArgArray();
	var mapOneOrManyArgs_1 = require_mapOneOrManyArgs();
	var pipe_1 = require_pipe();
	var args_1$8 = require_args();
	function combineLatest() {
		var args = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) args[_i$1] = arguments[_i$1];
		var resultSelector = args_1$8.popResultSelector(args);
		return resultSelector ? pipe_1.pipe(combineLatest.apply(void 0, __spreadArray$14([], __read$14(args))), mapOneOrManyArgs_1.mapOneOrManyArgs(resultSelector)) : lift_1$56.operate(function(source, subscriber) {
			combineLatest_1$2.combineLatestInit(__spreadArray$14([source], __read$14(argsOrArgArray_1$5.argsOrArgArray(args))))(subscriber);
		});
	}
	exports.combineLatest = combineLatest;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/combineLatestWith.js
var require_combineLatestWith = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/combineLatestWith.js"(exports) {
	var __read$13 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$13 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.combineLatestWith = void 0;
	var combineLatest_1$1 = require_combineLatest();
	function combineLatestWith() {
		var otherSources = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) otherSources[_i$1] = arguments[_i$1];
		return combineLatest_1$1.combineLatest.apply(void 0, __spreadArray$13([], __read$13(otherSources)));
	}
	exports.combineLatestWith = combineLatestWith;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeAll.js
var require_mergeAll = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeAll.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.mergeAll = void 0;
	var mergeMap_1$5 = require_mergeMap();
	var identity_1$10 = require_identity();
	function mergeAll(concurrent) {
		if (concurrent === void 0) concurrent = Infinity;
		return mergeMap_1$5.mergeMap(identity_1$10.identity, concurrent);
	}
	exports.mergeAll = mergeAll;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/concatAll.js
var require_concatAll = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/concatAll.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.concatAll = void 0;
	var mergeAll_1$2 = require_mergeAll();
	function concatAll() {
		return mergeAll_1$2.mergeAll(1);
	}
	exports.concatAll = concatAll;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/concat.js
var require_concat$1 = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/concat.js"(exports) {
	var __read$12 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$12 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.concat = void 0;
	var lift_1$55 = require_lift();
	var concatAll_1$2 = require_concatAll();
	var args_1$7 = require_args();
	var from_1$3 = require_from();
	function concat$1() {
		var args = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) args[_i$1] = arguments[_i$1];
		var scheduler = args_1$7.popScheduler(args);
		return lift_1$55.operate(function(source, subscriber) {
			concatAll_1$2.concatAll()(from_1$3.from(__spreadArray$12([source], __read$12(args)), scheduler)).subscribe(subscriber);
		});
	}
	exports.concat = concat$1;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/concatMap.js
var require_concatMap = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/concatMap.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.concatMap = void 0;
	var mergeMap_1$4 = require_mergeMap();
	var isFunction_1$10 = require_isFunction();
	function concatMap(project, resultSelector) {
		return isFunction_1$10.isFunction(resultSelector) ? mergeMap_1$4.mergeMap(project, resultSelector, 1) : mergeMap_1$4.mergeMap(project, 1);
	}
	exports.concatMap = concatMap;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/concatMapTo.js
var require_concatMapTo = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/concatMapTo.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.concatMapTo = void 0;
	var concatMap_1$1 = require_concatMap();
	var isFunction_1$9 = require_isFunction();
	function concatMapTo(innerObservable, resultSelector) {
		return isFunction_1$9.isFunction(resultSelector) ? concatMap_1$1.concatMap(function() {
			return innerObservable;
		}, resultSelector) : concatMap_1$1.concatMap(function() {
			return innerObservable;
		});
	}
	exports.concatMapTo = concatMapTo;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/concatWith.js
var require_concatWith = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/concatWith.js"(exports) {
	var __read$11 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$11 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.concatWith = void 0;
	var concat_1$4 = require_concat$1();
	function concatWith() {
		var otherSources = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) otherSources[_i$1] = arguments[_i$1];
		return concat_1$4.concat.apply(void 0, __spreadArray$11([], __read$11(otherSources)));
	}
	exports.concatWith = concatWith;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/ObjectUnsubscribedError.js
var require_ObjectUnsubscribedError = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/ObjectUnsubscribedError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ObjectUnsubscribedError = void 0;
	var createErrorClass_1$5 = require_createErrorClass();
	exports.ObjectUnsubscribedError = createErrorClass_1$5.createErrorClass(function(_super) {
		return function ObjectUnsubscribedErrorImpl() {
			_super(this);
			this.name = "ObjectUnsubscribedError";
			this.message = "object unsubscribed";
		};
	});
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Subject.js
var require_Subject = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Subject.js"(exports) {
	var __extends$4 = void 0 && (void 0).__extends || function() {
		var extendStatics = function(d, b) {
			extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d$1, b$1) {
				d$1.__proto__ = b$1;
			} || function(d$1, b$1) {
				for (var p in b$1) if (Object.prototype.hasOwnProperty.call(b$1, p)) d$1[p] = b$1[p];
			};
			return extendStatics(d, b);
		};
		return function(d, b) {
			if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		};
	}();
	var __values$3 = void 0 && (void 0).__values || function(o) {
		var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i$1 = 0;
		if (m) return m.call(o);
		if (o && typeof o.length === "number") return { next: function() {
			if (o && i$1 >= o.length) o = void 0;
			return {
				value: o && o[i$1++],
				done: !o
			};
		} };
		throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.AnonymousSubject = exports.Subject = void 0;
	var Observable_1$8 = require_Observable();
	var Subscription_1$3 = require_Subscription();
	var ObjectUnsubscribedError_1 = require_ObjectUnsubscribedError();
	var arrRemove_1$2 = require_arrRemove();
	var errorContext_1 = require_errorContext();
	var Subject = function(_super) {
		__extends$4(Subject$1, _super);
		function Subject$1() {
			var _this = _super.call(this) || this;
			_this.closed = false;
			_this.currentObservers = null;
			_this.observers = [];
			_this.isStopped = false;
			_this.hasError = false;
			_this.thrownError = null;
			return _this;
		}
		Subject$1.prototype.lift = function(operator) {
			var subject = new AnonymousSubject(this, this);
			subject.operator = operator;
			return subject;
		};
		Subject$1.prototype._throwIfClosed = function() {
			if (this.closed) throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
		};
		Subject$1.prototype.next = function(value) {
			var _this = this;
			errorContext_1.errorContext(function() {
				var e_1, _a;
				_this._throwIfClosed();
				if (!_this.isStopped) {
					if (!_this.currentObservers) _this.currentObservers = Array.from(_this.observers);
					try {
						for (var _b = __values$3(_this.currentObservers), _c = _b.next(); !_c.done; _c = _b.next()) {
							var observer = _c.value;
							observer.next(value);
						}
					} catch (e_1_1) {
						e_1 = { error: e_1_1 };
					} finally {
						try {
							if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
						} finally {
							if (e_1) throw e_1.error;
						}
					}
				}
			});
		};
		Subject$1.prototype.error = function(err) {
			var _this = this;
			errorContext_1.errorContext(function() {
				_this._throwIfClosed();
				if (!_this.isStopped) {
					_this.hasError = _this.isStopped = true;
					_this.thrownError = err;
					var observers = _this.observers;
					while (observers.length) observers.shift().error(err);
				}
			});
		};
		Subject$1.prototype.complete = function() {
			var _this = this;
			errorContext_1.errorContext(function() {
				_this._throwIfClosed();
				if (!_this.isStopped) {
					_this.isStopped = true;
					var observers = _this.observers;
					while (observers.length) observers.shift().complete();
				}
			});
		};
		Subject$1.prototype.unsubscribe = function() {
			this.isStopped = this.closed = true;
			this.observers = this.currentObservers = null;
		};
		Object.defineProperty(Subject$1.prototype, "observed", {
			get: function() {
				var _a;
				return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;
			},
			enumerable: false,
			configurable: true
		});
		Subject$1.prototype._trySubscribe = function(subscriber) {
			this._throwIfClosed();
			return _super.prototype._trySubscribe.call(this, subscriber);
		};
		Subject$1.prototype._subscribe = function(subscriber) {
			this._throwIfClosed();
			this._checkFinalizedStatuses(subscriber);
			return this._innerSubscribe(subscriber);
		};
		Subject$1.prototype._innerSubscribe = function(subscriber) {
			var _this = this;
			var _a = this, hasError = _a.hasError, isStopped = _a.isStopped, observers = _a.observers;
			if (hasError || isStopped) return Subscription_1$3.EMPTY_SUBSCRIPTION;
			this.currentObservers = null;
			observers.push(subscriber);
			return new Subscription_1$3.Subscription(function() {
				_this.currentObservers = null;
				arrRemove_1$2.arrRemove(observers, subscriber);
			});
		};
		Subject$1.prototype._checkFinalizedStatuses = function(subscriber) {
			var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, isStopped = _a.isStopped;
			if (hasError) subscriber.error(thrownError);
			else if (isStopped) subscriber.complete();
		};
		Subject$1.prototype.asObservable = function() {
			var observable = new Observable_1$8.Observable();
			observable.source = this;
			return observable;
		};
		Subject$1.create = function(destination, source) {
			return new AnonymousSubject(destination, source);
		};
		return Subject$1;
	}(Observable_1$8.Observable);
	exports.Subject = Subject;
	var AnonymousSubject = function(_super) {
		__extends$4(AnonymousSubject$1, _super);
		function AnonymousSubject$1(destination, source) {
			var _this = _super.call(this) || this;
			_this.destination = destination;
			_this.source = source;
			return _this;
		}
		AnonymousSubject$1.prototype.next = function(value) {
			var _a, _b;
			(_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 || _b.call(_a, value);
		};
		AnonymousSubject$1.prototype.error = function(err) {
			var _a, _b;
			(_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 || _b.call(_a, err);
		};
		AnonymousSubject$1.prototype.complete = function() {
			var _a, _b;
			(_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 || _b.call(_a);
		};
		AnonymousSubject$1.prototype._subscribe = function(subscriber) {
			var _a, _b;
			return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : Subscription_1$3.EMPTY_SUBSCRIPTION;
		};
		return AnonymousSubject$1;
	}(Subject);
	exports.AnonymousSubject = AnonymousSubject;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/fromSubscribable.js
var require_fromSubscribable = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/fromSubscribable.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.fromSubscribable = void 0;
	var Observable_1$7 = require_Observable();
	function fromSubscribable(subscribable) {
		return new Observable_1$7.Observable(function(subscriber) {
			return subscribable.subscribe(subscriber);
		});
	}
	exports.fromSubscribable = fromSubscribable;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/connect.js
var require_connect = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/connect.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.connect = void 0;
	var Subject_1$13 = require_Subject();
	var innerFrom_1$24 = require_innerFrom();
	var lift_1$54 = require_lift();
	var fromSubscribable_1 = require_fromSubscribable();
	var DEFAULT_CONFIG = { connector: function() {
		return new Subject_1$13.Subject();
	} };
	function connect(selector, config) {
		if (config === void 0) config = DEFAULT_CONFIG;
		var connector = config.connector;
		return lift_1$54.operate(function(source, subscriber) {
			var subject = connector();
			innerFrom_1$24.innerFrom(selector(fromSubscribable_1.fromSubscribable(subject))).subscribe(subscriber);
			subscriber.add(source.subscribe(subject));
		});
	}
	exports.connect = connect;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/count.js
var require_count = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/count.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.count = void 0;
	var reduce_1$3 = require_reduce();
	function count(predicate) {
		return reduce_1$3.reduce(function(total, value, i$1) {
			return !predicate || predicate(value, i$1) ? total + 1 : total;
		}, 0);
	}
	exports.count = count;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/debounce.js
var require_debounce = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/debounce.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.debounce = void 0;
	var lift_1$53 = require_lift();
	var noop_1$9 = require_noop();
	var OperatorSubscriber_1$45 = require_OperatorSubscriber();
	var innerFrom_1$23 = require_innerFrom();
	function debounce(durationSelector) {
		return lift_1$53.operate(function(source, subscriber) {
			var hasValue = false;
			var lastValue = null;
			var durationSubscriber = null;
			var emit = function() {
				durationSubscriber === null || durationSubscriber === void 0 || durationSubscriber.unsubscribe();
				durationSubscriber = null;
				if (hasValue) {
					hasValue = false;
					var value = lastValue;
					lastValue = null;
					subscriber.next(value);
				}
			};
			source.subscribe(OperatorSubscriber_1$45.createOperatorSubscriber(subscriber, function(value) {
				durationSubscriber === null || durationSubscriber === void 0 || durationSubscriber.unsubscribe();
				hasValue = true;
				lastValue = value;
				durationSubscriber = OperatorSubscriber_1$45.createOperatorSubscriber(subscriber, emit, noop_1$9.noop);
				innerFrom_1$23.innerFrom(durationSelector(value)).subscribe(durationSubscriber);
			}, function() {
				emit();
				subscriber.complete();
			}, void 0, function() {
				lastValue = durationSubscriber = null;
			}));
		});
	}
	exports.debounce = debounce;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/debounceTime.js
var require_debounceTime = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/debounceTime.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.debounceTime = void 0;
	var async_1$8 = require_async();
	var lift_1$52 = require_lift();
	var OperatorSubscriber_1$44 = require_OperatorSubscriber();
	function debounceTime(dueTime, scheduler) {
		if (scheduler === void 0) scheduler = async_1$8.asyncScheduler;
		return lift_1$52.operate(function(source, subscriber) {
			var activeTask = null;
			var lastValue = null;
			var lastTime = null;
			var emit = function() {
				if (activeTask) {
					activeTask.unsubscribe();
					activeTask = null;
					var value = lastValue;
					lastValue = null;
					subscriber.next(value);
				}
			};
			function emitWhenIdle() {
				var targetTime = lastTime + dueTime;
				var now = scheduler.now();
				if (now < targetTime) {
					activeTask = this.schedule(void 0, targetTime - now);
					subscriber.add(activeTask);
					return;
				}
				emit();
			}
			source.subscribe(OperatorSubscriber_1$44.createOperatorSubscriber(subscriber, function(value) {
				lastValue = value;
				lastTime = scheduler.now();
				if (!activeTask) {
					activeTask = scheduler.schedule(emitWhenIdle, dueTime);
					subscriber.add(activeTask);
				}
			}, function() {
				emit();
				subscriber.complete();
			}, void 0, function() {
				lastValue = activeTask = null;
			}));
		});
	}
	exports.debounceTime = debounceTime;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/defaultIfEmpty.js
var require_defaultIfEmpty = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/defaultIfEmpty.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.defaultIfEmpty = void 0;
	var lift_1$51 = require_lift();
	var OperatorSubscriber_1$43 = require_OperatorSubscriber();
	function defaultIfEmpty(defaultValue) {
		return lift_1$51.operate(function(source, subscriber) {
			var hasValue = false;
			source.subscribe(OperatorSubscriber_1$43.createOperatorSubscriber(subscriber, function(value) {
				hasValue = true;
				subscriber.next(value);
			}, function() {
				if (!hasValue) subscriber.next(defaultValue);
				subscriber.complete();
			}));
		});
	}
	exports.defaultIfEmpty = defaultIfEmpty;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/concat.js
var require_concat = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/concat.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.concat = void 0;
	var concatAll_1$1 = require_concatAll();
	var args_1$6 = require_args();
	var from_1$2 = require_from();
	function concat() {
		var args = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) args[_i$1] = arguments[_i$1];
		return concatAll_1$1.concatAll()(from_1$2.from(args, args_1$6.popScheduler(args)));
	}
	exports.concat = concat;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/empty.js
var require_empty = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/empty.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.empty = exports.EMPTY = void 0;
	var Observable_1$6 = require_Observable();
	exports.EMPTY = new Observable_1$6.Observable(function(subscriber) {
		return subscriber.complete();
	});
	function empty(scheduler) {
		return scheduler ? emptyScheduled(scheduler) : exports.EMPTY;
	}
	exports.empty = empty;
	function emptyScheduled(scheduler) {
		return new Observable_1$6.Observable(function(subscriber) {
			return scheduler.schedule(function() {
				return subscriber.complete();
			});
		});
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/take.js
var require_take = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/take.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.take = void 0;
	var empty_1$4 = require_empty();
	var lift_1$50 = require_lift();
	var OperatorSubscriber_1$42 = require_OperatorSubscriber();
	function take(count$1) {
		return count$1 <= 0 ? function() {
			return empty_1$4.EMPTY;
		} : lift_1$50.operate(function(source, subscriber) {
			var seen = 0;
			source.subscribe(OperatorSubscriber_1$42.createOperatorSubscriber(subscriber, function(value) {
				if (++seen <= count$1) {
					subscriber.next(value);
					if (count$1 <= seen) subscriber.complete();
				}
			}));
		});
	}
	exports.take = take;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/ignoreElements.js
var require_ignoreElements = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/ignoreElements.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ignoreElements = void 0;
	var lift_1$49 = require_lift();
	var OperatorSubscriber_1$41 = require_OperatorSubscriber();
	var noop_1$8 = require_noop();
	function ignoreElements() {
		return lift_1$49.operate(function(source, subscriber) {
			source.subscribe(OperatorSubscriber_1$41.createOperatorSubscriber(subscriber, noop_1$8.noop));
		});
	}
	exports.ignoreElements = ignoreElements;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mapTo.js
var require_mapTo = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mapTo.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.mapTo = void 0;
	var map_1$4 = require_map();
	function mapTo(value) {
		return map_1$4.map(function() {
			return value;
		});
	}
	exports.mapTo = mapTo;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/delayWhen.js
var require_delayWhen = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/delayWhen.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.delayWhen = void 0;
	var concat_1$3 = require_concat();
	var take_1$3 = require_take();
	var ignoreElements_1$1 = require_ignoreElements();
	var mapTo_1$1 = require_mapTo();
	var mergeMap_1$3 = require_mergeMap();
	var innerFrom_1$22 = require_innerFrom();
	function delayWhen(delayDurationSelector, subscriptionDelay) {
		if (subscriptionDelay) return function(source) {
			return concat_1$3.concat(subscriptionDelay.pipe(take_1$3.take(1), ignoreElements_1$1.ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));
		};
		return mergeMap_1$3.mergeMap(function(value, index) {
			return innerFrom_1$22.innerFrom(delayDurationSelector(value, index)).pipe(take_1$3.take(1), mapTo_1$1.mapTo(value));
		});
	}
	exports.delayWhen = delayWhen;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/delay.js
var require_delay = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/delay.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.delay = void 0;
	var async_1$7 = require_async();
	var delayWhen_1$1 = require_delayWhen();
	var timer_1$4 = require_timer();
	function delay(due, scheduler) {
		if (scheduler === void 0) scheduler = async_1$7.asyncScheduler;
		var duration = timer_1$4.timer(due, scheduler);
		return delayWhen_1$1.delayWhen(function() {
			return duration;
		});
	}
	exports.delay = delay;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/of.js
var require_of = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/of.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.of = void 0;
	var args_1$5 = require_args();
	var from_1$1 = require_from();
	function of() {
		var args = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) args[_i$1] = arguments[_i$1];
		var scheduler = args_1$5.popScheduler(args);
		return from_1$1.from(args, scheduler);
	}
	exports.of = of;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/throwError.js
var require_throwError = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/throwError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.throwError = void 0;
	var Observable_1$5 = require_Observable();
	var isFunction_1$8 = require_isFunction();
	function throwError(errorOrErrorFactory, scheduler) {
		var errorFactory = isFunction_1$8.isFunction(errorOrErrorFactory) ? errorOrErrorFactory : function() {
			return errorOrErrorFactory;
		};
		var init = function(subscriber) {
			return subscriber.error(errorFactory());
		};
		return new Observable_1$5.Observable(scheduler ? function(subscriber) {
			return scheduler.schedule(init, 0, subscriber);
		} : init);
	}
	exports.throwError = throwError;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Notification.js
var require_Notification = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/Notification.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.observeNotification = exports.Notification = exports.NotificationKind = void 0;
	var empty_1$3 = require_empty();
	var of_1$1 = require_of();
	var throwError_1 = require_throwError();
	var isFunction_1$7 = require_isFunction();
	var NotificationKind;
	(function(NotificationKind$1) {
		NotificationKind$1["NEXT"] = "N";
		NotificationKind$1["ERROR"] = "E";
		NotificationKind$1["COMPLETE"] = "C";
	})(NotificationKind = exports.NotificationKind || (exports.NotificationKind = {}));
	var Notification = function() {
		function Notification$1(kind, value, error) {
			this.kind = kind;
			this.value = value;
			this.error = error;
			this.hasValue = kind === "N";
		}
		Notification$1.prototype.observe = function(observer) {
			return observeNotification(this, observer);
		};
		Notification$1.prototype.do = function(nextHandler, errorHandler, completeHandler) {
			var _a = this, kind = _a.kind, value = _a.value, error = _a.error;
			return kind === "N" ? nextHandler === null || nextHandler === void 0 ? void 0 : nextHandler(value) : kind === "E" ? errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(error) : completeHandler === null || completeHandler === void 0 ? void 0 : completeHandler();
		};
		Notification$1.prototype.accept = function(nextOrObserver, error, complete) {
			var _a;
			return isFunction_1$7.isFunction((_a = nextOrObserver) === null || _a === void 0 ? void 0 : _a.next) ? this.observe(nextOrObserver) : this.do(nextOrObserver, error, complete);
		};
		Notification$1.prototype.toObservable = function() {
			var _a = this, kind = _a.kind, value = _a.value, error = _a.error;
			var result$1 = kind === "N" ? of_1$1.of(value) : kind === "E" ? throwError_1.throwError(function() {
				return error;
			}) : kind === "C" ? empty_1$3.EMPTY : 0;
			if (!result$1) throw new TypeError("Unexpected notification kind " + kind);
			return result$1;
		};
		Notification$1.createNext = function(value) {
			return new Notification$1("N", value);
		};
		Notification$1.createError = function(err) {
			return new Notification$1("E", void 0, err);
		};
		Notification$1.createComplete = function() {
			return Notification$1.completeNotification;
		};
		Notification$1.completeNotification = new Notification$1("C");
		return Notification$1;
	}();
	exports.Notification = Notification;
	function observeNotification(notification, observer) {
		var _a, _b, _c;
		var _d = notification, kind = _d.kind, value = _d.value, error = _d.error;
		if (typeof kind !== "string") throw new TypeError("Invalid notification, missing \"kind\"");
		kind === "N" ? (_a = observer.next) === null || _a === void 0 || _a.call(observer, value) : kind === "E" ? (_b = observer.error) === null || _b === void 0 || _b.call(observer, error) : (_c = observer.complete) === null || _c === void 0 || _c.call(observer);
	}
	exports.observeNotification = observeNotification;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/dematerialize.js
var require_dematerialize = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/dematerialize.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.dematerialize = void 0;
	var Notification_1$1 = require_Notification();
	var lift_1$48 = require_lift();
	var OperatorSubscriber_1$40 = require_OperatorSubscriber();
	function dematerialize() {
		return lift_1$48.operate(function(source, subscriber) {
			source.subscribe(OperatorSubscriber_1$40.createOperatorSubscriber(subscriber, function(notification) {
				return Notification_1$1.observeNotification(notification, subscriber);
			}));
		});
	}
	exports.dematerialize = dematerialize;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/distinct.js
var require_distinct = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/distinct.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.distinct = void 0;
	var lift_1$47 = require_lift();
	var OperatorSubscriber_1$39 = require_OperatorSubscriber();
	var noop_1$7 = require_noop();
	var innerFrom_1$21 = require_innerFrom();
	function distinct(keySelector, flushes) {
		return lift_1$47.operate(function(source, subscriber) {
			var distinctKeys = /* @__PURE__ */ new Set();
			source.subscribe(OperatorSubscriber_1$39.createOperatorSubscriber(subscriber, function(value) {
				var key = keySelector ? keySelector(value) : value;
				if (!distinctKeys.has(key)) {
					distinctKeys.add(key);
					subscriber.next(value);
				}
			}));
			flushes && innerFrom_1$21.innerFrom(flushes).subscribe(OperatorSubscriber_1$39.createOperatorSubscriber(subscriber, function() {
				return distinctKeys.clear();
			}, noop_1$7.noop));
		});
	}
	exports.distinct = distinct;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/distinctUntilChanged.js
var require_distinctUntilChanged = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/distinctUntilChanged.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.distinctUntilChanged = void 0;
	var identity_1$9 = require_identity();
	var lift_1$46 = require_lift();
	var OperatorSubscriber_1$38 = require_OperatorSubscriber();
	function distinctUntilChanged(comparator, keySelector) {
		if (keySelector === void 0) keySelector = identity_1$9.identity;
		comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;
		return lift_1$46.operate(function(source, subscriber) {
			var previousKey;
			var first$1 = true;
			source.subscribe(OperatorSubscriber_1$38.createOperatorSubscriber(subscriber, function(value) {
				var currentKey = keySelector(value);
				if (first$1 || !comparator(previousKey, currentKey)) {
					first$1 = false;
					previousKey = currentKey;
					subscriber.next(value);
				}
			}));
		});
	}
	exports.distinctUntilChanged = distinctUntilChanged;
	function defaultCompare(a, b) {
		return a === b;
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/distinctUntilKeyChanged.js
var require_distinctUntilKeyChanged = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/distinctUntilKeyChanged.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.distinctUntilKeyChanged = void 0;
	var distinctUntilChanged_1$1 = require_distinctUntilChanged();
	function distinctUntilKeyChanged(key, compare) {
		return distinctUntilChanged_1$1.distinctUntilChanged(function(x, y) {
			return compare ? compare(x[key], y[key]) : x[key] === y[key];
		});
	}
	exports.distinctUntilKeyChanged = distinctUntilKeyChanged;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/ArgumentOutOfRangeError.js
var require_ArgumentOutOfRangeError = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/ArgumentOutOfRangeError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ArgumentOutOfRangeError = void 0;
	var createErrorClass_1$4 = require_createErrorClass();
	exports.ArgumentOutOfRangeError = createErrorClass_1$4.createErrorClass(function(_super) {
		return function ArgumentOutOfRangeErrorImpl() {
			_super(this);
			this.name = "ArgumentOutOfRangeError";
			this.message = "argument out of range";
		};
	});
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/filter.js
var require_filter = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/filter.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.filter = void 0;
	var lift_1$45 = require_lift();
	var OperatorSubscriber_1$37 = require_OperatorSubscriber();
	function filter(predicate, thisArg) {
		return lift_1$45.operate(function(source, subscriber) {
			var index = 0;
			source.subscribe(OperatorSubscriber_1$37.createOperatorSubscriber(subscriber, function(value) {
				return predicate.call(thisArg, value, index++) && subscriber.next(value);
			}));
		});
	}
	exports.filter = filter;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/EmptyError.js
var require_EmptyError = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/EmptyError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.EmptyError = void 0;
	var createErrorClass_1$3 = require_createErrorClass();
	exports.EmptyError = createErrorClass_1$3.createErrorClass(function(_super) {
		return function EmptyErrorImpl() {
			_super(this);
			this.name = "EmptyError";
			this.message = "no elements in sequence";
		};
	});
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/throwIfEmpty.js
var require_throwIfEmpty = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/throwIfEmpty.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.throwIfEmpty = void 0;
	var EmptyError_1$3 = require_EmptyError();
	var lift_1$44 = require_lift();
	var OperatorSubscriber_1$36 = require_OperatorSubscriber();
	function throwIfEmpty(errorFactory) {
		if (errorFactory === void 0) errorFactory = defaultErrorFactory;
		return lift_1$44.operate(function(source, subscriber) {
			var hasValue = false;
			source.subscribe(OperatorSubscriber_1$36.createOperatorSubscriber(subscriber, function(value) {
				hasValue = true;
				subscriber.next(value);
			}, function() {
				return hasValue ? subscriber.complete() : subscriber.error(errorFactory());
			}));
		});
	}
	exports.throwIfEmpty = throwIfEmpty;
	function defaultErrorFactory() {
		return new EmptyError_1$3.EmptyError();
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/elementAt.js
var require_elementAt = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/elementAt.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.elementAt = void 0;
	var ArgumentOutOfRangeError_1 = require_ArgumentOutOfRangeError();
	var filter_1$5 = require_filter();
	var throwIfEmpty_1$3 = require_throwIfEmpty();
	var defaultIfEmpty_1$3 = require_defaultIfEmpty();
	var take_1$2 = require_take();
	function elementAt(index, defaultValue) {
		if (index < 0) throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();
		var hasDefaultValue = arguments.length >= 2;
		return function(source) {
			return source.pipe(filter_1$5.filter(function(v, i$1) {
				return i$1 === index;
			}), take_1$2.take(1), hasDefaultValue ? defaultIfEmpty_1$3.defaultIfEmpty(defaultValue) : throwIfEmpty_1$3.throwIfEmpty(function() {
				return new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();
			}));
		};
	}
	exports.elementAt = elementAt;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/endWith.js
var require_endWith = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/endWith.js"(exports) {
	var __read$10 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$10 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.endWith = void 0;
	var concat_1$2 = require_concat();
	var of_1 = require_of();
	function endWith() {
		var values = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) values[_i$1] = arguments[_i$1];
		return function(source) {
			return concat_1$2.concat(source, of_1.of.apply(void 0, __spreadArray$10([], __read$10(values))));
		};
	}
	exports.endWith = endWith;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/every.js
var require_every = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/every.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.every = void 0;
	var lift_1$43 = require_lift();
	var OperatorSubscriber_1$35 = require_OperatorSubscriber();
	function every(predicate, thisArg) {
		return lift_1$43.operate(function(source, subscriber) {
			var index = 0;
			source.subscribe(OperatorSubscriber_1$35.createOperatorSubscriber(subscriber, function(value) {
				if (!predicate.call(thisArg, value, index++, source)) {
					subscriber.next(false);
					subscriber.complete();
				}
			}, function() {
				subscriber.next(true);
				subscriber.complete();
			}));
		});
	}
	exports.every = every;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/exhaustMap.js
var require_exhaustMap = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/exhaustMap.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.exhaustMap = void 0;
	var map_1$3 = require_map();
	var innerFrom_1$20 = require_innerFrom();
	var lift_1$42 = require_lift();
	var OperatorSubscriber_1$34 = require_OperatorSubscriber();
	function exhaustMap(project, resultSelector) {
		if (resultSelector) return function(source) {
			return source.pipe(exhaustMap(function(a, i$1) {
				return innerFrom_1$20.innerFrom(project(a, i$1)).pipe(map_1$3.map(function(b, ii) {
					return resultSelector(a, b, i$1, ii);
				}));
			}));
		};
		return lift_1$42.operate(function(source, subscriber) {
			var index = 0;
			var innerSub = null;
			var isComplete = false;
			source.subscribe(OperatorSubscriber_1$34.createOperatorSubscriber(subscriber, function(outerValue) {
				if (!innerSub) {
					innerSub = OperatorSubscriber_1$34.createOperatorSubscriber(subscriber, void 0, function() {
						innerSub = null;
						isComplete && subscriber.complete();
					});
					innerFrom_1$20.innerFrom(project(outerValue, index++)).subscribe(innerSub);
				}
			}, function() {
				isComplete = true;
				!innerSub && subscriber.complete();
			}));
		});
	}
	exports.exhaustMap = exhaustMap;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/exhaustAll.js
var require_exhaustAll = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/exhaustAll.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.exhaustAll = void 0;
	var exhaustMap_1$1 = require_exhaustMap();
	var identity_1$8 = require_identity();
	function exhaustAll() {
		return exhaustMap_1$1.exhaustMap(identity_1$8.identity);
	}
	exports.exhaustAll = exhaustAll;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/exhaust.js
var require_exhaust = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/exhaust.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.exhaust = void 0;
	var exhaustAll_1$1 = require_exhaustAll();
	exports.exhaust = exhaustAll_1$1.exhaustAll;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/expand.js
var require_expand = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/expand.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.expand = void 0;
	var lift_1$41 = require_lift();
	var mergeInternals_1$1 = require_mergeInternals();
	function expand(project, concurrent, scheduler) {
		if (concurrent === void 0) concurrent = Infinity;
		concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;
		return lift_1$41.operate(function(source, subscriber) {
			return mergeInternals_1$1.mergeInternals(source, subscriber, project, concurrent, void 0, true, scheduler);
		});
	}
	exports.expand = expand;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/finalize.js
var require_finalize = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/finalize.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.finalize = void 0;
	var lift_1$40 = require_lift();
	function finalize(callback) {
		return lift_1$40.operate(function(source, subscriber) {
			try {
				source.subscribe(subscriber);
			} finally {
				subscriber.add(callback);
			}
		});
	}
	exports.finalize = finalize;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/find.js
var require_find = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/find.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.createFind = exports.find = void 0;
	var lift_1$39 = require_lift();
	var OperatorSubscriber_1$33 = require_OperatorSubscriber();
	function find(predicate, thisArg) {
		return lift_1$39.operate(createFind(predicate, thisArg, "value"));
	}
	exports.find = find;
	function createFind(predicate, thisArg, emit) {
		var findIndex$1 = emit === "index";
		return function(source, subscriber) {
			var index = 0;
			source.subscribe(OperatorSubscriber_1$33.createOperatorSubscriber(subscriber, function(value) {
				var i$1 = index++;
				if (predicate.call(thisArg, value, i$1, source)) {
					subscriber.next(findIndex$1 ? i$1 : value);
					subscriber.complete();
				}
			}, function() {
				subscriber.next(findIndex$1 ? -1 : void 0);
				subscriber.complete();
			}));
		};
	}
	exports.createFind = createFind;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/findIndex.js
var require_findIndex = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/findIndex.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.findIndex = void 0;
	var lift_1$38 = require_lift();
	var find_1$1 = require_find();
	function findIndex(predicate, thisArg) {
		return lift_1$38.operate(find_1$1.createFind(predicate, thisArg, "index"));
	}
	exports.findIndex = findIndex;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/first.js
var require_first = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/first.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.first = void 0;
	var EmptyError_1$2 = require_EmptyError();
	var filter_1$4 = require_filter();
	var take_1$1 = require_take();
	var defaultIfEmpty_1$2 = require_defaultIfEmpty();
	var throwIfEmpty_1$2 = require_throwIfEmpty();
	var identity_1$7 = require_identity();
	function first(predicate, defaultValue) {
		var hasDefaultValue = arguments.length >= 2;
		return function(source) {
			return source.pipe(predicate ? filter_1$4.filter(function(v, i$1) {
				return predicate(v, i$1, source);
			}) : identity_1$7.identity, take_1$1.take(1), hasDefaultValue ? defaultIfEmpty_1$2.defaultIfEmpty(defaultValue) : throwIfEmpty_1$2.throwIfEmpty(function() {
				return new EmptyError_1$2.EmptyError();
			}));
		};
	}
	exports.first = first;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/groupBy.js
var require_groupBy = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/groupBy.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.groupBy = void 0;
	var Observable_1$4 = require_Observable();
	var innerFrom_1$19 = require_innerFrom();
	var Subject_1$12 = require_Subject();
	var lift_1$37 = require_lift();
	var OperatorSubscriber_1$32 = require_OperatorSubscriber();
	function groupBy(keySelector, elementOrOptions, duration, connector) {
		return lift_1$37.operate(function(source, subscriber) {
			var element;
			if (!elementOrOptions || typeof elementOrOptions === "function") element = elementOrOptions;
			else duration = elementOrOptions.duration, element = elementOrOptions.element, connector = elementOrOptions.connector;
			var groups = /* @__PURE__ */ new Map();
			var notify = function(cb) {
				groups.forEach(cb);
				cb(subscriber);
			};
			var handleError = function(err) {
				return notify(function(consumer) {
					return consumer.error(err);
				});
			};
			var activeGroups = 0;
			var teardownAttempted = false;
			var groupBySourceSubscriber = new OperatorSubscriber_1$32.OperatorSubscriber(subscriber, function(value) {
				try {
					var key_1 = keySelector(value);
					var group_1 = groups.get(key_1);
					if (!group_1) {
						groups.set(key_1, group_1 = connector ? connector() : new Subject_1$12.Subject());
						var grouped = createGroupedObservable(key_1, group_1);
						subscriber.next(grouped);
						if (duration) {
							var durationSubscriber_1 = OperatorSubscriber_1$32.createOperatorSubscriber(group_1, function() {
								group_1.complete();
								durationSubscriber_1 === null || durationSubscriber_1 === void 0 || durationSubscriber_1.unsubscribe();
							}, void 0, void 0, function() {
								return groups.delete(key_1);
							});
							groupBySourceSubscriber.add(innerFrom_1$19.innerFrom(duration(grouped)).subscribe(durationSubscriber_1));
						}
					}
					group_1.next(element ? element(value) : value);
				} catch (err) {
					handleError(err);
				}
			}, function() {
				return notify(function(consumer) {
					return consumer.complete();
				});
			}, handleError, function() {
				return groups.clear();
			}, function() {
				teardownAttempted = true;
				return activeGroups === 0;
			});
			source.subscribe(groupBySourceSubscriber);
			function createGroupedObservable(key, groupSubject) {
				var result$1 = new Observable_1$4.Observable(function(groupSubscriber) {
					activeGroups++;
					var innerSub = groupSubject.subscribe(groupSubscriber);
					return function() {
						innerSub.unsubscribe();
						--activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();
					};
				});
				result$1.key = key;
				return result$1;
			}
		});
	}
	exports.groupBy = groupBy;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/isEmpty.js
var require_isEmpty = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/isEmpty.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.isEmpty = void 0;
	var lift_1$36 = require_lift();
	var OperatorSubscriber_1$31 = require_OperatorSubscriber();
	function isEmpty() {
		return lift_1$36.operate(function(source, subscriber) {
			source.subscribe(OperatorSubscriber_1$31.createOperatorSubscriber(subscriber, function() {
				subscriber.next(false);
				subscriber.complete();
			}, function() {
				subscriber.next(true);
				subscriber.complete();
			}));
		});
	}
	exports.isEmpty = isEmpty;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/takeLast.js
var require_takeLast = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/takeLast.js"(exports) {
	var __values$2 = void 0 && (void 0).__values || function(o) {
		var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i$1 = 0;
		if (m) return m.call(o);
		if (o && typeof o.length === "number") return { next: function() {
			if (o && i$1 >= o.length) o = void 0;
			return {
				value: o && o[i$1++],
				done: !o
			};
		} };
		throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.takeLast = void 0;
	var empty_1$2 = require_empty();
	var lift_1$35 = require_lift();
	var OperatorSubscriber_1$30 = require_OperatorSubscriber();
	function takeLast(count$1) {
		return count$1 <= 0 ? function() {
			return empty_1$2.EMPTY;
		} : lift_1$35.operate(function(source, subscriber) {
			var buffer$1 = [];
			source.subscribe(OperatorSubscriber_1$30.createOperatorSubscriber(subscriber, function(value) {
				buffer$1.push(value);
				count$1 < buffer$1.length && buffer$1.shift();
			}, function() {
				var e_1, _a;
				try {
					for (var buffer_1$1 = __values$2(buffer$1), buffer_1_1 = buffer_1$1.next(); !buffer_1_1.done; buffer_1_1 = buffer_1$1.next()) {
						var value = buffer_1_1.value;
						subscriber.next(value);
					}
				} catch (e_1_1) {
					e_1 = { error: e_1_1 };
				} finally {
					try {
						if (buffer_1_1 && !buffer_1_1.done && (_a = buffer_1$1.return)) _a.call(buffer_1$1);
					} finally {
						if (e_1) throw e_1.error;
					}
				}
				subscriber.complete();
			}, void 0, function() {
				buffer$1 = null;
			}));
		});
	}
	exports.takeLast = takeLast;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/last.js
var require_last = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/last.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.last = void 0;
	var EmptyError_1$1 = require_EmptyError();
	var filter_1$3 = require_filter();
	var takeLast_1$1 = require_takeLast();
	var throwIfEmpty_1$1 = require_throwIfEmpty();
	var defaultIfEmpty_1$1 = require_defaultIfEmpty();
	var identity_1$6 = require_identity();
	function last(predicate, defaultValue) {
		var hasDefaultValue = arguments.length >= 2;
		return function(source) {
			return source.pipe(predicate ? filter_1$3.filter(function(v, i$1) {
				return predicate(v, i$1, source);
			}) : identity_1$6.identity, takeLast_1$1.takeLast(1), hasDefaultValue ? defaultIfEmpty_1$1.defaultIfEmpty(defaultValue) : throwIfEmpty_1$1.throwIfEmpty(function() {
				return new EmptyError_1$1.EmptyError();
			}));
		};
	}
	exports.last = last;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/materialize.js
var require_materialize = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/materialize.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.materialize = void 0;
	var Notification_1 = require_Notification();
	var lift_1$34 = require_lift();
	var OperatorSubscriber_1$29 = require_OperatorSubscriber();
	function materialize() {
		return lift_1$34.operate(function(source, subscriber) {
			source.subscribe(OperatorSubscriber_1$29.createOperatorSubscriber(subscriber, function(value) {
				subscriber.next(Notification_1.Notification.createNext(value));
			}, function() {
				subscriber.next(Notification_1.Notification.createComplete());
				subscriber.complete();
			}, function(err) {
				subscriber.next(Notification_1.Notification.createError(err));
				subscriber.complete();
			}));
		});
	}
	exports.materialize = materialize;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/max.js
var require_max = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/max.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.max = void 0;
	var reduce_1$2 = require_reduce();
	var isFunction_1$6 = require_isFunction();
	function max(comparer) {
		return reduce_1$2.reduce(isFunction_1$6.isFunction(comparer) ? function(x, y) {
			return comparer(x, y) > 0 ? x : y;
		} : function(x, y) {
			return x > y ? x : y;
		});
	}
	exports.max = max;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/merge.js
var require_merge = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/merge.js"(exports) {
	var __read$9 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$9 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.merge = void 0;
	var lift_1$33 = require_lift();
	var mergeAll_1$1 = require_mergeAll();
	var args_1$4 = require_args();
	var from_1 = require_from();
	function merge() {
		var args = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) args[_i$1] = arguments[_i$1];
		var scheduler = args_1$4.popScheduler(args);
		var concurrent = args_1$4.popNumber(args, Infinity);
		return lift_1$33.operate(function(source, subscriber) {
			mergeAll_1$1.mergeAll(concurrent)(from_1.from(__spreadArray$9([source], __read$9(args)), scheduler)).subscribe(subscriber);
		});
	}
	exports.merge = merge;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/flatMap.js
var require_flatMap = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/flatMap.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.flatMap = void 0;
	var mergeMap_1$2 = require_mergeMap();
	exports.flatMap = mergeMap_1$2.mergeMap;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeMapTo.js
var require_mergeMapTo = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeMapTo.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.mergeMapTo = void 0;
	var mergeMap_1$1 = require_mergeMap();
	var isFunction_1$5 = require_isFunction();
	function mergeMapTo(innerObservable, resultSelector, concurrent) {
		if (concurrent === void 0) concurrent = Infinity;
		if (isFunction_1$5.isFunction(resultSelector)) return mergeMap_1$1.mergeMap(function() {
			return innerObservable;
		}, resultSelector, concurrent);
		if (typeof resultSelector === "number") concurrent = resultSelector;
		return mergeMap_1$1.mergeMap(function() {
			return innerObservable;
		}, concurrent);
	}
	exports.mergeMapTo = mergeMapTo;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeScan.js
var require_mergeScan = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeScan.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.mergeScan = void 0;
	var lift_1$32 = require_lift();
	var mergeInternals_1 = require_mergeInternals();
	function mergeScan(accumulator, seed, concurrent) {
		if (concurrent === void 0) concurrent = Infinity;
		return lift_1$32.operate(function(source, subscriber) {
			var state = seed;
			return mergeInternals_1.mergeInternals(source, subscriber, function(value, index) {
				return accumulator(state, value, index);
			}, concurrent, function(value) {
				state = value;
			}, false, void 0, function() {
				return state = null;
			});
		});
	}
	exports.mergeScan = mergeScan;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeWith.js
var require_mergeWith = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/mergeWith.js"(exports) {
	var __read$8 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$8 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.mergeWith = void 0;
	var merge_1$1 = require_merge();
	function mergeWith() {
		var otherSources = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) otherSources[_i$1] = arguments[_i$1];
		return merge_1$1.merge.apply(void 0, __spreadArray$8([], __read$8(otherSources)));
	}
	exports.mergeWith = mergeWith;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/min.js
var require_min = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/min.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.min = void 0;
	var reduce_1$1 = require_reduce();
	var isFunction_1$4 = require_isFunction();
	function min(comparer) {
		return reduce_1$1.reduce(isFunction_1$4.isFunction(comparer) ? function(x, y) {
			return comparer(x, y) < 0 ? x : y;
		} : function(x, y) {
			return x < y ? x : y;
		});
	}
	exports.min = min;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/refCount.js
var require_refCount = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/refCount.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.refCount = void 0;
	var lift_1$31 = require_lift();
	var OperatorSubscriber_1$28 = require_OperatorSubscriber();
	function refCount() {
		return lift_1$31.operate(function(source, subscriber) {
			var connection = null;
			source._refCount++;
			var refCounter = OperatorSubscriber_1$28.createOperatorSubscriber(subscriber, void 0, void 0, void 0, function() {
				if (!source || source._refCount <= 0 || 0 < --source._refCount) {
					connection = null;
					return;
				}
				var sharedConnection = source._connection;
				var conn = connection;
				connection = null;
				if (sharedConnection && (!conn || sharedConnection === conn)) sharedConnection.unsubscribe();
				subscriber.unsubscribe();
			});
			source.subscribe(refCounter);
			if (!refCounter.closed) connection = source.connect();
		});
	}
	exports.refCount = refCount;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/ConnectableObservable.js
var require_ConnectableObservable = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/ConnectableObservable.js"(exports) {
	var __extends$3 = void 0 && (void 0).__extends || function() {
		var extendStatics = function(d, b) {
			extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d$1, b$1) {
				d$1.__proto__ = b$1;
			} || function(d$1, b$1) {
				for (var p in b$1) if (Object.prototype.hasOwnProperty.call(b$1, p)) d$1[p] = b$1[p];
			};
			return extendStatics(d, b);
		};
		return function(d, b) {
			if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		};
	}();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ConnectableObservable = void 0;
	var Observable_1$3 = require_Observable();
	var Subscription_1$2 = require_Subscription();
	var refCount_1$1 = require_refCount();
	var OperatorSubscriber_1$27 = require_OperatorSubscriber();
	var lift_1$30 = require_lift();
	var ConnectableObservable = function(_super) {
		__extends$3(ConnectableObservable$1, _super);
		function ConnectableObservable$1(source, subjectFactory) {
			var _this = _super.call(this) || this;
			_this.source = source;
			_this.subjectFactory = subjectFactory;
			_this._subject = null;
			_this._refCount = 0;
			_this._connection = null;
			if (lift_1$30.hasLift(source)) _this.lift = source.lift;
			return _this;
		}
		ConnectableObservable$1.prototype._subscribe = function(subscriber) {
			return this.getSubject().subscribe(subscriber);
		};
		ConnectableObservable$1.prototype.getSubject = function() {
			var subject = this._subject;
			if (!subject || subject.isStopped) this._subject = this.subjectFactory();
			return this._subject;
		};
		ConnectableObservable$1.prototype._teardown = function() {
			this._refCount = 0;
			var _connection = this._connection;
			this._subject = this._connection = null;
			_connection === null || _connection === void 0 || _connection.unsubscribe();
		};
		ConnectableObservable$1.prototype.connect = function() {
			var _this = this;
			var connection = this._connection;
			if (!connection) {
				connection = this._connection = new Subscription_1$2.Subscription();
				var subject_1 = this.getSubject();
				connection.add(this.source.subscribe(OperatorSubscriber_1$27.createOperatorSubscriber(subject_1, void 0, function() {
					_this._teardown();
					subject_1.complete();
				}, function(err) {
					_this._teardown();
					subject_1.error(err);
				}, function() {
					return _this._teardown();
				})));
				if (connection.closed) {
					this._connection = null;
					connection = Subscription_1$2.Subscription.EMPTY;
				}
			}
			return connection;
		};
		ConnectableObservable$1.prototype.refCount = function() {
			return refCount_1$1.refCount()(this);
		};
		return ConnectableObservable$1;
	}(Observable_1$3.Observable);
	exports.ConnectableObservable = ConnectableObservable;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/multicast.js
var require_multicast = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/multicast.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.multicast = void 0;
	var ConnectableObservable_1$2 = require_ConnectableObservable();
	var isFunction_1$3 = require_isFunction();
	var connect_1$2 = require_connect();
	function multicast(subjectOrSubjectFactory, selector) {
		var subjectFactory = isFunction_1$3.isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function() {
			return subjectOrSubjectFactory;
		};
		if (isFunction_1$3.isFunction(selector)) return connect_1$2.connect(selector, { connector: subjectFactory });
		return function(source) {
			return new ConnectableObservable_1$2.ConnectableObservable(source, subjectFactory);
		};
	}
	exports.multicast = multicast;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/onErrorResumeNext.js
var require_onErrorResumeNext = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/onErrorResumeNext.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.onErrorResumeNext = void 0;
	var Observable_1$2 = require_Observable();
	var argsOrArgArray_1$4 = require_argsOrArgArray();
	var OperatorSubscriber_1$26 = require_OperatorSubscriber();
	var noop_1$6 = require_noop();
	var innerFrom_1$18 = require_innerFrom();
	function onErrorResumeNext() {
		var sources = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) sources[_i$1] = arguments[_i$1];
		var nextSources = argsOrArgArray_1$4.argsOrArgArray(sources);
		return new Observable_1$2.Observable(function(subscriber) {
			var sourceIndex = 0;
			var subscribeNext = function() {
				if (sourceIndex < nextSources.length) {
					var nextSource = void 0;
					try {
						nextSource = innerFrom_1$18.innerFrom(nextSources[sourceIndex++]);
					} catch (err) {
						subscribeNext();
						return;
					}
					var innerSubscriber = new OperatorSubscriber_1$26.OperatorSubscriber(subscriber, void 0, noop_1$6.noop, noop_1$6.noop);
					nextSource.subscribe(innerSubscriber);
					innerSubscriber.add(subscribeNext);
				} else subscriber.complete();
			};
			subscribeNext();
		});
	}
	exports.onErrorResumeNext = onErrorResumeNext;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/onErrorResumeNextWith.js
var require_onErrorResumeNextWith = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/onErrorResumeNextWith.js"(exports) {
	var __read$7 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$7 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.onErrorResumeNext = exports.onErrorResumeNextWith = void 0;
	var argsOrArgArray_1$3 = require_argsOrArgArray();
	var onErrorResumeNext_1 = require_onErrorResumeNext();
	function onErrorResumeNextWith() {
		var sources = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) sources[_i$1] = arguments[_i$1];
		var nextSources = argsOrArgArray_1$3.argsOrArgArray(sources);
		return function(source) {
			return onErrorResumeNext_1.onErrorResumeNext.apply(void 0, __spreadArray$7([source], __read$7(nextSources)));
		};
	}
	exports.onErrorResumeNextWith = onErrorResumeNextWith;
	exports.onErrorResumeNext = onErrorResumeNextWith;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/pairwise.js
var require_pairwise = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/pairwise.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.pairwise = void 0;
	var lift_1$29 = require_lift();
	var OperatorSubscriber_1$25 = require_OperatorSubscriber();
	function pairwise() {
		return lift_1$29.operate(function(source, subscriber) {
			var prev;
			var hasPrev = false;
			source.subscribe(OperatorSubscriber_1$25.createOperatorSubscriber(subscriber, function(value) {
				var p = prev;
				prev = value;
				hasPrev && subscriber.next([p, value]);
				hasPrev = true;
			}));
		});
	}
	exports.pairwise = pairwise;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/not.js
var require_not = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/not.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.not = void 0;
	function not(pred, thisArg) {
		return function(value, index) {
			return !pred.call(thisArg, value, index);
		};
	}
	exports.not = not;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/partition.js
var require_partition = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/partition.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.partition = void 0;
	var not_1 = require_not();
	var filter_1$2 = require_filter();
	function partition(predicate, thisArg) {
		return function(source) {
			return [filter_1$2.filter(predicate, thisArg)(source), filter_1$2.filter(not_1.not(predicate, thisArg))(source)];
		};
	}
	exports.partition = partition;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/pluck.js
var require_pluck = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/pluck.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.pluck = void 0;
	var map_1$2 = require_map();
	function pluck() {
		var properties = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) properties[_i$1] = arguments[_i$1];
		var length$1 = properties.length;
		if (length$1 === 0) throw new Error("list of properties cannot be empty.");
		return map_1$2.map(function(x) {
			var currentProp = x;
			for (var i$1 = 0; i$1 < length$1; i$1++) {
				var p = currentProp === null || currentProp === void 0 ? void 0 : currentProp[properties[i$1]];
				if (typeof p !== "undefined") currentProp = p;
				else return void 0;
			}
			return currentProp;
		});
	}
	exports.pluck = pluck;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/publish.js
var require_publish = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/publish.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.publish = void 0;
	var Subject_1$11 = require_Subject();
	var multicast_1$2 = require_multicast();
	var connect_1$1 = require_connect();
	function publish(selector) {
		return selector ? function(source) {
			return connect_1$1.connect(selector)(source);
		} : function(source) {
			return multicast_1$2.multicast(new Subject_1$11.Subject())(source);
		};
	}
	exports.publish = publish;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/BehaviorSubject.js
var require_BehaviorSubject = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/BehaviorSubject.js"(exports) {
	var __extends$2 = void 0 && (void 0).__extends || function() {
		var extendStatics = function(d, b) {
			extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d$1, b$1) {
				d$1.__proto__ = b$1;
			} || function(d$1, b$1) {
				for (var p in b$1) if (Object.prototype.hasOwnProperty.call(b$1, p)) d$1[p] = b$1[p];
			};
			return extendStatics(d, b);
		};
		return function(d, b) {
			if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		};
	}();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.BehaviorSubject = void 0;
	var Subject_1$10 = require_Subject();
	var BehaviorSubject = function(_super) {
		__extends$2(BehaviorSubject$1, _super);
		function BehaviorSubject$1(_value) {
			var _this = _super.call(this) || this;
			_this._value = _value;
			return _this;
		}
		Object.defineProperty(BehaviorSubject$1.prototype, "value", {
			get: function() {
				return this.getValue();
			},
			enumerable: false,
			configurable: true
		});
		BehaviorSubject$1.prototype._subscribe = function(subscriber) {
			var subscription = _super.prototype._subscribe.call(this, subscriber);
			!subscription.closed && subscriber.next(this._value);
			return subscription;
		};
		BehaviorSubject$1.prototype.getValue = function() {
			var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, _value = _a._value;
			if (hasError) throw thrownError;
			this._throwIfClosed();
			return _value;
		};
		BehaviorSubject$1.prototype.next = function(value) {
			_super.prototype.next.call(this, this._value = value);
		};
		return BehaviorSubject$1;
	}(Subject_1$10.Subject);
	exports.BehaviorSubject = BehaviorSubject;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/publishBehavior.js
var require_publishBehavior = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/publishBehavior.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.publishBehavior = void 0;
	var BehaviorSubject_1 = require_BehaviorSubject();
	var ConnectableObservable_1$1 = require_ConnectableObservable();
	function publishBehavior(initialValue) {
		return function(source) {
			var subject = new BehaviorSubject_1.BehaviorSubject(initialValue);
			return new ConnectableObservable_1$1.ConnectableObservable(source, function() {
				return subject;
			});
		};
	}
	exports.publishBehavior = publishBehavior;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/AsyncSubject.js
var require_AsyncSubject = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/AsyncSubject.js"(exports) {
	var __extends$1 = void 0 && (void 0).__extends || function() {
		var extendStatics = function(d, b) {
			extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d$1, b$1) {
				d$1.__proto__ = b$1;
			} || function(d$1, b$1) {
				for (var p in b$1) if (Object.prototype.hasOwnProperty.call(b$1, p)) d$1[p] = b$1[p];
			};
			return extendStatics(d, b);
		};
		return function(d, b) {
			if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		};
	}();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.AsyncSubject = void 0;
	var Subject_1$9 = require_Subject();
	var AsyncSubject = function(_super) {
		__extends$1(AsyncSubject$1, _super);
		function AsyncSubject$1() {
			var _this = _super !== null && _super.apply(this, arguments) || this;
			_this._value = null;
			_this._hasValue = false;
			_this._isComplete = false;
			return _this;
		}
		AsyncSubject$1.prototype._checkFinalizedStatuses = function(subscriber) {
			var _a = this, hasError = _a.hasError, _hasValue = _a._hasValue, _value = _a._value, thrownError = _a.thrownError, isStopped = _a.isStopped, _isComplete = _a._isComplete;
			if (hasError) subscriber.error(thrownError);
			else if (isStopped || _isComplete) {
				_hasValue && subscriber.next(_value);
				subscriber.complete();
			}
		};
		AsyncSubject$1.prototype.next = function(value) {
			if (!this.isStopped) {
				this._value = value;
				this._hasValue = true;
			}
		};
		AsyncSubject$1.prototype.complete = function() {
			var _a = this, _hasValue = _a._hasValue, _value = _a._value, _isComplete = _a._isComplete;
			if (!_isComplete) {
				this._isComplete = true;
				_hasValue && _super.prototype.next.call(this, _value);
				_super.prototype.complete.call(this);
			}
		};
		return AsyncSubject$1;
	}(Subject_1$9.Subject);
	exports.AsyncSubject = AsyncSubject;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/publishLast.js
var require_publishLast = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/publishLast.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.publishLast = void 0;
	var AsyncSubject_1 = require_AsyncSubject();
	var ConnectableObservable_1 = require_ConnectableObservable();
	function publishLast() {
		return function(source) {
			var subject = new AsyncSubject_1.AsyncSubject();
			return new ConnectableObservable_1.ConnectableObservable(source, function() {
				return subject;
			});
		};
	}
	exports.publishLast = publishLast;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/ReplaySubject.js
var require_ReplaySubject = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/ReplaySubject.js"(exports) {
	var __extends = void 0 && (void 0).__extends || function() {
		var extendStatics = function(d, b) {
			extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d$1, b$1) {
				d$1.__proto__ = b$1;
			} || function(d$1, b$1) {
				for (var p in b$1) if (Object.prototype.hasOwnProperty.call(b$1, p)) d$1[p] = b$1[p];
			};
			return extendStatics(d, b);
		};
		return function(d, b) {
			if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		};
	}();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ReplaySubject = void 0;
	var Subject_1$8 = require_Subject();
	var dateTimestampProvider_1$1 = require_dateTimestampProvider();
	var ReplaySubject = function(_super) {
		__extends(ReplaySubject$1, _super);
		function ReplaySubject$1(_bufferSize, _windowTime, _timestampProvider) {
			if (_bufferSize === void 0) _bufferSize = Infinity;
			if (_windowTime === void 0) _windowTime = Infinity;
			if (_timestampProvider === void 0) _timestampProvider = dateTimestampProvider_1$1.dateTimestampProvider;
			var _this = _super.call(this) || this;
			_this._bufferSize = _bufferSize;
			_this._windowTime = _windowTime;
			_this._timestampProvider = _timestampProvider;
			_this._buffer = [];
			_this._infiniteTimeWindow = true;
			_this._infiniteTimeWindow = _windowTime === Infinity;
			_this._bufferSize = Math.max(1, _bufferSize);
			_this._windowTime = Math.max(1, _windowTime);
			return _this;
		}
		ReplaySubject$1.prototype.next = function(value) {
			var _a = this, isStopped = _a.isStopped, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow, _timestampProvider = _a._timestampProvider, _windowTime = _a._windowTime;
			if (!isStopped) {
				_buffer.push(value);
				!_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);
			}
			this._trimBuffer();
			_super.prototype.next.call(this, value);
		};
		ReplaySubject$1.prototype._subscribe = function(subscriber) {
			this._throwIfClosed();
			this._trimBuffer();
			var subscription = this._innerSubscribe(subscriber);
			var _a = this, _infiniteTimeWindow = _a._infiniteTimeWindow, _buffer = _a._buffer;
			var copy = _buffer.slice();
			for (var i$1 = 0; i$1 < copy.length && !subscriber.closed; i$1 += _infiniteTimeWindow ? 1 : 2) subscriber.next(copy[i$1]);
			this._checkFinalizedStatuses(subscriber);
			return subscription;
		};
		ReplaySubject$1.prototype._trimBuffer = function() {
			var _a = this, _bufferSize = _a._bufferSize, _timestampProvider = _a._timestampProvider, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow;
			var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;
			_bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);
			if (!_infiniteTimeWindow) {
				var now = _timestampProvider.now();
				var last$2 = 0;
				for (var i$1 = 1; i$1 < _buffer.length && _buffer[i$1] <= now; i$1 += 2) last$2 = i$1;
				last$2 && _buffer.splice(0, last$2 + 1);
			}
		};
		return ReplaySubject$1;
	}(Subject_1$8.Subject);
	exports.ReplaySubject = ReplaySubject;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/publishReplay.js
var require_publishReplay = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/publishReplay.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.publishReplay = void 0;
	var ReplaySubject_1$1 = require_ReplaySubject();
	var multicast_1$1 = require_multicast();
	var isFunction_1$2 = require_isFunction();
	function publishReplay(bufferSize, windowTime$1, selectorOrScheduler, timestampProvider) {
		if (selectorOrScheduler && !isFunction_1$2.isFunction(selectorOrScheduler)) timestampProvider = selectorOrScheduler;
		var selector = isFunction_1$2.isFunction(selectorOrScheduler) ? selectorOrScheduler : void 0;
		return function(source) {
			return multicast_1$1.multicast(new ReplaySubject_1$1.ReplaySubject(bufferSize, windowTime$1, timestampProvider), selector)(source);
		};
	}
	exports.publishReplay = publishReplay;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/race.js
var require_race$1 = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/race.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.raceInit = exports.race = void 0;
	var Observable_1$1 = require_Observable();
	var innerFrom_1$17 = require_innerFrom();
	var argsOrArgArray_1$2 = require_argsOrArgArray();
	var OperatorSubscriber_1$24 = require_OperatorSubscriber();
	function race$1() {
		var sources = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) sources[_i$1] = arguments[_i$1];
		sources = argsOrArgArray_1$2.argsOrArgArray(sources);
		return sources.length === 1 ? innerFrom_1$17.innerFrom(sources[0]) : new Observable_1$1.Observable(raceInit(sources));
	}
	exports.race = race$1;
	function raceInit(sources) {
		return function(subscriber) {
			var subscriptions = [];
			var _loop_1 = function(i$2) {
				subscriptions.push(innerFrom_1$17.innerFrom(sources[i$2]).subscribe(OperatorSubscriber_1$24.createOperatorSubscriber(subscriber, function(value) {
					if (subscriptions) {
						for (var s = 0; s < subscriptions.length; s++) s !== i$2 && subscriptions[s].unsubscribe();
						subscriptions = null;
					}
					subscriber.next(value);
				})));
			};
			for (var i$1 = 0; subscriptions && !subscriber.closed && i$1 < sources.length; i$1++) _loop_1(i$1);
		};
	}
	exports.raceInit = raceInit;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/raceWith.js
var require_raceWith = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/raceWith.js"(exports) {
	var __read$6 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$6 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.raceWith = void 0;
	var race_1$1 = require_race$1();
	var lift_1$28 = require_lift();
	var identity_1$5 = require_identity();
	function raceWith() {
		var otherSources = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) otherSources[_i$1] = arguments[_i$1];
		return !otherSources.length ? identity_1$5.identity : lift_1$28.operate(function(source, subscriber) {
			race_1$1.raceInit(__spreadArray$6([source], __read$6(otherSources)))(subscriber);
		});
	}
	exports.raceWith = raceWith;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/race.js
var require_race = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/race.js"(exports) {
	var __read$5 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$5 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.race = void 0;
	var argsOrArgArray_1$1 = require_argsOrArgArray();
	var raceWith_1$1 = require_raceWith();
	function race() {
		var args = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) args[_i$1] = arguments[_i$1];
		return raceWith_1$1.raceWith.apply(void 0, __spreadArray$5([], __read$5(argsOrArgArray_1$1.argsOrArgArray(args))));
	}
	exports.race = race;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/repeat.js
var require_repeat = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/repeat.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.repeat = void 0;
	var empty_1$1 = require_empty();
	var lift_1$27 = require_lift();
	var OperatorSubscriber_1$23 = require_OperatorSubscriber();
	var innerFrom_1$16 = require_innerFrom();
	var timer_1$3 = require_timer();
	function repeat(countOrConfig) {
		var _a;
		var count$1 = Infinity;
		var delay$1;
		if (countOrConfig != null) if (typeof countOrConfig === "object") _a = countOrConfig.count, count$1 = _a === void 0 ? Infinity : _a, delay$1 = countOrConfig.delay;
		else count$1 = countOrConfig;
		return count$1 <= 0 ? function() {
			return empty_1$1.EMPTY;
		} : lift_1$27.operate(function(source, subscriber) {
			var soFar = 0;
			var sourceSub;
			var resubscribe = function() {
				sourceSub === null || sourceSub === void 0 || sourceSub.unsubscribe();
				sourceSub = null;
				if (delay$1 != null) {
					var notifier = typeof delay$1 === "number" ? timer_1$3.timer(delay$1) : innerFrom_1$16.innerFrom(delay$1(soFar));
					var notifierSubscriber_1 = OperatorSubscriber_1$23.createOperatorSubscriber(subscriber, function() {
						notifierSubscriber_1.unsubscribe();
						subscribeToSource();
					});
					notifier.subscribe(notifierSubscriber_1);
				} else subscribeToSource();
			};
			var subscribeToSource = function() {
				var syncUnsub = false;
				sourceSub = source.subscribe(OperatorSubscriber_1$23.createOperatorSubscriber(subscriber, void 0, function() {
					if (++soFar < count$1) if (sourceSub) resubscribe();
					else syncUnsub = true;
					else subscriber.complete();
				}));
				if (syncUnsub) resubscribe();
			};
			subscribeToSource();
		});
	}
	exports.repeat = repeat;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/repeatWhen.js
var require_repeatWhen = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/repeatWhen.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.repeatWhen = void 0;
	var innerFrom_1$15 = require_innerFrom();
	var Subject_1$7 = require_Subject();
	var lift_1$26 = require_lift();
	var OperatorSubscriber_1$22 = require_OperatorSubscriber();
	function repeatWhen(notifier) {
		return lift_1$26.operate(function(source, subscriber) {
			var innerSub;
			var syncResub = false;
			var completions$;
			var isNotifierComplete = false;
			var isMainComplete = false;
			var checkComplete = function() {
				return isMainComplete && isNotifierComplete && (subscriber.complete(), true);
			};
			var getCompletionSubject = function() {
				if (!completions$) {
					completions$ = new Subject_1$7.Subject();
					innerFrom_1$15.innerFrom(notifier(completions$)).subscribe(OperatorSubscriber_1$22.createOperatorSubscriber(subscriber, function() {
						if (innerSub) subscribeForRepeatWhen();
						else syncResub = true;
					}, function() {
						isNotifierComplete = true;
						checkComplete();
					}));
				}
				return completions$;
			};
			var subscribeForRepeatWhen = function() {
				isMainComplete = false;
				innerSub = source.subscribe(OperatorSubscriber_1$22.createOperatorSubscriber(subscriber, void 0, function() {
					isMainComplete = true;
					!checkComplete() && getCompletionSubject().next();
				}));
				if (syncResub) {
					innerSub.unsubscribe();
					innerSub = null;
					syncResub = false;
					subscribeForRepeatWhen();
				}
			};
			subscribeForRepeatWhen();
		});
	}
	exports.repeatWhen = repeatWhen;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/retry.js
var require_retry = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/retry.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.retry = void 0;
	var lift_1$25 = require_lift();
	var OperatorSubscriber_1$21 = require_OperatorSubscriber();
	var identity_1$4 = require_identity();
	var timer_1$2 = require_timer();
	var innerFrom_1$14 = require_innerFrom();
	function retry(configOrCount) {
		if (configOrCount === void 0) configOrCount = Infinity;
		var config;
		if (configOrCount && typeof configOrCount === "object") config = configOrCount;
		else config = { count: configOrCount };
		var _a = config.count, count$1 = _a === void 0 ? Infinity : _a, delay$1 = config.delay, _b = config.resetOnSuccess, resetOnSuccess = _b === void 0 ? false : _b;
		return count$1 <= 0 ? identity_1$4.identity : lift_1$25.operate(function(source, subscriber) {
			var soFar = 0;
			var innerSub;
			var subscribeForRetry = function() {
				var syncUnsub = false;
				innerSub = source.subscribe(OperatorSubscriber_1$21.createOperatorSubscriber(subscriber, function(value) {
					if (resetOnSuccess) soFar = 0;
					subscriber.next(value);
				}, void 0, function(err) {
					if (soFar++ < count$1) {
						var resub_1 = function() {
							if (innerSub) {
								innerSub.unsubscribe();
								innerSub = null;
								subscribeForRetry();
							} else syncUnsub = true;
						};
						if (delay$1 != null) {
							var notifier = typeof delay$1 === "number" ? timer_1$2.timer(delay$1) : innerFrom_1$14.innerFrom(delay$1(err, soFar));
							var notifierSubscriber_1 = OperatorSubscriber_1$21.createOperatorSubscriber(subscriber, function() {
								notifierSubscriber_1.unsubscribe();
								resub_1();
							}, function() {
								subscriber.complete();
							});
							notifier.subscribe(notifierSubscriber_1);
						} else resub_1();
					} else subscriber.error(err);
				}));
				if (syncUnsub) {
					innerSub.unsubscribe();
					innerSub = null;
					subscribeForRetry();
				}
			};
			subscribeForRetry();
		});
	}
	exports.retry = retry;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/retryWhen.js
var require_retryWhen = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/retryWhen.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.retryWhen = void 0;
	var innerFrom_1$13 = require_innerFrom();
	var Subject_1$6 = require_Subject();
	var lift_1$24 = require_lift();
	var OperatorSubscriber_1$20 = require_OperatorSubscriber();
	function retryWhen(notifier) {
		return lift_1$24.operate(function(source, subscriber) {
			var innerSub;
			var syncResub = false;
			var errors$;
			var subscribeForRetryWhen = function() {
				innerSub = source.subscribe(OperatorSubscriber_1$20.createOperatorSubscriber(subscriber, void 0, void 0, function(err) {
					if (!errors$) {
						errors$ = new Subject_1$6.Subject();
						innerFrom_1$13.innerFrom(notifier(errors$)).subscribe(OperatorSubscriber_1$20.createOperatorSubscriber(subscriber, function() {
							return innerSub ? subscribeForRetryWhen() : syncResub = true;
						}));
					}
					if (errors$) errors$.next(err);
				}));
				if (syncResub) {
					innerSub.unsubscribe();
					innerSub = null;
					syncResub = false;
					subscribeForRetryWhen();
				}
			};
			subscribeForRetryWhen();
		});
	}
	exports.retryWhen = retryWhen;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/sample.js
var require_sample = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/sample.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.sample = void 0;
	var innerFrom_1$12 = require_innerFrom();
	var lift_1$23 = require_lift();
	var noop_1$5 = require_noop();
	var OperatorSubscriber_1$19 = require_OperatorSubscriber();
	function sample(notifier) {
		return lift_1$23.operate(function(source, subscriber) {
			var hasValue = false;
			var lastValue = null;
			source.subscribe(OperatorSubscriber_1$19.createOperatorSubscriber(subscriber, function(value) {
				hasValue = true;
				lastValue = value;
			}));
			innerFrom_1$12.innerFrom(notifier).subscribe(OperatorSubscriber_1$19.createOperatorSubscriber(subscriber, function() {
				if (hasValue) {
					hasValue = false;
					var value = lastValue;
					lastValue = null;
					subscriber.next(value);
				}
			}, noop_1$5.noop));
		});
	}
	exports.sample = sample;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/interval.js
var require_interval = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/interval.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.interval = void 0;
	var async_1$6 = require_async();
	var timer_1$1 = require_timer();
	function interval(period, scheduler) {
		if (period === void 0) period = 0;
		if (scheduler === void 0) scheduler = async_1$6.asyncScheduler;
		if (period < 0) period = 0;
		return timer_1$1.timer(period, period, scheduler);
	}
	exports.interval = interval;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/sampleTime.js
var require_sampleTime = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/sampleTime.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.sampleTime = void 0;
	var async_1$5 = require_async();
	var sample_1$1 = require_sample();
	var interval_1 = require_interval();
	function sampleTime(period, scheduler) {
		if (scheduler === void 0) scheduler = async_1$5.asyncScheduler;
		return sample_1$1.sample(interval_1.interval(period, scheduler));
	}
	exports.sampleTime = sampleTime;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/scan.js
var require_scan = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/scan.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.scan = void 0;
	var lift_1$22 = require_lift();
	var scanInternals_1 = require_scanInternals();
	function scan(accumulator, seed) {
		return lift_1$22.operate(scanInternals_1.scanInternals(accumulator, seed, arguments.length >= 2, true));
	}
	exports.scan = scan;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/sequenceEqual.js
var require_sequenceEqual = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/sequenceEqual.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.sequenceEqual = void 0;
	var lift_1$21 = require_lift();
	var OperatorSubscriber_1$18 = require_OperatorSubscriber();
	var innerFrom_1$11 = require_innerFrom();
	function sequenceEqual(compareTo, comparator) {
		if (comparator === void 0) comparator = function(a, b) {
			return a === b;
		};
		return lift_1$21.operate(function(source, subscriber) {
			var aState = createState();
			var bState = createState();
			var emit = function(isEqual) {
				subscriber.next(isEqual);
				subscriber.complete();
			};
			var createSubscriber = function(selfState, otherState) {
				var sequenceEqualSubscriber = OperatorSubscriber_1$18.createOperatorSubscriber(subscriber, function(a) {
					var buffer$1 = otherState.buffer, complete = otherState.complete;
					if (buffer$1.length === 0) complete ? emit(false) : selfState.buffer.push(a);
					else !comparator(a, buffer$1.shift()) && emit(false);
				}, function() {
					selfState.complete = true;
					var complete = otherState.complete, buffer$1 = otherState.buffer;
					complete && emit(buffer$1.length === 0);
					sequenceEqualSubscriber === null || sequenceEqualSubscriber === void 0 || sequenceEqualSubscriber.unsubscribe();
				});
				return sequenceEqualSubscriber;
			};
			source.subscribe(createSubscriber(aState, bState));
			innerFrom_1$11.innerFrom(compareTo).subscribe(createSubscriber(bState, aState));
		});
	}
	exports.sequenceEqual = sequenceEqual;
	function createState() {
		return {
			buffer: [],
			complete: false
		};
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/share.js
var require_share = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/share.js"(exports) {
	var __read$4 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$4 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.share = void 0;
	var innerFrom_1$10 = require_innerFrom();
	var Subject_1$5 = require_Subject();
	var Subscriber_1 = require_Subscriber();
	var lift_1$20 = require_lift();
	function share(options) {
		if (options === void 0) options = {};
		var _a = options.connector, connector = _a === void 0 ? function() {
			return new Subject_1$5.Subject();
		} : _a, _b = options.resetOnError, resetOnError = _b === void 0 ? true : _b, _c = options.resetOnComplete, resetOnComplete = _c === void 0 ? true : _c, _d = options.resetOnRefCountZero, resetOnRefCountZero = _d === void 0 ? true : _d;
		return function(wrapperSource) {
			var connection;
			var resetConnection;
			var subject;
			var refCount$1 = 0;
			var hasCompleted = false;
			var hasErrored = false;
			var cancelReset = function() {
				resetConnection === null || resetConnection === void 0 || resetConnection.unsubscribe();
				resetConnection = void 0;
			};
			var reset = function() {
				cancelReset();
				connection = subject = void 0;
				hasCompleted = hasErrored = false;
			};
			var resetAndUnsubscribe = function() {
				var conn = connection;
				reset();
				conn === null || conn === void 0 || conn.unsubscribe();
			};
			return lift_1$20.operate(function(source, subscriber) {
				refCount$1++;
				if (!hasErrored && !hasCompleted) cancelReset();
				var dest = subject = subject !== null && subject !== void 0 ? subject : connector();
				subscriber.add(function() {
					refCount$1--;
					if (refCount$1 === 0 && !hasErrored && !hasCompleted) resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);
				});
				dest.subscribe(subscriber);
				if (!connection && refCount$1 > 0) {
					connection = new Subscriber_1.SafeSubscriber({
						next: function(value) {
							return dest.next(value);
						},
						error: function(err) {
							hasErrored = true;
							cancelReset();
							resetConnection = handleReset(reset, resetOnError, err);
							dest.error(err);
						},
						complete: function() {
							hasCompleted = true;
							cancelReset();
							resetConnection = handleReset(reset, resetOnComplete);
							dest.complete();
						}
					});
					innerFrom_1$10.innerFrom(source).subscribe(connection);
				}
			})(wrapperSource);
		};
	}
	exports.share = share;
	function handleReset(reset, on) {
		var args = [];
		for (var _i$1 = 2; _i$1 < arguments.length; _i$1++) args[_i$1 - 2] = arguments[_i$1];
		if (on === true) {
			reset();
			return;
		}
		if (on === false) return;
		var onSubscriber = new Subscriber_1.SafeSubscriber({ next: function() {
			onSubscriber.unsubscribe();
			reset();
		} });
		return innerFrom_1$10.innerFrom(on.apply(void 0, __spreadArray$4([], __read$4(args)))).subscribe(onSubscriber);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/shareReplay.js
var require_shareReplay = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/shareReplay.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.shareReplay = void 0;
	var ReplaySubject_1 = require_ReplaySubject();
	var share_1$1 = require_share();
	function shareReplay(configOrBufferSize, windowTime$1, scheduler) {
		var _a, _b, _c;
		var bufferSize;
		var refCount$1 = false;
		if (configOrBufferSize && typeof configOrBufferSize === "object") _a = configOrBufferSize.bufferSize, bufferSize = _a === void 0 ? Infinity : _a, _b = configOrBufferSize.windowTime, windowTime$1 = _b === void 0 ? Infinity : _b, _c = configOrBufferSize.refCount, refCount$1 = _c === void 0 ? false : _c, scheduler = configOrBufferSize.scheduler;
		else bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;
		return share_1$1.share({
			connector: function() {
				return new ReplaySubject_1.ReplaySubject(bufferSize, windowTime$1, scheduler);
			},
			resetOnError: true,
			resetOnComplete: false,
			resetOnRefCountZero: refCount$1
		});
	}
	exports.shareReplay = shareReplay;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/SequenceError.js
var require_SequenceError = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/SequenceError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.SequenceError = void 0;
	var createErrorClass_1$2 = require_createErrorClass();
	exports.SequenceError = createErrorClass_1$2.createErrorClass(function(_super) {
		return function SequenceErrorImpl(message) {
			_super(this);
			this.name = "SequenceError";
			this.message = message;
		};
	});
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/NotFoundError.js
var require_NotFoundError = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/util/NotFoundError.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.NotFoundError = void 0;
	var createErrorClass_1$1 = require_createErrorClass();
	exports.NotFoundError = createErrorClass_1$1.createErrorClass(function(_super) {
		return function NotFoundErrorImpl(message) {
			_super(this);
			this.name = "NotFoundError";
			this.message = message;
		};
	});
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/single.js
var require_single = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/single.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.single = void 0;
	var EmptyError_1 = require_EmptyError();
	var SequenceError_1 = require_SequenceError();
	var NotFoundError_1 = require_NotFoundError();
	var lift_1$19 = require_lift();
	var OperatorSubscriber_1$17 = require_OperatorSubscriber();
	function single(predicate) {
		return lift_1$19.operate(function(source, subscriber) {
			var hasValue = false;
			var singleValue;
			var seenValue = false;
			var index = 0;
			source.subscribe(OperatorSubscriber_1$17.createOperatorSubscriber(subscriber, function(value) {
				seenValue = true;
				if (!predicate || predicate(value, index++, source)) {
					hasValue && subscriber.error(new SequenceError_1.SequenceError("Too many matching values"));
					hasValue = true;
					singleValue = value;
				}
			}, function() {
				if (hasValue) {
					subscriber.next(singleValue);
					subscriber.complete();
				} else subscriber.error(seenValue ? new NotFoundError_1.NotFoundError("No matching values") : new EmptyError_1.EmptyError());
			}));
		});
	}
	exports.single = single;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/skip.js
var require_skip = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/skip.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.skip = void 0;
	var filter_1$1 = require_filter();
	function skip(count$1) {
		return filter_1$1.filter(function(_, index) {
			return count$1 <= index;
		});
	}
	exports.skip = skip;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/skipLast.js
var require_skipLast = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/skipLast.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.skipLast = void 0;
	var identity_1$3 = require_identity();
	var lift_1$18 = require_lift();
	var OperatorSubscriber_1$16 = require_OperatorSubscriber();
	function skipLast(skipCount) {
		return skipCount <= 0 ? identity_1$3.identity : lift_1$18.operate(function(source, subscriber) {
			var ring = new Array(skipCount);
			var seen = 0;
			source.subscribe(OperatorSubscriber_1$16.createOperatorSubscriber(subscriber, function(value) {
				var valueIndex = seen++;
				if (valueIndex < skipCount) ring[valueIndex] = value;
				else {
					var index = valueIndex % skipCount;
					var oldValue = ring[index];
					ring[index] = value;
					subscriber.next(oldValue);
				}
			}));
			return function() {
				ring = null;
			};
		});
	}
	exports.skipLast = skipLast;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/skipUntil.js
var require_skipUntil = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/skipUntil.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.skipUntil = void 0;
	var lift_1$17 = require_lift();
	var OperatorSubscriber_1$15 = require_OperatorSubscriber();
	var innerFrom_1$9 = require_innerFrom();
	var noop_1$4 = require_noop();
	function skipUntil(notifier) {
		return lift_1$17.operate(function(source, subscriber) {
			var taking = false;
			var skipSubscriber = OperatorSubscriber_1$15.createOperatorSubscriber(subscriber, function() {
				skipSubscriber === null || skipSubscriber === void 0 || skipSubscriber.unsubscribe();
				taking = true;
			}, noop_1$4.noop);
			innerFrom_1$9.innerFrom(notifier).subscribe(skipSubscriber);
			source.subscribe(OperatorSubscriber_1$15.createOperatorSubscriber(subscriber, function(value) {
				return taking && subscriber.next(value);
			}));
		});
	}
	exports.skipUntil = skipUntil;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/skipWhile.js
var require_skipWhile = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/skipWhile.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.skipWhile = void 0;
	var lift_1$16 = require_lift();
	var OperatorSubscriber_1$14 = require_OperatorSubscriber();
	function skipWhile(predicate) {
		return lift_1$16.operate(function(source, subscriber) {
			var taking = false;
			var index = 0;
			source.subscribe(OperatorSubscriber_1$14.createOperatorSubscriber(subscriber, function(value) {
				return (taking || (taking = !predicate(value, index++))) && subscriber.next(value);
			}));
		});
	}
	exports.skipWhile = skipWhile;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/startWith.js
var require_startWith = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/startWith.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.startWith = void 0;
	var concat_1$1 = require_concat();
	var args_1$3 = require_args();
	var lift_1$15 = require_lift();
	function startWith() {
		var values = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) values[_i$1] = arguments[_i$1];
		var scheduler = args_1$3.popScheduler(values);
		return lift_1$15.operate(function(source, subscriber) {
			(scheduler ? concat_1$1.concat(values, source, scheduler) : concat_1$1.concat(values, source)).subscribe(subscriber);
		});
	}
	exports.startWith = startWith;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/switchMap.js
var require_switchMap = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/switchMap.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.switchMap = void 0;
	var innerFrom_1$8 = require_innerFrom();
	var lift_1$14 = require_lift();
	var OperatorSubscriber_1$13 = require_OperatorSubscriber();
	function switchMap(project, resultSelector) {
		return lift_1$14.operate(function(source, subscriber) {
			var innerSubscriber = null;
			var index = 0;
			var isComplete = false;
			var checkComplete = function() {
				return isComplete && !innerSubscriber && subscriber.complete();
			};
			source.subscribe(OperatorSubscriber_1$13.createOperatorSubscriber(subscriber, function(value) {
				innerSubscriber === null || innerSubscriber === void 0 || innerSubscriber.unsubscribe();
				var innerIndex = 0;
				var outerIndex = index++;
				innerFrom_1$8.innerFrom(project(value, outerIndex)).subscribe(innerSubscriber = OperatorSubscriber_1$13.createOperatorSubscriber(subscriber, function(innerValue) {
					return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue);
				}, function() {
					innerSubscriber = null;
					checkComplete();
				}));
			}, function() {
				isComplete = true;
				checkComplete();
			}));
		});
	}
	exports.switchMap = switchMap;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/switchAll.js
var require_switchAll = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/switchAll.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.switchAll = void 0;
	var switchMap_1$3 = require_switchMap();
	var identity_1$2 = require_identity();
	function switchAll() {
		return switchMap_1$3.switchMap(identity_1$2.identity);
	}
	exports.switchAll = switchAll;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/switchMapTo.js
var require_switchMapTo = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/switchMapTo.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.switchMapTo = void 0;
	var switchMap_1$2 = require_switchMap();
	var isFunction_1$1 = require_isFunction();
	function switchMapTo(innerObservable, resultSelector) {
		return isFunction_1$1.isFunction(resultSelector) ? switchMap_1$2.switchMap(function() {
			return innerObservable;
		}, resultSelector) : switchMap_1$2.switchMap(function() {
			return innerObservable;
		});
	}
	exports.switchMapTo = switchMapTo;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/switchScan.js
var require_switchScan = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/switchScan.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.switchScan = void 0;
	var switchMap_1$1 = require_switchMap();
	var lift_1$13 = require_lift();
	function switchScan(accumulator, seed) {
		return lift_1$13.operate(function(source, subscriber) {
			var state = seed;
			switchMap_1$1.switchMap(function(value, index) {
				return accumulator(state, value, index);
			}, function(_, innerValue) {
				return state = innerValue, innerValue;
			})(source).subscribe(subscriber);
			return function() {
				state = null;
			};
		});
	}
	exports.switchScan = switchScan;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/takeUntil.js
var require_takeUntil = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/takeUntil.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.takeUntil = void 0;
	var lift_1$12 = require_lift();
	var OperatorSubscriber_1$12 = require_OperatorSubscriber();
	var innerFrom_1$7 = require_innerFrom();
	var noop_1$3 = require_noop();
	function takeUntil(notifier) {
		return lift_1$12.operate(function(source, subscriber) {
			innerFrom_1$7.innerFrom(notifier).subscribe(OperatorSubscriber_1$12.createOperatorSubscriber(subscriber, function() {
				return subscriber.complete();
			}, noop_1$3.noop));
			!subscriber.closed && source.subscribe(subscriber);
		});
	}
	exports.takeUntil = takeUntil;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/takeWhile.js
var require_takeWhile = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/takeWhile.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.takeWhile = void 0;
	var lift_1$11 = require_lift();
	var OperatorSubscriber_1$11 = require_OperatorSubscriber();
	function takeWhile(predicate, inclusive) {
		if (inclusive === void 0) inclusive = false;
		return lift_1$11.operate(function(source, subscriber) {
			var index = 0;
			source.subscribe(OperatorSubscriber_1$11.createOperatorSubscriber(subscriber, function(value) {
				var result$1 = predicate(value, index++);
				(result$1 || inclusive) && subscriber.next(value);
				!result$1 && subscriber.complete();
			}));
		});
	}
	exports.takeWhile = takeWhile;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/tap.js
var require_tap = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/tap.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.tap = void 0;
	var isFunction_1 = require_isFunction();
	var lift_1$10 = require_lift();
	var OperatorSubscriber_1$10 = require_OperatorSubscriber();
	var identity_1$1 = require_identity();
	function tap(observerOrNext, error, complete) {
		var tapObserver = isFunction_1.isFunction(observerOrNext) || error || complete ? {
			next: observerOrNext,
			error,
			complete
		} : observerOrNext;
		return tapObserver ? lift_1$10.operate(function(source, subscriber) {
			var _a;
			(_a = tapObserver.subscribe) === null || _a === void 0 || _a.call(tapObserver);
			var isUnsub = true;
			source.subscribe(OperatorSubscriber_1$10.createOperatorSubscriber(subscriber, function(value) {
				var _a$1;
				(_a$1 = tapObserver.next) === null || _a$1 === void 0 || _a$1.call(tapObserver, value);
				subscriber.next(value);
			}, function() {
				var _a$1;
				isUnsub = false;
				(_a$1 = tapObserver.complete) === null || _a$1 === void 0 || _a$1.call(tapObserver);
				subscriber.complete();
			}, function(err) {
				var _a$1;
				isUnsub = false;
				(_a$1 = tapObserver.error) === null || _a$1 === void 0 || _a$1.call(tapObserver, err);
				subscriber.error(err);
			}, function() {
				var _a$1, _b;
				if (isUnsub) (_a$1 = tapObserver.unsubscribe) === null || _a$1 === void 0 || _a$1.call(tapObserver);
				(_b = tapObserver.finalize) === null || _b === void 0 || _b.call(tapObserver);
			}));
		}) : identity_1$1.identity;
	}
	exports.tap = tap;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/throttle.js
var require_throttle = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/throttle.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.throttle = void 0;
	var lift_1$9 = require_lift();
	var OperatorSubscriber_1$9 = require_OperatorSubscriber();
	var innerFrom_1$6 = require_innerFrom();
	function throttle(durationSelector, config) {
		return lift_1$9.operate(function(source, subscriber) {
			var _a = config !== null && config !== void 0 ? config : {}, _b = _a.leading, leading = _b === void 0 ? true : _b, _c = _a.trailing, trailing = _c === void 0 ? false : _c;
			var hasValue = false;
			var sendValue = null;
			var throttled = null;
			var isComplete = false;
			var endThrottling = function() {
				throttled === null || throttled === void 0 || throttled.unsubscribe();
				throttled = null;
				if (trailing) {
					send();
					isComplete && subscriber.complete();
				}
			};
			var cleanupThrottling = function() {
				throttled = null;
				isComplete && subscriber.complete();
			};
			var startThrottle = function(value) {
				return throttled = innerFrom_1$6.innerFrom(durationSelector(value)).subscribe(OperatorSubscriber_1$9.createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling));
			};
			var send = function() {
				if (hasValue) {
					hasValue = false;
					var value = sendValue;
					sendValue = null;
					subscriber.next(value);
					!isComplete && startThrottle(value);
				}
			};
			source.subscribe(OperatorSubscriber_1$9.createOperatorSubscriber(subscriber, function(value) {
				hasValue = true;
				sendValue = value;
				!(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));
			}, function() {
				isComplete = true;
				!(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();
			}));
		});
	}
	exports.throttle = throttle;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/throttleTime.js
var require_throttleTime = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/throttleTime.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.throttleTime = void 0;
	var async_1$4 = require_async();
	var throttle_1$1 = require_throttle();
	var timer_1 = require_timer();
	function throttleTime(duration, scheduler, config) {
		if (scheduler === void 0) scheduler = async_1$4.asyncScheduler;
		var duration$ = timer_1.timer(duration, scheduler);
		return throttle_1$1.throttle(function() {
			return duration$;
		}, config);
	}
	exports.throttleTime = throttleTime;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/timeInterval.js
var require_timeInterval = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/timeInterval.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.TimeInterval = exports.timeInterval = void 0;
	var async_1$3 = require_async();
	var lift_1$8 = require_lift();
	var OperatorSubscriber_1$8 = require_OperatorSubscriber();
	function timeInterval(scheduler) {
		if (scheduler === void 0) scheduler = async_1$3.asyncScheduler;
		return lift_1$8.operate(function(source, subscriber) {
			var last$2 = scheduler.now();
			source.subscribe(OperatorSubscriber_1$8.createOperatorSubscriber(subscriber, function(value) {
				var now = scheduler.now();
				var interval$1 = now - last$2;
				last$2 = now;
				subscriber.next(new TimeInterval(value, interval$1));
			}));
		});
	}
	exports.timeInterval = timeInterval;
	var TimeInterval = function() {
		function TimeInterval$1(value, interval$1) {
			this.value = value;
			this.interval = interval$1;
		}
		return TimeInterval$1;
	}();
	exports.TimeInterval = TimeInterval;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/timeout.js
var require_timeout = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/timeout.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.timeout = exports.TimeoutError = void 0;
	var async_1$2 = require_async();
	var isDate_1$1 = require_isDate();
	var lift_1$7 = require_lift();
	var innerFrom_1$5 = require_innerFrom();
	var createErrorClass_1 = require_createErrorClass();
	var OperatorSubscriber_1$7 = require_OperatorSubscriber();
	var executeSchedule_1$1 = require_executeSchedule();
	exports.TimeoutError = createErrorClass_1.createErrorClass(function(_super) {
		return function TimeoutErrorImpl(info) {
			if (info === void 0) info = null;
			_super(this);
			this.message = "Timeout has occurred";
			this.name = "TimeoutError";
			this.info = info;
		};
	});
	function timeout(config, schedulerArg) {
		var _a = isDate_1$1.isValidDate(config) ? { first: config } : typeof config === "number" ? { each: config } : config, first$1 = _a.first, each = _a.each, _b = _a.with, _with = _b === void 0 ? timeoutErrorFactory : _b, _c = _a.scheduler, scheduler = _c === void 0 ? schedulerArg !== null && schedulerArg !== void 0 ? schedulerArg : async_1$2.asyncScheduler : _c, _d = _a.meta, meta = _d === void 0 ? null : _d;
		if (first$1 == null && each == null) throw new TypeError("No timeout provided.");
		return lift_1$7.operate(function(source, subscriber) {
			var originalSourceSubscription;
			var timerSubscription;
			var lastValue = null;
			var seen = 0;
			var startTimer = function(delay$1) {
				timerSubscription = executeSchedule_1$1.executeSchedule(subscriber, scheduler, function() {
					try {
						originalSourceSubscription.unsubscribe();
						innerFrom_1$5.innerFrom(_with({
							meta,
							lastValue,
							seen
						})).subscribe(subscriber);
					} catch (err) {
						subscriber.error(err);
					}
				}, delay$1);
			};
			originalSourceSubscription = source.subscribe(OperatorSubscriber_1$7.createOperatorSubscriber(subscriber, function(value) {
				timerSubscription === null || timerSubscription === void 0 || timerSubscription.unsubscribe();
				seen++;
				subscriber.next(lastValue = value);
				each > 0 && startTimer(each);
			}, void 0, void 0, function() {
				if (!(timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.closed)) timerSubscription === null || timerSubscription === void 0 || timerSubscription.unsubscribe();
				lastValue = null;
			}));
			!seen && startTimer(first$1 != null ? typeof first$1 === "number" ? first$1 : +first$1 - scheduler.now() : each);
		});
	}
	exports.timeout = timeout;
	function timeoutErrorFactory(info) {
		throw new exports.TimeoutError(info);
	}
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/timeoutWith.js
var require_timeoutWith = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/timeoutWith.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.timeoutWith = void 0;
	var async_1$1 = require_async();
	var isDate_1 = require_isDate();
	var timeout_1$1 = require_timeout();
	function timeoutWith(due, withObservable, scheduler) {
		var first$1;
		var each;
		var _with;
		scheduler = scheduler !== null && scheduler !== void 0 ? scheduler : async_1$1.async;
		if (isDate_1.isValidDate(due)) first$1 = due;
		else if (typeof due === "number") each = due;
		if (withObservable) _with = function() {
			return withObservable;
		};
		else throw new TypeError("No observable provided to switch to");
		if (first$1 == null && each == null) throw new TypeError("No timeout provided.");
		return timeout_1$1.timeout({
			first: first$1,
			each,
			scheduler,
			with: _with
		});
	}
	exports.timeoutWith = timeoutWith;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/timestamp.js
var require_timestamp = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/timestamp.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.timestamp = void 0;
	var dateTimestampProvider_1 = require_dateTimestampProvider();
	var map_1$1 = require_map();
	function timestamp(timestampProvider) {
		if (timestampProvider === void 0) timestampProvider = dateTimestampProvider_1.dateTimestampProvider;
		return map_1$1.map(function(value) {
			return {
				value,
				timestamp: timestampProvider.now()
			};
		});
	}
	exports.timestamp = timestamp;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/window.js
var require_window = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/window.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.window = void 0;
	var Subject_1$4 = require_Subject();
	var lift_1$6 = require_lift();
	var OperatorSubscriber_1$6 = require_OperatorSubscriber();
	var noop_1$2 = require_noop();
	var innerFrom_1$4 = require_innerFrom();
	function window$1(windowBoundaries) {
		return lift_1$6.operate(function(source, subscriber) {
			var windowSubject = new Subject_1$4.Subject();
			subscriber.next(windowSubject.asObservable());
			var errorHandler = function(err) {
				windowSubject.error(err);
				subscriber.error(err);
			};
			source.subscribe(OperatorSubscriber_1$6.createOperatorSubscriber(subscriber, function(value) {
				return windowSubject === null || windowSubject === void 0 ? void 0 : windowSubject.next(value);
			}, function() {
				windowSubject.complete();
				subscriber.complete();
			}, errorHandler));
			innerFrom_1$4.innerFrom(windowBoundaries).subscribe(OperatorSubscriber_1$6.createOperatorSubscriber(subscriber, function() {
				windowSubject.complete();
				subscriber.next(windowSubject = new Subject_1$4.Subject());
			}, noop_1$2.noop, errorHandler));
			return function() {
				windowSubject === null || windowSubject === void 0 || windowSubject.unsubscribe();
				windowSubject = null;
			};
		});
	}
	exports.window = window$1;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/windowCount.js
var require_windowCount = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/windowCount.js"(exports) {
	var __values$1 = void 0 && (void 0).__values || function(o) {
		var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i$1 = 0;
		if (m) return m.call(o);
		if (o && typeof o.length === "number") return { next: function() {
			if (o && i$1 >= o.length) o = void 0;
			return {
				value: o && o[i$1++],
				done: !o
			};
		} };
		throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.windowCount = void 0;
	var Subject_1$3 = require_Subject();
	var lift_1$5 = require_lift();
	var OperatorSubscriber_1$5 = require_OperatorSubscriber();
	function windowCount(windowSize, startWindowEvery) {
		if (startWindowEvery === void 0) startWindowEvery = 0;
		var startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;
		return lift_1$5.operate(function(source, subscriber) {
			var windows = [new Subject_1$3.Subject()];
			var starts = [];
			var count$1 = 0;
			subscriber.next(windows[0].asObservable());
			source.subscribe(OperatorSubscriber_1$5.createOperatorSubscriber(subscriber, function(value) {
				var e_1, _a;
				try {
					for (var windows_1 = __values$1(windows), windows_1_1 = windows_1.next(); !windows_1_1.done; windows_1_1 = windows_1.next()) {
						var window_1$1 = windows_1_1.value;
						window_1$1.next(value);
					}
				} catch (e_1_1) {
					e_1 = { error: e_1_1 };
				} finally {
					try {
						if (windows_1_1 && !windows_1_1.done && (_a = windows_1.return)) _a.call(windows_1);
					} finally {
						if (e_1) throw e_1.error;
					}
				}
				var c = count$1 - windowSize + 1;
				if (c >= 0 && c % startEvery === 0) windows.shift().complete();
				if (++count$1 % startEvery === 0) {
					var window_2 = new Subject_1$3.Subject();
					windows.push(window_2);
					subscriber.next(window_2.asObservable());
				}
			}, function() {
				while (windows.length > 0) windows.shift().complete();
				subscriber.complete();
			}, function(err) {
				while (windows.length > 0) windows.shift().error(err);
				subscriber.error(err);
			}, function() {
				starts = null;
				windows = null;
			}));
		});
	}
	exports.windowCount = windowCount;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/windowTime.js
var require_windowTime = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/windowTime.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.windowTime = void 0;
	var Subject_1$2 = require_Subject();
	var async_1 = require_async();
	var Subscription_1$1 = require_Subscription();
	var lift_1$4 = require_lift();
	var OperatorSubscriber_1$4 = require_OperatorSubscriber();
	var arrRemove_1$1 = require_arrRemove();
	var args_1$2 = require_args();
	var executeSchedule_1 = require_executeSchedule();
	function windowTime(windowTimeSpan) {
		var _a, _b;
		var otherArgs = [];
		for (var _i$1 = 1; _i$1 < arguments.length; _i$1++) otherArgs[_i$1 - 1] = arguments[_i$1];
		var scheduler = (_a = args_1$2.popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : async_1.asyncScheduler;
		var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;
		var maxWindowSize = otherArgs[1] || Infinity;
		return lift_1$4.operate(function(source, subscriber) {
			var windowRecords = [];
			var restartOnClose = false;
			var closeWindow = function(record) {
				var window$2 = record.window, subs = record.subs;
				window$2.complete();
				subs.unsubscribe();
				arrRemove_1$1.arrRemove(windowRecords, record);
				restartOnClose && startWindow();
			};
			var startWindow = function() {
				if (windowRecords) {
					var subs = new Subscription_1$1.Subscription();
					subscriber.add(subs);
					var window_1$1 = new Subject_1$2.Subject();
					var record_1 = {
						window: window_1$1,
						subs,
						seen: 0
					};
					windowRecords.push(record_1);
					subscriber.next(window_1$1.asObservable());
					executeSchedule_1.executeSchedule(subs, scheduler, function() {
						return closeWindow(record_1);
					}, windowTimeSpan);
				}
			};
			if (windowCreationInterval !== null && windowCreationInterval >= 0) executeSchedule_1.executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);
			else restartOnClose = true;
			startWindow();
			var loop = function(cb) {
				return windowRecords.slice().forEach(cb);
			};
			var terminate = function(cb) {
				loop(function(_a$1) {
					var window$2 = _a$1.window;
					return cb(window$2);
				});
				cb(subscriber);
				subscriber.unsubscribe();
			};
			source.subscribe(OperatorSubscriber_1$4.createOperatorSubscriber(subscriber, function(value) {
				loop(function(record) {
					record.window.next(value);
					maxWindowSize <= ++record.seen && closeWindow(record);
				});
			}, function() {
				return terminate(function(consumer) {
					return consumer.complete();
				});
			}, function(err) {
				return terminate(function(consumer) {
					return consumer.error(err);
				});
			}));
			return function() {
				windowRecords = null;
			};
		});
	}
	exports.windowTime = windowTime;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/windowToggle.js
var require_windowToggle = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/windowToggle.js"(exports) {
	var __values = void 0 && (void 0).__values || function(o) {
		var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i$1 = 0;
		if (m) return m.call(o);
		if (o && typeof o.length === "number") return { next: function() {
			if (o && i$1 >= o.length) o = void 0;
			return {
				value: o && o[i$1++],
				done: !o
			};
		} };
		throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.windowToggle = void 0;
	var Subject_1$1 = require_Subject();
	var Subscription_1 = require_Subscription();
	var lift_1$3 = require_lift();
	var innerFrom_1$3 = require_innerFrom();
	var OperatorSubscriber_1$3 = require_OperatorSubscriber();
	var noop_1$1 = require_noop();
	var arrRemove_1 = require_arrRemove();
	function windowToggle(openings, closingSelector) {
		return lift_1$3.operate(function(source, subscriber) {
			var windows = [];
			var handleError = function(err) {
				while (0 < windows.length) windows.shift().error(err);
				subscriber.error(err);
			};
			innerFrom_1$3.innerFrom(openings).subscribe(OperatorSubscriber_1$3.createOperatorSubscriber(subscriber, function(openValue) {
				var window$2 = new Subject_1$1.Subject();
				windows.push(window$2);
				var closingSubscription = new Subscription_1.Subscription();
				var closeWindow = function() {
					arrRemove_1.arrRemove(windows, window$2);
					window$2.complete();
					closingSubscription.unsubscribe();
				};
				var closingNotifier;
				try {
					closingNotifier = innerFrom_1$3.innerFrom(closingSelector(openValue));
				} catch (err) {
					handleError(err);
					return;
				}
				subscriber.next(window$2.asObservable());
				closingSubscription.add(closingNotifier.subscribe(OperatorSubscriber_1$3.createOperatorSubscriber(subscriber, closeWindow, noop_1$1.noop, handleError)));
			}, noop_1$1.noop));
			source.subscribe(OperatorSubscriber_1$3.createOperatorSubscriber(subscriber, function(value) {
				var e_1, _a;
				var windowsCopy = windows.slice();
				try {
					for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {
						var window_1$1 = windowsCopy_1_1.value;
						window_1$1.next(value);
					}
				} catch (e_1_1) {
					e_1 = { error: e_1_1 };
				} finally {
					try {
						if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);
					} finally {
						if (e_1) throw e_1.error;
					}
				}
			}, function() {
				while (0 < windows.length) windows.shift().complete();
				subscriber.complete();
			}, handleError, function() {
				while (0 < windows.length) windows.shift().unsubscribe();
			}));
		});
	}
	exports.windowToggle = windowToggle;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/windowWhen.js
var require_windowWhen = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/windowWhen.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.windowWhen = void 0;
	var Subject_1 = require_Subject();
	var lift_1$2 = require_lift();
	var OperatorSubscriber_1$2 = require_OperatorSubscriber();
	var innerFrom_1$2 = require_innerFrom();
	function windowWhen(closingSelector) {
		return lift_1$2.operate(function(source, subscriber) {
			var window$2;
			var closingSubscriber;
			var handleError = function(err) {
				window$2.error(err);
				subscriber.error(err);
			};
			var openWindow = function() {
				closingSubscriber === null || closingSubscriber === void 0 || closingSubscriber.unsubscribe();
				window$2 === null || window$2 === void 0 || window$2.complete();
				window$2 = new Subject_1.Subject();
				subscriber.next(window$2.asObservable());
				var closingNotifier;
				try {
					closingNotifier = innerFrom_1$2.innerFrom(closingSelector());
				} catch (err) {
					handleError(err);
					return;
				}
				closingNotifier.subscribe(closingSubscriber = OperatorSubscriber_1$2.createOperatorSubscriber(subscriber, openWindow, openWindow, handleError));
			};
			openWindow();
			source.subscribe(OperatorSubscriber_1$2.createOperatorSubscriber(subscriber, function(value) {
				return window$2.next(value);
			}, function() {
				window$2.complete();
				subscriber.complete();
			}, handleError, function() {
				closingSubscriber === null || closingSubscriber === void 0 || closingSubscriber.unsubscribe();
				window$2 = null;
			}));
		});
	}
	exports.windowWhen = windowWhen;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/withLatestFrom.js
var require_withLatestFrom = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/withLatestFrom.js"(exports) {
	var __read$3 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$3 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.withLatestFrom = void 0;
	var lift_1$1 = require_lift();
	var OperatorSubscriber_1$1 = require_OperatorSubscriber();
	var innerFrom_1$1 = require_innerFrom();
	var identity_1 = require_identity();
	var noop_1 = require_noop();
	var args_1$1 = require_args();
	function withLatestFrom() {
		var inputs = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) inputs[_i$1] = arguments[_i$1];
		var project = args_1$1.popResultSelector(inputs);
		return lift_1$1.operate(function(source, subscriber) {
			var len = inputs.length;
			var otherValues = new Array(len);
			var hasValue = inputs.map(function() {
				return false;
			});
			var ready = false;
			var _loop_1 = function(i$2) {
				innerFrom_1$1.innerFrom(inputs[i$2]).subscribe(OperatorSubscriber_1$1.createOperatorSubscriber(subscriber, function(value) {
					otherValues[i$2] = value;
					if (!ready && !hasValue[i$2]) {
						hasValue[i$2] = true;
						(ready = hasValue.every(identity_1.identity)) && (hasValue = null);
					}
				}, noop_1.noop));
			};
			for (var i$1 = 0; i$1 < len; i$1++) _loop_1(i$1);
			source.subscribe(OperatorSubscriber_1$1.createOperatorSubscriber(subscriber, function(value) {
				if (ready) {
					var values = __spreadArray$3([value], __read$3(otherValues));
					subscriber.next(project ? project.apply(void 0, __spreadArray$3([], __read$3(values))) : values);
				}
			}));
		});
	}
	exports.withLatestFrom = withLatestFrom;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/zip.js
var require_zip$1 = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/observable/zip.js"(exports) {
	var __read$2 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$2 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.zip = void 0;
	var Observable_1 = require_Observable();
	var innerFrom_1 = require_innerFrom();
	var argsOrArgArray_1 = require_argsOrArgArray();
	var empty_1 = require_empty();
	var OperatorSubscriber_1 = require_OperatorSubscriber();
	var args_1 = require_args();
	function zip$1() {
		var args = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) args[_i$1] = arguments[_i$1];
		var resultSelector = args_1.popResultSelector(args);
		var sources = argsOrArgArray_1.argsOrArgArray(args);
		return sources.length ? new Observable_1.Observable(function(subscriber) {
			var buffers = sources.map(function() {
				return [];
			});
			var completed = sources.map(function() {
				return false;
			});
			subscriber.add(function() {
				buffers = completed = null;
			});
			var _loop_1 = function(sourceIndex$1) {
				innerFrom_1.innerFrom(sources[sourceIndex$1]).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function(value) {
					buffers[sourceIndex$1].push(value);
					if (buffers.every(function(buffer$1) {
						return buffer$1.length;
					})) {
						var result$1 = buffers.map(function(buffer$1) {
							return buffer$1.shift();
						});
						subscriber.next(resultSelector ? resultSelector.apply(void 0, __spreadArray$2([], __read$2(result$1))) : result$1);
						if (buffers.some(function(buffer$1, i$1) {
							return !buffer$1.length && completed[i$1];
						})) subscriber.complete();
					}
				}, function() {
					completed[sourceIndex$1] = true;
					!buffers[sourceIndex$1].length && subscriber.complete();
				}));
			};
			for (var sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) _loop_1(sourceIndex);
			return function() {
				buffers = completed = null;
			};
		}) : empty_1.EMPTY;
	}
	exports.zip = zip$1;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/zip.js
var require_zip = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/zip.js"(exports) {
	var __read$1 = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray$1 = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.zip = void 0;
	var zip_1$3 = require_zip$1();
	var lift_1 = require_lift();
	function zip() {
		var sources = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) sources[_i$1] = arguments[_i$1];
		return lift_1.operate(function(source, subscriber) {
			zip_1$3.zip.apply(void 0, __spreadArray$1([source], __read$1(sources))).subscribe(subscriber);
		});
	}
	exports.zip = zip;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/zipAll.js
var require_zipAll = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/zipAll.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.zipAll = void 0;
	var zip_1$2 = require_zip$1();
	var joinAllInternals_1 = require_joinAllInternals();
	function zipAll(project) {
		return joinAllInternals_1.joinAllInternals(zip_1$2.zip, project);
	}
	exports.zipAll = zipAll;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/zipWith.js
var require_zipWith = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/internal/operators/zipWith.js"(exports) {
	var __read = void 0 && (void 0).__read || function(o, n) {
		var m = typeof Symbol === "function" && o[Symbol.iterator];
		if (!m) return o;
		var i$1 = m.call(o), r, ar = [], e;
		try {
			while ((n === void 0 || n-- > 0) && !(r = i$1.next()).done) ar.push(r.value);
		} catch (error) {
			e = { error };
		} finally {
			try {
				if (r && !r.done && (m = i$1["return"])) m.call(i$1);
			} finally {
				if (e) throw e.error;
			}
		}
		return ar;
	};
	var __spreadArray = void 0 && (void 0).__spreadArray || function(to, from$1) {
		for (var i$1 = 0, il = from$1.length, j = to.length; i$1 < il; i$1++, j++) to[j] = from$1[i$1];
		return to;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.zipWith = void 0;
	var zip_1$1 = require_zip();
	function zipWith() {
		var otherInputs = [];
		for (var _i$1 = 0; _i$1 < arguments.length; _i$1++) otherInputs[_i$1] = arguments[_i$1];
		return zip_1$1.zip.apply(void 0, __spreadArray([], __read(otherInputs)));
	}
	exports.zipWith = zipWith;
} });

//#endregion
//#region ../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/operators/index.js
var require_operators = __commonJS({ "../../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/operators/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.mergeAll = exports.merge = exports.max = exports.materialize = exports.mapTo = exports.map = exports.last = exports.isEmpty = exports.ignoreElements = exports.groupBy = exports.first = exports.findIndex = exports.find = exports.finalize = exports.filter = exports.expand = exports.exhaustMap = exports.exhaustAll = exports.exhaust = exports.every = exports.endWith = exports.elementAt = exports.distinctUntilKeyChanged = exports.distinctUntilChanged = exports.distinct = exports.dematerialize = exports.delayWhen = exports.delay = exports.defaultIfEmpty = exports.debounceTime = exports.debounce = exports.count = exports.connect = exports.concatWith = exports.concatMapTo = exports.concatMap = exports.concatAll = exports.concat = exports.combineLatestWith = exports.combineLatest = exports.combineLatestAll = exports.combineAll = exports.catchError = exports.bufferWhen = exports.bufferToggle = exports.bufferTime = exports.bufferCount = exports.buffer = exports.auditTime = exports.audit = void 0;
	exports.timeInterval = exports.throwIfEmpty = exports.throttleTime = exports.throttle = exports.tap = exports.takeWhile = exports.takeUntil = exports.takeLast = exports.take = exports.switchScan = exports.switchMapTo = exports.switchMap = exports.switchAll = exports.subscribeOn = exports.startWith = exports.skipWhile = exports.skipUntil = exports.skipLast = exports.skip = exports.single = exports.shareReplay = exports.share = exports.sequenceEqual = exports.scan = exports.sampleTime = exports.sample = exports.refCount = exports.retryWhen = exports.retry = exports.repeatWhen = exports.repeat = exports.reduce = exports.raceWith = exports.race = exports.publishReplay = exports.publishLast = exports.publishBehavior = exports.publish = exports.pluck = exports.partition = exports.pairwise = exports.onErrorResumeNext = exports.observeOn = exports.multicast = exports.min = exports.mergeWith = exports.mergeScan = exports.mergeMapTo = exports.mergeMap = exports.flatMap = void 0;
	exports.zipWith = exports.zipAll = exports.zip = exports.withLatestFrom = exports.windowWhen = exports.windowToggle = exports.windowTime = exports.windowCount = exports.window = exports.toArray = exports.timestamp = exports.timeoutWith = exports.timeout = void 0;
	var audit_1 = require_audit();
	Object.defineProperty(exports, "audit", {
		enumerable: true,
		get: function() {
			return audit_1.audit;
		}
	});
	var auditTime_1 = require_auditTime();
	Object.defineProperty(exports, "auditTime", {
		enumerable: true,
		get: function() {
			return auditTime_1.auditTime;
		}
	});
	var buffer_1 = require_buffer();
	Object.defineProperty(exports, "buffer", {
		enumerable: true,
		get: function() {
			return buffer_1.buffer;
		}
	});
	var bufferCount_1 = require_bufferCount();
	Object.defineProperty(exports, "bufferCount", {
		enumerable: true,
		get: function() {
			return bufferCount_1.bufferCount;
		}
	});
	var bufferTime_1 = require_bufferTime();
	Object.defineProperty(exports, "bufferTime", {
		enumerable: true,
		get: function() {
			return bufferTime_1.bufferTime;
		}
	});
	var bufferToggle_1 = require_bufferToggle();
	Object.defineProperty(exports, "bufferToggle", {
		enumerable: true,
		get: function() {
			return bufferToggle_1.bufferToggle;
		}
	});
	var bufferWhen_1 = require_bufferWhen();
	Object.defineProperty(exports, "bufferWhen", {
		enumerable: true,
		get: function() {
			return bufferWhen_1.bufferWhen;
		}
	});
	var catchError_1 = require_catchError();
	Object.defineProperty(exports, "catchError", {
		enumerable: true,
		get: function() {
			return catchError_1.catchError;
		}
	});
	var combineAll_1 = require_combineAll();
	Object.defineProperty(exports, "combineAll", {
		enumerable: true,
		get: function() {
			return combineAll_1.combineAll;
		}
	});
	var combineLatestAll_1 = require_combineLatestAll();
	Object.defineProperty(exports, "combineLatestAll", {
		enumerable: true,
		get: function() {
			return combineLatestAll_1.combineLatestAll;
		}
	});
	var combineLatest_1 = require_combineLatest();
	Object.defineProperty(exports, "combineLatest", {
		enumerable: true,
		get: function() {
			return combineLatest_1.combineLatest;
		}
	});
	var combineLatestWith_1 = require_combineLatestWith();
	Object.defineProperty(exports, "combineLatestWith", {
		enumerable: true,
		get: function() {
			return combineLatestWith_1.combineLatestWith;
		}
	});
	var concat_1 = require_concat$1();
	Object.defineProperty(exports, "concat", {
		enumerable: true,
		get: function() {
			return concat_1.concat;
		}
	});
	var concatAll_1 = require_concatAll();
	Object.defineProperty(exports, "concatAll", {
		enumerable: true,
		get: function() {
			return concatAll_1.concatAll;
		}
	});
	var concatMap_1 = require_concatMap();
	Object.defineProperty(exports, "concatMap", {
		enumerable: true,
		get: function() {
			return concatMap_1.concatMap;
		}
	});
	var concatMapTo_1 = require_concatMapTo();
	Object.defineProperty(exports, "concatMapTo", {
		enumerable: true,
		get: function() {
			return concatMapTo_1.concatMapTo;
		}
	});
	var concatWith_1 = require_concatWith();
	Object.defineProperty(exports, "concatWith", {
		enumerable: true,
		get: function() {
			return concatWith_1.concatWith;
		}
	});
	var connect_1 = require_connect();
	Object.defineProperty(exports, "connect", {
		enumerable: true,
		get: function() {
			return connect_1.connect;
		}
	});
	var count_1 = require_count();
	Object.defineProperty(exports, "count", {
		enumerable: true,
		get: function() {
			return count_1.count;
		}
	});
	var debounce_1 = require_debounce();
	Object.defineProperty(exports, "debounce", {
		enumerable: true,
		get: function() {
			return debounce_1.debounce;
		}
	});
	var debounceTime_1 = require_debounceTime();
	Object.defineProperty(exports, "debounceTime", {
		enumerable: true,
		get: function() {
			return debounceTime_1.debounceTime;
		}
	});
	var defaultIfEmpty_1 = require_defaultIfEmpty();
	Object.defineProperty(exports, "defaultIfEmpty", {
		enumerable: true,
		get: function() {
			return defaultIfEmpty_1.defaultIfEmpty;
		}
	});
	var delay_1 = require_delay();
	Object.defineProperty(exports, "delay", {
		enumerable: true,
		get: function() {
			return delay_1.delay;
		}
	});
	var delayWhen_1 = require_delayWhen();
	Object.defineProperty(exports, "delayWhen", {
		enumerable: true,
		get: function() {
			return delayWhen_1.delayWhen;
		}
	});
	var dematerialize_1 = require_dematerialize();
	Object.defineProperty(exports, "dematerialize", {
		enumerable: true,
		get: function() {
			return dematerialize_1.dematerialize;
		}
	});
	var distinct_1 = require_distinct();
	Object.defineProperty(exports, "distinct", {
		enumerable: true,
		get: function() {
			return distinct_1.distinct;
		}
	});
	var distinctUntilChanged_1 = require_distinctUntilChanged();
	Object.defineProperty(exports, "distinctUntilChanged", {
		enumerable: true,
		get: function() {
			return distinctUntilChanged_1.distinctUntilChanged;
		}
	});
	var distinctUntilKeyChanged_1 = require_distinctUntilKeyChanged();
	Object.defineProperty(exports, "distinctUntilKeyChanged", {
		enumerable: true,
		get: function() {
			return distinctUntilKeyChanged_1.distinctUntilKeyChanged;
		}
	});
	var elementAt_1 = require_elementAt();
	Object.defineProperty(exports, "elementAt", {
		enumerable: true,
		get: function() {
			return elementAt_1.elementAt;
		}
	});
	var endWith_1 = require_endWith();
	Object.defineProperty(exports, "endWith", {
		enumerable: true,
		get: function() {
			return endWith_1.endWith;
		}
	});
	var every_1 = require_every();
	Object.defineProperty(exports, "every", {
		enumerable: true,
		get: function() {
			return every_1.every;
		}
	});
	var exhaust_1 = require_exhaust();
	Object.defineProperty(exports, "exhaust", {
		enumerable: true,
		get: function() {
			return exhaust_1.exhaust;
		}
	});
	var exhaustAll_1 = require_exhaustAll();
	Object.defineProperty(exports, "exhaustAll", {
		enumerable: true,
		get: function() {
			return exhaustAll_1.exhaustAll;
		}
	});
	var exhaustMap_1 = require_exhaustMap();
	Object.defineProperty(exports, "exhaustMap", {
		enumerable: true,
		get: function() {
			return exhaustMap_1.exhaustMap;
		}
	});
	var expand_1 = require_expand();
	Object.defineProperty(exports, "expand", {
		enumerable: true,
		get: function() {
			return expand_1.expand;
		}
	});
	var filter_1 = require_filter();
	Object.defineProperty(exports, "filter", {
		enumerable: true,
		get: function() {
			return filter_1.filter;
		}
	});
	var finalize_1 = require_finalize();
	Object.defineProperty(exports, "finalize", {
		enumerable: true,
		get: function() {
			return finalize_1.finalize;
		}
	});
	var find_1 = require_find();
	Object.defineProperty(exports, "find", {
		enumerable: true,
		get: function() {
			return find_1.find;
		}
	});
	var findIndex_1 = require_findIndex();
	Object.defineProperty(exports, "findIndex", {
		enumerable: true,
		get: function() {
			return findIndex_1.findIndex;
		}
	});
	var first_1 = require_first();
	Object.defineProperty(exports, "first", {
		enumerable: true,
		get: function() {
			return first_1.first;
		}
	});
	var groupBy_1 = require_groupBy();
	Object.defineProperty(exports, "groupBy", {
		enumerable: true,
		get: function() {
			return groupBy_1.groupBy;
		}
	});
	var ignoreElements_1 = require_ignoreElements();
	Object.defineProperty(exports, "ignoreElements", {
		enumerable: true,
		get: function() {
			return ignoreElements_1.ignoreElements;
		}
	});
	var isEmpty_1 = require_isEmpty();
	Object.defineProperty(exports, "isEmpty", {
		enumerable: true,
		get: function() {
			return isEmpty_1.isEmpty;
		}
	});
	var last_1 = require_last();
	Object.defineProperty(exports, "last", {
		enumerable: true,
		get: function() {
			return last_1.last;
		}
	});
	var map_1 = require_map();
	Object.defineProperty(exports, "map", {
		enumerable: true,
		get: function() {
			return map_1.map;
		}
	});
	var mapTo_1 = require_mapTo();
	Object.defineProperty(exports, "mapTo", {
		enumerable: true,
		get: function() {
			return mapTo_1.mapTo;
		}
	});
	var materialize_1 = require_materialize();
	Object.defineProperty(exports, "materialize", {
		enumerable: true,
		get: function() {
			return materialize_1.materialize;
		}
	});
	var max_1 = require_max();
	Object.defineProperty(exports, "max", {
		enumerable: true,
		get: function() {
			return max_1.max;
		}
	});
	var merge_1 = require_merge();
	Object.defineProperty(exports, "merge", {
		enumerable: true,
		get: function() {
			return merge_1.merge;
		}
	});
	var mergeAll_1 = require_mergeAll();
	Object.defineProperty(exports, "mergeAll", {
		enumerable: true,
		get: function() {
			return mergeAll_1.mergeAll;
		}
	});
	var flatMap_1 = require_flatMap();
	Object.defineProperty(exports, "flatMap", {
		enumerable: true,
		get: function() {
			return flatMap_1.flatMap;
		}
	});
	var mergeMap_1 = require_mergeMap();
	Object.defineProperty(exports, "mergeMap", {
		enumerable: true,
		get: function() {
			return mergeMap_1.mergeMap;
		}
	});
	var mergeMapTo_1 = require_mergeMapTo();
	Object.defineProperty(exports, "mergeMapTo", {
		enumerable: true,
		get: function() {
			return mergeMapTo_1.mergeMapTo;
		}
	});
	var mergeScan_1 = require_mergeScan();
	Object.defineProperty(exports, "mergeScan", {
		enumerable: true,
		get: function() {
			return mergeScan_1.mergeScan;
		}
	});
	var mergeWith_1 = require_mergeWith();
	Object.defineProperty(exports, "mergeWith", {
		enumerable: true,
		get: function() {
			return mergeWith_1.mergeWith;
		}
	});
	var min_1 = require_min();
	Object.defineProperty(exports, "min", {
		enumerable: true,
		get: function() {
			return min_1.min;
		}
	});
	var multicast_1 = require_multicast();
	Object.defineProperty(exports, "multicast", {
		enumerable: true,
		get: function() {
			return multicast_1.multicast;
		}
	});
	var observeOn_1 = require_observeOn();
	Object.defineProperty(exports, "observeOn", {
		enumerable: true,
		get: function() {
			return observeOn_1.observeOn;
		}
	});
	var onErrorResumeNextWith_1 = require_onErrorResumeNextWith();
	Object.defineProperty(exports, "onErrorResumeNext", {
		enumerable: true,
		get: function() {
			return onErrorResumeNextWith_1.onErrorResumeNext;
		}
	});
	var pairwise_1 = require_pairwise();
	Object.defineProperty(exports, "pairwise", {
		enumerable: true,
		get: function() {
			return pairwise_1.pairwise;
		}
	});
	var partition_1 = require_partition();
	Object.defineProperty(exports, "partition", {
		enumerable: true,
		get: function() {
			return partition_1.partition;
		}
	});
	var pluck_1 = require_pluck();
	Object.defineProperty(exports, "pluck", {
		enumerable: true,
		get: function() {
			return pluck_1.pluck;
		}
	});
	var publish_1 = require_publish();
	Object.defineProperty(exports, "publish", {
		enumerable: true,
		get: function() {
			return publish_1.publish;
		}
	});
	var publishBehavior_1 = require_publishBehavior();
	Object.defineProperty(exports, "publishBehavior", {
		enumerable: true,
		get: function() {
			return publishBehavior_1.publishBehavior;
		}
	});
	var publishLast_1 = require_publishLast();
	Object.defineProperty(exports, "publishLast", {
		enumerable: true,
		get: function() {
			return publishLast_1.publishLast;
		}
	});
	var publishReplay_1 = require_publishReplay();
	Object.defineProperty(exports, "publishReplay", {
		enumerable: true,
		get: function() {
			return publishReplay_1.publishReplay;
		}
	});
	var race_1 = require_race();
	Object.defineProperty(exports, "race", {
		enumerable: true,
		get: function() {
			return race_1.race;
		}
	});
	var raceWith_1 = require_raceWith();
	Object.defineProperty(exports, "raceWith", {
		enumerable: true,
		get: function() {
			return raceWith_1.raceWith;
		}
	});
	var reduce_1 = require_reduce();
	Object.defineProperty(exports, "reduce", {
		enumerable: true,
		get: function() {
			return reduce_1.reduce;
		}
	});
	var repeat_1 = require_repeat();
	Object.defineProperty(exports, "repeat", {
		enumerable: true,
		get: function() {
			return repeat_1.repeat;
		}
	});
	var repeatWhen_1 = require_repeatWhen();
	Object.defineProperty(exports, "repeatWhen", {
		enumerable: true,
		get: function() {
			return repeatWhen_1.repeatWhen;
		}
	});
	var retry_1 = require_retry();
	Object.defineProperty(exports, "retry", {
		enumerable: true,
		get: function() {
			return retry_1.retry;
		}
	});
	var retryWhen_1 = require_retryWhen();
	Object.defineProperty(exports, "retryWhen", {
		enumerable: true,
		get: function() {
			return retryWhen_1.retryWhen;
		}
	});
	var refCount_1 = require_refCount();
	Object.defineProperty(exports, "refCount", {
		enumerable: true,
		get: function() {
			return refCount_1.refCount;
		}
	});
	var sample_1 = require_sample();
	Object.defineProperty(exports, "sample", {
		enumerable: true,
		get: function() {
			return sample_1.sample;
		}
	});
	var sampleTime_1 = require_sampleTime();
	Object.defineProperty(exports, "sampleTime", {
		enumerable: true,
		get: function() {
			return sampleTime_1.sampleTime;
		}
	});
	var scan_1 = require_scan();
	Object.defineProperty(exports, "scan", {
		enumerable: true,
		get: function() {
			return scan_1.scan;
		}
	});
	var sequenceEqual_1 = require_sequenceEqual();
	Object.defineProperty(exports, "sequenceEqual", {
		enumerable: true,
		get: function() {
			return sequenceEqual_1.sequenceEqual;
		}
	});
	var share_1 = require_share();
	Object.defineProperty(exports, "share", {
		enumerable: true,
		get: function() {
			return share_1.share;
		}
	});
	var shareReplay_1 = require_shareReplay();
	Object.defineProperty(exports, "shareReplay", {
		enumerable: true,
		get: function() {
			return shareReplay_1.shareReplay;
		}
	});
	var single_1 = require_single();
	Object.defineProperty(exports, "single", {
		enumerable: true,
		get: function() {
			return single_1.single;
		}
	});
	var skip_1 = require_skip();
	Object.defineProperty(exports, "skip", {
		enumerable: true,
		get: function() {
			return skip_1.skip;
		}
	});
	var skipLast_1 = require_skipLast();
	Object.defineProperty(exports, "skipLast", {
		enumerable: true,
		get: function() {
			return skipLast_1.skipLast;
		}
	});
	var skipUntil_1 = require_skipUntil();
	Object.defineProperty(exports, "skipUntil", {
		enumerable: true,
		get: function() {
			return skipUntil_1.skipUntil;
		}
	});
	var skipWhile_1 = require_skipWhile();
	Object.defineProperty(exports, "skipWhile", {
		enumerable: true,
		get: function() {
			return skipWhile_1.skipWhile;
		}
	});
	var startWith_1 = require_startWith();
	Object.defineProperty(exports, "startWith", {
		enumerable: true,
		get: function() {
			return startWith_1.startWith;
		}
	});
	var subscribeOn_1 = require_subscribeOn();
	Object.defineProperty(exports, "subscribeOn", {
		enumerable: true,
		get: function() {
			return subscribeOn_1.subscribeOn;
		}
	});
	var switchAll_1 = require_switchAll();
	Object.defineProperty(exports, "switchAll", {
		enumerable: true,
		get: function() {
			return switchAll_1.switchAll;
		}
	});
	var switchMap_1 = require_switchMap();
	Object.defineProperty(exports, "switchMap", {
		enumerable: true,
		get: function() {
			return switchMap_1.switchMap;
		}
	});
	var switchMapTo_1 = require_switchMapTo();
	Object.defineProperty(exports, "switchMapTo", {
		enumerable: true,
		get: function() {
			return switchMapTo_1.switchMapTo;
		}
	});
	var switchScan_1 = require_switchScan();
	Object.defineProperty(exports, "switchScan", {
		enumerable: true,
		get: function() {
			return switchScan_1.switchScan;
		}
	});
	var take_1 = require_take();
	Object.defineProperty(exports, "take", {
		enumerable: true,
		get: function() {
			return take_1.take;
		}
	});
	var takeLast_1 = require_takeLast();
	Object.defineProperty(exports, "takeLast", {
		enumerable: true,
		get: function() {
			return takeLast_1.takeLast;
		}
	});
	var takeUntil_1 = require_takeUntil();
	Object.defineProperty(exports, "takeUntil", {
		enumerable: true,
		get: function() {
			return takeUntil_1.takeUntil;
		}
	});
	var takeWhile_1 = require_takeWhile();
	Object.defineProperty(exports, "takeWhile", {
		enumerable: true,
		get: function() {
			return takeWhile_1.takeWhile;
		}
	});
	var tap_1 = require_tap();
	Object.defineProperty(exports, "tap", {
		enumerable: true,
		get: function() {
			return tap_1.tap;
		}
	});
	var throttle_1 = require_throttle();
	Object.defineProperty(exports, "throttle", {
		enumerable: true,
		get: function() {
			return throttle_1.throttle;
		}
	});
	var throttleTime_1 = require_throttleTime();
	Object.defineProperty(exports, "throttleTime", {
		enumerable: true,
		get: function() {
			return throttleTime_1.throttleTime;
		}
	});
	var throwIfEmpty_1 = require_throwIfEmpty();
	Object.defineProperty(exports, "throwIfEmpty", {
		enumerable: true,
		get: function() {
			return throwIfEmpty_1.throwIfEmpty;
		}
	});
	var timeInterval_1 = require_timeInterval();
	Object.defineProperty(exports, "timeInterval", {
		enumerable: true,
		get: function() {
			return timeInterval_1.timeInterval;
		}
	});
	var timeout_1 = require_timeout();
	Object.defineProperty(exports, "timeout", {
		enumerable: true,
		get: function() {
			return timeout_1.timeout;
		}
	});
	var timeoutWith_1 = require_timeoutWith();
	Object.defineProperty(exports, "timeoutWith", {
		enumerable: true,
		get: function() {
			return timeoutWith_1.timeoutWith;
		}
	});
	var timestamp_1 = require_timestamp();
	Object.defineProperty(exports, "timestamp", {
		enumerable: true,
		get: function() {
			return timestamp_1.timestamp;
		}
	});
	var toArray_1 = require_toArray();
	Object.defineProperty(exports, "toArray", {
		enumerable: true,
		get: function() {
			return toArray_1.toArray;
		}
	});
	var window_1 = require_window();
	Object.defineProperty(exports, "window", {
		enumerable: true,
		get: function() {
			return window_1.window;
		}
	});
	var windowCount_1 = require_windowCount();
	Object.defineProperty(exports, "windowCount", {
		enumerable: true,
		get: function() {
			return windowCount_1.windowCount;
		}
	});
	var windowTime_1 = require_windowTime();
	Object.defineProperty(exports, "windowTime", {
		enumerable: true,
		get: function() {
			return windowTime_1.windowTime;
		}
	});
	var windowToggle_1 = require_windowToggle();
	Object.defineProperty(exports, "windowToggle", {
		enumerable: true,
		get: function() {
			return windowToggle_1.windowToggle;
		}
	});
	var windowWhen_1 = require_windowWhen();
	Object.defineProperty(exports, "windowWhen", {
		enumerable: true,
		get: function() {
			return windowWhen_1.windowWhen;
		}
	});
	var withLatestFrom_1 = require_withLatestFrom();
	Object.defineProperty(exports, "withLatestFrom", {
		enumerable: true,
		get: function() {
			return withLatestFrom_1.withLatestFrom;
		}
	});
	var zip_1 = require_zip();
	Object.defineProperty(exports, "zip", {
		enumerable: true,
		get: function() {
			return zip_1.zip;
		}
	});
	var zipAll_1 = require_zipAll();
	Object.defineProperty(exports, "zipAll", {
		enumerable: true,
		get: function() {
			return zipAll_1.zipAll;
		}
	});
	var zipWith_1 = require_zipWith();
	Object.defineProperty(exports, "zipWith", {
		enumerable: true,
		get: function() {
			return zipWith_1.zipWith;
		}
	});
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/class-serializer.constants.js
var require_class_serializer_constants = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/class-serializer.constants.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.CLASS_SERIALIZER_OPTIONS = void 0;
	exports.CLASS_SERIALIZER_OPTIONS = "class_serializer:options";
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/class-serializer.interceptor.js
var require_class_serializer_interceptor = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/class-serializer.interceptor.js"(exports) {
	var import_objectSpread2 = __toESM(require_objectSpread2());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ClassSerializerInterceptor = void 0;
	const tslib_1$4 = __require("tslib");
	const operators_1 = require_operators();
	const core_1 = require_core$1();
	const file_stream_1 = require_file_stream();
	const load_package_util_1 = require_load_package_util();
	const shared_utils_1 = require_shared_utils();
	const class_serializer_constants_1$1 = require_class_serializer_constants();
	let classTransformer = {};
	const REFLECTOR = "Reflector";
	/**
	* @publicApi
	*/
	let ClassSerializerInterceptor = class ClassSerializerInterceptor$1 {
		constructor(reflector, defaultOptions$2 = {}) {
			var _defaultOptions$trans;
			this.reflector = reflector;
			this.defaultOptions = defaultOptions$2;
			classTransformer = (_defaultOptions$trans = defaultOptions$2 === null || defaultOptions$2 === void 0 ? void 0 : defaultOptions$2.transformerPackage) !== null && _defaultOptions$trans !== void 0 ? _defaultOptions$trans : (0, load_package_util_1.loadPackage)("class-transformer", "ClassSerializerInterceptor", function() {
				return require_cjs();
			});
			if (!(defaultOptions$2 === null || defaultOptions$2 === void 0 ? void 0 : defaultOptions$2.transformerPackage)) require_cjs();
		}
		intercept(context$1, next) {
			var _this = this;
			const contextOptions = this.getContextOptions(context$1);
			const options = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, this.defaultOptions), contextOptions);
			return next.handle().pipe((0, operators_1.map)(function(res) {
				return _this.serialize(res, options);
			}));
		}
		/**
		* Serializes responses that are non-null objects nor streamable files.
		*/
		serialize(response, options) {
			var _this2 = this;
			if (!(0, shared_utils_1.isObject)(response) || response instanceof file_stream_1.StreamableFile) return response;
			return Array.isArray(response) ? response.map(function(item) {
				return _this2.transformToPlain(item, options);
			}) : this.transformToPlain(response, options);
		}
		transformToPlain(plainOrClass, options) {
			if (!plainOrClass) return plainOrClass;
			if (!options.type) return classTransformer.classToPlain(plainOrClass, options);
			if (plainOrClass instanceof options.type) return classTransformer.classToPlain(plainOrClass, options);
			const instance = classTransformer.plainToInstance(options.type, plainOrClass, options);
			return classTransformer.classToPlain(instance, options);
		}
		getContextOptions(context$1) {
			return this.reflector.getAllAndOverride(class_serializer_constants_1$1.CLASS_SERIALIZER_OPTIONS, [context$1.getHandler(), context$1.getClass()]);
		}
	};
	exports.ClassSerializerInterceptor = ClassSerializerInterceptor;
	exports.ClassSerializerInterceptor = ClassSerializerInterceptor = tslib_1$4.__decorate([
		(0, core_1.Injectable)(),
		tslib_1$4.__param(0, (0, core_1.Inject)(REFLECTOR)),
		tslib_1$4.__param(1, (0, core_1.Optional)()),
		tslib_1$4.__metadata("design:paramtypes", [Object, Object])
	], ClassSerializerInterceptor);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/decorators/serialize-options.decorator.js
var require_serialize_options_decorator = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/decorators/serialize-options.decorator.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.SerializeOptions = void 0;
	const decorators_1 = require_decorators$3();
	const class_serializer_constants_1 = require_class_serializer_constants();
	/**
	* @publicApi
	*/
	const SerializeOptions = function(options) {
		return (0, decorators_1.SetMetadata)(class_serializer_constants_1.CLASS_SERIALIZER_OPTIONS, options);
	};
	exports.SerializeOptions = SerializeOptions;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/decorators/index.js
var require_decorators = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/decorators/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$3 = __require("tslib");
	tslib_1$3.__exportStar(require_serialize_options_decorator(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/class-serializer.interfaces.js
var require_class_serializer_interfaces = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/class-serializer.interfaces.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/index.js
var require_serializer = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/serializer/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$2 = __require("tslib");
	tslib_1$2.__exportStar(require_class_serializer_interceptor(), exports);
	tslib_1$2.__exportStar(require_decorators(), exports);
	tslib_1$2.__exportStar(require_class_serializer_interfaces(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/forward-ref.util.js
var require_forward_ref_util = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/forward-ref.util.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.forwardRef = void 0;
	/**
	* @publicApi
	*/
	const forwardRef = function(fn) {
		return { forwardRef: fn };
	};
	exports.forwardRef = forwardRef;
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/index.js
var require_utils = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/utils/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	const tslib_1$1 = __require("tslib");
	tslib_1$1.__exportStar(require_forward_ref_util(), exports);
} });

//#endregion
//#region ../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/index.js
var require_common = __commonJS({ "../../node_modules/.pnpm/@nestjs+common@11.1.3_class_c23fcd681f6fe858edbff4749ff76a36/node_modules/@nestjs/common/index.js"(exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.VERSION_NEUTRAL = exports.Scope = void 0;
	const tslib_1 = __require("tslib");
	require_Reflect();
	tslib_1.__exportStar(require_decorators$3(), exports);
	tslib_1.__exportStar(require_enums$1(), exports);
	tslib_1.__exportStar(require_exceptions(), exports);
	tslib_1.__exportStar(require_file_stream(), exports);
	var interfaces_1 = require_interfaces$2();
	Object.defineProperty(exports, "Scope", {
		enumerable: true,
		get: function() {
			return interfaces_1.Scope;
		}
	});
	Object.defineProperty(exports, "VERSION_NEUTRAL", {
		enumerable: true,
		get: function() {
			return interfaces_1.VERSION_NEUTRAL;
		}
	});
	tslib_1.__exportStar(require_module_utils(), exports);
	tslib_1.__exportStar(require_pipes(), exports);
	tslib_1.__exportStar(require_serializer(), exports);
	tslib_1.__exportStar(require_services(), exports);
	tslib_1.__exportStar(require_utils(), exports);
} });

//#endregion
export { require_ArgumentOutOfRangeError, require_AsyncAction, require_AsyncScheduler, require_AsyncSubject, require_BehaviorSubject, require_ConnectableObservable, require_EmptyError, require_NotFoundError, require_Notification, require_ObjectUnsubscribedError, require_Observable, require_OperatorSubscriber, require_Reflect, require_ReplaySubject, require_Scheduler, require_SequenceError, require_Subject, require_Subscriber, require_Subscription, require_UnsubscriptionError, require_args, require_argsArgArrayOrObject, require_async, require_audit, require_auditTime, require_buffer, require_bufferCount, require_bufferTime, require_bufferToggle, require_bufferWhen, require_catchError, require_cli_colors_util, require_combineAll, require_combineLatest$1 as require_combineLatest, require_combineLatestAll, require_combineLatestWith, require_common, require_concat, require_concatAll, require_concatMap, require_concatMapTo, require_concatWith, require_config, require_connect, require_constants$2 as require_constants, require_count, require_createObject, require_debounce, require_debounceTime, require_defaultIfEmpty, require_delay, require_delayWhen, require_dematerialize, require_dist, require_distinct, require_distinctUntilChanged, require_distinctUntilKeyChanged, require_elementAt, require_empty, require_endWith, require_enums$1 as require_enums, require_every, require_exceptions, require_exhaust, require_exhaustAll, require_exhaustMap, require_expand, require_filter, require_finalize, require_find, require_findIndex, require_first, require_flatMap, require_from, require_groupBy, require_identity, require_ignoreElements, require_innerFrom, require_interfaces$2 as require_interfaces, require_interval, require_isArrayLike, require_isEmpty, require_isFunction, require_isScheduler, require_last, require_lib, require_load_package_util, require_logger_service, require_map, require_mapOneOrManyArgs, require_mapTo, require_materialize, require_max, require_mergeAll, require_mergeMap, require_mergeMapTo, require_mergeScan, require_mergeWith, require_min, require_multicast, require_noop, require_not, require_objectSpread2, require_objectWithoutProperties, require_observable, require_observeOn, require_of, require_onErrorResumeNext, require_onErrorResumeNextWith, require_operators, require_pairwise, require_pipe, require_pluck, require_publish, require_publishBehavior, require_publishLast, require_publishReplay, require_race$1 as require_race, require_raceWith, require_random_string_generator_util, require_reduce, require_refCount, require_repeat, require_repeatWhen, require_request_method_enum, require_retry, require_retryWhen, require_route_paramtypes_enum, require_sample, require_sampleTime, require_scan, require_scheduleIterable, require_scheduled, require_sequenceEqual, require_share, require_shareReplay, require_shared_utils, require_single, require_skip, require_skipLast, require_skipUntil, require_skipWhile, require_startWith, require_subscribeOn, require_switchAll, require_switchMap, require_switchMapTo, require_switchScan, require_take, require_takeLast, require_takeUntil, require_takeWhile, require_tap, require_throttle, require_throttleTime, require_throwError, require_throwIfEmpty, require_timeInterval, require_timeout, require_timeoutWith, require_timer, require_timestamp, require_toArray, require_version_options_interface, require_window, require_windowCount, require_windowTime, require_windowToggle, require_windowWhen, require_withLatestFrom, require_zip$1 as require_zip, require_zipAll, require_zipWith };
//# sourceMappingURL=common-AJXMMmZt.js.map