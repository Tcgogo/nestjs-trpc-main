{"version":3,"file":"middleware.factory-CF9uL2dJ.js","names":["MiddlewareFactory"],"sources":["../lib/factories/middleware.factory.ts"],"sourcesContent":["import { Inject, Injectable } from '@nestjs/common';\nimport type { Class, Constructor } from 'type-fest';\nimport type { TRPCMiddleware } from '../interfaces';\nimport { RouterFactory } from './router.factory';\nimport { ProcedureFactory } from './procedure.factory';\nimport { isEqual, uniqWith } from 'lodash-es';\n\ninterface MiddlewareMetadata {\n  path: string;\n  instance: Class<TRPCMiddleware> | Constructor<TRPCMiddleware>;\n}\n\n@Injectable()\nexport class MiddlewareFactory {\n  @Inject(RouterFactory)\n  private readonly routerFactory!: RouterFactory;\n\n  @Inject(ProcedureFactory)\n  private readonly procedureFactory!: ProcedureFactory;\n\n  getMiddlewares(): Array<MiddlewareMetadata> {\n    const routers = this.routerFactory.getRouters();\n\n    const middlewaresMetadata = routers.flatMap((router) => {\n      const { instance, middlewares, path } = router;\n      const prototype = Object.getPrototypeOf(instance);\n      const procedures = this.procedureFactory.getProcedures(\n        instance,\n        prototype,\n      );\n\n      const procedureMiddleware = procedures.flatMap((procedure) => {\n        return procedure.middlewares ?? [];\n      });\n\n      return [...middlewares, ...procedureMiddleware].map((middleware) => ({\n        path,\n        instance: middleware,\n      }));\n    });\n\n    // Return a unique array of middlewares based on both path and instances\n    return uniqWith(middlewaresMetadata, isEqual);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAaO,8BAAMA,oBAAkB;;2CAEZ;2CAGA;;CAEjB,iBAA4C;;EAC1C,MAAM,UAAU,KAAK,cAAc,YAAY;EAE/C,MAAM,sBAAsB,QAAQ,QAAQ,SAAC,QAAW;GACtD,MAAM,EAAE,UAAU,aAAa,MAAM,GAAG;GACxC,MAAM,YAAY,OAAO,eAAe,SAAS;GACjD,MAAM,aAAa,MAAK,iBAAiB,cACvC,UACA,UACD;GAED,MAAM,sBAAsB,WAAW,QAAQ,SAAC,WAAc;;AAC5D,oCAAO,UAAU,oFAAe,CAAE;GACnC,EAAC;AAEF,UAAO,CAAC,GAAG,aAAa,GAAG,mBAAoB,EAAC,IAAI,SAAC,YAAe;WAAC;KACnE;KACA,UAAU;IACX;GAAC,EAAC;EACJ,EAAC;AAGF,SAAO,SAAS,qBAAqB,QAAQ;CAC9C;AACF;8BA9BE,0BAAO,cAAc;8BAGrB,0BAAO,iBAAiB;kDAL1B,+BAAY"}