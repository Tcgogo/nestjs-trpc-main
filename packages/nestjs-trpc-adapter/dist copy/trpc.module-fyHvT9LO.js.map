{"version":3,"file":"trpc.module-fyHvT9LO.js","names":["TRPCModule","options: TRPCModuleOptions","imports: Array<DynamicModule>","ConsoleLogger","HttpAdapterHost"],"sources":["../lib/trpc.module.ts"],"sourcesContent":["import { ConsoleLogger, Inject, Module } from \"@nestjs/common\";\nimport type { DynamicModule, OnModuleInit } from \"@nestjs/common/interfaces\";\nimport { HttpAdapterHost } from \"@nestjs/core\";\n\nimport { LOGGER_CONTEXT, TRPC_MODULE_OPTIONS } from \"./trpc.constants\";\n\nimport type { TRPCModuleOptions } from \"./interfaces\";\nimport { TRPCDriver } from \"./trpc.driver\";\nimport { AppRouterHost } from \"./app-router.host\";\nimport { ExpressDriver, FastifyDriver } from \"./drivers\";\nimport { FileScanner } from \"./scanners/file.scanner\";\nimport { GeneratorModule } from \"./generators/generator.module\";\nimport { FactoryModule } from \"./factories/factory.module\";\nimport { ScannerModule } from \"./scanners/scanner.module\";\n\n@Module({\n  imports: [FactoryModule, ScannerModule],\n  providers: [\n    // NestJS Providers\n    ConsoleLogger,\n\n    // Drivers\n    TRPCDriver,\n    FastifyDriver,\n    ExpressDriver,\n\n    // Exports\n    AppRouterHost,\n  ],\n  exports: [AppRouterHost],\n})\nexport class TRPCModule implements OnModuleInit {\n  @Inject(TRPC_MODULE_OPTIONS)\n  private readonly options!: TRPCModuleOptions;\n\n  @Inject(ConsoleLogger)\n  private readonly consoleLogger!: ConsoleLogger;\n\n  @Inject(HttpAdapterHost)\n  private readonly httpAdapterHost!: HttpAdapterHost;\n\n  @Inject(TRPCDriver)\n  private readonly trpcDriver!: TRPCDriver;\n\n  @Inject(AppRouterHost)\n  private readonly appRouterHost!: AppRouterHost;\n\n  static forRoot(options: TRPCModuleOptions = {}): DynamicModule {\n    const imports: Array<DynamicModule> = [];\n\n    if (options.autoSchemaFile != null) {\n      const fileScanner = new FileScanner();\n      const callerFilePath = fileScanner.getCallerFilePath();\n      imports.push(\n        GeneratorModule.forRoot({\n          outputDirPath: options.autoSchemaFile,\n          rootModuleFilePath: callerFilePath,\n          schemaFileImports: options.schemaFileImports,\n          context: options.context,\n        }),\n      );\n    }\n\n    return {\n      module: TRPCModule,\n      imports,\n      providers: [{ provide: TRPC_MODULE_OPTIONS, useValue: options }],\n    };\n  }\n\n  async onModuleInit() {\n    const httpAdapter = this.httpAdapterHost?.httpAdapter;\n    if (!httpAdapter) {\n      return;\n    }\n\n    this.consoleLogger.setContext(LOGGER_CONTEXT);\n\n    await this.trpcDriver.start(this.options);\n\n    const platformName = httpAdapter.getType();\n    if (this.appRouterHost.appRouter != null) {\n      this.consoleLogger.log(\n        `Server has been initialized successfully using the ${platformName} driver.`,\n        \"TRPC Server\",\n      );\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA+BO,qCAAMA,aAAmC;;2CAE7B;2CAGA;2CAGA;2CAGA;2CAGA;;CAEjB,OAAO,QAAQC,UAA6B,CAAE,GAAiB;EAC7D,MAAMC,UAAgC,CAAE;AAExC,MAAI,QAAQ,kBAAkB,MAAM;GAClC,MAAM,cAAc,IAAI;GACxB,MAAM,iBAAiB,YAAY,mBAAmB;AACtD,WAAQ,KACN,gBAAgB,QAAQ;IACtB,eAAe,QAAQ;IACvB,oBAAoB;IACpB,mBAAmB,QAAQ;IAC3B,SAAS,QAAQ;GAClB,EAAC,CACH;EACF;AAED,SAAO;GACL;GACA;GACA,WAAW,CAAC;IAAE,SAAS;IAAqB,UAAU;GAAS,CAAC;EACjE;CACF;CAED,AAAM;2DAAe;;GACnB,MAAM,uCAAc,KAAK,+FAAiB;AAC1C,QAAK,YACH;AAGF,QAAK,cAAc,WAAW,eAAe;AAE7C,SAAM,KAAK,WAAW,MAAM,KAAK,QAAQ;GAEzC,MAAM,eAAe,YAAY,SAAS;AAC1C,OAAI,KAAK,cAAc,aAAa,KAClC,MAAK,cAAc,IACjB,CAAC,mDAAmD,EAAE,aAAa,QAAQ,CAAC,EAC5E,cACD;EAEJ;;AACF;8BAxDE,0BAAO,oBAAoB;8BAG3B,0BAAOC,4BAAc;8BAGrB,0BAAOC,4BAAgB;8BAGvB,0BAAO,WAAW;8BAGlB,0BAAO,cAAc;yDA7BvB,0BAAO;CACN,SAAS,CAAC,eAAe,aAAc;CACvC,WAAW;EAETD;EAGA;EACA;EACA;EAGA;CACD;CACD,SAAS,CAAC,aAAc;AACzB,EAAC"}