{"version":3,"file":"router.factory-BOgtMUHn.js","names":["RouterFactory","routers: Array<RouterInstance>","wrapper: InstanceWrapper","middlewares: Array<\n      Class<TRPCMiddleware> | Constructor<TRPCMiddleware>\n    >","router: TRPCRouter","procedure: TRPCPublicProcedure","ConsoleLogger","ModulesContainer"],"sources":["../lib/factories/router.factory.ts"],"sourcesContent":["import { ConsoleLogger, Inject, Injectable } from '@nestjs/common';\nimport { ModulesContainer } from '@nestjs/core';\nimport { InstanceWrapper } from '@nestjs/core/injector/instance-wrapper';\nimport { camelCase } from 'lodash-es';\nimport { MIDDLEWARES_KEY, ROUTER_METADATA_KEY } from '../trpc.constants';\nimport type {\n  RouterInstance,\n  TRPCPublicProcedure,\n  TRPCRouter,\n} from '../interfaces/factory.interface';\nimport type { TRPCMiddleware } from '../interfaces';\nimport { ProcedureFactory } from './procedure.factory';\nimport type { Class, Constructor } from 'type-fest';\n\n@Injectable()\nexport class RouterFactory {\n  @Inject(ConsoleLogger)\n  private readonly consoleLogger!: ConsoleLogger;\n\n  @Inject(ModulesContainer)\n  private readonly modulesContainer!: ModulesContainer;\n\n  @Inject(ProcedureFactory)\n  private readonly procedureFactory!: ProcedureFactory;\n\n  getRouters(): Array<RouterInstance> {\n    const routers: Array<RouterInstance> = [];\n\n    this.modulesContainer.forEach((moduleRef) => {\n      moduleRef.providers.forEach((wrapper: InstanceWrapper) => {\n        const router = this.extractRouterFromWrapper(wrapper);\n        if (router != null) {\n          routers.push(router);\n        }\n      });\n    });\n\n    return routers;\n  }\n\n  private extractRouterFromWrapper(\n    wrapper: InstanceWrapper,\n  ): RouterInstance | null {\n    const { instance, name } = wrapper;\n\n    if (instance == null) {\n      return null;\n    }\n\n    const router = Reflect.getMetadata(\n      ROUTER_METADATA_KEY,\n      instance.constructor,\n    );\n\n    if (router == null) {\n      return null;\n    }\n\n    const middlewares: Array<\n      Class<TRPCMiddleware> | Constructor<TRPCMiddleware>\n    > = Reflect.getMetadata(MIDDLEWARES_KEY, instance.constructor) || [];\n\n    return {\n      name,\n      instance,\n      path: router.path,\n      alias: router.alias,\n      middlewares: middlewares,\n    };\n  }\n\n  serializeRoutes(\n    router: TRPCRouter,\n    procedure: TRPCPublicProcedure,\n  ): Record<string, any> {\n    const routers = this.getRouters();\n    const routerSchema = Object.create({});\n\n    routers.forEach((route) => {\n      const { instance, name, middlewares, alias } = route;\n      const camelCasedRouterName = camelCase(alias ?? name);\n      const prototype = Object.getPrototypeOf(instance);\n\n      const procedures = this.procedureFactory.getProcedures(\n        instance,\n        prototype,\n      );\n\n      this.consoleLogger.log(\n        `Router ${name} as ${camelCasedRouterName}.`,\n        'Router Factory',\n      );\n\n      const routerProcedures = this.procedureFactory.serializeProcedures(\n        procedures,\n        instance,\n        camelCasedRouterName,\n        procedure,\n        middlewares,\n      );\n\n      // TODO: To get this working with `trpc` v11, we need to remove the `router()` method from here.\n      routerSchema[camelCasedRouterName] = router(routerProcedures);\n    });\n\n    return routerSchema;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAeO,0BAAMA,gBAAc;;2CAER;2CAGA;2CAGA;;CAEjB,aAAoC;;EAClC,MAAMC,UAAiC,CAAE;AAEzC,OAAK,iBAAiB,QAAQ,SAAC,WAAc;AAC3C,aAAU,UAAU,QAAQ,SAACC,SAA6B;IACxD,MAAM,SAAS,MAAK,yBAAyB,QAAQ;AACrD,QAAI,UAAU,KACZ,SAAQ,KAAK,OAAO;GAEvB,EAAC;EACH,EAAC;AAEF,SAAO;CACR;CAED,AAAQ,yBACNA,SACuB;EACvB,MAAM,EAAE,UAAU,MAAM,GAAG;AAE3B,MAAI,YAAY,KACd,QAAO;EAGT,MAAM,SAAS,QAAQ,YACrB,qBACA,SAAS,YACV;AAED,MAAI,UAAU,KACZ,QAAO;EAGT,MAAMC,cAEF,QAAQ,YAAY,iBAAiB,SAAS,YAAY,IAAI,CAAE;AAEpE,SAAO;GACL;GACA;GACA,MAAM,OAAO;GACb,OAAO,OAAO;GACD;EACd;CACF;CAED,gBACEC,QACAC,WACqB;;EACrB,MAAM,UAAU,KAAK,YAAY;EACjC,MAAM,eAAe,OAAO,OAAO,CAAE,EAAC;AAEtC,UAAQ,QAAQ,SAAC,OAAU;GACzB,MAAM,EAAE,UAAU,MAAM,aAAa,OAAO,GAAG;GAC/C,MAAM,uBAAuB,UAAU,6CAAS,KAAK;GACrD,MAAM,YAAY,OAAO,eAAe,SAAS;GAEjD,MAAM,aAAa,OAAK,iBAAiB,cACvC,UACA,UACD;AAED,UAAK,cAAc,IACjB,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE,qBAAqB,CAAC,CAAC,EAC5C,iBACD;GAED,MAAM,mBAAmB,OAAK,iBAAiB,oBAC7C,YACA,UACA,sBACA,WACA,YACD;AAGD,gBAAa,wBAAwB,OAAO,iBAAiB;EAC9D,EAAC;AAEF,SAAO;CACR;AACF;8BA3FE,0BAAOC,4BAAc;8BAGrB,0BAAOC,6BAAiB;8BAGxB,0BAAO,iBAAiB;8CAR1B,+BAAY"}