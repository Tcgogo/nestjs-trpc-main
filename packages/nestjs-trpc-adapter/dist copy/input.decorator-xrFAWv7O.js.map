{"version":3,"file":"input.decorator-xrFAWv7O.js","names":["key?: string","target: object","propertyKey: string | symbol | undefined","parameterIndex: number","existingParams: Array<ProcedureParamDecorator>","procedureParamMetadata: ProcedureParamDecorator"],"sources":["../lib/decorators/input.decorator.ts"],"sourcesContent":["import {\n  type ProcedureParamDecorator,\n  ProcedureParamDecoratorType,\n} from '../interfaces/factory.interface';\nimport { PROCEDURE_PARAM_METADATA_KEY } from '../trpc.constants';\n\n/**\n * Input procedure parameter decorator. Extracts the `input` parameter out of the procedure `opts`.\n *\n * @param key string to be used extracting a specific input key - `input[key]`.\n *\n * @see [Parameter Decorators](https://www.nestjs-trpc.io/docs/routers#parameter-decorators)\n *\n * @publicApi\n */\nexport function Input(key?: string): ParameterDecorator {\n  return (\n    target: object,\n    propertyKey: string | symbol | undefined,\n    parameterIndex: number,\n  ) => {\n    if (propertyKey != null && typeof parameterIndex === 'number') {\n      const existingParams: Array<ProcedureParamDecorator> =\n        Reflect.getMetadata(\n          PROCEDURE_PARAM_METADATA_KEY,\n          target,\n          propertyKey,\n        ) || [];\n\n      const procedureParamMetadata: ProcedureParamDecorator = {\n        type: ProcedureParamDecoratorType.Input,\n        index: parameterIndex,\n        key,\n      };\n      existingParams.push(procedureParamMetadata);\n      Reflect.defineMetadata(\n        PROCEDURE_PARAM_METADATA_KEY,\n        existingParams,\n        target,\n        propertyKey,\n      );\n    }\n  };\n}\n"],"mappings":";;;;;;;;;;;;;AAeA,SAAgB,MAAMA,KAAkC;AACtD,QAAO,SACLC,QACAC,aACAC,gBACG;AACH,MAAI,eAAe,eAAe,mBAAmB,UAAU;GAC7D,MAAMC,iBACJ,QAAQ,YACN,8BACA,QACA,YACD,IAAI,CAAE;GAET,MAAMC,yBAAkD;IACtD,MAAM,4BAA4B;IAClC,OAAO;IACP;GACD;AACD,kBAAe,KAAK,uBAAuB;AAC3C,WAAQ,eACN,8BACA,gBACA,QACA,YACD;EACF;CACF;AACF"}