{"version":3,"file":"query.decorator-CYarO41h.js","names":["args?: { input?: ZodType; output?: ZodType }"],"sources":["../lib/decorators/query.decorator.ts"],"sourcesContent":["import type { ZodType } from \"zod\";\nimport { applyDecorators, SetMetadata } from \"@nestjs/common\";\nimport { PROCEDURE_METADATA_KEY, PROCEDURE_TYPE_KEY } from \"../trpc.constants\";\nimport { ProcedureType } from \"../trpc.enum\";\n\n/**\n * Decorator that marks a router class method as a TRPC query procedure that can receive inbound\n * requests and produce responses.\n *\n * An TRPC query procedure is mainly responsible for actions that retrieve data.\n * for example `Query /trpc/userRouter.getUsers`.\n *\n * @param {object} args configuration object specifying:\n * - `input` - defines a `ZodType` validation logic for the input.\n * - `output` - defines a `ZodType` validation logic for the output.\n *\n * @see [Method Decorators](https://nestjs-trpc.io/docs/routers#procedures)\n *\n * @publicApi\n */\nexport function Query(args?: { input?: ZodType; output?: ZodType }) {\n  return applyDecorators(\n    ...[\n      SetMetadata(PROCEDURE_TYPE_KEY, ProcedureType.Query),\n      SetMetadata(PROCEDURE_METADATA_KEY, args),\n    ],\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAoBA,SAAgB,MAAMA,MAA8C;AAClE,QAAO,mCACL,GAAG,CACD,+BAAY,oBAAoB,cAAc,MAAM,EACpD,+BAAY,wBAAwB,KAAK,AAC1C,EACF;AACF"}